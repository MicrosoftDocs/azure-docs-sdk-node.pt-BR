### YamlMime:UniversalReference
items:
  - uid: azure-arm-operationalinsights.DataSourceListResult
    name: DataSourceListResult
    fullName: DataSourceListResult
    children:
      - azure-arm-operationalinsights.DataSourceListResult.Array
      - azure-arm-operationalinsights.DataSourceListResult.concat
      - azure-arm-operationalinsights.DataSourceListResult.concat_1
      - azure-arm-operationalinsights.DataSourceListResult.every
      - azure-arm-operationalinsights.DataSourceListResult.filter_1
      - azure-arm-operationalinsights.DataSourceListResult.filter
      - azure-arm-operationalinsights.DataSourceListResult.forEach
      - azure-arm-operationalinsights.DataSourceListResult.indexOf
      - azure-arm-operationalinsights.DataSourceListResult.join
      - azure-arm-operationalinsights.DataSourceListResult.lastIndexOf
      - azure-arm-operationalinsights.DataSourceListResult.length
      - azure-arm-operationalinsights.DataSourceListResult.map
      - azure-arm-operationalinsights.DataSourceListResult.nextLink
      - azure-arm-operationalinsights.DataSourceListResult.pop
      - azure-arm-operationalinsights.DataSourceListResult.push
      - azure-arm-operationalinsights.DataSourceListResult.reduce
      - azure-arm-operationalinsights.DataSourceListResult.reduce_1
      - azure-arm-operationalinsights.DataSourceListResult.reduce_2
      - azure-arm-operationalinsights.DataSourceListResult.reduceRight
      - azure-arm-operationalinsights.DataSourceListResult.reduceRight_1
      - azure-arm-operationalinsights.DataSourceListResult.reduceRight_2
      - azure-arm-operationalinsights.DataSourceListResult.reverse
      - azure-arm-operationalinsights.DataSourceListResult.shift
      - azure-arm-operationalinsights.DataSourceListResult.slice
      - azure-arm-operationalinsights.DataSourceListResult.some
      - azure-arm-operationalinsights.DataSourceListResult.sort
      - azure-arm-operationalinsights.DataSourceListResult.splice
      - azure-arm-operationalinsights.DataSourceListResult.splice_1
      - azure-arm-operationalinsights.DataSourceListResult.toLocaleString
      - azure-arm-operationalinsights.DataSourceListResult.toString
      - azure-arm-operationalinsights.DataSourceListResult.unshift
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: Array<azure-arm-operationalinsights.DataSource>
    package: azure-arm-operationalinsights
  - uid: azure-arm-operationalinsights.DataSourceListResult.Array
    name: Array
    fullName: Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Array: ArrayConstructor'
      return:
        type:
          - ArrayConstructor
    package: azure-arm-operationalinsights
  - uid: azure-arm-operationalinsights.DataSourceListResult.concat
    name: 'concat(ConcatArray<DataSource>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="ee255-101">Combina duas ou mais matrizes.</span><span class="sxs-lookup"><span data-stu-id="ee255-101">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: ConcatArray<DataSource>[])'
      parameters:
        - id: items
          type:
            - 'ConcatArray<azure-arm-operationalinsights.DataSource>[]'
          description: |
            <span data-ttu-id="ee255-102">Itens adicionais a serem adicionados ao final de array1.</span><span class="sxs-lookup"><span data-stu-id="ee255-102">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - 'azure-arm-operationalinsights.DataSource[]'
    package: azure-arm-operationalinsights
  - uid: azure-arm-operationalinsights.DataSourceListResult.concat_1
    name: 'concat(T | ConcatArray<T>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="ee255-103">Combina duas ou mais matrizes.</span><span class="sxs-lookup"><span data-stu-id="ee255-103">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: T | ConcatArray<T>[])'
      parameters:
        - id: items
          type:
            - 'T | ConcatArray<T>[]'
          description: |
            <span data-ttu-id="ee255-104">Itens adicionais a serem adicionados ao final de array1.</span><span class="sxs-lookup"><span data-stu-id="ee255-104">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - 'azure-arm-operationalinsights.DataSource[]'
    package: azure-arm-operationalinsights
  - uid: azure-arm-operationalinsights.DataSourceListResult.every
    name: 'every((value: DataSource, index: number, array: DataSource[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="ee255-105">Determina se todos os membros de uma matriz satisfazem o teste especificado.</span><span class="sxs-lookup"><span data-stu-id="ee255-105">Determines whether all the members of an array satisfy the specified test.</span></span>
    syntax:
      content: 'function every(callbackfn: (value: DataSource, index: number, array: DataSource[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: DataSource, index: number, array: DataSource[]) => boolean'
          description: '<span data-ttu-id="ee255-106">Uma função que aceita até três argumentos.</span><span class="sxs-lookup"><span data-stu-id="ee255-106">A function that accepts up to three arguments.</span></span> <span data-ttu-id="ee255-107">O cada método chama a função de callbackfn para cada elemento em array1 até que o callbackfn retorna false, ou até o final da matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-107">The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="ee255-108">Um objeto ao qual a palavra-chave this pode referir-se na função callbackfn.</span><span class="sxs-lookup"><span data-stu-id="ee255-108">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="ee255-109">Se thisArg for omitido, undefined será usado como este valor.</span><span class="sxs-lookup"><span data-stu-id="ee255-109">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: azure-arm-operationalinsights
  - uid: azure-arm-operationalinsights.DataSourceListResult.filter_1
    name: 'filter((value: DataSource, index: number, array: DataSource[]) => any, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="ee255-110">Retorna os elementos de uma matriz que atendem à condição especificada em uma função de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="ee255-110">Returns the elements of an array that meet the condition specified in a callback function.</span></span>
    syntax:
      content: 'function filter(callbackfn: (value: DataSource, index: number, array: DataSource[]) => any, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: DataSource, index: number, array: DataSource[]) => any'
          description: <span data-ttu-id="ee255-111">Uma função que aceita até três argumentos.</span><span class="sxs-lookup"><span data-stu-id="ee255-111">A function that accepts up to three arguments.</span></span> <span data-ttu-id="ee255-112">O método de filtro chama a função callbackfn uma vez para cada elemento na matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-112">The filter method calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="ee255-113">Um objeto ao qual a palavra-chave this pode referir-se na função callbackfn.</span><span class="sxs-lookup"><span data-stu-id="ee255-113">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="ee255-114">Se thisArg for omitido, undefined será usado como este valor.</span><span class="sxs-lookup"><span data-stu-id="ee255-114">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'azure-arm-operationalinsights.DataSource[]'
    package: azure-arm-operationalinsights
  - uid: azure-arm-operationalinsights.DataSourceListResult.filter
    name: 'filter((value: DataSource, index: number, array: DataSource[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="ee255-115">Retorna os elementos de uma matriz que atendem à condição especificada em uma função de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="ee255-115">Returns the elements of an array that meet the condition specified in a callback function.</span></span>
    syntax:
      content: 'function filter<S>(callbackfn: (value: DataSource, index: number, array: DataSource[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: DataSource, index: number, array: DataSource[]) => boolean'
          description: <span data-ttu-id="ee255-116">Uma função que aceita até três argumentos.</span><span class="sxs-lookup"><span data-stu-id="ee255-116">A function that accepts up to three arguments.</span></span> <span data-ttu-id="ee255-117">O método de filtro chama a função callbackfn uma vez para cada elemento na matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-117">The filter method calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="ee255-118">Um objeto ao qual a palavra-chave this pode referir-se na função callbackfn.</span><span class="sxs-lookup"><span data-stu-id="ee255-118">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="ee255-119">Se thisArg for omitido, undefined será usado como este valor.</span><span class="sxs-lookup"><span data-stu-id="ee255-119">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'S[]'
    package: azure-arm-operationalinsights
  - uid: azure-arm-operationalinsights.DataSourceListResult.forEach
    name: 'forEach((value: DataSource, index: number, array: DataSource[]) => void, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="ee255-120">Executa a ação especificada para cada elemento em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-120">Performs the specified action for each element in an array.</span></span>
    syntax:
      content: 'function forEach(callbackfn: (value: DataSource, index: number, array: DataSource[]) => void, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: DataSource, index: number, array: DataSource[]) => void'
          description: <span data-ttu-id="ee255-121">Uma função que aceita até três argumentos.</span><span class="sxs-lookup"><span data-stu-id="ee255-121">A function that accepts up to three arguments.</span></span> <span data-ttu-id="ee255-122">forEach chama a função callbackfn uma vez para cada elemento na matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-122">forEach calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="ee255-123">Um objeto ao qual a palavra-chave this pode referir-se na função callbackfn.</span><span class="sxs-lookup"><span data-stu-id="ee255-123">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="ee255-124">Se thisArg for omitido, undefined será usado como este valor.</span><span class="sxs-lookup"><span data-stu-id="ee255-124">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
    package: azure-arm-operationalinsights
  - uid: azure-arm-operationalinsights.DataSourceListResult.indexOf
    name: 'indexOf(DataSource, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="ee255-125">Retorna o índice da primeira ocorrência de um valor em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-125">Returns the index of the first occurrence of a value in an array.</span></span>
    syntax:
      content: 'function indexOf(searchElement: DataSource, fromIndex?: number)'
      parameters:
        - id: searchElement
          type:
            - azure-arm-operationalinsights.DataSource
          description: <span data-ttu-id="ee255-126">O valor a ser localizado na matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-126">The value to locate in the array.</span></span>
        - id: fromIndex
          type:
            - number
          description: |
            <span data-ttu-id="ee255-127">O índice de matriz no qual iniciar a pesquisa.</span><span class="sxs-lookup"><span data-stu-id="ee255-127">The array index at which to begin the search.</span></span> <span data-ttu-id="ee255-128">Se fromIndex for omitido, a pesquisa começa no índice 0.</span><span class="sxs-lookup"><span data-stu-id="ee255-128">If fromIndex is omitted, the search starts at index 0.</span></span>
          optional: true
      return:
        type:
          - number
    package: azure-arm-operationalinsights
  - uid: azure-arm-operationalinsights.DataSourceListResult.join
    name: join(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="ee255-129">Adiciona todos os elementos de uma matriz separados pela cadeia de caracteres de separador especificado.</span><span class="sxs-lookup"><span data-stu-id="ee255-129">Adds all the elements of an array separated by the specified separator string.</span></span>
    syntax:
      content: 'function join(separator?: string)'
      parameters:
        - id: separator
          type:
            - string
          description: |
            <span data-ttu-id="ee255-130">Uma cadeia de caracteres usada para separar um elemento de uma matriz do próximo na cadeia de caracteres resultante.</span><span class="sxs-lookup"><span data-stu-id="ee255-130">A string used to separate one element of an array from the next in the resulting String.</span></span> <span data-ttu-id="ee255-131">Se omitido, os elementos da matriz são separados por uma vírgula.</span><span class="sxs-lookup"><span data-stu-id="ee255-131">If omitted, the array elements are separated with a comma.</span></span>
          optional: true
      return:
        type:
          - string
    package: azure-arm-operationalinsights
  - uid: azure-arm-operationalinsights.DataSourceListResult.lastIndexOf
    name: 'lastIndexOf(DataSource, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="ee255-132">Retorna o índice da última ocorrência de um valor especificado em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-132">Returns the index of the last occurrence of a specified value in an array.</span></span>
    syntax:
      content: 'function lastIndexOf(searchElement: DataSource, fromIndex?: number)'
      parameters:
        - id: searchElement
          type:
            - azure-arm-operationalinsights.DataSource
          description: <span data-ttu-id="ee255-133">O valor a ser localizado na matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-133">The value to locate in the array.</span></span>
        - id: fromIndex
          type:
            - number
          description: |
            <span data-ttu-id="ee255-134">O índice de matriz no qual iniciar a pesquisa.</span><span class="sxs-lookup"><span data-stu-id="ee255-134">The array index at which to begin the search.</span></span> <span data-ttu-id="ee255-135">Se fromIndex for omitido, a pesquisa começa no último índice na matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-135">If fromIndex is omitted, the search starts at the last index in the array.</span></span>
          optional: true
      return:
        type:
          - number
    package: azure-arm-operationalinsights
  - uid: azure-arm-operationalinsights.DataSourceListResult.length
    name: length
    fullName: length
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="ee255-136">Obtém ou define o comprimento da matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-136">Gets or sets the length of the array.</span></span> <span data-ttu-id="ee255-137">Isso é um número maior do que o elemento mais alto definido em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-137">This is a number one higher than the highest element defined in an array.</span></span>
    syntax:
      content: 'length: number'
      return:
        type:
          - number
    package: azure-arm-operationalinsights
  - uid: azure-arm-operationalinsights.DataSourceListResult.map
    name: 'map((value: DataSource, index: number, array: DataSource[]) => U, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="ee255-138">Chama uma função de retorno de chamada definida em cada elemento de uma matriz e retorna uma matriz que contém os resultados.</span><span class="sxs-lookup"><span data-stu-id="ee255-138">Calls a defined callback function on each element of an array, and returns an array that contains the results.</span></span>'
    syntax:
      content: 'function map<U>(callbackfn: (value: DataSource, index: number, array: DataSource[]) => U, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: DataSource, index: number, array: DataSource[]) => U'
          description: <span data-ttu-id="ee255-139">Uma função que aceita até três argumentos.</span><span class="sxs-lookup"><span data-stu-id="ee255-139">A function that accepts up to three arguments.</span></span> <span data-ttu-id="ee255-140">O método map chama a função de callbackfn uma vez para cada elemento na matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-140">The map method calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="ee255-141">Um objeto ao qual a palavra-chave this pode referir-se na função callbackfn.</span><span class="sxs-lookup"><span data-stu-id="ee255-141">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="ee255-142">Se thisArg for omitido, undefined será usado como este valor.</span><span class="sxs-lookup"><span data-stu-id="ee255-142">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'U[]'
    package: azure-arm-operationalinsights
  - uid: azure-arm-operationalinsights.DataSourceListResult.nextLink
    name: nextLink
    fullName: nextLink
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'nextLink?: string'
      return:
        type:
          - string
    package: azure-arm-operationalinsights
  - uid: azure-arm-operationalinsights.DataSourceListResult.pop
    name: pop()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="ee255-143">Remove o último elemento de uma matriz e o retorna.</span><span class="sxs-lookup"><span data-stu-id="ee255-143">Removes the last element from an array and returns it.</span></span>
    syntax:
      content: function pop()
      parameters: []
      return:
        type:
          - azure-arm-operationalinsights.DataSource | undefined
    package: azure-arm-operationalinsights
  - uid: azure-arm-operationalinsights.DataSourceListResult.push
    name: 'push(DataSource[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="ee255-144">Acrescenta novos elementos em uma matriz e retorna o novo comprimento da matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-144">Appends new elements to an array, and returns the new length of the array.</span></span>'
    syntax:
      content: 'function push(items: DataSource[])'
      parameters:
        - id: items
          type:
            - 'azure-arm-operationalinsights.DataSource[]'
          description: |
            <span data-ttu-id="ee255-145">Novos elementos da matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-145">New elements of the Array.</span></span>
      return:
        type:
          - number
    package: azure-arm-operationalinsights
  - uid: azure-arm-operationalinsights.DataSourceListResult.reduce
    name: 'reduce((previousValue: DataSource, currentValue: DataSource, currentIndex: number, array: DataSource[]) => DataSource)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="ee255-146">Chama a função de retorno de chamada especificados para todos os elementos em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-146">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="ee255-147">O valor de retorno da função de retorno de chamada é o resultado acumulado e é fornecido como um argumento na próxima chamada para a função de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="ee255-147">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: DataSource, currentValue: DataSource, currentIndex: number, array: DataSource[]) => DataSource)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: DataSource, currentValue: DataSource, currentIndex: number, array: DataSource[]) => DataSource'
          description: <span data-ttu-id="ee255-148">Uma função que aceita até quatro argumentos.</span><span class="sxs-lookup"><span data-stu-id="ee255-148">A function that accepts up to four arguments.</span></span> <span data-ttu-id="ee255-149">O método reduce chama a função de callbackfn uma vez para cada elemento na matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-149">The reduce method calls the callbackfn function one time for each element in the array.</span></span>
      return:
        type:
          - azure-arm-operationalinsights.DataSource
    package: azure-arm-operationalinsights
  - uid: azure-arm-operationalinsights.DataSourceListResult.reduce_1
    name: 'reduce((previousValue: DataSource, currentValue: DataSource, currentIndex: number, array: DataSource[]) => DataSource, DataSource)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="ee255-150">Chama a função de retorno de chamada especificados para todos os elementos em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-150">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="ee255-151">O valor de retorno da função de retorno de chamada é o resultado acumulado e é fornecido como um argumento na próxima chamada para a função de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="ee255-151">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: DataSource, currentValue: DataSource, currentIndex: number, array: DataSource[]) => DataSource, initialValue: DataSource)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: DataSource, currentValue: DataSource, currentIndex: number, array: DataSource[]) => DataSource'
          description: ''
        - id: initialValue
          type:
            - azure-arm-operationalinsights.DataSource
          description: ''
      return:
        type:
          - azure-arm-operationalinsights.DataSource
    package: azure-arm-operationalinsights
  - uid: azure-arm-operationalinsights.DataSourceListResult.reduce_2
    name: 'reduce((previousValue: U, currentValue: DataSource, currentIndex: number, array: DataSource[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="ee255-152">Chama a função de retorno de chamada especificados para todos os elementos em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-152">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="ee255-153">O valor de retorno da função de retorno de chamada é o resultado acumulado e é fornecido como um argumento na próxima chamada para a função de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="ee255-153">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce<U>(callbackfn: (previousValue: U, currentValue: DataSource, currentIndex: number, array: DataSource[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: DataSource, currentIndex: number, array: DataSource[]) => U'
          description: <span data-ttu-id="ee255-154">Uma função que aceita até quatro argumentos.</span><span class="sxs-lookup"><span data-stu-id="ee255-154">A function that accepts up to four arguments.</span></span> <span data-ttu-id="ee255-155">O método reduce chama a função de callbackfn uma vez para cada elemento na matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-155">The reduce method calls the callbackfn function one time for each element in the array.</span></span>
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="ee255-156">Se initialValue for especificado, ele é usado como o valor inicial para iniciar o acúmulo.</span><span class="sxs-lookup"><span data-stu-id="ee255-156">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="ee255-157">A primeira chamada para a função callbackfn fornece esse valor como um argumento, em vez de um valor de matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-157">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: azure-arm-operationalinsights
  - uid: azure-arm-operationalinsights.DataSourceListResult.reduceRight
    name: 'reduceRight((previousValue: DataSource, currentValue: DataSource, currentIndex: number, array: DataSource[]) => DataSource)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="ee255-158">Chama a função de retorno de chamada especificados para todos os elementos em uma matriz, em ordem decrescente.</span><span class="sxs-lookup"><span data-stu-id="ee255-158">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="ee255-159">O valor de retorno da função de retorno de chamada é o resultado acumulado e é fornecido como um argumento na próxima chamada para a função de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="ee255-159">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: DataSource, currentValue: DataSource, currentIndex: number, array: DataSource[]) => DataSource)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: DataSource, currentValue: DataSource, currentIndex: number, array: DataSource[]) => DataSource'
          description: <span data-ttu-id="ee255-160">Uma função que aceita até quatro argumentos.</span><span class="sxs-lookup"><span data-stu-id="ee255-160">A function that accepts up to four arguments.</span></span> <span data-ttu-id="ee255-161">O método reduceRight chama a função callbackfn uma vez para cada elemento na matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-161">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>
      return:
        type:
          - azure-arm-operationalinsights.DataSource
    package: azure-arm-operationalinsights
  - uid: azure-arm-operationalinsights.DataSourceListResult.reduceRight_1
    name: 'reduceRight((previousValue: DataSource, currentValue: DataSource, currentIndex: number, array: DataSource[]) => DataSource, DataSource)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="ee255-162">Chama a função de retorno de chamada especificados para todos os elementos em uma matriz, em ordem decrescente.</span><span class="sxs-lookup"><span data-stu-id="ee255-162">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="ee255-163">O valor de retorno da função de retorno de chamada é o resultado acumulado e é fornecido como um argumento na próxima chamada para a função de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="ee255-163">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: DataSource, currentValue: DataSource, currentIndex: number, array: DataSource[]) => DataSource, initialValue: DataSource)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: DataSource, currentValue: DataSource, currentIndex: number, array: DataSource[]) => DataSource'
          description: ''
        - id: initialValue
          type:
            - azure-arm-operationalinsights.DataSource
          description: ''
      return:
        type:
          - azure-arm-operationalinsights.DataSource
    package: azure-arm-operationalinsights
  - uid: azure-arm-operationalinsights.DataSourceListResult.reduceRight_2
    name: 'reduceRight((previousValue: U, currentValue: DataSource, currentIndex: number, array: DataSource[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="ee255-164">Chama a função de retorno de chamada especificados para todos os elementos em uma matriz, em ordem decrescente.</span><span class="sxs-lookup"><span data-stu-id="ee255-164">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="ee255-165">O valor de retorno da função de retorno de chamada é o resultado acumulado e é fornecido como um argumento na próxima chamada para a função de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="ee255-165">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight<U>(callbackfn: (previousValue: U, currentValue: DataSource, currentIndex: number, array: DataSource[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: DataSource, currentIndex: number, array: DataSource[]) => U'
          description: <span data-ttu-id="ee255-166">Uma função que aceita até quatro argumentos.</span><span class="sxs-lookup"><span data-stu-id="ee255-166">A function that accepts up to four arguments.</span></span> <span data-ttu-id="ee255-167">O método reduceRight chama a função callbackfn uma vez para cada elemento na matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-167">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="ee255-168">Se initialValue for especificado, ele é usado como o valor inicial para iniciar o acúmulo.</span><span class="sxs-lookup"><span data-stu-id="ee255-168">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="ee255-169">A primeira chamada para a função callbackfn fornece esse valor como um argumento, em vez de um valor de matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-169">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: azure-arm-operationalinsights
  - uid: azure-arm-operationalinsights.DataSourceListResult.reverse
    name: reverse()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="ee255-170">Inverte os elementos em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-170">Reverses the elements in an Array.</span></span>
    syntax:
      content: function reverse()
      parameters: []
      return:
        type:
          - 'azure-arm-operationalinsights.DataSource[]'
    package: azure-arm-operationalinsights
  - uid: azure-arm-operationalinsights.DataSourceListResult.shift
    name: shift()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="ee255-171">Remove o primeiro elemento de uma matriz e o retorna.</span><span class="sxs-lookup"><span data-stu-id="ee255-171">Removes the first element from an array and returns it.</span></span>
    syntax:
      content: function shift()
      parameters: []
      return:
        type:
          - azure-arm-operationalinsights.DataSource | undefined
    package: azure-arm-operationalinsights
  - uid: azure-arm-operationalinsights.DataSourceListResult.slice
    name: 'slice(number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="ee255-172">Retorna uma seção de uma matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-172">Returns a section of an array.</span></span>
    syntax:
      content: 'function slice(start?: number, end?: number)'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="ee255-173">O início da parte especificada da matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-173">The beginning of the specified portion of the array.</span></span>
          optional: true
        - id: end
          type:
            - number
          description: |
            <span data-ttu-id="ee255-174">O final da parte especificada da matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-174">The end of the specified portion of the array.</span></span>
          optional: true
      return:
        type:
          - 'azure-arm-operationalinsights.DataSource[]'
    package: azure-arm-operationalinsights
  - uid: azure-arm-operationalinsights.DataSourceListResult.some
    name: 'some((value: DataSource, index: number, array: DataSource[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="ee255-175">Determina se a função de retorno de chamada especificada retorna true para qualquer elemento de uma matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-175">Determines whether the specified callback function returns true for any element of an array.</span></span>
    syntax:
      content: 'function some(callbackfn: (value: DataSource, index: number, array: DataSource[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: DataSource, index: number, array: DataSource[]) => boolean'
          description: '<span data-ttu-id="ee255-176">Uma função que aceita até três argumentos.</span><span class="sxs-lookup"><span data-stu-id="ee255-176">A function that accepts up to three arguments.</span></span> <span data-ttu-id="ee255-177">Método some chama a função de callbackfn para cada elemento em array1 até que o callbackfn retorna true ou até o final da matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-177">The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="ee255-178">Um objeto ao qual a palavra-chave this pode referir-se na função callbackfn.</span><span class="sxs-lookup"><span data-stu-id="ee255-178">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="ee255-179">Se thisArg for omitido, undefined será usado como este valor.</span><span class="sxs-lookup"><span data-stu-id="ee255-179">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: azure-arm-operationalinsights
  - uid: azure-arm-operationalinsights.DataSourceListResult.sort
    name: 'sort((a: DataSource, b: DataSource) => number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="ee255-180">Classifica uma matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-180">Sorts an array.</span></span>
    syntax:
      content: 'function sort(compareFn?: (a: DataSource, b: DataSource) => number)'
      parameters:
        - id: compareFn
          type:
            - '(a: DataSource, b: DataSource) => number'
          description: |
            <span data-ttu-id="ee255-181">O nome da função usada para determinar a ordem dos elementos.</span><span class="sxs-lookup"><span data-stu-id="ee255-181">The name of the function used to determine the order of the elements.</span></span> <span data-ttu-id="ee255-182">Se omitido, os elementos são classificados em ordem crescente, ordem de caracteres ASCII.</span><span class="sxs-lookup"><span data-stu-id="ee255-182">If omitted, the elements are sorted in ascending, ASCII character order.</span></span>
          optional: true
      return:
        type:
          - this
    package: azure-arm-operationalinsights
  - uid: azure-arm-operationalinsights.DataSourceListResult.splice
    name: 'splice(number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="ee255-183">Remove elementos de uma matriz e, se necessário, insere novos elementos em seu lugar, retornando os elementos excluídos.</span><span class="sxs-lookup"><span data-stu-id="ee255-183">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount?: number)'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="ee255-184">O local baseado em zero na matriz da qual iniciar remoção de elementos.</span><span class="sxs-lookup"><span data-stu-id="ee255-184">The zero-based location in the array from which to start removing elements.</span></span>
        - id: deleteCount
          type:
            - number
          description: |
            <span data-ttu-id="ee255-185">O número de elementos a serem removidos.</span><span class="sxs-lookup"><span data-stu-id="ee255-185">The number of elements to remove.</span></span>
          optional: true
      return:
        type:
          - 'azure-arm-operationalinsights.DataSource[]'
    package: azure-arm-operationalinsights
  - uid: azure-arm-operationalinsights.DataSourceListResult.splice_1
    name: 'splice(number, number, DataSource[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="ee255-186">Remove elementos de uma matriz e, se necessário, insere novos elementos em seu lugar, retornando os elementos excluídos.</span><span class="sxs-lookup"><span data-stu-id="ee255-186">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount: number, items: DataSource[])'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="ee255-187">O local baseado em zero na matriz da qual iniciar remoção de elementos.</span><span class="sxs-lookup"><span data-stu-id="ee255-187">The zero-based location in the array from which to start removing elements.</span></span>
        - id: deleteCount
          type:
            - number
          description: <span data-ttu-id="ee255-188">O número de elementos a serem removidos.</span><span class="sxs-lookup"><span data-stu-id="ee255-188">The number of elements to remove.</span></span>
        - id: items
          type:
            - 'azure-arm-operationalinsights.DataSource[]'
          description: |
            <span data-ttu-id="ee255-189">Elementos a serem inseridos na matriz no lugar os elementos excluídos.</span><span class="sxs-lookup"><span data-stu-id="ee255-189">Elements to insert into the array in place of the deleted elements.</span></span>
      return:
        type:
          - 'azure-arm-operationalinsights.DataSource[]'
    package: azure-arm-operationalinsights
  - uid: azure-arm-operationalinsights.DataSourceListResult.toLocaleString
    name: toLocaleString()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="ee255-190">Retorna uma representação de cadeia de caracteres de uma matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-190">Returns a string representation of an array.</span></span> <span data-ttu-id="ee255-191">Os elementos são convertidos em cadeia de caracteres usando seus métodos toLocalString.</span><span class="sxs-lookup"><span data-stu-id="ee255-191">The elements are converted to string using their toLocalString methods.</span></span>
    syntax:
      content: function toLocaleString()
      parameters: []
      return:
        type:
          - string
    package: azure-arm-operationalinsights
  - uid: azure-arm-operationalinsights.DataSourceListResult.toString
    name: toString()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="ee255-192">Retorna uma representação de cadeia de caracteres de uma matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-192">Returns a string representation of an array.</span></span>
    syntax:
      content: function toString()
      parameters: []
      return:
        type:
          - string
    package: azure-arm-operationalinsights
  - uid: azure-arm-operationalinsights.DataSourceListResult.unshift
    name: 'unshift(DataSource[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="ee255-193">Insere novos elementos no início de uma matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-193">Inserts new elements at the start of an array.</span></span>
    syntax:
      content: 'function unshift(items: DataSource[])'
      parameters:
        - id: items
          type:
            - 'azure-arm-operationalinsights.DataSource[]'
          description: |
            <span data-ttu-id="ee255-194">Elementos a serem inseridos no início da matriz.</span><span class="sxs-lookup"><span data-stu-id="ee255-194">Elements to insert at the start of the Array.</span></span>
      return:
        type:
          - number
    package: azure-arm-operationalinsights
references:
  - uid: Array<azure-arm-operationalinsights.DataSource>
    name: DataSource>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: DataSource
        fullName: DataSource
        uid: azure-arm-operationalinsights.DataSource
      - name: '>'
        fullName: '>'
  - uid: 'ConcatArray<azure-arm-operationalinsights.DataSource>[]'
    name: 'DataSource>[]'
    spec.typeScript:
      - name: ConcatArray<
        fullName: ConcatArray<
      - name: DataSource
        fullName: DataSource
        uid: azure-arm-operationalinsights.DataSource
      - name: '>[]'
        fullName: '>[]'
  - uid: 'azure-arm-operationalinsights.DataSource[]'
    name: 'DataSource[]'
    spec.typeScript:
      - name: DataSource
        fullName: DataSource
        uid: azure-arm-operationalinsights.DataSource
      - name: '[]'
        fullName: '[]'
  - uid: azure-arm-operationalinsights.DataSource
    name: DataSource
    spec.typeScript:
      - name: DataSource
        fullName: DataSource
        uid: azure-arm-operationalinsights.DataSource
  - uid: azure-arm-operationalinsights.DataSource | undefined
    name: DataSource | undefined
    spec.typeScript:
      - name: DataSource
        fullName: DataSource
        uid: azure-arm-operationalinsights.DataSource
      - name: ' | undefined'
        fullName: ' | undefined'