### YamlMime:UniversalReference
ms.openlocfilehash: 84355665d7a523d65825bf89f5d1c93bc09d6c98
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 08/22/2018
ms.locfileid: "41683435"
items:
- uid: azure-cognitiveservices-contentmoderator.Reviews
  name: Reviews
  fullName: Reviews
  children:
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrame
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrame_1
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrame_2
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameStream_1
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameStream
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameStream_2
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameStreamWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameUrl
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameUrl_1
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameUrl_2
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameUrlWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscript_1
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscript
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscript_2
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResult
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResult_1
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResult_2
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResultWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscriptWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.Reviews.createJob
  - azure-cognitiveservices-contentmoderator.Reviews.createJob_1
  - azure-cognitiveservices-contentmoderator.Reviews.createJob_2
  - azure-cognitiveservices-contentmoderator.Reviews.createJobWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.Reviews.createReviews
  - azure-cognitiveservices-contentmoderator.Reviews.createReviews_1
  - azure-cognitiveservices-contentmoderator.Reviews.createReviews_2
  - azure-cognitiveservices-contentmoderator.Reviews.createReviewsWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.Reviews.createVideoReviews_1
  - azure-cognitiveservices-contentmoderator.Reviews.createVideoReviews_2
  - azure-cognitiveservices-contentmoderator.Reviews.createVideoReviews
  - azure-cognitiveservices-contentmoderator.Reviews.createVideoReviewsWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.Reviews.getJobDetails
  - azure-cognitiveservices-contentmoderator.Reviews.getJobDetails_1
  - azure-cognitiveservices-contentmoderator.Reviews.getJobDetails_2
  - azure-cognitiveservices-contentmoderator.Reviews.getJobDetailsWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.Reviews.getReview
  - azure-cognitiveservices-contentmoderator.Reviews.getReview_1
  - azure-cognitiveservices-contentmoderator.Reviews.getReview_2
  - azure-cognitiveservices-contentmoderator.Reviews.getReviewWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.Reviews.getVideoFrames
  - azure-cognitiveservices-contentmoderator.Reviews.getVideoFrames_1
  - azure-cognitiveservices-contentmoderator.Reviews.getVideoFrames_2
  - azure-cognitiveservices-contentmoderator.Reviews.getVideoFramesWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.Reviews.publishVideoReview
  - azure-cognitiveservices-contentmoderator.Reviews.publishVideoReview_1
  - azure-cognitiveservices-contentmoderator.Reviews.publishVideoReview_2
  - azure-cognitiveservices-contentmoderator.Reviews.publishVideoReviewWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrame
  name: addVideoFrame
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    As revisões criadas seriam exibida para os revisores em sua equipe. Conforme os revisores concluem a revisão, resultados da revisão seriam ser LANÇADOS (ou seja, o HTTP POST) no CallBackEndpoint especificado.

    <h3>Esquemas de retorno de chamada </h3>

    <h4>Exemplo de retorno de chamada de conclusão de revisão</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadados": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function addVideoFrame(teamName: string, reviewId: string, options?: Object)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        Nome da sua equipe.
    - id: reviewId
      type:
      - string
      description: >
        ID da revisão.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrame_1
  name: addVideoFrame
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    As revisões criadas seriam exibida para os revisores em sua equipe. Conforme os revisores concluem a revisão, resultados da revisão seriam ser LANÇADOS (ou seja, o HTTP POST) no CallBackEndpoint especificado.

    <h3>Esquemas de retorno de chamada </h3>

    <h4>Exemplo de retorno de chamada de conclusão de revisão</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadados": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function addVideoFrame(teamName: string, reviewId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrame_2
  name: addVideoFrame
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    As revisões criadas seriam exibida para os revisores em sua equipe. Conforme os revisores concluem a revisão, resultados da revisão seriam ser LANÇADOS (ou seja, o HTTP POST) no CallBackEndpoint especificado.

    <h3>Esquemas de retorno de chamada </h3>

    <h4>Exemplo de retorno de chamada de conclusão de revisão</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadados": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function addVideoFrame(teamName: string, reviewId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameStream_1
  name: addVideoFrameStream
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Use esse método para adicionar quadros para uma revisão de vídeo. Escala de tempo: Este parâmetro é um fator que é usado para converter o carimbo de hora em um quadro em milissegundos. Escala de tempo é fornecida na saída do processador de mídia de vídeo do Content Moderator na plataforma de serviços de mídia do Azure. Escala de tempo na saída de moderação de vídeo é tiques por segundo.'
  syntax:
    content: 'function addVideoFrameStream(contentType: string, teamName: string, reviewId: string, frameImageZip: stream.Readable, frameMetadata: string, callback: ServiceCallback<void>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: frameImageZip
      type:
      - stream.Readable
      description: ''
    - id: frameMetadata
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameStream
  name: addVideoFrameStream
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Use esse método para adicionar quadros para uma revisão de vídeo. Escala de tempo: Este parâmetro é um fator que é usado para converter o carimbo de hora em um quadro em milissegundos. Escala de tempo é fornecida na saída do processador de mídia de vídeo do Content Moderator na plataforma de serviços de mídia do Azure. Escala de tempo na saída de moderação de vídeo é tiques por segundo.'
  syntax:
    content: 'function addVideoFrameStream(contentType: string, teamName: string, reviewId: string, frameImageZip: stream.Readable, frameMetadata: string, options?: Object)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        O tipo de conteúdo.
    - id: teamName
      type:
      - string
      description: >
        Nome da sua equipe.
    - id: reviewId
      type:
      - string
      description: >
        ID da revisão.
    - id: frameImageZip
      type:
      - stream.Readable
      description: >
        Arquivo zip que contém imagens de quadro.
    - id: frameMetadata
      type:
      - string
      description: >
        Metadados do quadro.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameStream_2
  name: addVideoFrameStream
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Use esse método para adicionar quadros para uma revisão de vídeo. Escala de tempo: Este parâmetro é um fator que é usado para converter o carimbo de hora em um quadro em milissegundos. Escala de tempo é fornecida na saída do processador de mídia de vídeo do Content Moderator na plataforma de serviços de mídia do Azure. Escala de tempo na saída de moderação de vídeo é tiques por segundo.'
  syntax:
    content: 'function addVideoFrameStream(contentType: string, teamName: string, reviewId: string, frameImageZip: stream.Readable, frameMetadata: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: frameImageZip
      type:
      - stream.Readable
      description: ''
    - id: frameMetadata
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameStreamWithHttpOperationResponse
  name: addVideoFrameStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Use esse método para adicionar quadros para uma revisão de vídeo. Escala de tempo: Este parâmetro é um fator que é usado para converter o carimbo de hora em um quadro em milissegundos. Escala de tempo é fornecida na saída do processador de mídia de vídeo do Content Moderator na plataforma de serviços de mídia do Azure. Escala de tempo na saída de moderação de vídeo é tiques por segundo.'
  syntax:
    content: 'function addVideoFrameStreamWithHttpOperationResponse(contentType: string, teamName: string, reviewId: string, frameImageZip: stream.Readable, frameMetadata: string, options?: Object)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        O tipo de conteúdo.
    - id: teamName
      type:
      - string
      description: >
        Nome da sua equipe.
    - id: reviewId
      type:
      - string
      description: >
        ID da revisão.
    - id: frameImageZip
      type:
      - stream.Readable
      description: >
        Arquivo zip que contém imagens de quadro.
    - id: frameMetadata
      type:
      - string
      description: >
        Metadados do quadro.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameUrl
  name: addVideoFrameUrl
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Use esse método para adicionar quadros para uma revisão de vídeo. Escala de tempo: Este parâmetro é um fator que é usado para converter o carimbo de hora em um quadro em milissegundos. Escala de tempo é fornecida na saída do processador de mídia de vídeo do Content Moderator na plataforma de serviços de mídia do Azure. Escala de tempo na saída de moderação de vídeo é tiques por segundo.'
  syntax:
    content: 'function addVideoFrameUrl(contentType: string, teamName: string, reviewId: string, videoFrameBody: VideoFrameBodyItem[], options?: Object)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        O tipo de conteúdo.
    - id: teamName
      type:
      - string
      description: >
        Nome da sua equipe.
    - id: reviewId
      type:
      - string
      description: >
        ID da revisão.
    - id: videoFrameBody
      type:
      - azure-cognitiveservices-contentmoderator.VideoFrameBodyItem[]
      description: >
        Corpo para adicionar a API de quadros de vídeo
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameUrl_1
  name: addVideoFrameUrl
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Use esse método para adicionar quadros para uma revisão de vídeo. Escala de tempo: Este parâmetro é um fator que é usado para converter o carimbo de hora em um quadro em milissegundos. Escala de tempo é fornecida na saída do processador de mídia de vídeo do Content Moderator na plataforma de serviços de mídia do Azure. Escala de tempo na saída de moderação de vídeo é tiques por segundo.'
  syntax:
    content: 'function addVideoFrameUrl(contentType: string, teamName: string, reviewId: string, videoFrameBody: VideoFrameBodyItem[], callback: ServiceCallback<void>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: videoFrameBody
      type:
      - azure-cognitiveservices-contentmoderator.VideoFrameBodyItem[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameUrl_2
  name: addVideoFrameUrl
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Use esse método para adicionar quadros para uma revisão de vídeo. Escala de tempo: Este parâmetro é um fator que é usado para converter o carimbo de hora em um quadro em milissegundos. Escala de tempo é fornecida na saída do processador de mídia de vídeo do Content Moderator na plataforma de serviços de mídia do Azure. Escala de tempo na saída de moderação de vídeo é tiques por segundo.'
  syntax:
    content: 'function addVideoFrameUrl(contentType: string, teamName: string, reviewId: string, videoFrameBody: VideoFrameBodyItem[], options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: videoFrameBody
      type:
      - azure-cognitiveservices-contentmoderator.VideoFrameBodyItem[]
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameUrlWithHttpOperationResponse
  name: addVideoFrameUrlWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Use esse método para adicionar quadros para uma revisão de vídeo. Escala de tempo: Este parâmetro é um fator que é usado para converter o carimbo de hora em um quadro em milissegundos. Escala de tempo é fornecida na saída do processador de mídia de vídeo do Content Moderator na plataforma de serviços de mídia do Azure. Escala de tempo na saída de moderação de vídeo é tiques por segundo.'
  syntax:
    content: 'function addVideoFrameUrlWithHttpOperationResponse(contentType: string, teamName: string, reviewId: string, videoFrameBody: VideoFrameBodyItem[], options?: Object)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        O tipo de conteúdo.
    - id: teamName
      type:
      - string
      description: >
        Nome da sua equipe.
    - id: reviewId
      type:
      - string
      description: >
        ID da revisão.
    - id: videoFrameBody
      type:
      - azure-cognitiveservices-contentmoderator.VideoFrameBodyItem[]
      description: >
        Corpo para adicionar a API de quadros de vídeo
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameWithHttpOperationResponse
  name: addVideoFrameWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    As revisões criadas seriam exibida para os revisores em sua equipe. Conforme os revisores concluem a revisão, resultados da revisão seriam ser LANÇADOS (ou seja, o HTTP POST) no CallBackEndpoint especificado.

    <h3>Esquemas de retorno de chamada </h3>

    <h4>Exemplo de retorno de chamada de conclusão de revisão</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadados": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function addVideoFrameWithHttpOperationResponse(teamName: string, reviewId: string, options?: Object)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        Nome da sua equipe.
    - id: reviewId
      type:
      - string
      description: >
        ID da revisão.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscript_1
  name: addVideoTranscript
  children: []
  type: method
  langs:
  - typeScript
  summary: Essa API adiciona um arquivo de transcrição (versão de todas as palavras faladas em um vídeo em texto) a uma análise do vídeo. O arquivo deve ser um formato de WebVTT válido.
  syntax:
    content: 'function addVideoTranscript(teamName: string, reviewId: string, vTTfile: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: vTTfile
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscript
  name: addVideoTranscript
  children: []
  type: method
  langs:
  - typeScript
  summary: Essa API adiciona um arquivo de transcrição (versão de todas as palavras faladas em um vídeo em texto) a uma análise do vídeo. O arquivo deve ser um formato de WebVTT válido.
  syntax:
    content: 'function addVideoTranscript(teamName: string, reviewId: string, vTTfile: stream.Readable, options?: Object)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        Nome da sua equipe.
    - id: reviewId
      type:
      - string
      description: >
        ID da revisão.
    - id: vTTfile
      type:
      - stream.Readable
      description: >
        Arquivo de transcrição do vídeo.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscript_2
  name: addVideoTranscript
  children: []
  type: method
  langs:
  - typeScript
  summary: Essa API adiciona um arquivo de transcrição (versão de todas as palavras faladas em um vídeo em texto) a uma análise do vídeo. O arquivo deve ser um formato de WebVTT válido.
  syntax:
    content: 'function addVideoTranscript(teamName: string, reviewId: string, vTTfile: stream.Readable, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: vTTfile
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResult
  name: addVideoTranscriptModerationResult
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Essa API adiciona um arquivo de resultado de texto de tela transcrição para uma revisão de vídeo.

    Arquivo de resultado de texto de tela de transcrição é um resultado da API de texto da tela. Para gerar o arquivo de resultado de texto de tela de transcrição, um arquivo de transcrição deve ser filtrada usando a API de texto da tela de conteúdo ofensivo.
  syntax:
    content: 'function addVideoTranscriptModerationResult(contentType: string, teamName: string, reviewId: string, transcriptModerationBody: TranscriptModerationBodyItem[], options?: Object)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        O tipo de conteúdo.
    - id: teamName
      type:
      - string
      description: >
        Nome da sua equipe.
    - id: reviewId
      type:
      - string
      description: >
        ID da revisão.
    - id: transcriptModerationBody
      type:
      - azure-cognitiveservices-contentmoderator.TranscriptModerationBodyItem[]
      description: >
        Corpo para adicionar o resultado de moderação de transcrição do vídeo API
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResult_1
  name: addVideoTranscriptModerationResult
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Essa API adiciona um arquivo de resultado de texto de tela transcrição para uma revisão de vídeo.

    Arquivo de resultado de texto de tela de transcrição é um resultado da API de texto da tela. Para gerar o arquivo de resultado de texto de tela de transcrição, um arquivo de transcrição deve ser filtrada usando a API de texto da tela de conteúdo ofensivo.
  syntax:
    content: 'function addVideoTranscriptModerationResult(contentType: string, teamName: string, reviewId: string, transcriptModerationBody: TranscriptModerationBodyItem[], callback: ServiceCallback<void>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: transcriptModerationBody
      type:
      - azure-cognitiveservices-contentmoderator.TranscriptModerationBodyItem[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResult_2
  name: addVideoTranscriptModerationResult
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Essa API adiciona um arquivo de resultado de texto de tela transcrição para uma revisão de vídeo.

    Arquivo de resultado de texto de tela de transcrição é um resultado da API de texto da tela. Para gerar o arquivo de resultado de texto de tela de transcrição, um arquivo de transcrição deve ser filtrada usando a API de texto da tela de conteúdo ofensivo.
  syntax:
    content: 'function addVideoTranscriptModerationResult(contentType: string, teamName: string, reviewId: string, transcriptModerationBody: TranscriptModerationBodyItem[], options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: transcriptModerationBody
      type:
      - azure-cognitiveservices-contentmoderator.TranscriptModerationBodyItem[]
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResultWithHttpOperationResponse
  name: addVideoTranscriptModerationResultWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Essa API adiciona um arquivo de resultado de texto de tela transcrição para uma revisão de vídeo.

    Arquivo de resultado de texto de tela de transcrição é um resultado da API de texto da tela. Para gerar o arquivo de resultado de texto de tela de transcrição, um arquivo de transcrição deve ser filtrada usando a API de texto da tela de conteúdo ofensivo.
  syntax:
    content: 'function addVideoTranscriptModerationResultWithHttpOperationResponse(contentType: string, teamName: string, reviewId: string, transcriptModerationBody: TranscriptModerationBodyItem[], options?: Object)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        O tipo de conteúdo.
    - id: teamName
      type:
      - string
      description: >
        Nome da sua equipe.
    - id: reviewId
      type:
      - string
      description: >
        ID da revisão.
    - id: transcriptModerationBody
      type:
      - azure-cognitiveservices-contentmoderator.TranscriptModerationBodyItem[]
      description: >
        Corpo para adicionar o resultado de moderação de transcrição do vídeo API
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscriptWithHttpOperationResponse
  name: addVideoTranscriptWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Essa API adiciona um arquivo de transcrição (versão de todas as palavras faladas em um vídeo em texto) a uma análise do vídeo. O arquivo deve ser um formato de WebVTT válido.
  syntax:
    content: 'function addVideoTranscriptWithHttpOperationResponse(teamName: string, reviewId: string, vTTfile: stream.Readable, options?: Object)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        Nome da sua equipe.
    - id: reviewId
      type:
      - string
      description: >
        ID da revisão.
    - id: vTTfile
      type:
      - stream.Readable
      description: >
        Arquivo de transcrição do vídeo.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createJob
  name: createJob
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Um trabalho que ID será retornado para o conteúdo publicado nesse ponto de extremidade.

    Depois que o conteúdo é avaliado em relação ao fluxo de trabalho desde a análise será criada ou ignorada com base na expressão de fluxo de trabalho.


    <h3>Esquemas de retorno de chamada </h3>


    <p>

    <h4>Exemplo de retorno de chamada de conclusão do trabalho</h4><br/>


    {<br/>

    "JobId": "<Job Id>,<br/>

    "ReviewId": "< Id da revisão, se o trabalho resultou em uma revisão a ser criado >",<br/>

    "WorkFlowId": "padrão",<br/>

    "Status": "< isso será um erro de concluir, InProgress, >",<br/>

    "ContentType": "Imagem",<br/>

    "ContentId": "<This is the ContentId that was specified on input>",<br/>

    "CallBackType": "Trabalho",<br/>

    "Metadados": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>

    <p>

    <h4>Exemplo de retorno de chamada de conclusão de revisão</h4><br/>


    {"ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadados": {<br/>

    "adultscore": "0.xxx", "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createJob(teamName: string, contentType: string, contentId: string, workflowName: string, jobContentType: string, content: Content, options?: Object)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        Nome da sua equipe.
    - id: contentType
      type:
      - string
      description: >
        Imagem, texto ou vídeo. Os valores possíveis incluem: 'Imagem', 'Texto', 'Vídeo'
    - id: contentId
      type:
      - string
      description: >
        ID de nome para identificar o conteúdo enviado.
    - id: workflowName
      type:
      - string
      description: >
        Nome do fluxo de trabalho que você deseja invocar.
    - id: jobContentType
      type:
      - string
      description: >
        O tipo de conteúdo. Os valores possíveis incluem: ' application/json', 'image/jpeg'
    - id: content
      type:
      - azure-cognitiveservices-contentmoderator.Content
      description: >
        Conteúdo a ser avaliada.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.JobId>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createJob_1
  name: createJob
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Um trabalho que ID será retornado para o conteúdo publicado nesse ponto de extremidade.

    Depois que o conteúdo é avaliado em relação ao fluxo de trabalho desde a análise será criada ou ignorada com base na expressão de fluxo de trabalho.


    <h3>Esquemas de retorno de chamada </h3>


    <p>

    <h4>Exemplo de retorno de chamada de conclusão do trabalho</h4><br/>


    {<br/>

    "JobId": "<Job Id>,<br/>

    "ReviewId": "< Id da revisão, se o trabalho resultou em uma revisão a ser criado >",<br/>

    "WorkFlowId": "padrão",<br/>

    "Status": "< isso será um erro de concluir, InProgress, >",<br/>

    "ContentType": "Imagem",<br/>

    "ContentId": "<This is the ContentId that was specified on input>",<br/>

    "CallBackType": "Trabalho",<br/>

    "Metadados": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>

    <p>

    <h4>Exemplo de retorno de chamada de conclusão de revisão</h4><br/>


    {"ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadados": {<br/>

    "adultscore": "0.xxx", "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createJob(teamName: string, contentType: string, contentId: string, workflowName: string, jobContentType: string, content: Content, callback: ServiceCallback<JobId>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: contentType
      type:
      - string
      description: ''
    - id: contentId
      type:
      - string
      description: ''
    - id: workflowName
      type:
      - string
      description: ''
    - id: jobContentType
      type:
      - string
      description: ''
    - id: content
      type:
      - azure-cognitiveservices-contentmoderator.Content
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.JobId>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.JobId>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createJob_2
  name: createJob
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Um trabalho que ID será retornado para o conteúdo publicado nesse ponto de extremidade.

    Depois que o conteúdo é avaliado em relação ao fluxo de trabalho desde a análise será criada ou ignorada com base na expressão de fluxo de trabalho.


    <h3>Esquemas de retorno de chamada </h3>


    <p>

    <h4>Exemplo de retorno de chamada de conclusão do trabalho</h4><br/>


    {<br/>

    "JobId": "<Job Id>,<br/>

    "ReviewId": "< Id da revisão, se o trabalho resultou em uma revisão a ser criado >",<br/>

    "WorkFlowId": "padrão",<br/>

    "Status": "< isso será um erro de concluir, InProgress, >",<br/>

    "ContentType": "Imagem",<br/>

    "ContentId": "<This is the ContentId that was specified on input>",<br/>

    "CallBackType": "Trabalho",<br/>

    "Metadados": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>

    <p>

    <h4>Exemplo de retorno de chamada de conclusão de revisão</h4><br/>


    {"ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadados": {<br/>

    "adultscore": "0.xxx", "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createJob(teamName: string, contentType: string, contentId: string, workflowName: string, jobContentType: string, content: Content, options: Object, callback: ServiceCallback<JobId>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: contentType
      type:
      - string
      description: ''
    - id: contentId
      type:
      - string
      description: ''
    - id: workflowName
      type:
      - string
      description: ''
    - id: jobContentType
      type:
      - string
      description: ''
    - id: content
      type:
      - azure-cognitiveservices-contentmoderator.Content
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.JobId>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.JobId>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createJobWithHttpOperationResponse
  name: createJobWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Um trabalho que ID será retornado para o conteúdo publicado nesse ponto de extremidade.

    Depois que o conteúdo é avaliado em relação ao fluxo de trabalho desde a análise será criada ou ignorada com base na expressão de fluxo de trabalho.


    <h3>Esquemas de retorno de chamada </h3>


    <p>

    <h4>Exemplo de retorno de chamada de conclusão do trabalho</h4><br/>


    {<br/>

    "JobId": "<Job Id>,<br/>

    "ReviewId": "< Id da revisão, se o trabalho resultou em uma revisão a ser criado >",<br/>

    "WorkFlowId": "padrão",<br/>

    "Status": "< isso será um erro de concluir, InProgress, >",<br/>

    "ContentType": "Imagem",<br/>

    "ContentId": "<This is the ContentId that was specified on input>",<br/>

    "CallBackType": "Trabalho",<br/>

    "Metadados": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>

    <p>

    <h4>Exemplo de retorno de chamada de conclusão de revisão</h4><br/>


    {"ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadados": {<br/>

    "adultscore": "0.xxx", "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createJobWithHttpOperationResponse(teamName: string, contentType: string, contentId: string, workflowName: string, jobContentType: string, content: Content, options?: Object)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        Nome da sua equipe.
    - id: contentType
      type:
      - string
      description: >
        Imagem, texto ou vídeo. Os valores possíveis incluem: 'Imagem', 'Texto', 'Vídeo'
    - id: contentId
      type:
      - string
      description: >
        ID de nome para identificar o conteúdo enviado.
    - id: workflowName
      type:
      - string
      description: >
        Nome do fluxo de trabalho que você deseja invocar.
    - id: jobContentType
      type:
      - string
      description: >
        O tipo de conteúdo. Os valores possíveis incluem: ' application/json', 'image/jpeg'
    - id: content
      type:
      - azure-cognitiveservices-contentmoderator.Content
      description: >
        Conteúdo a ser avaliada.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.JobId>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createReviews
  name: createReviews
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    As revisões criadas seriam exibida para os revisores em sua equipe. Conforme os revisores concluem a revisão, resultados da revisão seriam ser LANÇADOS (ou seja, o HTTP POST) no CallBackEndpoint especificado.

    <h3>Esquemas de retorno de chamada </h3>

    <h4>Exemplo de retorno de chamada de conclusão de revisão</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadados": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createReviews(urlContentType: string, teamName: string, createReviewBody: CreateReviewBodyItem[], options?: Object)'
    parameters:
    - id: urlContentType
      type:
      - string
      description: >
        O tipo de conteúdo.
    - id: teamName
      type:
      - string
      description: >
        Nome da sua equipe.
    - id: createReviewBody
      type:
      - azure-cognitiveservices-contentmoderator.CreateReviewBodyItem[]
      description: >
        Revisões de corpo para criar API
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<string[]>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createReviews_1
  name: createReviews
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    As revisões criadas seriam exibida para os revisores em sua equipe. Conforme os revisores concluem a revisão, resultados da revisão seriam ser LANÇADOS (ou seja, o HTTP POST) no CallBackEndpoint especificado.

    <h3>Esquemas de retorno de chamada </h3>

    <h4>Exemplo de retorno de chamada de conclusão de revisão</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadados": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createReviews(urlContentType: string, teamName: string, createReviewBody: CreateReviewBodyItem[], callback: ServiceCallback<string[]>)'
    parameters:
    - id: urlContentType
      type:
      - string
      description: ''
    - id: teamName
      type:
      - string
      description: ''
    - id: createReviewBody
      type:
      - azure-cognitiveservices-contentmoderator.CreateReviewBodyItem[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<string[]>
      description: ''
    return:
      type:
      - Promise<string[]>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createReviews_2
  name: createReviews
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    As revisões criadas seriam exibida para os revisores em sua equipe. Conforme os revisores concluem a revisão, resultados da revisão seriam ser LANÇADOS (ou seja, o HTTP POST) no CallBackEndpoint especificado.

    <h3>Esquemas de retorno de chamada </h3>

    <h4>Exemplo de retorno de chamada de conclusão de revisão</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadados": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createReviews(urlContentType: string, teamName: string, createReviewBody: CreateReviewBodyItem[], options: Object, callback: ServiceCallback<string[]>)'
    parameters:
    - id: urlContentType
      type:
      - string
      description: ''
    - id: teamName
      type:
      - string
      description: ''
    - id: createReviewBody
      type:
      - azure-cognitiveservices-contentmoderator.CreateReviewBodyItem[]
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<string[]>
      description: ''
    return:
      type:
      - Promise<string[]>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createReviewsWithHttpOperationResponse
  name: createReviewsWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    As revisões criadas seriam exibida para os revisores em sua equipe. Conforme os revisores concluem a revisão, resultados da revisão seriam ser LANÇADOS (ou seja, o HTTP POST) no CallBackEndpoint especificado.

    <h3>Esquemas de retorno de chamada </h3>

    <h4>Exemplo de retorno de chamada de conclusão de revisão</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadados": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createReviewsWithHttpOperationResponse(urlContentType: string, teamName: string, createReviewBody: CreateReviewBodyItem[], options?: Object)'
    parameters:
    - id: urlContentType
      type:
      - string
      description: >
        O tipo de conteúdo.
    - id: teamName
      type:
      - string
      description: >
        Nome da sua equipe.
    - id: createReviewBody
      type:
      - azure-cognitiveservices-contentmoderator.CreateReviewBodyItem[]
      description: >
        Revisões de corpo para criar API
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<string[]>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createVideoReviews_1
  name: createVideoReviews
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    As revisões criadas seriam exibida para os revisores em sua equipe. Conforme os revisores concluem a revisão, resultados da revisão seriam ser LANÇADOS (ou seja, o HTTP POST) no CallBackEndpoint especificado.

    <h3>Esquemas de retorno de chamada </h3>

    <h4>Exemplo de retorno de chamada de conclusão de revisão</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadados": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createVideoReviews(contentType: string, teamName: string, createVideoReviewsBody: CreateVideoReviewsBodyItem[], callback: ServiceCallback<string[]>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: teamName
      type:
      - string
      description: ''
    - id: createVideoReviewsBody
      type:
      - azure-cognitiveservices-contentmoderator.CreateVideoReviewsBodyItem[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<string[]>
      description: ''
    return:
      type:
      - Promise<string[]>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createVideoReviews_2
  name: createVideoReviews
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    As revisões criadas seriam exibida para os revisores em sua equipe. Conforme os revisores concluem a revisão, resultados da revisão seriam ser LANÇADOS (ou seja, o HTTP POST) no CallBackEndpoint especificado.

    <h3>Esquemas de retorno de chamada </h3>

    <h4>Exemplo de retorno de chamada de conclusão de revisão</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadados": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createVideoReviews(contentType: string, teamName: string, createVideoReviewsBody: CreateVideoReviewsBodyItem[], options: Object, callback: ServiceCallback<string[]>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: teamName
      type:
      - string
      description: ''
    - id: createVideoReviewsBody
      type:
      - azure-cognitiveservices-contentmoderator.CreateVideoReviewsBodyItem[]
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<string[]>
      description: ''
    return:
      type:
      - Promise<string[]>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createVideoReviews
  name: createVideoReviews
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    As revisões criadas seriam exibida para os revisores em sua equipe. Conforme os revisores concluem a revisão, resultados da revisão seriam ser LANÇADOS (ou seja, o HTTP POST) no CallBackEndpoint especificado.

    <h3>Esquemas de retorno de chamada </h3>

    <h4>Exemplo de retorno de chamada de conclusão de revisão</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadados": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createVideoReviews(contentType: string, teamName: string, createVideoReviewsBody: CreateVideoReviewsBodyItem[], options?: Object)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        O tipo de conteúdo.
    - id: teamName
      type:
      - string
      description: >
        Nome da sua equipe.
    - id: createVideoReviewsBody
      type:
      - azure-cognitiveservices-contentmoderator.CreateVideoReviewsBodyItem[]
      description: >
        Revisões de corpo para criar API
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<string[]>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createVideoReviewsWithHttpOperationResponse
  name: createVideoReviewsWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    As revisões criadas seriam exibida para os revisores em sua equipe. Conforme os revisores concluem a revisão, resultados da revisão seriam ser LANÇADOS (ou seja, o HTTP POST) no CallBackEndpoint especificado.

    <h3>Esquemas de retorno de chamada </h3>

    <h4>Exemplo de retorno de chamada de conclusão de revisão</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadados": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createVideoReviewsWithHttpOperationResponse(contentType: string, teamName: string, createVideoReviewsBody: CreateVideoReviewsBodyItem[], options?: Object)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        O tipo de conteúdo.
    - id: teamName
      type:
      - string
      description: >
        Nome da sua equipe.
    - id: createVideoReviewsBody
      type:
      - azure-cognitiveservices-contentmoderator.CreateVideoReviewsBodyItem[]
      description: >
        Revisões de corpo para criar API
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<string[]>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getJobDetails
  name: getJobDetails
  children: []
  type: method
  langs:
  - typeScript
  summary: Obter os detalhes do trabalho para uma ID do trabalho.
  syntax:
    content: 'function getJobDetails(teamName: string, jobId: string, options?: Object)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        Nome da sua equipe.
    - id: jobId
      type:
      - string
      description: >
        ID do trabalho.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Job>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getJobDetails_1
  name: getJobDetails
  children: []
  type: method
  langs:
  - typeScript
  summary: Obter os detalhes do trabalho para uma ID do trabalho.
  syntax:
    content: 'function getJobDetails(teamName: string, jobId: string, callback: ServiceCallback<Job>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: jobId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Job>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Job>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getJobDetails_2
  name: getJobDetails
  children: []
  type: method
  langs:
  - typeScript
  summary: Obter os detalhes do trabalho para uma ID do trabalho.
  syntax:
    content: 'function getJobDetails(teamName: string, jobId: string, options: Object, callback: ServiceCallback<Job>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: jobId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Job>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Job>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getJobDetailsWithHttpOperationResponse
  name: getJobDetailsWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Obter os detalhes do trabalho para uma ID do trabalho.
  syntax:
    content: 'function getJobDetailsWithHttpOperationResponse(teamName: string, jobId: string, options?: Object)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        Nome da sua equipe.
    - id: jobId
      type:
      - string
      description: >
        ID do trabalho.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.Job>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getReview
  name: getReview
  children: []
  type: method
  langs:
  - typeScript
  summary: Retorna examine os detalhes para a revisão que ID passada.
  syntax:
    content: 'function getReview(teamName: string, reviewId: string, options?: Object)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        Nome da sua equipe.
    - id: reviewId
      type:
      - string
      description: >
        ID da revisão.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Review>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getReview_1
  name: getReview
  children: []
  type: method
  langs:
  - typeScript
  summary: Retorna examine os detalhes para a revisão que ID passada.
  syntax:
    content: 'function getReview(teamName: string, reviewId: string, callback: ServiceCallback<Review>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Review>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Review>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getReview_2
  name: getReview
  children: []
  type: method
  langs:
  - typeScript
  summary: Retorna examine os detalhes para a revisão que ID passada.
  syntax:
    content: 'function getReview(teamName: string, reviewId: string, options: Object, callback: ServiceCallback<Review>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Review>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Review>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getReviewWithHttpOperationResponse
  name: getReviewWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Retorna examine os detalhes para a revisão que ID passada.
  syntax:
    content: 'function getReviewWithHttpOperationResponse(teamName: string, reviewId: string, options?: Object)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        Nome da sua equipe.
    - id: reviewId
      type:
      - string
      description: >
        ID da revisão.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.Review>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getVideoFrames
  name: getVideoFrames
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    As revisões criadas seriam exibida para os revisores em sua equipe. Conforme os revisores concluem a revisão, resultados da revisão seriam ser LANÇADOS (ou seja, o HTTP POST) no CallBackEndpoint especificado.

    <h3>Esquemas de retorno de chamada </h3>

    <h4>Exemplo de retorno de chamada de conclusão de revisão</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadados": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function getVideoFrames(teamName: string, reviewId: string, options?: Object)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        Nome da sua equipe.
    - id: reviewId
      type:
      - string
      description: >
        ID da revisão.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Frames>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getVideoFrames_1
  name: getVideoFrames
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    As revisões criadas seriam exibida para os revisores em sua equipe. Conforme os revisores concluem a revisão, resultados da revisão seriam ser LANÇADOS (ou seja, o HTTP POST) no CallBackEndpoint especificado.

    <h3>Esquemas de retorno de chamada </h3>

    <h4>Exemplo de retorno de chamada de conclusão de revisão</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadados": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function getVideoFrames(teamName: string, reviewId: string, callback: ServiceCallback<Frames>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Frames>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Frames>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getVideoFrames_2
  name: getVideoFrames
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    As revisões criadas seriam exibida para os revisores em sua equipe. Conforme os revisores concluem a revisão, resultados da revisão seriam ser LANÇADOS (ou seja, o HTTP POST) no CallBackEndpoint especificado.

    <h3>Esquemas de retorno de chamada </h3>

    <h4>Exemplo de retorno de chamada de conclusão de revisão</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadados": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function getVideoFrames(teamName: string, reviewId: string, options: Object, callback: ServiceCallback<Frames>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Frames>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Frames>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getVideoFramesWithHttpOperationResponse
  name: getVideoFramesWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    As revisões criadas seriam exibida para os revisores em sua equipe. Conforme os revisores concluem a revisão, resultados da revisão seriam ser LANÇADOS (ou seja, o HTTP POST) no CallBackEndpoint especificado.

    <h3>Esquemas de retorno de chamada </h3>

    <h4>Exemplo de retorno de chamada de conclusão de revisão</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadados": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function getVideoFramesWithHttpOperationResponse(teamName: string, reviewId: string, options?: Object)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        Nome da sua equipe.
    - id: reviewId
      type:
      - string
      description: >
        ID da revisão.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.Frames>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.publishVideoReview
  name: publishVideoReview
  children: []
  type: method
  langs:
  - typeScript
  summary: Publica vídeo revisão para torná-lo disponível para revisão.
  syntax:
    content: 'function publishVideoReview(teamName: string, reviewId: string, options?: Object)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        Nome da sua equipe.
    - id: reviewId
      type:
      - string
      description: >
        ID da revisão.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.publishVideoReview_1
  name: publishVideoReview
  children: []
  type: method
  langs:
  - typeScript
  summary: Publica vídeo revisão para torná-lo disponível para revisão.
  syntax:
    content: 'function publishVideoReview(teamName: string, reviewId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.publishVideoReview_2
  name: publishVideoReview
  children: []
  type: method
  langs:
  - typeScript
  summary: Publica vídeo revisão para torná-lo disponível para revisão.
  syntax:
    content: 'function publishVideoReview(teamName: string, reviewId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.publishVideoReviewWithHttpOperationResponse
  name: publishVideoReviewWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Publica vídeo revisão para torná-lo disponível para revisão.
  syntax:
    content: 'function publishVideoReviewWithHttpOperationResponse(teamName: string, reviewId: string, options?: Object)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        Nome da sua equipe.
    - id: reviewId
      type:
      - string
      description: >
        ID da revisão.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-contentmoderator
references:
- uid: azure-cognitiveservices-contentmoderator.VideoFrameBodyItem[]
  spec.typeScript:
  - name: VideoFrameBodyItem
    fullName: VideoFrameBodyItem
    uid: azure-cognitiveservices-contentmoderator.VideoFrameBodyItem
  - name: '[]'
    fullName: '[]'
- uid: azure-cognitiveservices-contentmoderator.TranscriptModerationBodyItem[]
  spec.typeScript:
  - name: TranscriptModerationBodyItem
    fullName: TranscriptModerationBodyItem
    uid: azure-cognitiveservices-contentmoderator.TranscriptModerationBodyItem
  - name: '[]'
    fullName: '[]'
- uid: azure-cognitiveservices-contentmoderator.Content
  spec.typeScript:
  - name: Content
    fullName: Content
    uid: azure-cognitiveservices-contentmoderator.Content
- uid: Promise<azure-cognitiveservices-contentmoderator.JobId>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: JobId
    fullName: JobId
    uid: azure-cognitiveservices-contentmoderator.JobId
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-contentmoderator.JobId>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: JobId
    fullName: JobId
    uid: azure-cognitiveservices-contentmoderator.JobId
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.JobId>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: JobId
    fullName: JobId
    uid: azure-cognitiveservices-contentmoderator.JobId
  - name: '>>'
    fullName: '>>'
- uid: azure-cognitiveservices-contentmoderator.CreateReviewBodyItem[]
  spec.typeScript:
  - name: CreateReviewBodyItem
    fullName: CreateReviewBodyItem
    uid: azure-cognitiveservices-contentmoderator.CreateReviewBodyItem
  - name: '[]'
    fullName: '[]'
- uid: azure-cognitiveservices-contentmoderator.CreateVideoReviewsBodyItem[]
  spec.typeScript:
  - name: CreateVideoReviewsBodyItem
    fullName: CreateVideoReviewsBodyItem
    uid: azure-cognitiveservices-contentmoderator.CreateVideoReviewsBodyItem
  - name: '[]'
    fullName: '[]'
- uid: Promise<azure-cognitiveservices-contentmoderator.Job>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Job
    fullName: Job
    uid: azure-cognitiveservices-contentmoderator.Job
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-contentmoderator.Job>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Job
    fullName: Job
    uid: azure-cognitiveservices-contentmoderator.Job
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.Job>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Job
    fullName: Job
    uid: azure-cognitiveservices-contentmoderator.Job
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-contentmoderator.Review>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Review
    fullName: Review
    uid: azure-cognitiveservices-contentmoderator.Review
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-contentmoderator.Review>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Review
    fullName: Review
    uid: azure-cognitiveservices-contentmoderator.Review
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.Review>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Review
    fullName: Review
    uid: azure-cognitiveservices-contentmoderator.Review
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-contentmoderator.Frames>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Frames
    fullName: Frames
    uid: azure-cognitiveservices-contentmoderator.Frames
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-contentmoderator.Frames>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Frames
    fullName: Frames
    uid: azure-cognitiveservices-contentmoderator.Frames
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.Frames>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Frames
    fullName: Frames
    uid: azure-cognitiveservices-contentmoderator.Frames
  - name: '>>'
    fullName: '>>'
