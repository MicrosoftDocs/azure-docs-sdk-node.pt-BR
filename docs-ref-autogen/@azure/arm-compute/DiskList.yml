### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-compute.DiskList'
    name: DiskList
    fullName: DiskList
    children:
      - '@azure/arm-compute.DiskList.Array'
      - '@azure/arm-compute.DiskList.concat'
      - '@azure/arm-compute.DiskList.concat_1'
      - '@azure/arm-compute.DiskList.copyWithin'
      - '@azure/arm-compute.DiskList.entries'
      - '@azure/arm-compute.DiskList.every'
      - '@azure/arm-compute.DiskList.fill'
      - '@azure/arm-compute.DiskList.filter_1'
      - '@azure/arm-compute.DiskList.filter'
      - '@azure/arm-compute.DiskList.find'
      - '@azure/arm-compute.DiskList.find_1'
      - '@azure/arm-compute.DiskList.findIndex'
      - '@azure/arm-compute.DiskList.forEach'
      - '@azure/arm-compute.DiskList.indexOf'
      - '@azure/arm-compute.DiskList.join'
      - '@azure/arm-compute.DiskList.keys'
      - '@azure/arm-compute.DiskList.lastIndexOf'
      - '@azure/arm-compute.DiskList.length'
      - '@azure/arm-compute.DiskList.map'
      - '@azure/arm-compute.DiskList.nextLink'
      - '@azure/arm-compute.DiskList.pop'
      - '@azure/arm-compute.DiskList.push'
      - '@azure/arm-compute.DiskList.reduce'
      - '@azure/arm-compute.DiskList.reduce_1'
      - '@azure/arm-compute.DiskList.reduce_2'
      - '@azure/arm-compute.DiskList.reduceRight'
      - '@azure/arm-compute.DiskList.reduceRight_1'
      - '@azure/arm-compute.DiskList.reduceRight_2'
      - '@azure/arm-compute.DiskList.reverse'
      - '@azure/arm-compute.DiskList.shift'
      - '@azure/arm-compute.DiskList.slice'
      - '@azure/arm-compute.DiskList.some'
      - '@azure/arm-compute.DiskList.sort'
      - '@azure/arm-compute.DiskList.splice_1'
      - '@azure/arm-compute.DiskList.splice'
      - '@azure/arm-compute.DiskList.toLocaleString'
      - '@azure/arm-compute.DiskList.toString'
      - '@azure/arm-compute.DiskList.unshift'
      - '@azure/arm-compute.DiskList.values'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: Array<@azure/arm-compute.Disk>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.Array'
    name: Array
    fullName: Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Array: ArrayConstructor'
      return:
        type:
          - ArrayConstructor
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.concat'
    name: 'concat(ConcatArray<Disk>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="33706-101">Combina duas ou mais matrizes.</span><span class="sxs-lookup"><span data-stu-id="33706-101">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: ConcatArray<Disk>[])'
      parameters:
        - id: items
          type:
            - 'ConcatArray<@azure/arm-compute.Disk>[]'
          description: |
            <span data-ttu-id="33706-102">Itens adicionais a serem adicionados ao final de array1.</span><span class="sxs-lookup"><span data-stu-id="33706-102">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - '@azure/arm-compute.Disk[]'
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.concat_1'
    name: 'concat(T | ConcatArray<T>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="33706-103">Combina duas ou mais matrizes.</span><span class="sxs-lookup"><span data-stu-id="33706-103">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: T | ConcatArray<T>[])'
      parameters:
        - id: items
          type:
            - 'T | ConcatArray<T>[]'
          description: |
            <span data-ttu-id="33706-104">Itens adicionais a serem adicionados ao final de array1.</span><span class="sxs-lookup"><span data-stu-id="33706-104">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - '@azure/arm-compute.Disk[]'
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.copyWithin'
    name: 'copyWithin(number, number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="33706-105">Retorna este objeto depois de copiar uma seção da matriz identificada pelo início e término à mesma matriz, começando no destino de posição</span><span class="sxs-lookup"><span data-stu-id="33706-105">Returns the this object after copying a section of the array identified by start and end to the same array starting at position target</span></span>'
    syntax:
      content: 'function copyWithin(target: number, start: number, end?: undefined | number)'
      parameters:
        - id: target
          type:
            - number
          description: '<span data-ttu-id="33706-106">Se o destino for negativo, ele é tratado como comprimento + em que o comprimento é o comprimento da matriz de destino.</span><span class="sxs-lookup"><span data-stu-id="33706-106">If target is negative, it is treated as length+target where length is the length of the array.</span></span>'
        - id: start
          type:
            - number
          description: '<span data-ttu-id="33706-107">Se o início for negativo, ele é tratado como comprimento + início.</span><span class="sxs-lookup"><span data-stu-id="33706-107">If start is negative, it is treated as length+start.</span></span> <span data-ttu-id="33706-108">Se end for negativo, ele é tratado como comprimento + end.</span><span class="sxs-lookup"><span data-stu-id="33706-108">If end is negative, it is treated as length+end.</span></span>'
        - id: end
          type:
            - undefined | number
          description: |
            <span data-ttu-id="33706-109">Se não for especificado, o comprimento do objeto é usado como valor padrão.</span><span class="sxs-lookup"><span data-stu-id="33706-109">If not specified, length of the this object is used as its default value.</span></span>
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.entries'
    name: entries()
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="33706-110">Retorna um que pode ser iterado de pares chave-valor para cada entrada na matriz</span><span class="sxs-lookup"><span data-stu-id="33706-110">Returns an iterable of key, value pairs for every entry in the array</span></span>'
    syntax:
      content: function entries()
      parameters: []
      return:
        type:
          - IterableIterator<Object>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.every'
    name: 'every((value: Disk, index: number, array: Disk[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="33706-111">Determina se todos os membros de uma matriz satisfazem o teste especificado.</span><span class="sxs-lookup"><span data-stu-id="33706-111">Determines whether all the members of an array satisfy the specified test.</span></span>
    syntax:
      content: 'function every(callbackfn: (value: Disk, index: number, array: Disk[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Disk, index: number, array: Disk[]) => boolean'
          description: '<span data-ttu-id="33706-112">Uma função que aceita até três argumentos.</span><span class="sxs-lookup"><span data-stu-id="33706-112">A function that accepts up to three arguments.</span></span> <span data-ttu-id="33706-113">O cada método chama a função de callbackfn para cada elemento em array1 até que o callbackfn retorna false, ou até o final da matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-113">The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="33706-114">Um objeto ao qual a palavra-chave this pode referir-se na função callbackfn.</span><span class="sxs-lookup"><span data-stu-id="33706-114">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="33706-115">Se thisArg for omitido, undefined será usado como este valor.</span><span class="sxs-lookup"><span data-stu-id="33706-115">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.fill'
    name: 'fill(Disk, undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="33706-116">Retorna este objeto depois de preencher a seção identificada por iniciar e termina com valor</span><span class="sxs-lookup"><span data-stu-id="33706-116">Returns the this object after filling the section identified by start and end with value</span></span>
    syntax:
      content: 'function fill(value: Disk, start?: undefined | number, end?: undefined | number)'
      parameters:
        - id: value
          type:
            - '@azure/arm-compute.Disk'
          description: <span data-ttu-id="33706-117">valor para preencher a seção de matriz com</span><span class="sxs-lookup"><span data-stu-id="33706-117">value to fill array section with</span></span>
        - id: start
          type:
            - undefined | number
          description: '<span data-ttu-id="33706-118">índice no qual começar a preencher a matriz no.</span><span class="sxs-lookup"><span data-stu-id="33706-118">index to start filling the array at.</span></span> <span data-ttu-id="33706-119">Se o início for negativo, ele é tratado como comprimento + início em que o comprimento é o comprimento da matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-119">If start is negative, it is treated as length+start where length is the length of the array.</span></span>'
          optional: true
        - id: end
          type:
            - undefined | number
          description: |
            <span data-ttu-id="33706-120">índice para interromper a preencher a matriz no.</span><span class="sxs-lookup"><span data-stu-id="33706-120">index to stop filling the array at.</span></span> <span data-ttu-id="33706-121">Se end for negativo, ele é tratado como comprimento + end.</span><span class="sxs-lookup"><span data-stu-id="33706-121">If end is negative, it is treated as length+end.</span></span>
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.filter_1'
    name: 'filter((value: Disk, index: number, array: Disk[]) => any, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="33706-122">Retorna os elementos de uma matriz que atendem à condição especificada em uma função de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="33706-122">Returns the elements of an array that meet the condition specified in a callback function.</span></span>
    syntax:
      content: 'function filter(callbackfn: (value: Disk, index: number, array: Disk[]) => any, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Disk, index: number, array: Disk[]) => any'
          description: <span data-ttu-id="33706-123">Uma função que aceita até três argumentos.</span><span class="sxs-lookup"><span data-stu-id="33706-123">A function that accepts up to three arguments.</span></span> <span data-ttu-id="33706-124">O método de filtro chama a função callbackfn uma vez para cada elemento na matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-124">The filter method calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="33706-125">Um objeto ao qual a palavra-chave this pode referir-se na função callbackfn.</span><span class="sxs-lookup"><span data-stu-id="33706-125">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="33706-126">Se thisArg for omitido, undefined será usado como este valor.</span><span class="sxs-lookup"><span data-stu-id="33706-126">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - '@azure/arm-compute.Disk[]'
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.filter'
    name: 'filter((value: Disk, index: number, array: Disk[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="33706-127">Retorna os elementos de uma matriz que atendem à condição especificada em uma função de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="33706-127">Returns the elements of an array that meet the condition specified in a callback function.</span></span>
    syntax:
      content: 'function filter<S>(callbackfn: (value: Disk, index: number, array: Disk[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Disk, index: number, array: Disk[]) => boolean'
          description: <span data-ttu-id="33706-128">Uma função que aceita até três argumentos.</span><span class="sxs-lookup"><span data-stu-id="33706-128">A function that accepts up to three arguments.</span></span> <span data-ttu-id="33706-129">O método de filtro chama a função callbackfn uma vez para cada elemento na matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-129">The filter method calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="33706-130">Um objeto ao qual a palavra-chave this pode referir-se na função callbackfn.</span><span class="sxs-lookup"><span data-stu-id="33706-130">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="33706-131">Se thisArg for omitido, undefined será usado como este valor.</span><span class="sxs-lookup"><span data-stu-id="33706-131">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'S[]'
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.find'
    name: 'find((this: void, value: Disk, index: number, obj: Disk[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="33706-132">Retorna o valor do primeiro elemento na matriz em que o predicado é caso contrário, true e indefinido.</span><span class="sxs-lookup"><span data-stu-id="33706-132">Returns the value of the first element in the array where predicate is true, and undefined otherwise.</span></span>'
    syntax:
      content: 'function find<S>(predicate: (this: void, value: Disk, index: number, obj: Disk[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(this: void, value: Disk, index: number, obj: Disk[]) => boolean'
          description: '<span data-ttu-id="33706-133">Localize o predicado de chamadas uma vez para cada elemento da matriz, em ordem crescente, até encontrar um no qual o predicado retornar verdadeiro.</span><span class="sxs-lookup"><span data-stu-id="33706-133">find calls predicate once for each element of the array, in ascending order, until it finds one where predicate returns true.</span></span> <span data-ttu-id="33706-134">Se esse elemento for encontrado, find retorna imediatamente o valor desse elemento.</span><span class="sxs-lookup"><span data-stu-id="33706-134">If such an element is found, find immediately returns that element value.</span></span> <span data-ttu-id="33706-135">Caso contrário, procurar retorna indefinido.</span><span class="sxs-lookup"><span data-stu-id="33706-135">Otherwise, find returns undefined.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="33706-136">Se fornecido, ele será usado como este valor para cada invocação do predicado.</span><span class="sxs-lookup"><span data-stu-id="33706-136">If provided, it will be used as the this value for each invocation of predicate.</span></span> <span data-ttu-id="33706-137">Se não for fornecido, ' indefinido é usado em vez disso.</span><span class="sxs-lookup"><span data-stu-id="33706-137">If it is not provided, undefined is used instead.</span></span>
          optional: true
      return:
        type:
          - S | undefined
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.find_1'
    name: 'find((value: Disk, index: number, obj: Disk[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="33706-138">Retorna o valor do primeiro elemento na matriz em que o predicado é caso contrário, true e indefinido.</span><span class="sxs-lookup"><span data-stu-id="33706-138">Returns the value of the first element in the array where predicate is true, and undefined otherwise.</span></span>'
    syntax:
      content: 'function find(predicate: (value: Disk, index: number, obj: Disk[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(value: Disk, index: number, obj: Disk[]) => boolean'
          description: ''
        - id: thisArg
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - '@azure/arm-compute.Disk | undefined'
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.findIndex'
    name: 'findIndex((value: Disk, index: number, obj: Disk[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="33706-139">Retorna o índice do primeiro elemento na matriz em que o predicado é true e -1 caso contrário.</span><span class="sxs-lookup"><span data-stu-id="33706-139">Returns the index of the first element in the array where predicate is true, and -1 otherwise.</span></span>'
    syntax:
      content: 'function findIndex(predicate: (value: Disk, index: number, obj: Disk[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(value: Disk, index: number, obj: Disk[]) => boolean'
          description: '<span data-ttu-id="33706-140">Localize o predicado de chamadas uma vez para cada elemento da matriz, em ordem crescente, até encontrar um no qual o predicado retornar verdadeiro.</span><span class="sxs-lookup"><span data-stu-id="33706-140">find calls predicate once for each element of the array, in ascending order, until it finds one where predicate returns true.</span></span> <span data-ttu-id="33706-141">Se esse elemento for encontrado, findIndex retorna imediatamente esse índice do elemento.</span><span class="sxs-lookup"><span data-stu-id="33706-141">If such an element is found, findIndex immediately returns that element index.</span></span> <span data-ttu-id="33706-142">Caso contrário, findIndex retornará -1.</span><span class="sxs-lookup"><span data-stu-id="33706-142">Otherwise, findIndex returns -1.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="33706-143">Se fornecido, ele será usado como este valor para cada invocação do predicado.</span><span class="sxs-lookup"><span data-stu-id="33706-143">If provided, it will be used as the this value for each invocation of predicate.</span></span> <span data-ttu-id="33706-144">Se não for fornecido, ' indefinido é usado em vez disso.</span><span class="sxs-lookup"><span data-stu-id="33706-144">If it is not provided, undefined is used instead.</span></span>
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.forEach'
    name: 'forEach((value: Disk, index: number, array: Disk[]) => void, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="33706-145">Executa a ação especificada para cada elemento em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-145">Performs the specified action for each element in an array.</span></span>
    syntax:
      content: 'function forEach(callbackfn: (value: Disk, index: number, array: Disk[]) => void, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Disk, index: number, array: Disk[]) => void'
          description: <span data-ttu-id="33706-146">Uma função que aceita até três argumentos.</span><span class="sxs-lookup"><span data-stu-id="33706-146">A function that accepts up to three arguments.</span></span> <span data-ttu-id="33706-147">forEach chama a função callbackfn uma vez para cada elemento na matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-147">forEach calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="33706-148">Um objeto ao qual a palavra-chave this pode referir-se na função callbackfn.</span><span class="sxs-lookup"><span data-stu-id="33706-148">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="33706-149">Se thisArg for omitido, undefined será usado como este valor.</span><span class="sxs-lookup"><span data-stu-id="33706-149">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.indexOf'
    name: 'indexOf(Disk, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="33706-150">Retorna o índice da primeira ocorrência de um valor em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-150">Returns the index of the first occurrence of a value in an array.</span></span>
    syntax:
      content: 'function indexOf(searchElement: Disk, fromIndex?: undefined | number)'
      parameters:
        - id: searchElement
          type:
            - '@azure/arm-compute.Disk'
          description: <span data-ttu-id="33706-151">O valor a ser localizado na matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-151">The value to locate in the array.</span></span>
        - id: fromIndex
          type:
            - undefined | number
          description: |
            <span data-ttu-id="33706-152">O índice de matriz no qual iniciar a pesquisa.</span><span class="sxs-lookup"><span data-stu-id="33706-152">The array index at which to begin the search.</span></span> <span data-ttu-id="33706-153">Se fromIndex for omitido, a pesquisa começa no índice 0.</span><span class="sxs-lookup"><span data-stu-id="33706-153">If fromIndex is omitted, the search starts at index 0.</span></span>
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.join'
    name: join(undefined | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="33706-154">Adiciona todos os elementos de uma matriz separados pela cadeia de caracteres de separador especificado.</span><span class="sxs-lookup"><span data-stu-id="33706-154">Adds all the elements of an array separated by the specified separator string.</span></span>
    syntax:
      content: 'function join(separator?: undefined | string)'
      parameters:
        - id: separator
          type:
            - undefined | string
          description: |
            <span data-ttu-id="33706-155">Uma cadeia de caracteres usada para separar um elemento de uma matriz do próximo na cadeia de caracteres resultante.</span><span class="sxs-lookup"><span data-stu-id="33706-155">A string used to separate one element of an array from the next in the resulting String.</span></span> <span data-ttu-id="33706-156">Se omitido, os elementos da matriz são separados por uma vírgula.</span><span class="sxs-lookup"><span data-stu-id="33706-156">If omitted, the array elements are separated with a comma.</span></span>
          optional: true
      return:
        type:
          - string
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.keys'
    name: keys()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="33706-157">Retorna um que pode ser iterado de chaves na matriz</span><span class="sxs-lookup"><span data-stu-id="33706-157">Returns an iterable of keys in the array</span></span>
    syntax:
      content: function keys()
      parameters: []
      return:
        type:
          - IterableIterator<number>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.lastIndexOf'
    name: 'lastIndexOf(Disk, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="33706-158">Retorna o índice da última ocorrência de um valor especificado em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-158">Returns the index of the last occurrence of a specified value in an array.</span></span>
    syntax:
      content: 'function lastIndexOf(searchElement: Disk, fromIndex?: undefined | number)'
      parameters:
        - id: searchElement
          type:
            - '@azure/arm-compute.Disk'
          description: <span data-ttu-id="33706-159">O valor a ser localizado na matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-159">The value to locate in the array.</span></span>
        - id: fromIndex
          type:
            - undefined | number
          description: |
            <span data-ttu-id="33706-160">O índice de matriz no qual iniciar a pesquisa.</span><span class="sxs-lookup"><span data-stu-id="33706-160">The array index at which to begin the search.</span></span> <span data-ttu-id="33706-161">Se fromIndex for omitido, a pesquisa começa no último índice na matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-161">If fromIndex is omitted, the search starts at the last index in the array.</span></span>
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.length'
    name: length
    fullName: length
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="33706-162">Obtém ou define o comprimento da matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-162">Gets or sets the length of the array.</span></span> <span data-ttu-id="33706-163">Isso é um número maior do que o elemento mais alto definido em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-163">This is a number one higher than the highest element defined in an array.</span></span>
    syntax:
      content: 'length: number'
      return:
        type:
          - number
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.map'
    name: 'map((value: Disk, index: number, array: Disk[]) => U, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="33706-164">Chama uma função de retorno de chamada definida em cada elemento de uma matriz e retorna uma matriz que contém os resultados.</span><span class="sxs-lookup"><span data-stu-id="33706-164">Calls a defined callback function on each element of an array, and returns an array that contains the results.</span></span>'
    syntax:
      content: 'function map<U>(callbackfn: (value: Disk, index: number, array: Disk[]) => U, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Disk, index: number, array: Disk[]) => U'
          description: <span data-ttu-id="33706-165">Uma função que aceita até três argumentos.</span><span class="sxs-lookup"><span data-stu-id="33706-165">A function that accepts up to three arguments.</span></span> <span data-ttu-id="33706-166">O método map chama a função de callbackfn uma vez para cada elemento na matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-166">The map method calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="33706-167">Um objeto ao qual a palavra-chave this pode referir-se na função callbackfn.</span><span class="sxs-lookup"><span data-stu-id="33706-167">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="33706-168">Se thisArg for omitido, undefined será usado como este valor.</span><span class="sxs-lookup"><span data-stu-id="33706-168">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'U[]'
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.nextLink'
    name: nextLink
    fullName: nextLink
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="33706-169">O uri para buscar a próxima página de discos.</span><span class="sxs-lookup"><span data-stu-id="33706-169">The uri to fetch the next page of disks.</span></span> <span data-ttu-id="33706-170">Chame ListNext() com esta opção para buscar a próxima página de discos.</span><span class="sxs-lookup"><span data-stu-id="33706-170">Call ListNext() with this to fetch the next page of disks.</span></span>
    optional: true
    syntax:
      content: 'nextLink?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.pop'
    name: pop()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="33706-171">Remove o último elemento de uma matriz e o retorna.</span><span class="sxs-lookup"><span data-stu-id="33706-171">Removes the last element from an array and returns it.</span></span>
    syntax:
      content: function pop()
      parameters: []
      return:
        type:
          - '@azure/arm-compute.Disk | undefined'
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.push'
    name: 'push(Disk[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="33706-172">Acrescenta novos elementos em uma matriz e retorna o novo comprimento da matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-172">Appends new elements to an array, and returns the new length of the array.</span></span>'
    syntax:
      content: 'function push(items: Disk[])'
      parameters:
        - id: items
          type:
            - '@azure/arm-compute.Disk[]'
          description: |
            <span data-ttu-id="33706-173">Novos elementos da matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-173">New elements of the Array.</span></span>
      return:
        type:
          - number
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.reduce'
    name: 'reduce((previousValue: Disk, currentValue: Disk, currentIndex: number, array: Disk[]) => Disk)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="33706-174">Chama a função de retorno de chamada especificados para todos os elementos em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-174">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="33706-175">O valor de retorno da função de retorno de chamada é o resultado acumulado e é fornecido como um argumento na próxima chamada para a função de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="33706-175">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: Disk, currentValue: Disk, currentIndex: number, array: Disk[]) => Disk)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: Disk, currentValue: Disk, currentIndex: number, array: Disk[]) => Disk'
          description: <span data-ttu-id="33706-176">Uma função que aceita até quatro argumentos.</span><span class="sxs-lookup"><span data-stu-id="33706-176">A function that accepts up to four arguments.</span></span> <span data-ttu-id="33706-177">O método reduce chama a função de callbackfn uma vez para cada elemento na matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-177">The reduce method calls the callbackfn function one time for each element in the array.</span></span>
      return:
        type:
          - '@azure/arm-compute.Disk'
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.reduce_1'
    name: 'reduce((previousValue: Disk, currentValue: Disk, currentIndex: number, array: Disk[]) => Disk, Disk)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="33706-178">Chama a função de retorno de chamada especificados para todos os elementos em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-178">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="33706-179">O valor de retorno da função de retorno de chamada é o resultado acumulado e é fornecido como um argumento na próxima chamada para a função de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="33706-179">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: Disk, currentValue: Disk, currentIndex: number, array: Disk[]) => Disk, initialValue: Disk)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: Disk, currentValue: Disk, currentIndex: number, array: Disk[]) => Disk'
          description: ''
        - id: initialValue
          type:
            - '@azure/arm-compute.Disk'
          description: ''
      return:
        type:
          - '@azure/arm-compute.Disk'
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.reduce_2'
    name: 'reduce((previousValue: U, currentValue: Disk, currentIndex: number, array: Disk[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="33706-180">Chama a função de retorno de chamada especificados para todos os elementos em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-180">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="33706-181">O valor de retorno da função de retorno de chamada é o resultado acumulado e é fornecido como um argumento na próxima chamada para a função de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="33706-181">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce<U>(callbackfn: (previousValue: U, currentValue: Disk, currentIndex: number, array: Disk[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: Disk, currentIndex: number, array: Disk[]) => U'
          description: <span data-ttu-id="33706-182">Uma função que aceita até quatro argumentos.</span><span class="sxs-lookup"><span data-stu-id="33706-182">A function that accepts up to four arguments.</span></span> <span data-ttu-id="33706-183">O método reduce chama a função de callbackfn uma vez para cada elemento na matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-183">The reduce method calls the callbackfn function one time for each element in the array.</span></span>
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="33706-184">Se initialValue for especificado, ele é usado como o valor inicial para iniciar o acúmulo.</span><span class="sxs-lookup"><span data-stu-id="33706-184">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="33706-185">A primeira chamada para a função callbackfn fornece esse valor como um argumento, em vez de um valor de matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-185">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.reduceRight'
    name: 'reduceRight((previousValue: Disk, currentValue: Disk, currentIndex: number, array: Disk[]) => Disk)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="33706-186">Chama a função de retorno de chamada especificados para todos os elementos em uma matriz, em ordem decrescente.</span><span class="sxs-lookup"><span data-stu-id="33706-186">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="33706-187">O valor de retorno da função de retorno de chamada é o resultado acumulado e é fornecido como um argumento na próxima chamada para a função de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="33706-187">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: Disk, currentValue: Disk, currentIndex: number, array: Disk[]) => Disk)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: Disk, currentValue: Disk, currentIndex: number, array: Disk[]) => Disk'
          description: <span data-ttu-id="33706-188">Uma função que aceita até quatro argumentos.</span><span class="sxs-lookup"><span data-stu-id="33706-188">A function that accepts up to four arguments.</span></span> <span data-ttu-id="33706-189">O método reduceRight chama a função callbackfn uma vez para cada elemento na matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-189">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>
      return:
        type:
          - '@azure/arm-compute.Disk'
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.reduceRight_1'
    name: 'reduceRight((previousValue: Disk, currentValue: Disk, currentIndex: number, array: Disk[]) => Disk, Disk)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="33706-190">Chama a função de retorno de chamada especificados para todos os elementos em uma matriz, em ordem decrescente.</span><span class="sxs-lookup"><span data-stu-id="33706-190">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="33706-191">O valor de retorno da função de retorno de chamada é o resultado acumulado e é fornecido como um argumento na próxima chamada para a função de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="33706-191">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: Disk, currentValue: Disk, currentIndex: number, array: Disk[]) => Disk, initialValue: Disk)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: Disk, currentValue: Disk, currentIndex: number, array: Disk[]) => Disk'
          description: ''
        - id: initialValue
          type:
            - '@azure/arm-compute.Disk'
          description: ''
      return:
        type:
          - '@azure/arm-compute.Disk'
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.reduceRight_2'
    name: 'reduceRight((previousValue: U, currentValue: Disk, currentIndex: number, array: Disk[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="33706-192">Chama a função de retorno de chamada especificados para todos os elementos em uma matriz, em ordem decrescente.</span><span class="sxs-lookup"><span data-stu-id="33706-192">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="33706-193">O valor de retorno da função de retorno de chamada é o resultado acumulado e é fornecido como um argumento na próxima chamada para a função de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="33706-193">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight<U>(callbackfn: (previousValue: U, currentValue: Disk, currentIndex: number, array: Disk[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: Disk, currentIndex: number, array: Disk[]) => U'
          description: <span data-ttu-id="33706-194">Uma função que aceita até quatro argumentos.</span><span class="sxs-lookup"><span data-stu-id="33706-194">A function that accepts up to four arguments.</span></span> <span data-ttu-id="33706-195">O método reduceRight chama a função callbackfn uma vez para cada elemento na matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-195">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="33706-196">Se initialValue for especificado, ele é usado como o valor inicial para iniciar o acúmulo.</span><span class="sxs-lookup"><span data-stu-id="33706-196">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="33706-197">A primeira chamada para a função callbackfn fornece esse valor como um argumento, em vez de um valor de matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-197">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.reverse'
    name: reverse()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="33706-198">Inverte os elementos em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-198">Reverses the elements in an Array.</span></span>
    syntax:
      content: function reverse()
      parameters: []
      return:
        type:
          - '@azure/arm-compute.Disk[]'
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.shift'
    name: shift()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="33706-199">Remove o primeiro elemento de uma matriz e o retorna.</span><span class="sxs-lookup"><span data-stu-id="33706-199">Removes the first element from an array and returns it.</span></span>
    syntax:
      content: function shift()
      parameters: []
      return:
        type:
          - '@azure/arm-compute.Disk | undefined'
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.slice'
    name: 'slice(undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="33706-200">Retorna uma seção de uma matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-200">Returns a section of an array.</span></span>
    syntax:
      content: 'function slice(start?: undefined | number, end?: undefined | number)'
      parameters:
        - id: start
          type:
            - undefined | number
          description: <span data-ttu-id="33706-201">O início da parte especificada da matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-201">The beginning of the specified portion of the array.</span></span>
          optional: true
        - id: end
          type:
            - undefined | number
          description: |
            <span data-ttu-id="33706-202">O final da parte especificada da matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-202">The end of the specified portion of the array.</span></span>
          optional: true
      return:
        type:
          - '@azure/arm-compute.Disk[]'
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.some'
    name: 'some((value: Disk, index: number, array: Disk[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="33706-203">Determina se a função de retorno de chamada especificada retorna true para qualquer elemento de uma matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-203">Determines whether the specified callback function returns true for any element of an array.</span></span>
    syntax:
      content: 'function some(callbackfn: (value: Disk, index: number, array: Disk[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Disk, index: number, array: Disk[]) => boolean'
          description: '<span data-ttu-id="33706-204">Uma função que aceita até três argumentos.</span><span class="sxs-lookup"><span data-stu-id="33706-204">A function that accepts up to three arguments.</span></span> <span data-ttu-id="33706-205">Método some chama a função de callbackfn para cada elemento em array1 até que o callbackfn retorna true ou até o final da matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-205">The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="33706-206">Um objeto ao qual a palavra-chave this pode referir-se na função callbackfn.</span><span class="sxs-lookup"><span data-stu-id="33706-206">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="33706-207">Se thisArg for omitido, undefined será usado como este valor.</span><span class="sxs-lookup"><span data-stu-id="33706-207">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.sort'
    name: 'sort(undefined | (a: Disk, b: Disk) => number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="33706-208">Classifica uma matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-208">Sorts an array.</span></span>
    syntax:
      content: 'function sort(compareFn?: undefined | (a: Disk, b: Disk) => number)'
      parameters:
        - id: compareFn
          type:
            - 'undefined | (a: Disk, b: Disk) => number'
          description: |
            <span data-ttu-id="33706-209">O nome da função usada para determinar a ordem dos elementos.</span><span class="sxs-lookup"><span data-stu-id="33706-209">The name of the function used to determine the order of the elements.</span></span> <span data-ttu-id="33706-210">Se omitido, os elementos são classificados em ordem crescente, ordem de caracteres ASCII.</span><span class="sxs-lookup"><span data-stu-id="33706-210">If omitted, the elements are sorted in ascending, ASCII character order.</span></span>
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.splice_1'
    name: 'splice(number, number, Disk[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="33706-211">Remove elementos de uma matriz e, se necessário, insere novos elementos em seu lugar, retornando os elementos excluídos.</span><span class="sxs-lookup"><span data-stu-id="33706-211">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount: number, items: Disk[])'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="33706-212">O local baseado em zero na matriz da qual iniciar remoção de elementos.</span><span class="sxs-lookup"><span data-stu-id="33706-212">The zero-based location in the array from which to start removing elements.</span></span>
        - id: deleteCount
          type:
            - number
          description: <span data-ttu-id="33706-213">O número de elementos a serem removidos.</span><span class="sxs-lookup"><span data-stu-id="33706-213">The number of elements to remove.</span></span>
        - id: items
          type:
            - '@azure/arm-compute.Disk[]'
          description: |
            <span data-ttu-id="33706-214">Elementos a serem inseridos na matriz no lugar os elementos excluídos.</span><span class="sxs-lookup"><span data-stu-id="33706-214">Elements to insert into the array in place of the deleted elements.</span></span>
      return:
        type:
          - '@azure/arm-compute.Disk[]'
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.splice'
    name: 'splice(number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="33706-215">Remove elementos de uma matriz e, se necessário, insere novos elementos em seu lugar, retornando os elementos excluídos.</span><span class="sxs-lookup"><span data-stu-id="33706-215">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount?: undefined | number)'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="33706-216">O local baseado em zero na matriz da qual iniciar remoção de elementos.</span><span class="sxs-lookup"><span data-stu-id="33706-216">The zero-based location in the array from which to start removing elements.</span></span>
        - id: deleteCount
          type:
            - undefined | number
          description: |
            <span data-ttu-id="33706-217">O número de elementos a serem removidos.</span><span class="sxs-lookup"><span data-stu-id="33706-217">The number of elements to remove.</span></span>
          optional: true
      return:
        type:
          - '@azure/arm-compute.Disk[]'
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.toLocaleString'
    name: toLocaleString()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="33706-218">Retorna uma representação de cadeia de caracteres de uma matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-218">Returns a string representation of an array.</span></span> <span data-ttu-id="33706-219">Os elementos são convertidos em cadeia de caracteres usando seus métodos toLocalString.</span><span class="sxs-lookup"><span data-stu-id="33706-219">The elements are converted to string using their toLocalString methods.</span></span>
    syntax:
      content: function toLocaleString()
      parameters: []
      return:
        type:
          - string
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.toString'
    name: toString()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="33706-220">Retorna uma representação de cadeia de caracteres de uma matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-220">Returns a string representation of an array.</span></span>
    syntax:
      content: function toString()
      parameters: []
      return:
        type:
          - string
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.unshift'
    name: 'unshift(Disk[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="33706-221">Insere novos elementos no início de uma matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-221">Inserts new elements at the start of an array.</span></span>
    syntax:
      content: 'function unshift(items: Disk[])'
      parameters:
        - id: items
          type:
            - '@azure/arm-compute.Disk[]'
          description: |
            <span data-ttu-id="33706-222">Elementos a serem inseridos no início da matriz.</span><span class="sxs-lookup"><span data-stu-id="33706-222">Elements to insert at the start of the Array.</span></span>
      return:
        type:
          - number
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.DiskList.values'
    name: values()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="33706-223">Retorna um que pode ser iterado dos valores na matriz</span><span class="sxs-lookup"><span data-stu-id="33706-223">Returns an iterable of values in the array</span></span>
    syntax:
      content: function values()
      parameters: []
      return:
        type:
          - IterableIterator<@azure/arm-compute.Disk>
    package: '@azure/arm-compute'
references:
  - uid: Array<@azure/arm-compute.Disk>
    name: Disk>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: Disk
        fullName: Disk
        uid: '@azure/arm-compute.Disk'
      - name: '>'
        fullName: '>'
  - uid: 'ConcatArray<@azure/arm-compute.Disk>[]'
    name: 'Disk>[]'
    spec.typeScript:
      - name: ConcatArray<
        fullName: ConcatArray<
      - name: Disk
        fullName: Disk
        uid: '@azure/arm-compute.Disk'
      - name: '>[]'
        fullName: '>[]'
  - uid: '@azure/arm-compute.Disk[]'
    name: 'Disk[]'
    spec.typeScript:
      - name: Disk
        fullName: Disk
        uid: '@azure/arm-compute.Disk'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/arm-compute.Disk'
    name: Disk
    spec.typeScript:
      - name: Disk
        fullName: Disk
        uid: '@azure/arm-compute.Disk'
  - uid: '@azure/arm-compute.Disk | undefined'
    name: Disk | undefined
    spec.typeScript:
      - name: Disk
        fullName: Disk
        uid: '@azure/arm-compute.Disk'
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: IterableIterator<@azure/arm-compute.Disk>
    name: Disk>
    spec.typeScript:
      - name: IterableIterator<
        fullName: IterableIterator<
      - name: Disk
        fullName: Disk
        uid: '@azure/arm-compute.Disk'
      - name: '>'
        fullName: '>'