### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-network.RouteFilter'
    name: RouteFilter
    fullName: RouteFilter
    children:
      - '@azure/arm-network.RouteFilter.etag'
      - '@azure/arm-network.RouteFilter.id'
      - '@azure/arm-network.RouteFilter.ipv6Peerings'
      - '@azure/arm-network.RouteFilter.location'
      - '@azure/arm-network.RouteFilter.name'
      - '@azure/arm-network.RouteFilter.peerings'
      - '@azure/arm-network.RouteFilter.provisioningState'
      - '@azure/arm-network.RouteFilter.rules'
      - '@azure/arm-network.RouteFilter.tags'
      - '@azure/arm-network.RouteFilter.type'
    langs:
      - typeScript
    type: interface
    summary: Recurso de filtro de rota.
    extends:
      name: '@azure/arm-network.Resource'
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilter.etag'
    name: etag
    fullName: etag
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Obtém uma cadeia de somente leitura exclusiva que é alterado sempre que o recurso for atualizado.
      **OBSERVAÇÃO: Essa propriedade não será serializada. Ele só poderá ser preenchido pelo servidor.**
    optional: true
    syntax:
      content: 'etag?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilter.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: ID do recurso.
    optional: true
    syntax:
      content: 'id?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilter.ipv6Peerings'
    name: ipv6Peerings
    fullName: ipv6Peerings
    children: []
    langs:
      - typeScript
    type: property
    summary: Uma coleção de referências para expressar emparelhamentos de ipv6 de circuito de rota.
    optional: true
    syntax:
      content: 'ipv6Peerings?: ExpressRouteCircuitPeering[]'
      return:
        type:
          - '@azure/arm-network.ExpressRouteCircuitPeering[]'
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilter.location'
    name: location
    fullName: location
    children: []
    langs:
      - typeScript
    type: property
    summary: Local do recurso.
    optional: true
    syntax:
      content: 'location?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilter.name'
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Nome do recurso.
      **OBSERVAÇÃO: Essa propriedade não será serializada. Ele só poderá ser preenchido pelo servidor.**
    optional: true
    syntax:
      content: 'name?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilter.peerings'
    name: peerings
    fullName: peerings
    children: []
    langs:
      - typeScript
    type: property
    summary: Uma coleção de referências para expressar emparelhamentos de circuito de rota.
    optional: true
    syntax:
      content: 'peerings?: ExpressRouteCircuitPeering[]'
      return:
        type:
          - '@azure/arm-network.ExpressRouteCircuitPeering[]'
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilter.provisioningState'
    name: provisioningState
    fullName: provisioningState
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      O estado de provisionamento do recurso. Os valores possíveis são: 'Atualizar', 'Excluir', 'Êxito' e 'Falha'.
      **OBSERVAÇÃO: Essa propriedade não será serializada. Ele só poderá ser preenchido pelo servidor.**
    optional: true
    syntax:
      content: 'provisioningState?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilter.rules'
    name: rules
    fullName: rules
    children: []
    langs:
      - typeScript
    type: property
    summary: Coleção de RouteFilterRules contidos em um filtro de rota.
    optional: true
    syntax:
      content: 'rules?: RouteFilterRule[]'
      return:
        type:
          - '@azure/arm-network.RouteFilterRule[]'
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilter.tags'
    name: tags
    fullName: tags
    children: []
    langs:
      - typeScript
    type: property
    summary: Marcas de recurso.
    optional: true
    syntax:
      content: 'tags?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.RouteFilter.type'
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Tipo de recurso.
      **OBSERVAÇÃO: Essa propriedade não será serializada. Ele só poderá ser preenchido pelo servidor.**
    optional: true
    syntax:
      content: 'type?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-network'
references:
  - uid: '@azure/arm-network.Resource'
    name: Resource
    spec.typeScript:
      - name: Resource
        fullName: Resource
        uid: '@azure/arm-network.Resource'
  - uid: '@azure/arm-network.ExpressRouteCircuitPeering[]'
    name: 'ExpressRouteCircuitPeering[]'
    spec.typeScript:
      - name: ExpressRouteCircuitPeering
        fullName: ExpressRouteCircuitPeering
        uid: '@azure/arm-network.ExpressRouteCircuitPeering'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/arm-network.RouteFilterRule[]'
    name: 'RouteFilterRule[]'
    spec.typeScript:
      - name: RouteFilterRule
        fullName: RouteFilterRule
        uid: '@azure/arm-network.RouteFilterRule'
      - name: '[]'
        fullName: '[]'