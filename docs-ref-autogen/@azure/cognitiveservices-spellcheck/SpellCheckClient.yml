### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-spellcheck.SpellCheckClient'
    name: SpellCheckClient
    fullName: SpellCheckClient
    children:
      - '@azure/cognitiveservices-spellcheck.SpellCheckClient.credentials'
      - '@azure/cognitiveservices-spellcheck.SpellCheckClient.endpoint'
      - '@azure/cognitiveservices-spellcheck.SpellCheckClient.sendOperationRequest'
      - '@azure/cognitiveservices-spellcheck.SpellCheckClient.sendRequest'
      - '@azure/cognitiveservices-spellcheck.SpellCheckClient.constructor'
      - '@azure/cognitiveservices-spellcheck.SpellCheckClient.spellChecker'
      - '@azure/cognitiveservices-spellcheck.SpellCheckClient.spellChecker_1'
      - '@azure/cognitiveservices-spellcheck.SpellCheckClient.spellChecker_2'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/cognitiveservices-spellcheck.SpellCheckClientContext'
    package: '@azure/cognitiveservices-spellcheck'
  - uid: '@azure/cognitiveservices-spellcheck.SpellCheckClient.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/cognitiveservices-spellcheck'
  - uid: '@azure/cognitiveservices-spellcheck.SpellCheckClient.endpoint'
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'endpoint?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-spellcheck'
  - uid: '@azure/cognitiveservices-spellcheck.SpellCheckClient.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="6fa69-101">Envie uma solicitação HTTP que é populada usando o OperationSpec fornecido.</span><span class="sxs-lookup"><span data-stu-id="6fa69-101">Send an HTTP request that is populated using the provided OperationSpec.</span></span>
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: <span data-ttu-id="6fa69-102">Os argumentos que serão preenchidos de valores de modelo da solicitação HTTP.</span><span class="sxs-lookup"><span data-stu-id="6fa69-102">The arguments that the HTTP request's templated values will be populated from.</span></span>
        - id: operationSpec
          type:
            - OperationSpec
          description: <span data-ttu-id="6fa69-103">OperationSpec serem usados para popular o httpRequest.</span><span class="sxs-lookup"><span data-stu-id="6fa69-103">The OperationSpec to use to populate the httpRequest.</span></span>
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            <span data-ttu-id="6fa69-104">O retorno de chamada a ser chamada quando a resposta é recebida.</span><span class="sxs-lookup"><span data-stu-id="6fa69-104">The callback to call when the response is received.</span></span>
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-spellcheck'
  - uid: '@azure/cognitiveservices-spellcheck.SpellCheckClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="6fa69-105">Envie httpRequest fornecido.</span><span class="sxs-lookup"><span data-stu-id="6fa69-105">Send the provided httpRequest.</span></span>
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/cognitiveservices-spellcheck'
  - uid: '@azure/cognitiveservices-spellcheck.SpellCheckClient.constructor'
    name: 'SpellCheckClient(ServiceClientCredentials, Models.SpellCheckClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="6fa69-106">Inicializa uma nova instância da classe SpellCheckClient.</span><span class="sxs-lookup"><span data-stu-id="6fa69-106">Initializes a new instance of the SpellCheckClient class.</span></span>
    syntax:
      content: 'new SpellCheckClient(credentials: ServiceClientCredentials, options?: Models.SpellCheckClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: <span data-ttu-id="6fa69-107">Credenciais de assinatura que identificam exclusivamente a assinatura de cliente.</span><span class="sxs-lookup"><span data-stu-id="6fa69-107">Subscription credentials which uniquely identify client subscription.</span></span>
        - id: options
          type:
            - Models.SpellCheckClientOptions
          description: ''
          optional: true
    package: '@azure/cognitiveservices-spellcheck'
  - uid: '@azure/cognitiveservices-spellcheck.SpellCheckClient.spellChecker'
    name: 'spellChecker(string, Models.SpellCheckClientSpellCheckerOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function spellChecker(text: string, options?: Models.SpellCheckClientSpellCheckerOptionalParams)'
      parameters:
        - id: text
          type:
            - string
          description: |-
            <span data-ttu-id="6fa69-108">A cadeia de caracteres de texto para verificar se há erros de ortografia e gramática.</span><span class="sxs-lookup"><span data-stu-id="6fa69-108">The text string to check for spelling and grammar errors.</span></span> <span data-ttu-id="6fa69-109">O comprimento combinado da cadeia de caracteres de texto, preContextText de cadeia de caracteres e cadeia de caracteres postContextText não pode exceder 10.000 caracteres.</span><span class="sxs-lookup"><span data-stu-id="6fa69-109">The combined length of the text string, preContextText string, and postContextText string may not exceed 10,000 characters.</span></span>
            <span data-ttu-id="6fa69-110">Você pode especificar esse parâmetro na cadeia de caracteres de consulta de uma solicitação GET ou no corpo de uma solicitação POST.</span><span class="sxs-lookup"><span data-stu-id="6fa69-110">You may specify this parameter in the query string of a GET request or in the body of a POST request.</span></span> <span data-ttu-id="6fa69-111">Por causa do limite de tamanho da cadeia de caracteres de consulta, você normalmente usará uma solicitação POST, a menos que você está verificando apenas cadeias de caracteres curtas.</span><span class="sxs-lookup"><span data-stu-id="6fa69-111">Because of the query string length limit, you'll typically use a POST request unless you're checking only short strings.</span></span>
        - id: options
          type:
            - Models.SpellCheckClientSpellCheckerOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SpellCheckerResponse>
    package: '@azure/cognitiveservices-spellcheck'
  - uid: '@azure/cognitiveservices-spellcheck.SpellCheckClient.spellChecker_1'
    name: 'spellChecker(string, ServiceCallback<SpellCheck>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function spellChecker(text: string, callback: ServiceCallback<SpellCheck>)'
      parameters:
        - id: text
          type:
            - string
          description: |-
            <span data-ttu-id="6fa69-112">A cadeia de caracteres de texto para verificar se há erros de ortografia e gramática.</span><span class="sxs-lookup"><span data-stu-id="6fa69-112">The text string to check for spelling and grammar errors.</span></span> <span data-ttu-id="6fa69-113">O comprimento combinado da cadeia de caracteres de texto, preContextText de cadeia de caracteres e cadeia de caracteres postContextText não pode exceder 10.000 caracteres.</span><span class="sxs-lookup"><span data-stu-id="6fa69-113">The combined length of the text string, preContextText string, and postContextText string may not exceed 10,000 characters.</span></span>
            <span data-ttu-id="6fa69-114">Você pode especificar esse parâmetro na cadeia de caracteres de consulta de uma solicitação GET ou no corpo de uma solicitação POST.</span><span class="sxs-lookup"><span data-stu-id="6fa69-114">You may specify this parameter in the query string of a GET request or in the body of a POST request.</span></span> <span data-ttu-id="6fa69-115">Por causa do limite de tamanho da cadeia de caracteres de consulta, você normalmente usará uma solicitação POST, a menos que você está verificando apenas cadeias de caracteres curtas.</span><span class="sxs-lookup"><span data-stu-id="6fa69-115">Because of the query string length limit, you'll typically use a POST request unless you're checking only short strings.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-spellcheck.SpellCheck>
          description: |
            <span data-ttu-id="6fa69-116">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="6fa69-116">The callback</span></span>
      return:
        type:
          - Promise<Models.SpellCheckerResponse>
    package: '@azure/cognitiveservices-spellcheck'
  - uid: '@azure/cognitiveservices-spellcheck.SpellCheckClient.spellChecker_2'
    name: 'spellChecker(string, SpellCheckClientSpellCheckerOptionalParams, ServiceCallback<SpellCheck>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function spellChecker(text: string, options: SpellCheckClientSpellCheckerOptionalParams, callback: ServiceCallback<SpellCheck>)'
      parameters:
        - id: text
          type:
            - string
          description: |-
            <span data-ttu-id="6fa69-117">A cadeia de caracteres de texto para verificar se há erros de ortografia e gramática.</span><span class="sxs-lookup"><span data-stu-id="6fa69-117">The text string to check for spelling and grammar errors.</span></span> <span data-ttu-id="6fa69-118">O comprimento combinado da cadeia de caracteres de texto, preContextText de cadeia de caracteres e cadeia de caracteres postContextText não pode exceder 10.000 caracteres.</span><span class="sxs-lookup"><span data-stu-id="6fa69-118">The combined length of the text string, preContextText string, and postContextText string may not exceed 10,000 characters.</span></span>
            <span data-ttu-id="6fa69-119">Você pode especificar esse parâmetro na cadeia de caracteres de consulta de uma solicitação GET ou no corpo de uma solicitação POST.</span><span class="sxs-lookup"><span data-stu-id="6fa69-119">You may specify this parameter in the query string of a GET request or in the body of a POST request.</span></span> <span data-ttu-id="6fa69-120">Por causa do limite de tamanho da cadeia de caracteres de consulta, você normalmente usará uma solicitação POST, a menos que você está verificando apenas cadeias de caracteres curtas.</span><span class="sxs-lookup"><span data-stu-id="6fa69-120">Because of the query string length limit, you'll typically use a POST request unless you're checking only short strings.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-spellcheck.SpellCheckClientSpellCheckerOptionalParams'
          description: <span data-ttu-id="6fa69-121">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="6fa69-121">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-spellcheck.SpellCheck>
          description: |
            <span data-ttu-id="6fa69-122">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="6fa69-122">The callback</span></span>
      return:
        type:
          - Promise<Models.SpellCheckerResponse>
    package: '@azure/cognitiveservices-spellcheck'
references:
  - uid: '@azure/cognitiveservices-spellcheck.SpellCheckClientContext'
    name: SpellCheckClientContext
    spec.typeScript:
      - name: SpellCheckClientContext
        fullName: SpellCheckClientContext
        uid: '@azure/cognitiveservices-spellcheck.SpellCheckClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-spellcheck.SpellCheck>
    name: SpellCheck>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SpellCheck
        fullName: SpellCheck
        uid: '@azure/cognitiveservices-spellcheck.SpellCheck'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-spellcheck.SpellCheckClientSpellCheckerOptionalParams'
    name: SpellCheckClientSpellCheckerOptionalParams
    spec.typeScript:
      - name: SpellCheckClientSpellCheckerOptionalParams
        fullName: SpellCheckClientSpellCheckerOptionalParams
        uid: '@azure/cognitiveservices-spellcheck.SpellCheckClientSpellCheckerOptionalParams'