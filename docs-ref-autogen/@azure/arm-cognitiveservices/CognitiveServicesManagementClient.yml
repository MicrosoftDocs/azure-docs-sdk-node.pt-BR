### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-cognitiveservices.CognitiveServicesManagementClient'
    name: CognitiveServicesManagementClient
    fullName: CognitiveServicesManagementClient
    children:
      - '@azure/arm-cognitiveservices.CognitiveServicesManagementClient.acceptLanguage'
      - '@azure/arm-cognitiveservices.CognitiveServicesManagementClient.accounts'
      - '@azure/arm-cognitiveservices.CognitiveServicesManagementClient.apiVersion'
      - '@azure/arm-cognitiveservices.CognitiveServicesManagementClient.beginLongRunningRequest'
      - '@azure/arm-cognitiveservices.CognitiveServicesManagementClient.checkSkuAvailability'
      - '@azure/arm-cognitiveservices.CognitiveServicesManagementClient.constructor'
      - '@azure/arm-cognitiveservices.CognitiveServicesManagementClient.credentials'
      - '@azure/arm-cognitiveservices.CognitiveServicesManagementClient.longRunningOperationRetryTimeout'
      - '@azure/arm-cognitiveservices.CognitiveServicesManagementClient.operations'
      - '@azure/arm-cognitiveservices.CognitiveServicesManagementClient.resourceSkus'
      - '@azure/arm-cognitiveservices.CognitiveServicesManagementClient.restoreLROPoller'
      - '@azure/arm-cognitiveservices.CognitiveServicesManagementClient.sendLongRunningRequest'
      - '@azure/arm-cognitiveservices.CognitiveServicesManagementClient.sendLRORequest'
      - '@azure/arm-cognitiveservices.CognitiveServicesManagementClient.sendOperationRequest'
      - '@azure/arm-cognitiveservices.CognitiveServicesManagementClient.sendRequest'
      - '@azure/arm-cognitiveservices.CognitiveServicesManagementClient.subscriptionId'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/arm-cognitiveservices.CognitiveServicesManagementClientContext'
    package: '@azure/arm-cognitiveservices'
  - uid: '@azure/arm-cognitiveservices.CognitiveServicesManagementClient.acceptLanguage'
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
    package: '@azure/arm-cognitiveservices'
  - uid: '@azure/arm-cognitiveservices.CognitiveServicesManagementClient.accounts'
    name: accounts
    fullName: accounts
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'accounts: Accounts'
      return:
        type:
          - '@azure/arm-cognitiveservices.Accounts'
    package: '@azure/arm-cognitiveservices'
  - uid: '@azure/arm-cognitiveservices.CognitiveServicesManagementClient.apiVersion'
    name: apiVersion
    fullName: apiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'apiVersion?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-cognitiveservices'
  - uid: '@azure/arm-cognitiveservices.CognitiveServicesManagementClient.beginLongRunningRequest'
    name: 'beginLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Enviar a solicitação inicial de um LRO (operação de longa duração) e obter de volta um HttpLongRunningOperationResponse que fornece métodos para sondar o LRO e verificando se o LRO for concluída.
    syntax:
      content: 'function beginLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: O objeto de solicitação
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cognitiveservices'
  - uid: '@azure/arm-cognitiveservices.CognitiveServicesManagementClient.checkSkuAvailability'
    name: checkSkuAvailability
    fullName: checkSkuAvailability
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'checkSkuAvailability: CheckSkuAvailability'
      return:
        type:
          - '@azure/arm-cognitiveservices.CheckSkuAvailability'
    package: '@azure/arm-cognitiveservices'
  - uid: '@azure/arm-cognitiveservices.CognitiveServicesManagementClient.constructor'
    name: 'CognitiveServicesManagementClient(ServiceClientCredentials, string, Models.CognitiveServicesManagementClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Inicializa uma nova instância da classe CognitiveServicesManagementClient.
    syntax:
      content: 'new CognitiveServicesManagementClient(credentials: ServiceClientCredentials, subscriptionId: string, options?: Models.CognitiveServicesManagementClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: Credenciais necessárias para o cliente se conectar ao Azure.
        - id: subscriptionId
          type:
            - string
          description: ID de assinatura do Azure.
        - id: options
          type:
            - Models.CognitiveServicesManagementClientOptions
          description: ''
          optional: true
    package: '@azure/arm-cognitiveservices'
  - uid: '@azure/arm-cognitiveservices.CognitiveServicesManagementClient.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/arm-cognitiveservices'
  - uid: '@azure/arm-cognitiveservices.CognitiveServicesManagementClient.longRunningOperationRetryTimeout'
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: O tempo limite de repetição em segundos para operações de execução longa. O valor padrão é 30.
    optional: true
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/arm-cognitiveservices'
  - uid: '@azure/arm-cognitiveservices.CognitiveServicesManagementClient.operations'
    name: operations
    fullName: operations
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'operations: Operations'
      return:
        type:
          - '@azure/arm-cognitiveservices.Operations'
    package: '@azure/arm-cognitiveservices'
  - uid: '@azure/arm-cognitiveservices.CognitiveServicesManagementClient.resourceSkus'
    name: resourceSkus
    fullName: resourceSkus
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'resourceSkus: ResourceSkus'
      return:
        type:
          - '@azure/arm-cognitiveservices.ResourceSkus'
    package: '@azure/arm-cognitiveservices'
  - uid: '@azure/arm-cognitiveservices.CognitiveServicesManagementClient.restoreLROPoller'
    name: restoreLROPoller(LROPollState)
    children: []
    type: method
    langs:
      - typeScript
    summary: Restaure um LROPoller do LROPollState fornecido. Esse método pode ser usado para recriar um LROPoller em um computador ou processo diferente.
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type:
            - LROPollState
          description: ''
      return:
        type:
          - LROPoller
    package: '@azure/arm-cognitiveservices'
  - uid: '@azure/arm-cognitiveservices.CognitiveServicesManagementClient.sendLongRunningRequest'
    name: 'sendLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Fornece um mecanismo para fazer uma solicitação que sondar e fornecerá o resultado final.
    syntax:
      content: 'function sendLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: O objeto de solicitação
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-cognitiveservices'
  - uid: '@azure/arm-cognitiveservices.CognitiveServicesManagementClient.sendLRORequest'
    name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Enviar a solicitação inicial de um LRO (operação de longa duração) e obter de volta um LROPoller que fornece métodos para sondar o LRO e verificando se o LRO for concluída.
    syntax:
      content: 'function sendLRORequest(operationArguments: OperationArguments, operationSpec: OperationSpec, options?: RequestOptionsBase)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: Os argumentos para a operação.
        - id: operationSpec
          type:
            - OperationSpec
          description: A especificação para a operação.
        - id: options
          type:
            - RequestOptionsBase
          description: Opções adicionais a serem enviados ao fazer a solicitação.
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cognitiveservices'
  - uid: '@azure/arm-cognitiveservices.CognitiveServicesManagementClient.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Envie uma solicitação HTTP que é populada usando o OperationSpec fornecido.
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: Os argumentos que serão preenchidos de valores de modelo da solicitação HTTP.
        - id: operationSpec
          type:
            - OperationSpec
          description: OperationSpec serem usados para popular o httpRequest.
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            O retorno de chamada a ser chamada quando a resposta é recebida.
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cognitiveservices'
  - uid: '@azure/arm-cognitiveservices.CognitiveServicesManagementClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: Envie httpRequest fornecido.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-cognitiveservices'
  - uid: '@azure/arm-cognitiveservices.CognitiveServicesManagementClient.subscriptionId'
    name: subscriptionId
    fullName: subscriptionId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'subscriptionId: string'
      return:
        type:
          - string
    package: '@azure/arm-cognitiveservices'
references:
  - uid: '@azure/arm-cognitiveservices.CognitiveServicesManagementClientContext'
    name: CognitiveServicesManagementClientContext
    spec.typeScript:
      - name: CognitiveServicesManagementClientContext
        fullName: CognitiveServicesManagementClientContext
        uid: '@azure/arm-cognitiveservices.CognitiveServicesManagementClientContext'
  - uid: '@azure/arm-cognitiveservices.Accounts'
    name: Accounts
    spec.typeScript:
      - name: Accounts
        fullName: Accounts
        uid: '@azure/arm-cognitiveservices.Accounts'
  - uid: '@azure/arm-cognitiveservices.CheckSkuAvailability'
    name: CheckSkuAvailability
    spec.typeScript:
      - name: CheckSkuAvailability
        fullName: CheckSkuAvailability
        uid: '@azure/arm-cognitiveservices.CheckSkuAvailability'
  - uid: '@azure/arm-cognitiveservices.Operations'
    name: Operations
    spec.typeScript:
      - name: Operations
        fullName: Operations
        uid: '@azure/arm-cognitiveservices.Operations'
  - uid: '@azure/arm-cognitiveservices.ResourceSkus'
    name: ResourceSkus
    spec.typeScript:
      - name: ResourceSkus
        fullName: ResourceSkus
        uid: '@azure/arm-cognitiveservices.ResourceSkus'