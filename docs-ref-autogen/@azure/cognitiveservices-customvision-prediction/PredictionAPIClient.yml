### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient'
    name: PredictionAPIClient
    fullName: PredictionAPIClient
    children:
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.apiKey'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage_2'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage_1'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl_2'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl_1'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore_2'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore_1'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore_2'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore_1'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage_2'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage_1'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl_2'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl_1'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore_2'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore_1'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore_2'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore_1'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.endpoint'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.constructor'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.sendOperationRequest'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.sendRequest'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientContext'
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.apiKey'
    name: apiKey
    fullName: apiKey
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'apiKey: string'
      return:
        type:
          - string
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage'
    name: 'classifyImage(string, string, msRest.HttpRequestBody, Models.PredictionAPIClientClassifyImageOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImage(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, options?: Models.PredictionAPIClientClassifyImageOptionalParams)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="bb15f-101">A id do projeto.</span><span class="sxs-lookup"><span data-stu-id="bb15f-101">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="bb15f-102">Especifica o nome do modelo a ser avaliada em relação a.</span><span class="sxs-lookup"><span data-stu-id="bb15f-102">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="bb15f-103">Dados da imagem binária.</span><span class="sxs-lookup"><span data-stu-id="bb15f-103">Binary image data.</span></span> <span data-ttu-id="bb15f-104">Formatos suportados são BMP, GIF, PNG e JPEG.</span><span class="sxs-lookup"><span data-stu-id="bb15f-104">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="bb15f-105">Dá suporte a imagens de até 4MB.</span><span class="sxs-lookup"><span data-stu-id="bb15f-105">Supports images up to 4MB.</span></span>'
        - id: options
          type:
            - Models.PredictionAPIClientClassifyImageOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ClassifyImageResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage_2'
    name: 'classifyImage(string, string, msRest.HttpRequestBody, PredictionAPIClientClassifyImageOptionalParams, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImage(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, options: PredictionAPIClientClassifyImageOptionalParams, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="bb15f-106">A id do projeto.</span><span class="sxs-lookup"><span data-stu-id="bb15f-106">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="bb15f-107">Especifica o nome do modelo a ser avaliada em relação a.</span><span class="sxs-lookup"><span data-stu-id="bb15f-107">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="bb15f-108">Dados da imagem binária.</span><span class="sxs-lookup"><span data-stu-id="bb15f-108">Binary image data.</span></span> <span data-ttu-id="bb15f-109">Formatos suportados são BMP, GIF, PNG e JPEG.</span><span class="sxs-lookup"><span data-stu-id="bb15f-109">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="bb15f-110">Dá suporte a imagens de até 4MB.</span><span class="sxs-lookup"><span data-stu-id="bb15f-110">Supports images up to 4MB.</span></span>'
        - id: options
          type:
            - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageOptionalParams'
          description: <span data-ttu-id="bb15f-111">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="bb15f-111">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="bb15f-112">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="bb15f-112">The callback</span></span>
      return:
        type:
          - Promise<Models.ClassifyImageResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage_1'
    name: 'classifyImage(string, string, msRest.HttpRequestBody, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImage(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="bb15f-113">A id do projeto.</span><span class="sxs-lookup"><span data-stu-id="bb15f-113">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="bb15f-114">Especifica o nome do modelo a ser avaliada em relação a.</span><span class="sxs-lookup"><span data-stu-id="bb15f-114">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="bb15f-115">Dados da imagem binária.</span><span class="sxs-lookup"><span data-stu-id="bb15f-115">Binary image data.</span></span> <span data-ttu-id="bb15f-116">Formatos suportados são BMP, GIF, PNG e JPEG.</span><span class="sxs-lookup"><span data-stu-id="bb15f-116">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="bb15f-117">Dá suporte a imagens de até 4MB.</span><span class="sxs-lookup"><span data-stu-id="bb15f-117">Supports images up to 4MB.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="bb15f-118">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="bb15f-118">The callback</span></span>
      return:
        type:
          - Promise<Models.ClassifyImageResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl'
    name: 'classifyImageUrl(string, string, ImageUrl, Models.PredictionAPIClientClassifyImageUrlOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageUrl(projectId: string, publishedName: string, imageUrl: ImageUrl, options?: Models.PredictionAPIClientClassifyImageUrlOptionalParams)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="bb15f-119">A id do projeto.</span><span class="sxs-lookup"><span data-stu-id="bb15f-119">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="bb15f-120">Especifica o nome do modelo a ser avaliada em relação a.</span><span class="sxs-lookup"><span data-stu-id="bb15f-120">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: <span data-ttu-id="bb15f-121">Um ImageUrl que contém a url da imagem a ser avaliada.</span><span class="sxs-lookup"><span data-stu-id="bb15f-121">An ImageUrl that contains the url of the image to be evaluated.</span></span>
        - id: options
          type:
            - Models.PredictionAPIClientClassifyImageUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ClassifyImageUrlResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl_2'
    name: 'classifyImageUrl(string, string, ImageUrl, PredictionAPIClientClassifyImageUrlOptionalParams, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageUrl(projectId: string, publishedName: string, imageUrl: ImageUrl, options: PredictionAPIClientClassifyImageUrlOptionalParams, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="bb15f-122">A id do projeto.</span><span class="sxs-lookup"><span data-stu-id="bb15f-122">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="bb15f-123">Especifica o nome do modelo a ser avaliada em relação a.</span><span class="sxs-lookup"><span data-stu-id="bb15f-123">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: <span data-ttu-id="bb15f-124">Um ImageUrl que contém a url da imagem a ser avaliada.</span><span class="sxs-lookup"><span data-stu-id="bb15f-124">An ImageUrl that contains the url of the image to be evaluated.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlOptionalParams'
          description: <span data-ttu-id="bb15f-125">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="bb15f-125">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="bb15f-126">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="bb15f-126">The callback</span></span>
      return:
        type:
          - Promise<Models.ClassifyImageUrlResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl_1'
    name: 'classifyImageUrl(string, string, ImageUrl, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageUrl(projectId: string, publishedName: string, imageUrl: ImageUrl, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="bb15f-127">A id do projeto.</span><span class="sxs-lookup"><span data-stu-id="bb15f-127">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="bb15f-128">Especifica o nome do modelo a ser avaliada em relação a.</span><span class="sxs-lookup"><span data-stu-id="bb15f-128">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: <span data-ttu-id="bb15f-129">Um ImageUrl que contém a url da imagem a ser avaliada.</span><span class="sxs-lookup"><span data-stu-id="bb15f-129">An ImageUrl that contains the url of the image to be evaluated.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="bb15f-130">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="bb15f-130">The callback</span></span>
      return:
        type:
          - Promise<Models.ClassifyImageUrlResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore'
    name: 'classifyImageUrlWithNoStore(string, string, ImageUrl, Models.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageUrlWithNoStore(projectId: string, publishedName: string, imageUrl: ImageUrl, options?: Models.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="bb15f-131">A id do projeto.</span><span class="sxs-lookup"><span data-stu-id="bb15f-131">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="bb15f-132">Especifica o nome do modelo a ser avaliada em relação a.</span><span class="sxs-lookup"><span data-stu-id="bb15f-132">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: '<span data-ttu-id="bb15f-133">{Iris.Web.Api.Models.ImageUrl} que contém a url da imagem a ser avaliada.</span><span class="sxs-lookup"><span data-stu-id="bb15f-133">An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated.</span></span>'
        - id: options
          type:
            - Models.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ClassifyImageUrlWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore_2'
    name: 'classifyImageUrlWithNoStore(string, string, ImageUrl, PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageUrlWithNoStore(projectId: string, publishedName: string, imageUrl: ImageUrl, options: PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="bb15f-134">A id do projeto.</span><span class="sxs-lookup"><span data-stu-id="bb15f-134">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="bb15f-135">Especifica o nome do modelo a ser avaliada em relação a.</span><span class="sxs-lookup"><span data-stu-id="bb15f-135">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: '<span data-ttu-id="bb15f-136">{Iris.Web.Api.Models.ImageUrl} que contém a url da imagem a ser avaliada.</span><span class="sxs-lookup"><span data-stu-id="bb15f-136">An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated.</span></span>'
        - id: options
          type:
            - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams'
          description: <span data-ttu-id="bb15f-137">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="bb15f-137">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="bb15f-138">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="bb15f-138">The callback</span></span>
      return:
        type:
          - Promise<Models.ClassifyImageUrlWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore_1'
    name: 'classifyImageUrlWithNoStore(string, string, ImageUrl, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageUrlWithNoStore(projectId: string, publishedName: string, imageUrl: ImageUrl, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="bb15f-139">A id do projeto.</span><span class="sxs-lookup"><span data-stu-id="bb15f-139">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="bb15f-140">Especifica o nome do modelo a ser avaliada em relação a.</span><span class="sxs-lookup"><span data-stu-id="bb15f-140">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: '<span data-ttu-id="bb15f-141">{Iris.Web.Api.Models.ImageUrl} que contém a url da imagem a ser avaliada.</span><span class="sxs-lookup"><span data-stu-id="bb15f-141">An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="bb15f-142">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="bb15f-142">The callback</span></span>
      return:
        type:
          - Promise<Models.ClassifyImageUrlWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore'
    name: 'classifyImageWithNoStore(string, string, msRest.HttpRequestBody, Models.PredictionAPIClientClassifyImageWithNoStoreOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageWithNoStore(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, options?: Models.PredictionAPIClientClassifyImageWithNoStoreOptionalParams)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="bb15f-143">A id do projeto.</span><span class="sxs-lookup"><span data-stu-id="bb15f-143">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="bb15f-144">Especifica o nome do modelo a ser avaliada em relação a.</span><span class="sxs-lookup"><span data-stu-id="bb15f-144">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="bb15f-145">Dados da imagem binária.</span><span class="sxs-lookup"><span data-stu-id="bb15f-145">Binary image data.</span></span> <span data-ttu-id="bb15f-146">Formatos suportados são BMP, GIF, PNG e JPEG.</span><span class="sxs-lookup"><span data-stu-id="bb15f-146">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="bb15f-147">Dá suporte a imagens até 0MB.</span><span class="sxs-lookup"><span data-stu-id="bb15f-147">Supports images up to 0MB.</span></span>'
        - id: options
          type:
            - Models.PredictionAPIClientClassifyImageWithNoStoreOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ClassifyImageWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore_2'
    name: 'classifyImageWithNoStore(string, string, msRest.HttpRequestBody, PredictionAPIClientClassifyImageWithNoStoreOptionalParams, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageWithNoStore(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, options: PredictionAPIClientClassifyImageWithNoStoreOptionalParams, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="bb15f-148">A id do projeto.</span><span class="sxs-lookup"><span data-stu-id="bb15f-148">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="bb15f-149">Especifica o nome do modelo a ser avaliada em relação a.</span><span class="sxs-lookup"><span data-stu-id="bb15f-149">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="bb15f-150">Dados da imagem binária.</span><span class="sxs-lookup"><span data-stu-id="bb15f-150">Binary image data.</span></span> <span data-ttu-id="bb15f-151">Formatos suportados são BMP, GIF, PNG e JPEG.</span><span class="sxs-lookup"><span data-stu-id="bb15f-151">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="bb15f-152">Dá suporte a imagens até 0MB.</span><span class="sxs-lookup"><span data-stu-id="bb15f-152">Supports images up to 0MB.</span></span>'
        - id: options
          type:
            - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageWithNoStoreOptionalParams'
          description: <span data-ttu-id="bb15f-153">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="bb15f-153">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="bb15f-154">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="bb15f-154">The callback</span></span>
      return:
        type:
          - Promise<Models.ClassifyImageWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore_1'
    name: 'classifyImageWithNoStore(string, string, msRest.HttpRequestBody, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageWithNoStore(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="bb15f-155">A id do projeto.</span><span class="sxs-lookup"><span data-stu-id="bb15f-155">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="bb15f-156">Especifica o nome do modelo a ser avaliada em relação a.</span><span class="sxs-lookup"><span data-stu-id="bb15f-156">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="bb15f-157">Dados da imagem binária.</span><span class="sxs-lookup"><span data-stu-id="bb15f-157">Binary image data.</span></span> <span data-ttu-id="bb15f-158">Formatos suportados são BMP, GIF, PNG e JPEG.</span><span class="sxs-lookup"><span data-stu-id="bb15f-158">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="bb15f-159">Dá suporte a imagens até 0MB.</span><span class="sxs-lookup"><span data-stu-id="bb15f-159">Supports images up to 0MB.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="bb15f-160">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="bb15f-160">The callback</span></span>
      return:
        type:
          - Promise<Models.ClassifyImageWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage'
    name: 'detectImage(string, string, msRest.HttpRequestBody, Models.PredictionAPIClientDetectImageOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImage(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, options?: Models.PredictionAPIClientDetectImageOptionalParams)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="bb15f-161">A id do projeto.</span><span class="sxs-lookup"><span data-stu-id="bb15f-161">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="bb15f-162">Especifica o nome do modelo a ser avaliada em relação a.</span><span class="sxs-lookup"><span data-stu-id="bb15f-162">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="bb15f-163">Dados da imagem binária.</span><span class="sxs-lookup"><span data-stu-id="bb15f-163">Binary image data.</span></span> <span data-ttu-id="bb15f-164">Formatos suportados são BMP, GIF, PNG e JPEG.</span><span class="sxs-lookup"><span data-stu-id="bb15f-164">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="bb15f-165">Dá suporte a imagens de até 4MB.</span><span class="sxs-lookup"><span data-stu-id="bb15f-165">Supports images up to 4MB.</span></span>'
        - id: options
          type:
            - Models.PredictionAPIClientDetectImageOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DetectImageResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage_2'
    name: 'detectImage(string, string, msRest.HttpRequestBody, PredictionAPIClientDetectImageOptionalParams, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImage(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, options: PredictionAPIClientDetectImageOptionalParams, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="bb15f-166">A id do projeto.</span><span class="sxs-lookup"><span data-stu-id="bb15f-166">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="bb15f-167">Especifica o nome do modelo a ser avaliada em relação a.</span><span class="sxs-lookup"><span data-stu-id="bb15f-167">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="bb15f-168">Dados da imagem binária.</span><span class="sxs-lookup"><span data-stu-id="bb15f-168">Binary image data.</span></span> <span data-ttu-id="bb15f-169">Formatos suportados são BMP, GIF, PNG e JPEG.</span><span class="sxs-lookup"><span data-stu-id="bb15f-169">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="bb15f-170">Dá suporte a imagens de até 4MB.</span><span class="sxs-lookup"><span data-stu-id="bb15f-170">Supports images up to 4MB.</span></span>'
        - id: options
          type:
            - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageOptionalParams'
          description: <span data-ttu-id="bb15f-171">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="bb15f-171">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="bb15f-172">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="bb15f-172">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectImageResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage_1'
    name: 'detectImage(string, string, msRest.HttpRequestBody, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImage(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="bb15f-173">A id do projeto.</span><span class="sxs-lookup"><span data-stu-id="bb15f-173">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="bb15f-174">Especifica o nome do modelo a ser avaliada em relação a.</span><span class="sxs-lookup"><span data-stu-id="bb15f-174">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="bb15f-175">Dados da imagem binária.</span><span class="sxs-lookup"><span data-stu-id="bb15f-175">Binary image data.</span></span> <span data-ttu-id="bb15f-176">Formatos suportados são BMP, GIF, PNG e JPEG.</span><span class="sxs-lookup"><span data-stu-id="bb15f-176">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="bb15f-177">Dá suporte a imagens de até 4MB.</span><span class="sxs-lookup"><span data-stu-id="bb15f-177">Supports images up to 4MB.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="bb15f-178">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="bb15f-178">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectImageResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl'
    name: 'detectImageUrl(string, string, ImageUrl, Models.PredictionAPIClientDetectImageUrlOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageUrl(projectId: string, publishedName: string, imageUrl: ImageUrl, options?: Models.PredictionAPIClientDetectImageUrlOptionalParams)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="bb15f-179">A id do projeto.</span><span class="sxs-lookup"><span data-stu-id="bb15f-179">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="bb15f-180">Especifica o nome do modelo a ser avaliada em relação a.</span><span class="sxs-lookup"><span data-stu-id="bb15f-180">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: <span data-ttu-id="bb15f-181">Um ImageUrl que contém a url da imagem a ser avaliada.</span><span class="sxs-lookup"><span data-stu-id="bb15f-181">An ImageUrl that contains the url of the image to be evaluated.</span></span>
        - id: options
          type:
            - Models.PredictionAPIClientDetectImageUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DetectImageUrlResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl_2'
    name: 'detectImageUrl(string, string, ImageUrl, PredictionAPIClientDetectImageUrlOptionalParams, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageUrl(projectId: string, publishedName: string, imageUrl: ImageUrl, options: PredictionAPIClientDetectImageUrlOptionalParams, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="bb15f-182">A id do projeto.</span><span class="sxs-lookup"><span data-stu-id="bb15f-182">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="bb15f-183">Especifica o nome do modelo a ser avaliada em relação a.</span><span class="sxs-lookup"><span data-stu-id="bb15f-183">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: <span data-ttu-id="bb15f-184">Um ImageUrl que contém a url da imagem a ser avaliada.</span><span class="sxs-lookup"><span data-stu-id="bb15f-184">An ImageUrl that contains the url of the image to be evaluated.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlOptionalParams'
          description: <span data-ttu-id="bb15f-185">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="bb15f-185">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="bb15f-186">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="bb15f-186">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectImageUrlResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl_1'
    name: 'detectImageUrl(string, string, ImageUrl, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageUrl(projectId: string, publishedName: string, imageUrl: ImageUrl, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="bb15f-187">A id do projeto.</span><span class="sxs-lookup"><span data-stu-id="bb15f-187">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="bb15f-188">Especifica o nome do modelo a ser avaliada em relação a.</span><span class="sxs-lookup"><span data-stu-id="bb15f-188">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: <span data-ttu-id="bb15f-189">Um ImageUrl que contém a url da imagem a ser avaliada.</span><span class="sxs-lookup"><span data-stu-id="bb15f-189">An ImageUrl that contains the url of the image to be evaluated.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="bb15f-190">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="bb15f-190">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectImageUrlResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore'
    name: 'detectImageUrlWithNoStore(string, string, ImageUrl, Models.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageUrlWithNoStore(projectId: string, publishedName: string, imageUrl: ImageUrl, options?: Models.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="bb15f-191">A id do projeto.</span><span class="sxs-lookup"><span data-stu-id="bb15f-191">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="bb15f-192">Especifica o nome do modelo a ser avaliada em relação a.</span><span class="sxs-lookup"><span data-stu-id="bb15f-192">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: '<span data-ttu-id="bb15f-193">{Iris.Web.Api.Models.ImageUrl} que contém a url da imagem a ser avaliada.</span><span class="sxs-lookup"><span data-stu-id="bb15f-193">An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated.</span></span>'
        - id: options
          type:
            - Models.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DetectImageUrlWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore_2'
    name: 'detectImageUrlWithNoStore(string, string, ImageUrl, PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageUrlWithNoStore(projectId: string, publishedName: string, imageUrl: ImageUrl, options: PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="bb15f-194">A id do projeto.</span><span class="sxs-lookup"><span data-stu-id="bb15f-194">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="bb15f-195">Especifica o nome do modelo a ser avaliada em relação a.</span><span class="sxs-lookup"><span data-stu-id="bb15f-195">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: '<span data-ttu-id="bb15f-196">{Iris.Web.Api.Models.ImageUrl} que contém a url da imagem a ser avaliada.</span><span class="sxs-lookup"><span data-stu-id="bb15f-196">An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated.</span></span>'
        - id: options
          type:
            - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams'
          description: <span data-ttu-id="bb15f-197">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="bb15f-197">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="bb15f-198">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="bb15f-198">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectImageUrlWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore_1'
    name: 'detectImageUrlWithNoStore(string, string, ImageUrl, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageUrlWithNoStore(projectId: string, publishedName: string, imageUrl: ImageUrl, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="bb15f-199">A id do projeto.</span><span class="sxs-lookup"><span data-stu-id="bb15f-199">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="bb15f-200">Especifica o nome do modelo a ser avaliada em relação a.</span><span class="sxs-lookup"><span data-stu-id="bb15f-200">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: '<span data-ttu-id="bb15f-201">{Iris.Web.Api.Models.ImageUrl} que contém a url da imagem a ser avaliada.</span><span class="sxs-lookup"><span data-stu-id="bb15f-201">An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="bb15f-202">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="bb15f-202">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectImageUrlWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore'
    name: 'detectImageWithNoStore(string, string, msRest.HttpRequestBody, Models.PredictionAPIClientDetectImageWithNoStoreOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageWithNoStore(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, options?: Models.PredictionAPIClientDetectImageWithNoStoreOptionalParams)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="bb15f-203">A id do projeto.</span><span class="sxs-lookup"><span data-stu-id="bb15f-203">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="bb15f-204">Especifica o nome do modelo a ser avaliada em relação a.</span><span class="sxs-lookup"><span data-stu-id="bb15f-204">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="bb15f-205">Dados da imagem binária.</span><span class="sxs-lookup"><span data-stu-id="bb15f-205">Binary image data.</span></span> <span data-ttu-id="bb15f-206">Formatos suportados são BMP, GIF, PNG e JPEG.</span><span class="sxs-lookup"><span data-stu-id="bb15f-206">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="bb15f-207">Dá suporte a imagens até 0MB.</span><span class="sxs-lookup"><span data-stu-id="bb15f-207">Supports images up to 0MB.</span></span>'
        - id: options
          type:
            - Models.PredictionAPIClientDetectImageWithNoStoreOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DetectImageWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore_2'
    name: 'detectImageWithNoStore(string, string, msRest.HttpRequestBody, PredictionAPIClientDetectImageWithNoStoreOptionalParams, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageWithNoStore(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, options: PredictionAPIClientDetectImageWithNoStoreOptionalParams, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="bb15f-208">A id do projeto.</span><span class="sxs-lookup"><span data-stu-id="bb15f-208">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="bb15f-209">Especifica o nome do modelo a ser avaliada em relação a.</span><span class="sxs-lookup"><span data-stu-id="bb15f-209">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="bb15f-210">Dados da imagem binária.</span><span class="sxs-lookup"><span data-stu-id="bb15f-210">Binary image data.</span></span> <span data-ttu-id="bb15f-211">Formatos suportados são BMP, GIF, PNG e JPEG.</span><span class="sxs-lookup"><span data-stu-id="bb15f-211">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="bb15f-212">Dá suporte a imagens até 0MB.</span><span class="sxs-lookup"><span data-stu-id="bb15f-212">Supports images up to 0MB.</span></span>'
        - id: options
          type:
            - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageWithNoStoreOptionalParams'
          description: <span data-ttu-id="bb15f-213">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="bb15f-213">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="bb15f-214">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="bb15f-214">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectImageWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore_1'
    name: 'detectImageWithNoStore(string, string, msRest.HttpRequestBody, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageWithNoStore(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="bb15f-215">A id do projeto.</span><span class="sxs-lookup"><span data-stu-id="bb15f-215">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="bb15f-216">Especifica o nome do modelo a ser avaliada em relação a.</span><span class="sxs-lookup"><span data-stu-id="bb15f-216">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="bb15f-217">Dados da imagem binária.</span><span class="sxs-lookup"><span data-stu-id="bb15f-217">Binary image data.</span></span> <span data-ttu-id="bb15f-218">Formatos suportados são BMP, GIF, PNG e JPEG.</span><span class="sxs-lookup"><span data-stu-id="bb15f-218">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="bb15f-219">Dá suporte a imagens até 0MB.</span><span class="sxs-lookup"><span data-stu-id="bb15f-219">Supports images up to 0MB.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="bb15f-220">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="bb15f-220">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectImageWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.endpoint'
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'endpoint: string'
      return:
        type:
          - string
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.constructor'
    name: 'PredictionAPIClient(string, string, msRest.ServiceClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="bb15f-221">Inicializa uma nova instância da classe PredictionAPIClient.</span><span class="sxs-lookup"><span data-stu-id="bb15f-221">Initializes a new instance of the PredictionAPIClient class.</span></span>
    syntax:
      content: 'new PredictionAPIClient(apiKey: string, endpoint: string, options?: msRest.ServiceClientOptions)'
      parameters:
        - id: apiKey
          type:
            - string
          description: <span data-ttu-id="bb15f-222">Chave de API.</span><span class="sxs-lookup"><span data-stu-id="bb15f-222">API key.</span></span>
        - id: endpoint
          type:
            - string
          description: <span data-ttu-id="bb15f-223">Pontos de extremidade de serviços Cognitivos com suporte.</span><span class="sxs-lookup"><span data-stu-id="bb15f-223">Supported Cognitive Services endpoints.</span></span>
        - id: options
          type:
            - msRest.ServiceClientOptions
          description: ''
          optional: true
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="bb15f-224">Envie uma solicitação HTTP que é populada usando o OperationSpec fornecido.</span><span class="sxs-lookup"><span data-stu-id="bb15f-224">Send an HTTP request that is populated using the provided OperationSpec.</span></span>
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: <span data-ttu-id="bb15f-225">Os argumentos que serão preenchidos de valores de modelo da solicitação HTTP.</span><span class="sxs-lookup"><span data-stu-id="bb15f-225">The arguments that the HTTP request's templated values will be populated from.</span></span>
        - id: operationSpec
          type:
            - OperationSpec
          description: <span data-ttu-id="bb15f-226">OperationSpec serem usados para popular o httpRequest.</span><span class="sxs-lookup"><span data-stu-id="bb15f-226">The OperationSpec to use to populate the httpRequest.</span></span>
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            <span data-ttu-id="bb15f-227">O retorno de chamada a ser chamada quando a resposta é recebida.</span><span class="sxs-lookup"><span data-stu-id="bb15f-227">The callback to call when the response is received.</span></span>
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="bb15f-228">Envie httpRequest fornecido.</span><span class="sxs-lookup"><span data-stu-id="bb15f-228">Send the provided httpRequest.</span></span>
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
references:
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientContext'
    name: PredictionAPIClientContext
    spec.typeScript:
      - name: PredictionAPIClientContext
        fullName: PredictionAPIClientContext
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
    name: ImagePrediction>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImagePrediction
        fullName: ImagePrediction
        uid: '@azure/cognitiveservices-customvision-prediction.ImagePrediction'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageOptionalParams'
    name: PredictionAPIClientClassifyImageOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientClassifyImageOptionalParams
        fullName: PredictionAPIClientClassifyImageOptionalParams
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageOptionalParams'
  - uid: '@azure/cognitiveservices-customvision-prediction.ImageUrl'
    name: ImageUrl
    spec.typeScript:
      - name: ImageUrl
        fullName: ImageUrl
        uid: '@azure/cognitiveservices-customvision-prediction.ImageUrl'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlOptionalParams'
    name: PredictionAPIClientClassifyImageUrlOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientClassifyImageUrlOptionalParams
        fullName: PredictionAPIClientClassifyImageUrlOptionalParams
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlOptionalParams'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams'
    name: PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams
        fullName: PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageWithNoStoreOptionalParams'
    name: PredictionAPIClientClassifyImageWithNoStoreOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientClassifyImageWithNoStoreOptionalParams
        fullName: PredictionAPIClientClassifyImageWithNoStoreOptionalParams
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageWithNoStoreOptionalParams'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageOptionalParams'
    name: PredictionAPIClientDetectImageOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientDetectImageOptionalParams
        fullName: PredictionAPIClientDetectImageOptionalParams
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageOptionalParams'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlOptionalParams'
    name: PredictionAPIClientDetectImageUrlOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientDetectImageUrlOptionalParams
        fullName: PredictionAPIClientDetectImageUrlOptionalParams
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlOptionalParams'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams'
    name: PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams
        fullName: PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageWithNoStoreOptionalParams'
    name: PredictionAPIClientDetectImageWithNoStoreOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientDetectImageWithNoStoreOptionalParams
        fullName: PredictionAPIClientDetectImageWithNoStoreOptionalParams
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageWithNoStoreOptionalParams'