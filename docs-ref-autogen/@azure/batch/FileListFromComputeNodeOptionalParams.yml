### YamlMime:UniversalReference
items:
  - uid: '@azure/batch.FileListFromComputeNodeOptionalParams'
    name: FileListFromComputeNodeOptionalParams
    fullName: FileListFromComputeNodeOptionalParams
    children:
      - '@azure/batch.FileListFromComputeNodeOptionalParams.abortSignal'
      - '@azure/batch.FileListFromComputeNodeOptionalParams.customHeaders'
      - '@azure/batch.FileListFromComputeNodeOptionalParams.fileListFromComputeNodeOptions'
      - '@azure/batch.FileListFromComputeNodeOptionalParams.onDownloadProgress'
      - '@azure/batch.FileListFromComputeNodeOptionalParams.onUploadProgress'
      - '@azure/batch.FileListFromComputeNodeOptionalParams.recursive'
      - '@azure/batch.FileListFromComputeNodeOptionalParams.timeout'
    langs:
      - typeScript
    type: interface
    summary: <span data-ttu-id="8caa0-101">Parâmetros opcionais.</span><span class="sxs-lookup"><span data-stu-id="8caa0-101">Optional Parameters.</span></span>
    extends:
      name: RequestOptionsBase
    package: '@azure/batch'
  - uid: '@azure/batch.FileListFromComputeNodeOptionalParams.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="8caa0-102">O sinal que pode ser usado para anular as solicitações.</span><span class="sxs-lookup"><span data-stu-id="8caa0-102">The signal which can be used to abort requests.</span></span>
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/batch'
  - uid: '@azure/batch.FileListFromComputeNodeOptionalParams.customHeaders'
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="8caa0-103">{object} [customHeaders] Cabeçalhos de solicitação personalizado que serão aplicados antes que a solicitação é enviada definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="8caa0-103">{object} [customHeaders] User defined custom request headers that will be applied before the request is sent.</span></span>'
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/batch'
  - uid: '@azure/batch.FileListFromComputeNodeOptionalParams.fileListFromComputeNodeOptions'
    name: fileListFromComputeNodeOptions
    fullName: fileListFromComputeNodeOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="8caa0-104">Parâmetros adicionais para a operação</span><span class="sxs-lookup"><span data-stu-id="8caa0-104">Additional parameters for the operation</span></span>
    optional: true
    syntax:
      content: 'fileListFromComputeNodeOptions?: FileListFromComputeNodeOptions'
      return:
        type:
          - '@azure/batch.FileListFromComputeNodeOptions'
    package: '@azure/batch'
  - uid: '@azure/batch.FileListFromComputeNodeOptionalParams.onDownloadProgress'
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="8caa0-105">Retorno de chamada que é acionada mediante o andamento do download.</span><span class="sxs-lookup"><span data-stu-id="8caa0-105">Callback which fires upon download progress.</span></span>
    optional: true
    syntax:
      content: 'onDownloadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/batch'
  - uid: '@azure/batch.FileListFromComputeNodeOptionalParams.onUploadProgress'
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="8caa0-106">Retorno de chamada que é acionada mediante o progresso do carregamento.</span><span class="sxs-lookup"><span data-stu-id="8caa0-106">Callback which fires upon upload progress.</span></span>
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/batch'
  - uid: '@azure/batch.FileListFromComputeNodeOptionalParams.recursive'
    name: recursive
    fullName: recursive
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="8caa0-107">Se a lista de filhos de um diretório.</span><span class="sxs-lookup"><span data-stu-id="8caa0-107">Whether to list children of a directory.</span></span>
    optional: true
    syntax:
      content: 'recursive?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/batch'
  - uid: '@azure/batch.FileListFromComputeNodeOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="8caa0-108">O número de milissegundos que uma solicitação pode levar antes encerrado automaticamente.</span><span class="sxs-lookup"><span data-stu-id="8caa0-108">The number of milliseconds a request can take before automatically being terminated.</span></span>
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/batch'
references:
  - uid: '@azure/batch.FileListFromComputeNodeOptions'
    name: FileListFromComputeNodeOptions
    spec.typeScript:
      - name: FileListFromComputeNodeOptions
        fullName: FileListFromComputeNodeOptions
        uid: '@azure/batch.FileListFromComputeNodeOptions'