### YamlMime:UniversalReference
items:
  - uid: '@azure/batch.File'
    name: File
    fullName: File
    children:
      - '@azure/batch.File.deleteFromComputeNode_2'
      - '@azure/batch.File.deleteFromComputeNode'
      - '@azure/batch.File.deleteFromComputeNode_1'
      - '@azure/batch.File.deleteFromTask_2'
      - '@azure/batch.File.deleteFromTask'
      - '@azure/batch.File.deleteFromTask_1'
      - '@azure/batch.File.constructor'
      - '@azure/batch.File.getFromComputeNode_2'
      - '@azure/batch.File.getFromComputeNode'
      - '@azure/batch.File.getFromComputeNode_1'
      - '@azure/batch.File.getFromTask_2'
      - '@azure/batch.File.getFromTask'
      - '@azure/batch.File.getFromTask_1'
      - '@azure/batch.File.getPropertiesFromComputeNode_2'
      - '@azure/batch.File.getPropertiesFromComputeNode'
      - '@azure/batch.File.getPropertiesFromComputeNode_1'
      - '@azure/batch.File.getPropertiesFromTask_2'
      - '@azure/batch.File.getPropertiesFromTask'
      - '@azure/batch.File.getPropertiesFromTask_1'
      - '@azure/batch.File.listFromComputeNode_2'
      - '@azure/batch.File.listFromComputeNode'
      - '@azure/batch.File.listFromComputeNode_1'
      - '@azure/batch.File.listFromComputeNodeNext_2'
      - '@azure/batch.File.listFromComputeNodeNext'
      - '@azure/batch.File.listFromComputeNodeNext_1'
      - '@azure/batch.File.listFromTask_2'
      - '@azure/batch.File.listFromTask'
      - '@azure/batch.File.listFromTask_1'
      - '@azure/batch.File.listFromTaskNext_2'
      - '@azure/batch.File.listFromTaskNext'
      - '@azure/batch.File.listFromTaskNext_1'
    langs:
      - typeScript
    type: class
    summary: Classe que representa um arquivo.
    package: '@azure/batch'
  - uid: '@azure/batch.File.deleteFromComputeNode_2'
    name: 'deleteFromComputeNode(string, string, string, FileDeleteFromComputeNodeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFromComputeNode(poolId: string, nodeId: string, filePath: string, options: FileDeleteFromComputeNodeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: A ID do pool que contém o nó de computação.
        - id: nodeId
          type:
            - string
          description: A ID do nó de computação do qual você deseja excluir o arquivo.
        - id: filePath
          type:
            - string
          description: O caminho para o arquivo ou diretório que você deseja excluir.
        - id: options
          type:
            - '@azure/batch.FileDeleteFromComputeNodeOptionalParams'
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.FileDeleteFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.deleteFromComputeNode'
    name: 'deleteFromComputeNode(string, string, string, Models.FileDeleteFromComputeNodeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFromComputeNode(poolId: string, nodeId: string, filePath: string, options?: Models.FileDeleteFromComputeNodeOptionalParams)'
      parameters:
        - id: poolId
          type:
            - string
          description: A ID do pool que contém o nó de computação.
        - id: nodeId
          type:
            - string
          description: A ID do nó de computação do qual você deseja excluir o arquivo.
        - id: filePath
          type:
            - string
          description: O caminho para o arquivo ou diretório que você deseja excluir.
        - id: options
          type:
            - Models.FileDeleteFromComputeNodeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileDeleteFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.deleteFromComputeNode_1'
    name: 'deleteFromComputeNode(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFromComputeNode(poolId: string, nodeId: string, filePath: string, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: A ID do pool que contém o nó de computação.
        - id: nodeId
          type:
            - string
          description: A ID do nó de computação do qual você deseja excluir o arquivo.
        - id: filePath
          type:
            - string
          description: O caminho para o arquivo ou diretório que você deseja excluir.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.FileDeleteFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.deleteFromTask_2'
    name: 'deleteFromTask(string, string, string, FileDeleteFromTaskOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFromTask(jobId: string, taskId: string, filePath: string, options: FileDeleteFromTaskOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: A ID do trabalho que contém a tarefa.
        - id: taskId
          type:
            - string
          description: A ID da tarefa cujo arquivo que deseja excluir.
        - id: filePath
          type:
            - string
          description: O caminho para o arquivo de tarefa ou o diretório que você deseja excluir.
        - id: options
          type:
            - '@azure/batch.FileDeleteFromTaskOptionalParams'
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.FileDeleteFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.deleteFromTask'
    name: 'deleteFromTask(string, string, string, Models.FileDeleteFromTaskOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFromTask(jobId: string, taskId: string, filePath: string, options?: Models.FileDeleteFromTaskOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: A ID do trabalho que contém a tarefa.
        - id: taskId
          type:
            - string
          description: A ID da tarefa cujo arquivo que deseja excluir.
        - id: filePath
          type:
            - string
          description: O caminho para o arquivo de tarefa ou o diretório que você deseja excluir.
        - id: options
          type:
            - Models.FileDeleteFromTaskOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileDeleteFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.deleteFromTask_1'
    name: 'deleteFromTask(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFromTask(jobId: string, taskId: string, filePath: string, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: A ID do trabalho que contém a tarefa.
        - id: taskId
          type:
            - string
          description: A ID da tarefa cujo arquivo que deseja excluir.
        - id: filePath
          type:
            - string
          description: O caminho para o arquivo de tarefa ou o diretório que você deseja excluir.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.FileDeleteFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.constructor'
    name: File(BatchServiceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Crie um arquivo.
    syntax:
      content: 'new File(client: BatchServiceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/batch.BatchServiceClientContext'
          description: |
            Referência para o cliente do serviço.
    package: '@azure/batch'
  - uid: '@azure/batch.File.getFromComputeNode_2'
    name: 'getFromComputeNode(string, string, string, FileGetFromComputeNodeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFromComputeNode(poolId: string, nodeId: string, filePath: string, options: FileGetFromComputeNodeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: A ID do pool que contém o nó de computação.
        - id: nodeId
          type:
            - string
          description: A ID do nó de computação que contém o arquivo.
        - id: filePath
          type:
            - string
          description: O caminho para o arquivo do nó de computação que você deseja obter o conteúdo de.
        - id: options
          type:
            - '@azure/batch.FileGetFromComputeNodeOptionalParams'
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.FileGetFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getFromComputeNode'
    name: 'getFromComputeNode(string, string, string, Models.FileGetFromComputeNodeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Retorna o conteúdo do arquivo do nó de computação especificado.
    syntax:
      content: 'function getFromComputeNode(poolId: string, nodeId: string, filePath: string, options?: Models.FileGetFromComputeNodeOptionalParams)'
      parameters:
        - id: poolId
          type:
            - string
          description: A ID do pool que contém o nó de computação.
        - id: nodeId
          type:
            - string
          description: A ID do nó de computação que contém o arquivo.
        - id: filePath
          type:
            - string
          description: O caminho para o arquivo do nó de computação que você deseja obter o conteúdo de.
        - id: options
          type:
            - Models.FileGetFromComputeNodeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileGetFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getFromComputeNode_1'
    name: 'getFromComputeNode(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFromComputeNode(poolId: string, nodeId: string, filePath: string, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: A ID do pool que contém o nó de computação.
        - id: nodeId
          type:
            - string
          description: A ID do nó de computação que contém o arquivo.
        - id: filePath
          type:
            - string
          description: O caminho para o arquivo do nó de computação que você deseja obter o conteúdo de.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.FileGetFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getFromTask_2'
    name: 'getFromTask(string, string, string, FileGetFromTaskOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFromTask(jobId: string, taskId: string, filePath: string, options: FileGetFromTaskOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: A ID do trabalho que contém a tarefa.
        - id: taskId
          type:
            - string
          description: A ID da tarefa cujo arquivo que você deseja recuperar.
        - id: filePath
          type:
            - string
          description: O caminho para o arquivo de tarefa que você deseja obter o conteúdo de.
        - id: options
          type:
            - '@azure/batch.FileGetFromTaskOptionalParams'
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.FileGetFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getFromTask'
    name: 'getFromTask(string, string, string, Models.FileGetFromTaskOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Retorna o conteúdo do arquivo de tarefa especificado.
    syntax:
      content: 'function getFromTask(jobId: string, taskId: string, filePath: string, options?: Models.FileGetFromTaskOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: A ID do trabalho que contém a tarefa.
        - id: taskId
          type:
            - string
          description: A ID da tarefa cujo arquivo que você deseja recuperar.
        - id: filePath
          type:
            - string
          description: O caminho para o arquivo de tarefa que você deseja obter o conteúdo de.
        - id: options
          type:
            - Models.FileGetFromTaskOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileGetFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getFromTask_1'
    name: 'getFromTask(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFromTask(jobId: string, taskId: string, filePath: string, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: A ID do trabalho que contém a tarefa.
        - id: taskId
          type:
            - string
          description: A ID da tarefa cujo arquivo que você deseja recuperar.
        - id: filePath
          type:
            - string
          description: O caminho para o arquivo de tarefa que você deseja obter o conteúdo de.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.FileGetFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getPropertiesFromComputeNode_2'
    name: 'getPropertiesFromComputeNode(string, string, string, FileGetPropertiesFromComputeNodeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPropertiesFromComputeNode(poolId: string, nodeId: string, filePath: string, options: FileGetPropertiesFromComputeNodeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: A ID do pool que contém o nó de computação.
        - id: nodeId
          type:
            - string
          description: A ID do nó de computação que contém o arquivo.
        - id: filePath
          type:
            - string
          description: O caminho para o arquivo do nó de computação que você deseja obter as propriedades de.
        - id: options
          type:
            - '@azure/batch.FileGetPropertiesFromComputeNodeOptionalParams'
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.FileGetPropertiesFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getPropertiesFromComputeNode'
    name: 'getPropertiesFromComputeNode(string, string, string, Models.FileGetPropertiesFromComputeNodeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Obtém as propriedades do arquivo do nó de computação especificado.
    syntax:
      content: 'function getPropertiesFromComputeNode(poolId: string, nodeId: string, filePath: string, options?: Models.FileGetPropertiesFromComputeNodeOptionalParams)'
      parameters:
        - id: poolId
          type:
            - string
          description: A ID do pool que contém o nó de computação.
        - id: nodeId
          type:
            - string
          description: A ID do nó de computação que contém o arquivo.
        - id: filePath
          type:
            - string
          description: O caminho para o arquivo do nó de computação que você deseja obter as propriedades de.
        - id: options
          type:
            - Models.FileGetPropertiesFromComputeNodeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileGetPropertiesFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getPropertiesFromComputeNode_1'
    name: 'getPropertiesFromComputeNode(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPropertiesFromComputeNode(poolId: string, nodeId: string, filePath: string, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: A ID do pool que contém o nó de computação.
        - id: nodeId
          type:
            - string
          description: A ID do nó de computação que contém o arquivo.
        - id: filePath
          type:
            - string
          description: O caminho para o arquivo do nó de computação que você deseja obter as propriedades de.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.FileGetPropertiesFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getPropertiesFromTask_2'
    name: 'getPropertiesFromTask(string, string, string, FileGetPropertiesFromTaskOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPropertiesFromTask(jobId: string, taskId: string, filePath: string, options: FileGetPropertiesFromTaskOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: A ID do trabalho que contém a tarefa.
        - id: taskId
          type:
            - string
          description: A ID da tarefa cujo arquivo que você deseja obter as propriedades de.
        - id: filePath
          type:
            - string
          description: O caminho para o arquivo de tarefa que você deseja obter as propriedades de.
        - id: options
          type:
            - '@azure/batch.FileGetPropertiesFromTaskOptionalParams'
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.FileGetPropertiesFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getPropertiesFromTask'
    name: 'getPropertiesFromTask(string, string, string, Models.FileGetPropertiesFromTaskOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Obtém as propriedades do arquivo de tarefa especificado.
    syntax:
      content: 'function getPropertiesFromTask(jobId: string, taskId: string, filePath: string, options?: Models.FileGetPropertiesFromTaskOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: A ID do trabalho que contém a tarefa.
        - id: taskId
          type:
            - string
          description: A ID da tarefa cujo arquivo que você deseja obter as propriedades de.
        - id: filePath
          type:
            - string
          description: O caminho para o arquivo de tarefa que você deseja obter as propriedades de.
        - id: options
          type:
            - Models.FileGetPropertiesFromTaskOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileGetPropertiesFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getPropertiesFromTask_1'
    name: 'getPropertiesFromTask(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPropertiesFromTask(jobId: string, taskId: string, filePath: string, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: A ID do trabalho que contém a tarefa.
        - id: taskId
          type:
            - string
          description: A ID da tarefa cujo arquivo que você deseja obter as propriedades de.
        - id: filePath
          type:
            - string
          description: O caminho para o arquivo de tarefa que você deseja obter as propriedades de.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.FileGetPropertiesFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromComputeNode_2'
    name: 'listFromComputeNode(string, string, FileListFromComputeNodeOptionalParams, ServiceCallback<NodeFileListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromComputeNode(poolId: string, nodeId: string, options: FileListFromComputeNodeOptionalParams, callback: ServiceCallback<NodeFileListResult>)'
      parameters:
        - id: poolId
          type:
            - string
          description: A ID do pool que contém o nó de computação.
        - id: nodeId
          type:
            - string
          description: A ID do nó de computação cujos arquivos que você deseja listar.
        - id: options
          type:
            - '@azure/batch.FileListFromComputeNodeOptionalParams'
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<@azure/batch.NodeFileListResult>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.FileListFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromComputeNode'
    name: 'listFromComputeNode(string, string, Models.FileListFromComputeNodeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromComputeNode(poolId: string, nodeId: string, options?: Models.FileListFromComputeNodeOptionalParams)'
      parameters:
        - id: poolId
          type:
            - string
          description: A ID do pool que contém o nó de computação.
        - id: nodeId
          type:
            - string
          description: A ID do nó de computação cujos arquivos que você deseja listar.
        - id: options
          type:
            - Models.FileListFromComputeNodeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileListFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromComputeNode_1'
    name: 'listFromComputeNode(string, string, ServiceCallback<NodeFileListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromComputeNode(poolId: string, nodeId: string, callback: ServiceCallback<NodeFileListResult>)'
      parameters:
        - id: poolId
          type:
            - string
          description: A ID do pool que contém o nó de computação.
        - id: nodeId
          type:
            - string
          description: A ID do nó de computação cujos arquivos que você deseja listar.
        - id: callback
          type:
            - ServiceCallback<@azure/batch.NodeFileListResult>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.FileListFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromComputeNodeNext_2'
    name: 'listFromComputeNodeNext(string, FileListFromComputeNodeNextOptionalParams, ServiceCallback<NodeFileListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromComputeNodeNext(nextPageLink: string, options: FileListFromComputeNodeNextOptionalParams, callback: ServiceCallback<NodeFileListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink da chamada bem-sucedida anterior à operação de lista.
        - id: options
          type:
            - '@azure/batch.FileListFromComputeNodeNextOptionalParams'
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<@azure/batch.NodeFileListResult>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.FileListFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromComputeNodeNext'
    name: 'listFromComputeNodeNext(string, Models.FileListFromComputeNodeNextOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromComputeNodeNext(nextPageLink: string, options?: Models.FileListFromComputeNodeNextOptionalParams)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink da chamada bem-sucedida anterior à operação de lista.
        - id: options
          type:
            - Models.FileListFromComputeNodeNextOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileListFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromComputeNodeNext_1'
    name: 'listFromComputeNodeNext(string, ServiceCallback<NodeFileListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromComputeNodeNext(nextPageLink: string, callback: ServiceCallback<NodeFileListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink da chamada bem-sucedida anterior à operação de lista.
        - id: callback
          type:
            - ServiceCallback<@azure/batch.NodeFileListResult>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.FileListFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromTask_2'
    name: 'listFromTask(string, string, FileListFromTaskOptionalParams, ServiceCallback<NodeFileListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromTask(jobId: string, taskId: string, options: FileListFromTaskOptionalParams, callback: ServiceCallback<NodeFileListResult>)'
      parameters:
        - id: jobId
          type:
            - string
          description: A ID do trabalho que contém a tarefa.
        - id: taskId
          type:
            - string
          description: A ID da tarefa cujos arquivos que você deseja listar.
        - id: options
          type:
            - '@azure/batch.FileListFromTaskOptionalParams'
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<@azure/batch.NodeFileListResult>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.FileListFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromTask'
    name: 'listFromTask(string, string, Models.FileListFromTaskOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromTask(jobId: string, taskId: string, options?: Models.FileListFromTaskOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: A ID do trabalho que contém a tarefa.
        - id: taskId
          type:
            - string
          description: A ID da tarefa cujos arquivos que você deseja listar.
        - id: options
          type:
            - Models.FileListFromTaskOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileListFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromTask_1'
    name: 'listFromTask(string, string, ServiceCallback<NodeFileListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromTask(jobId: string, taskId: string, callback: ServiceCallback<NodeFileListResult>)'
      parameters:
        - id: jobId
          type:
            - string
          description: A ID do trabalho que contém a tarefa.
        - id: taskId
          type:
            - string
          description: A ID da tarefa cujos arquivos que você deseja listar.
        - id: callback
          type:
            - ServiceCallback<@azure/batch.NodeFileListResult>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.FileListFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromTaskNext_2'
    name: 'listFromTaskNext(string, FileListFromTaskNextOptionalParams, ServiceCallback<NodeFileListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromTaskNext(nextPageLink: string, options: FileListFromTaskNextOptionalParams, callback: ServiceCallback<NodeFileListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink da chamada bem-sucedida anterior à operação de lista.
        - id: options
          type:
            - '@azure/batch.FileListFromTaskNextOptionalParams'
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<@azure/batch.NodeFileListResult>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.FileListFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromTaskNext'
    name: 'listFromTaskNext(string, Models.FileListFromTaskNextOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromTaskNext(nextPageLink: string, options?: Models.FileListFromTaskNextOptionalParams)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink da chamada bem-sucedida anterior à operação de lista.
        - id: options
          type:
            - Models.FileListFromTaskNextOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileListFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromTaskNext_1'
    name: 'listFromTaskNext(string, ServiceCallback<NodeFileListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromTaskNext(nextPageLink: string, callback: ServiceCallback<NodeFileListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink da chamada bem-sucedida anterior à operação de lista.
        - id: callback
          type:
            - ServiceCallback<@azure/batch.NodeFileListResult>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.FileListFromTaskResponse>
    package: '@azure/batch'
references:
  - uid: '@azure/batch.BatchServiceClientContext'
    name: BatchServiceClientContext
    spec.typeScript:
      - name: BatchServiceClientContext
        fullName: BatchServiceClientContext
        uid: '@azure/batch.BatchServiceClientContext'
  - uid: '@azure/batch.FileDeleteFromComputeNodeOptionalParams'
    name: FileDeleteFromComputeNodeOptionalParams
    spec.typeScript:
      - name: FileDeleteFromComputeNodeOptionalParams
        fullName: FileDeleteFromComputeNodeOptionalParams
        uid: '@azure/batch.FileDeleteFromComputeNodeOptionalParams'
  - uid: '@azure/batch.FileDeleteFromTaskOptionalParams'
    name: FileDeleteFromTaskOptionalParams
    spec.typeScript:
      - name: FileDeleteFromTaskOptionalParams
        fullName: FileDeleteFromTaskOptionalParams
        uid: '@azure/batch.FileDeleteFromTaskOptionalParams'
  - uid: '@azure/batch.FileGetFromComputeNodeOptionalParams'
    name: FileGetFromComputeNodeOptionalParams
    spec.typeScript:
      - name: FileGetFromComputeNodeOptionalParams
        fullName: FileGetFromComputeNodeOptionalParams
        uid: '@azure/batch.FileGetFromComputeNodeOptionalParams'
  - uid: '@azure/batch.FileGetFromTaskOptionalParams'
    name: FileGetFromTaskOptionalParams
    spec.typeScript:
      - name: FileGetFromTaskOptionalParams
        fullName: FileGetFromTaskOptionalParams
        uid: '@azure/batch.FileGetFromTaskOptionalParams'
  - uid: '@azure/batch.FileGetPropertiesFromComputeNodeOptionalParams'
    name: FileGetPropertiesFromComputeNodeOptionalParams
    spec.typeScript:
      - name: FileGetPropertiesFromComputeNodeOptionalParams
        fullName: FileGetPropertiesFromComputeNodeOptionalParams
        uid: '@azure/batch.FileGetPropertiesFromComputeNodeOptionalParams'
  - uid: '@azure/batch.FileGetPropertiesFromTaskOptionalParams'
    name: FileGetPropertiesFromTaskOptionalParams
    spec.typeScript:
      - name: FileGetPropertiesFromTaskOptionalParams
        fullName: FileGetPropertiesFromTaskOptionalParams
        uid: '@azure/batch.FileGetPropertiesFromTaskOptionalParams'
  - uid: ServiceCallback<@azure/batch.NodeFileListResult>
    name: NodeFileListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NodeFileListResult
        fullName: NodeFileListResult
        uid: '@azure/batch.NodeFileListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/batch.FileListFromComputeNodeOptionalParams'
    name: FileListFromComputeNodeOptionalParams
    spec.typeScript:
      - name: FileListFromComputeNodeOptionalParams
        fullName: FileListFromComputeNodeOptionalParams
        uid: '@azure/batch.FileListFromComputeNodeOptionalParams'
  - uid: '@azure/batch.FileListFromComputeNodeNextOptionalParams'
    name: FileListFromComputeNodeNextOptionalParams
    spec.typeScript:
      - name: FileListFromComputeNodeNextOptionalParams
        fullName: FileListFromComputeNodeNextOptionalParams
        uid: '@azure/batch.FileListFromComputeNodeNextOptionalParams'
  - uid: '@azure/batch.FileListFromTaskOptionalParams'
    name: FileListFromTaskOptionalParams
    spec.typeScript:
      - name: FileListFromTaskOptionalParams
        fullName: FileListFromTaskOptionalParams
        uid: '@azure/batch.FileListFromTaskOptionalParams'
  - uid: '@azure/batch.FileListFromTaskNextOptionalParams'
    name: FileListFromTaskNextOptionalParams
    spec.typeScript:
      - name: FileListFromTaskNextOptionalParams
        fullName: FileListFromTaskNextOptionalParams
        uid: '@azure/batch.FileListFromTaskNextOptionalParams'