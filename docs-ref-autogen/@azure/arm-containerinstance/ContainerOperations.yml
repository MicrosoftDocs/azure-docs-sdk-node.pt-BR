### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-containerinstance.ContainerOperations'
    name: ContainerOperations
    fullName: ContainerOperations
    children:
      - '@azure/arm-containerinstance.ContainerOperations.constructor'
      - '@azure/arm-containerinstance.ContainerOperations.executeCommand'
      - '@azure/arm-containerinstance.ContainerOperations.executeCommand_2'
      - '@azure/arm-containerinstance.ContainerOperations.executeCommand_1'
      - '@azure/arm-containerinstance.ContainerOperations.listLogs_2'
      - '@azure/arm-containerinstance.ContainerOperations.listLogs'
      - '@azure/arm-containerinstance.ContainerOperations.listLogs_1'
    langs:
      - typeScript
    type: class
    summary: Classe que representa um ContainerOperations.
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerOperations.constructor'
    name: ContainerOperations(ContainerInstanceManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Crie um ContainerOperations.
    syntax:
      content: 'new ContainerOperations(client: ContainerInstanceManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-containerinstance.ContainerInstanceManagementClientContext'
          description: |
            Referência para o cliente do serviço.
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerOperations.executeCommand'
    name: 'executeCommand(string, string, string, ContainerExecRequest, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Executa um comando para uma instância de contêiner específico em um grupo de recursos especificado e o grupo de contêineres.
    syntax:
      content: 'function executeCommand(resourceGroupName: string, containerGroupName: string, containerName: string, containerExecRequest: ContainerExecRequest, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos.
        - id: containerGroupName
          type:
            - string
          description: O nome do grupo de contêineres.
        - id: containerName
          type:
            - string
          description: O nome da instância do contêiner.
        - id: containerExecRequest
          type:
            - '@azure/arm-containerinstance.ContainerExecRequest'
          description: A solicitação para o comando exec.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerExecuteCommandResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerOperations.executeCommand_2'
    name: 'executeCommand(string, string, string, ContainerExecRequest, RequestOptionsBase, ServiceCallback<ContainerExecResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function executeCommand(resourceGroupName: string, containerGroupName: string, containerName: string, containerExecRequest: ContainerExecRequest, options: RequestOptionsBase, callback: ServiceCallback<ContainerExecResponse>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos.
        - id: containerGroupName
          type:
            - string
          description: O nome do grupo de contêineres.
        - id: containerName
          type:
            - string
          description: O nome da instância do contêiner.
        - id: containerExecRequest
          type:
            - '@azure/arm-containerinstance.ContainerExecRequest'
          description: A solicitação para o comando exec.
        - id: options
          type:
            - RequestOptionsBase
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerinstance.ContainerExecResponse>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.ContainerExecuteCommandResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerOperations.executeCommand_1'
    name: 'executeCommand(string, string, string, ContainerExecRequest, ServiceCallback<ContainerExecResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function executeCommand(resourceGroupName: string, containerGroupName: string, containerName: string, containerExecRequest: ContainerExecRequest, callback: ServiceCallback<ContainerExecResponse>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos.
        - id: containerGroupName
          type:
            - string
          description: O nome do grupo de contêineres.
        - id: containerName
          type:
            - string
          description: O nome da instância do contêiner.
        - id: containerExecRequest
          type:
            - '@azure/arm-containerinstance.ContainerExecRequest'
          description: A solicitação para o comando exec.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerinstance.ContainerExecResponse>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.ContainerExecuteCommandResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerOperations.listLogs_2'
    name: 'listLogs(string, string, string, ContainerListLogsOptionalParams, ServiceCallback<Logs>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listLogs(resourceGroupName: string, containerGroupName: string, containerName: string, options: ContainerListLogsOptionalParams, callback: ServiceCallback<Logs>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos.
        - id: containerGroupName
          type:
            - string
          description: O nome do grupo de contêineres.
        - id: containerName
          type:
            - string
          description: O nome da instância do contêiner.
        - id: options
          type:
            - '@azure/arm-containerinstance.ContainerListLogsOptionalParams'
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerinstance.Logs>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.ContainerListLogsResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerOperations.listLogs'
    name: 'listLogs(string, string, string, Models.ContainerListLogsOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Obter os logs para uma instância de contêiner especificado em um grupo de recursos especificado e o grupo de contêineres.
    syntax:
      content: 'function listLogs(resourceGroupName: string, containerGroupName: string, containerName: string, options?: Models.ContainerListLogsOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos.
        - id: containerGroupName
          type:
            - string
          description: O nome do grupo de contêineres.
        - id: containerName
          type:
            - string
          description: O nome da instância do contêiner.
        - id: options
          type:
            - Models.ContainerListLogsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerListLogsResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerOperations.listLogs_1'
    name: 'listLogs(string, string, string, ServiceCallback<Logs>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listLogs(resourceGroupName: string, containerGroupName: string, containerName: string, callback: ServiceCallback<Logs>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos.
        - id: containerGroupName
          type:
            - string
          description: O nome do grupo de contêineres.
        - id: containerName
          type:
            - string
          description: O nome da instância do contêiner.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerinstance.Logs>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.ContainerListLogsResponse>
    package: '@azure/arm-containerinstance'
references:
  - uid: '@azure/arm-containerinstance.ContainerInstanceManagementClientContext'
    name: ContainerInstanceManagementClientContext
    spec.typeScript:
      - name: ContainerInstanceManagementClientContext
        fullName: ContainerInstanceManagementClientContext
        uid: '@azure/arm-containerinstance.ContainerInstanceManagementClientContext'
  - uid: '@azure/arm-containerinstance.ContainerExecRequest'
    name: ContainerExecRequest
    spec.typeScript:
      - name: ContainerExecRequest
        fullName: ContainerExecRequest
        uid: '@azure/arm-containerinstance.ContainerExecRequest'
  - uid: ServiceCallback<@azure/arm-containerinstance.ContainerExecResponse>
    name: ContainerExecResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ContainerExecResponse
        fullName: ContainerExecResponse
        uid: '@azure/arm-containerinstance.ContainerExecResponse'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-containerinstance.Logs>
    name: Logs>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Logs
        fullName: Logs
        uid: '@azure/arm-containerinstance.Logs'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-containerinstance.ContainerListLogsOptionalParams'
    name: ContainerListLogsOptionalParams
    spec.typeScript:
      - name: ContainerListLogsOptionalParams
        fullName: ContainerListLogsOptionalParams
        uid: '@azure/arm-containerinstance.ContainerListLogsOptionalParams'