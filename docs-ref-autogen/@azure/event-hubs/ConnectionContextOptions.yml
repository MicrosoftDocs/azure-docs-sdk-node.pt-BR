### YamlMime:UniversalReference
items:
  - uid: '@azure/event-hubs.ConnectionContextOptions'
    name: ConnectionContextOptions
    fullName: ConnectionContextOptions
    children:
      - '@azure/event-hubs.ConnectionContextOptions.dataTransformer'
      - '@azure/event-hubs.ConnectionContextOptions.managementSessionAddress'
      - '@azure/event-hubs.ConnectionContextOptions.managementSessionAudience'
      - '@azure/event-hubs.ConnectionContextOptions.tokenProvider'
      - '@azure/event-hubs.ConnectionContextOptions.userAgent'
      - '@azure/event-hubs.ConnectionContextOptions.webSocket'
      - '@azure/event-hubs.ConnectionContextOptions.webSocketConstructorOptions'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: '@azure/event-hubs.ClientOptions'
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.ConnectionContextOptions.dataTransformer'
    name: dataTransformer
    fullName: dataTransformer
    children: []
    langs:
      - typeScript
    type: property
    summary: '{DataTransformer} [dataTransformer] O transformador de dados que será usado para codificar e decodificar as mensagens enviadas e recebidas, respectivamente. Se não for fornecido, em seguida, usaremos o DefaultDataTransformer. O transformador padrão deve lidar com a maioria dos casos. Essa opção deve ser usado apenas para cenários especializados.'
    optional: true
    syntax:
      content: 'dataTransformer?: DataTransformer'
      return:
        type:
          - DataTransformer
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.ConnectionContextOptions.managementSessionAddress'
    name: managementSessionAddress
    fullName: managementSessionAddress
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'managementSessionAddress?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.ConnectionContextOptions.managementSessionAudience'
    name: managementSessionAudience
    fullName: managementSessionAudience
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'managementSessionAudience?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.ConnectionContextOptions.tokenProvider'
    name: tokenProvider
    fullName: tokenProvider
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      {TokenProvider} [tokenProvider] - o provedor de token que fornece o token de autenticação.
      Valor padrão: SasTokenProvider.
    optional: true
    syntax:
      content: 'tokenProvider?: TokenProvider'
      return:
        type:
          - TokenProvider
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.ConnectionContextOptions.userAgent'
    name: userAgent
    fullName: userAgent
    children: []
    langs:
      - typeScript
    type: property
    summary: '{string} [userAgent] O agente do usuário que deve ser acrescentado ao usuário criado na cadeia de caracteres de agente.'
    optional: true
    syntax:
      content: 'userAgent?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.ConnectionContextOptions.webSocket'
    name: webSocket
    fullName: webSocket
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      O construtor de WebSocket usado para criar uma conexão AMQP sobre um WebSocket.
      Essa opção deve ser fornecida na cenários abaixo
      - A porta TCP 5671, que é o que é usado pela conexão AMQP para Hubs de eventos está bloqueada no seu ambiente.
      - Seu aplicativo precisa ser executado em um servidor proxy
      - Seu aplicativo precisa ser executado no navegador e você quiser fornecer sua própria escolha da implementação do Websocket em vez do WebSocket internos no navegador.
    optional: true
    syntax:
      content: 'webSocket?: WebSocketImpl'
      return:
        type:
          - WebSocketImpl
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.ConnectionContextOptions.webSocketConstructorOptions'
    name: webSocketConstructorOptions
    fullName: webSocketConstructorOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: '{webSocketConstructorOptions} - as opções a serem passados para o construtor do WebSocket'
    optional: true
    syntax:
      content: 'webSocketConstructorOptions?: any'
      return:
        type:
          - any
    package: '@azure/event-hubs'
references:
  - uid: '@azure/event-hubs.ClientOptions'
    name: ClientOptions
    spec.typeScript:
      - name: ClientOptions
        fullName: ClientOptions
        uid: '@azure/event-hubs.ClientOptions'