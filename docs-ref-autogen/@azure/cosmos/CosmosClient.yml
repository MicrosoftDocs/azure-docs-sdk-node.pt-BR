### YamlMime:UniversalReference
ms.openlocfilehash: c5a170bce18d0f22c09bb0d14887d042029a3023
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52089541"
items:
- uid: '@azure/cosmos.CosmosClient'
  name: CosmosClient
  fullName: CosmosClient
  children:
  - '@azure/cosmos.CosmosClient.constructor'
  - '@azure/cosmos.CosmosClient.database'
  - '@azure/cosmos.CosmosClient.databases'
  - '@azure/cosmos.CosmosClient.getDatabaseAccount'
  - '@azure/cosmos.CosmosClient.getReadEndpoint'
  - '@azure/cosmos.CosmosClient.getWriteEndpoint'
  - '@azure/cosmos.CosmosClient.offer'
  - '@azure/cosmos.CosmosClient.offers'
  langs:
  - typeScript
  type: class
  summary: >-
    Fornece uma representação lógica do lado do cliente da conta de banco de dados do Azure Cosmos DB.

    Esse cliente é usado para configurar e executar solicitações no serviço de banco de dados do Azure Cosmos DB.
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.constructor'
  name: CosmosClient(CosmosClientOptions)
  children: []
  type: constructor
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'new CosmosClient(options: CosmosClientOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.CosmosClientOptions'
      description: ''
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.database'
  name: database(string)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Usado para ler, atualizar, ou a exclusão de um banco de dados existente por id ou acessar os contêineres pertencentes ao banco de dados.

    Isso não faz uma rede chamada. Use `.read` para obter informações sobre o banco de dados depois de obter o <xref:Database> objeto.
  syntax:
    content: 'function database(id: string)'
    parameters:
    - id: id
      type:
      - string
      description: A id do banco de dados.
    return:
      type:
      - '@azure/cosmos.Database'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.databases'
  name: databases
  fullName: databases
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    Usado para criar novos bancos de dados, ou consultar/leitura de todos os bancos de dados.

    Use `.database(id)` para ler, substituir ou excluir um banco de dados existente específico por id.
  syntax:
    content: 'databases: Databases'
    return:
      type:
      - '@azure/cosmos.Databases'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.getDatabaseAccount'
  name: getDatabaseAccount(RequestOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obter informações sobre o atual <xref:DatabaseAccount> (incluindo quais regiões têm suporte, etc.)
  syntax:
    content: 'function getDatabaseAccount(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: ''
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.CosmosResponse<@azure/cosmos.DatabaseAccount, @azure/cosmos.CosmosClient>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.getReadEndpoint'
  name: getReadEndpoint()
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Obtém o atualmente utilizado ler ponto de extremidade. É útil para fins de solução de problemas.

    A url pode conter um sufixo de região (por exemplo, "-eastus") se estamos usando pontos de extremidade específicos de local.
  syntax:
    content: function getReadEndpoint()
    parameters: []
    return:
      type:
      - Promise<string>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.getWriteEndpoint'
  name: getWriteEndpoint()
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Obtém a url de ponto de extremidade de gravação usada no momento. É útil para fins de solução de problemas.

    A url pode conter um sufixo de região (por exemplo, "-eastus") se estamos usando pontos de extremidade específicos de local.
  syntax:
    content: function getWriteEndpoint()
    parameters: []
    return:
      type:
      - Promise<string>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.offer'
  name: offer(string)
  children: []
  type: method
  langs:
  - typeScript
  summary: Usado para ler ou atualizar uma oferta existente por id.
  syntax:
    content: 'function offer(id: string)'
    parameters:
    - id: id
      type:
      - string
      description: >
        A id da oferta.
    return:
      type:
      - '@azure/cosmos.Offer'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.offers'
  name: offers
  fullName: offers
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    Usado para consultar e ler todas as ofertas.

    Use `.offer(id)` para ler ou substituir ofertas existentes.
  syntax:
    content: 'offers: Offers'
    return:
      type:
      - '@azure/cosmos.Offers'
  package: '@azure/cosmos'
references:
- uid: '@azure/cosmos.CosmosClientOptions'
  name: CosmosClientOptions
  spec.typeScript:
  - name: CosmosClientOptions
    fullName: CosmosClientOptions
    uid: '@azure/cosmos.CosmosClientOptions'
- uid: '@azure/cosmos.Databases'
  name: Databases
  spec.typeScript:
  - name: Databases
    fullName: Databases
    uid: '@azure/cosmos.Databases'
- uid: '@azure/cosmos.Offers'
  name: Offers
  spec.typeScript:
  - name: Offers
    fullName: Offers
    uid: '@azure/cosmos.Offers'
- uid: '@azure/cosmos.Database'
  name: Database
  spec.typeScript:
  - name: Database
    fullName: Database
    uid: '@azure/cosmos.Database'
- uid: '@azure/cosmos.RequestOptions'
  name: RequestOptions
  spec.typeScript:
  - name: RequestOptions
    fullName: RequestOptions
    uid: '@azure/cosmos.RequestOptions'
- uid: Promise<@azure/cosmos.CosmosResponse<@azure/cosmos.DatabaseAccount, @azure/cosmos.CosmosClient>>
  name: CosmosClient>>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: CosmosResponse
    fullName: CosmosResponse
    uid: '@azure/cosmos.CosmosResponse'
  - name: <
    fullName: <
  - name: DatabaseAccount
    fullName: DatabaseAccount
    uid: '@azure/cosmos.DatabaseAccount'
  - name: ', '
    fullName: ', '
  - name: CosmosClient
    fullName: CosmosClient
    uid: '@azure/cosmos.CosmosClient'
  - name: '>>'
    fullName: '>>'
- uid: '@azure/cosmos.Offer'
  name: Offer
  spec.typeScript:
  - name: Offer
    fullName: Offer
    uid: '@azure/cosmos.Offer'
