### YamlMime:UniversalReference
ms.openlocfilehash: 4beb3e4403ee3d2adac43843b0b8f717f13d012a
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 08/12/2018
ms.locfileid: "40048318"
items:
- uid: '@azure/cosmos.Database'
  name: Database
  fullName: Database
  children:
  - '@azure/cosmos.Database.client'
  - '@azure/cosmos.Database.container'
  - '@azure/cosmos.Database.containers'
  - '@azure/cosmos.Database.constructor'
  - '@azure/cosmos.Database.delete'
  - '@azure/cosmos.Database.id'
  - '@azure/cosmos.Database.read'
  - '@azure/cosmos.Database.url'
  - '@azure/cosmos.Database.user'
  - '@azure/cosmos.Database.users'
  langs:
  - typeScript
  type: class
  summary: Operações de leitura ou exclusão de um banco de dados existente.
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.client'
  name: client
  fullName: client
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'client: CosmosClient'
    return:
      type:
      - '@azure/cosmos.CosmosClient'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.container'
  name: container
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Usado para ler, substituir ou excluir uma versão específica, existente <xref:Database> por id. Use `.containers` criando novos contêineres ou consultar/leitura de todos os contêineres.
  syntax:
    content: 'function container(id: string)'
    parameters:
    - id: id
      type:
      - string
      description: ''
    return:
      type:
      - '@azure/cosmos.Container'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.containers'
  name: containers
  fullName: containers
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    Usado para criar novos contêineres ou consultar/leitura de todos os contêineres.

    Use `.container(id)` para ler, substituir ou excluir uma versão específica, existente <xref:Database> por id.
  syntax:
    content: 'containers: Containers'
    return:
      type:
      - '@azure/cosmos.Containers'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.constructor'
  name: Database
  children: []
  type: constructor
  langs:
  - typeScript
  summary: >
    Retorna um novo <xref:Database> instância.

    Observação: a intenção é obter esse objeto da <xref:CosmosClient> por meio de `client.databsae(id)`, não para instanciá-lo por conta própria.
  syntax:
    content: 'new Database(client: CosmosClient, id: string)'
    parameters:
    - id: client
      type:
      - '@azure/cosmos.CosmosClient'
      description: ''
    - id: id
      type:
      - string
      description: ''
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.delete'
  name: delete
  children: []
  type: method
  langs:
  - typeScript
  summary: Exclua banco de dados especificado.
  syntax:
    content: 'function delete(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: ''
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.DatabaseResponse>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.id'
  name: id
  fullName: id
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'id: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.read'
  name: read
  children: []
  type: method
  langs:
  - typeScript
  summary: Ler a definição de banco de dados especificado.
  syntax:
    content: 'function read(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: ''
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.DatabaseResponse>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.url'
  name: url
  fullName: url
  children: []
  langs:
  - typeScript
  type: property
  summary: Retorna uma URL de referência para o recurso. Usado para vincular nas permissões.
  syntax:
    content: 'url: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.user'
  name: user
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Usado para ler, substituir ou excluir uma versão específica, existente <xref:User> por id. Use `.users` para criar novos usuários ou consultar/leitura de todos os usuários.
  syntax:
    content: 'function user(id: string)'
    parameters:
    - id: id
      type:
      - string
      description: ''
    return:
      type:
      - '@azure/cosmos.User'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.users'
  name: users
  fullName: users
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    Usado para criar novos usuários ou consultar/leitura de todos os usuários.

    Use `.user(id)` para ler, substituir ou excluir uma versão específica, existente <xref:User> por id.
  syntax:
    content: 'users: Users'
    return:
      type:
      - '@azure/cosmos.Users'
  package: '@azure/cosmos'
references:
- uid: '@azure/cosmos.CosmosClient'
  spec.typeScript:
  - name: CosmosClient
    fullName: CosmosClient
    uid: '@azure/cosmos.CosmosClient'
- uid: '@azure/cosmos.Containers'
  spec.typeScript:
  - name: Containers
    fullName: Containers
    uid: '@azure/cosmos.Containers'
- uid: '@azure/cosmos.Users'
  spec.typeScript:
  - name: Users
    fullName: Users
    uid: '@azure/cosmos.Users'
- uid: '@azure/cosmos.Container'
  spec.typeScript:
  - name: Container
    fullName: Container
    uid: '@azure/cosmos.Container'
- uid: '@azure/cosmos.RequestOptions'
  spec.typeScript:
  - name: RequestOptions
    fullName: RequestOptions
    uid: '@azure/cosmos.RequestOptions'
- uid: Promise<@azure/cosmos.DatabaseResponse>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DatabaseResponse
    fullName: DatabaseResponse
    uid: '@azure/cosmos.DatabaseResponse'
  - name: '>'
    fullName: '>'
- uid: '@azure/cosmos.User'
  spec.typeScript:
  - name: User
    fullName: User
    uid: '@azure/cosmos.User'
