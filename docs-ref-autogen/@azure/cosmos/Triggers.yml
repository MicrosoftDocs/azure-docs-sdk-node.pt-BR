### YamlMime:UniversalReference
ms.openlocfilehash: a4acdfc30c1484d6a01be24da8718c074a27c7e2
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52029280"
items:
- uid: '@azure/cosmos.Triggers'
  name: Triggers
  fullName: Triggers
  children:
  - '@azure/cosmos.Triggers.container'
  - '@azure/cosmos.Triggers.create'
  - '@azure/cosmos.Triggers.query'
  - '@azure/cosmos.Triggers.query_1'
  - '@azure/cosmos.Triggers.readAll'
  - '@azure/cosmos.Triggers.upsert'
  langs:
  - typeScript
  type: class
  summary: >
    <span data-ttu-id="c2c90-101">Operações para criar, upsert, consultar e ler todos os gatilhos.</span><span class="sxs-lookup"><span data-stu-id="c2c90-101">Operations to create, upsert, query, and read all triggers.</span></span>

    <span data-ttu-id="c2c90-102">Use `container.triggers` para ler, substituir ou excluir um <xref:Trigger>.</span><span class="sxs-lookup"><span data-stu-id="c2c90-102">Use `container.triggers` to read, replace, or delete a <xref:Trigger>.</span></span>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Triggers.container'
  name: container
  fullName: container
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'container: Container'
    return:
      type:
      - '@azure/cosmos.Container'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Triggers.create'
  name: create(TriggerDefinition, RequestOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="c2c90-103">Crie um gatilho.</span><span class="sxs-lookup"><span data-stu-id="c2c90-103">Create a trigger.</span></span>

    <span data-ttu-id="c2c90-104">O Azure Cosmos DB dá suporte a pré e pós-gatilhos definidos em JavaScript a ser executado em cria, atualiza e exclui.</span><span class="sxs-lookup"><span data-stu-id="c2c90-104">Azure Cosmos DB supports pre and post triggers defined in JavaScript to be executed on creates, updates and deletes.</span></span>


    <span data-ttu-id="c2c90-105">Para obter mais detalhes, consulte a documentação da API de JavaScript do lado do servidor.</span><span class="sxs-lookup"><span data-stu-id="c2c90-105">For additional details, refer to the server-side JavaScript API documentation.</span></span>
  syntax:
    content: 'function create(body: TriggerDefinition, options?: RequestOptions)'
    parameters:
    - id: body
      type:
      - '@azure/cosmos.TriggerDefinition'
      description: ''
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: "\n"
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.TriggerResponse>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Triggers.query'
  name: query(SqlQuerySpec, FeedOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c2c90-106">Todos os gatilhos de consulta.</span><span class="sxs-lookup"><span data-stu-id="c2c90-106">Query all Triggers.</span></span>
  syntax:
    content: 'function query(query: SqlQuerySpec, options?: FeedOptions)'
    parameters:
    - id: query
      type:
      - '@azure/cosmos.SqlQuerySpec'
      description: <span data-ttu-id="c2c90-107">Configuração de consulta para a operação.</span><span class="sxs-lookup"><span data-stu-id="c2c90-107">Query configuration for the operation.</span></span> <span data-ttu-id="c2c90-108">Consulte <xref:SqlQuerySpec> para obter mais informações sobre como configurar uma consulta.</span><span class="sxs-lookup"><span data-stu-id="c2c90-108">See <xref:SqlQuerySpec> for more info on how to configure a query.</span></span>
    - id: options
      type:
      - '@azure/cosmos.FeedOptions'
      description: "\n"
      optional: true
    return:
      type:
      - '@azure/cosmos.QueryIterator<any>'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Triggers.query_1'
  name: query(SqlQuerySpec, FeedOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c2c90-109">Todos os gatilhos de consulta.</span><span class="sxs-lookup"><span data-stu-id="c2c90-109">Query all Triggers.</span></span>
  syntax:
    content: 'function query<T>(query: SqlQuerySpec, options?: FeedOptions)'
    parameters:
    - id: query
      type:
      - '@azure/cosmos.SqlQuerySpec'
      description: <span data-ttu-id="c2c90-110">Configuração de consulta para a operação.</span><span class="sxs-lookup"><span data-stu-id="c2c90-110">Query configuration for the operation.</span></span> <span data-ttu-id="c2c90-111">Consulte <xref:SqlQuerySpec> para obter mais informações sobre como configurar uma consulta.</span><span class="sxs-lookup"><span data-stu-id="c2c90-111">See <xref:SqlQuerySpec> for more info on how to configure a query.</span></span>
    - id: options
      type:
      - '@azure/cosmos.FeedOptions'
      description: "\n"
      optional: true
    return:
      type:
      - '@azure/cosmos.QueryIterator<T>'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Triggers.readAll'
  name: readAll(FeedOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c2c90-112">Ler todos os gatilhos.</span><span class="sxs-lookup"><span data-stu-id="c2c90-112">Read all Triggers.</span></span>
  syntax:
    content: 'function readAll(options?: FeedOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.FeedOptions'
      description: ''
      optional: true
    return:
      type:
      - '@azure/cosmos.QueryIterator<@azure/cosmos.TriggerDefinition & @azure/cosmos.Resource>'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Triggers.upsert'
  name: upsert(TriggerDefinition, RequestOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="c2c90-113">Um gatilho de Upsert.</span><span class="sxs-lookup"><span data-stu-id="c2c90-113">Upsert a trigger.</span></span>

    <span data-ttu-id="c2c90-114">O Azure Cosmos DB dá suporte a pré e pós-gatilhos definidos em JavaScript a ser executado em cria, atualiza e exclui.</span><span class="sxs-lookup"><span data-stu-id="c2c90-114">Azure Cosmos DB supports pre and post triggers defined in JavaScript to be executed on creates, updates and deletes.</span></span>


    <span data-ttu-id="c2c90-115">Para obter mais detalhes, consulte a documentação da API de JavaScript do lado do servidor.</span><span class="sxs-lookup"><span data-stu-id="c2c90-115">For additional details, refer to the server-side JavaScript API documentation.</span></span>
  syntax:
    content: 'function upsert(body: TriggerDefinition, options?: RequestOptions)'
    parameters:
    - id: body
      type:
      - '@azure/cosmos.TriggerDefinition'
      description: ''
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: "\n"
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.TriggerResponse>
  package: '@azure/cosmos'
references:
- uid: '@azure/cosmos.Container'
  name: Container
  spec.typeScript:
  - name: Container
    fullName: Container
    uid: '@azure/cosmos.Container'
- uid: '@azure/cosmos.TriggerDefinition'
  name: TriggerDefinition
  spec.typeScript:
  - name: TriggerDefinition
    fullName: TriggerDefinition
    uid: '@azure/cosmos.TriggerDefinition'
- uid: '@azure/cosmos.RequestOptions'
  name: RequestOptions
  spec.typeScript:
  - name: RequestOptions
    fullName: RequestOptions
    uid: '@azure/cosmos.RequestOptions'
- uid: Promise<@azure/cosmos.TriggerResponse>
  name: TriggerResponse>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: TriggerResponse
    fullName: TriggerResponse
    uid: '@azure/cosmos.TriggerResponse'
  - name: '>'
    fullName: '>'
- uid: '@azure/cosmos.SqlQuerySpec'
  name: SqlQuerySpec
  spec.typeScript:
  - name: SqlQuerySpec
    fullName: SqlQuerySpec
    uid: '@azure/cosmos.SqlQuerySpec'
- uid: '@azure/cosmos.FeedOptions'
  name: FeedOptions
  spec.typeScript:
  - name: FeedOptions
    fullName: FeedOptions
    uid: '@azure/cosmos.FeedOptions'
- uid: '@azure/cosmos.QueryIterator<any>'
  name: QueryIterator<any>
  spec.typeScript:
  - name: QueryIterator
    fullName: QueryIterator
    uid: '@azure/cosmos.QueryIterator'
  - name: <any>
    fullName: <any>
- uid: '@azure/cosmos.QueryIterator<T>'
  name: QueryIterator<T>
  spec.typeScript:
  - name: QueryIterator
    fullName: QueryIterator
    uid: '@azure/cosmos.QueryIterator'
  - name: <T>
    fullName: <T>
- uid: '@azure/cosmos.QueryIterator<@azure/cosmos.TriggerDefinition & @azure/cosmos.Resource>'
  name: Resource>
  spec.typeScript:
  - name: QueryIterator
    fullName: QueryIterator
    uid: '@azure/cosmos.QueryIterator'
  - name: <
    fullName: <
  - name: TriggerDefinition
    fullName: TriggerDefinition
    uid: '@azure/cosmos.TriggerDefinition'
  - name: " & "
    fullName: " & "
  - name: Resource
    fullName: Resource
    uid: '@azure/cosmos.Resource'
  - name: '>'
    fullName: '>'
