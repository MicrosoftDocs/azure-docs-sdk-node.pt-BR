### YamlMime:UniversalReference
ms.openlocfilehash: e9c942e1c15d221260137950bb93d6df02a16008
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 08/12/2018
ms.locfileid: "40048192"
items:
- uid: '@azure/cosmos.Databases'
  name: Databases
  fullName: Databases
  children:
  - '@azure/cosmos.Databases.create'
  - '@azure/cosmos.Databases.createIfNotExists'
  - '@azure/cosmos.Databases.constructor'
  - '@azure/cosmos.Databases.query'
  - '@azure/cosmos.Databases.readAll'
  langs:
  - typeScript
  type: class
  summary: <span data-ttu-id="2c021-101">Operações de criação de novos bancos de dados e todos os bancos de dados de leitura/consulta</span><span class="sxs-lookup"><span data-stu-id="2c021-101">Operations for creating new databases, and reading/querying all databases</span></span>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Databases.create'
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="2c021-102">Envie uma solicitação para a criação de um banco de dados.</span><span class="sxs-lookup"><span data-stu-id="2c021-102">Send a request for creating a database.</span></span>

    <span data-ttu-id="2c021-103">Um banco de dados gerencia os usuários, permissões e um conjunto de contêineres.</span><span class="sxs-lookup"><span data-stu-id="2c021-103">A database manages users, permissions and a set of containers.</span></span>

    <span data-ttu-id="2c021-104">Cada conta de banco de dados do Azure Cosmos DB é capaz de dar suporte a vários independentes bancos de dados, com o banco de dados que está sendo o contêiner lógico para dados nomeados.</span><span class="sxs-lookup"><span data-stu-id="2c021-104">Each Azure Cosmos DB Database Account is able to support multiple independent named databases, with the database being the logical container for data.</span></span>


    <span data-ttu-id="2c021-105">Cada banco de dados consiste em um ou mais contêineres, cada um dos quais por sua vez contêm um ou mais documentos.</span><span class="sxs-lookup"><span data-stu-id="2c021-105">Each Database consists of one or more containers, each of which in turn contain one or more documents.</span></span> <span data-ttu-id="2c021-106">Como os bancos de dados são um um recurso administrativo, a chave mestra de serviço será necessária para acessar e concluir com êxito qualquer ação usando as APIs do usuário.</span><span class="sxs-lookup"><span data-stu-id="2c021-106">Since databases are an an administrative resource, the Service Master Key will be required in order to access and successfully complete any action using the User APIs.</span></span>
  syntax:
    content: 'function create(body: DatabaseDefinition, options?: RequestOptions)'
    parameters:
    - id: body
      type:
      - '@azure/cosmos.DatabaseDefinition'
      description: <span data-ttu-id="2c021-107">O <xref:DatabaseDefinition> que representa o <xref:Database> a ser criado.</span><span class="sxs-lookup"><span data-stu-id="2c021-107">The <xref:DatabaseDefinition> that represents the <xref:Database> to be created.</span></span>
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        <span data-ttu-id="2c021-108">Use para definir opções como tamanho da página de resposta, tokens de continuação, etc.</span><span class="sxs-lookup"><span data-stu-id="2c021-108">Use to set options like response page size, continuation tokens, etc.</span></span>
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.DatabaseResponse>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Databases.createIfNotExists'
  name: createIfNotExists
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="2c021-109">Verifique se existe um banco de dados, e se ele não abrir, criá-lo.</span><span class="sxs-lookup"><span data-stu-id="2c021-109">Check if a database exists, and if it doesn't, create it.</span></span>

    <span data-ttu-id="2c021-110">Isso fará com que uma operação de leitura com base na id no `body`, em seguida, se ele não for encontrado, uma operação de criação.</span><span class="sxs-lookup"><span data-stu-id="2c021-110">This will make a read operation based on the id in the `body`, then if it is not found, a create operation.</span></span>

    <span data-ttu-id="2c021-111">Um banco de dados gerencia os usuários, permissões e um conjunto de contêineres.</span><span class="sxs-lookup"><span data-stu-id="2c021-111">A database manages users, permissions and a set of containers.</span></span>

    <span data-ttu-id="2c021-112">Cada conta de banco de dados do Azure Cosmos DB é capaz de dar suporte a vários independentes bancos de dados, com o banco de dados que está sendo o contêiner lógico para dados nomeados.</span><span class="sxs-lookup"><span data-stu-id="2c021-112">Each Azure Cosmos DB Database Account is able to support multiple independent named databases, with the database being the logical container for data.</span></span>


    <span data-ttu-id="2c021-113">Cada banco de dados consiste em um ou mais contêineres, cada um dos quais por sua vez contêm um ou mais documentos.</span><span class="sxs-lookup"><span data-stu-id="2c021-113">Each Database consists of one or more containers, each of which in turn contain one or more documents.</span></span> <span data-ttu-id="2c021-114">Como os bancos de dados são um um recurso administrativo, a chave mestra de serviço será necessária para acessar e concluir com êxito qualquer ação usando as APIs do usuário.</span><span class="sxs-lookup"><span data-stu-id="2c021-114">Since databases are an an administrative resource, the Service Master Key will be required in order to access and successfully complete any action using the User APIs.</span></span>
  syntax:
    content: 'function createIfNotExists(body: DatabaseDefinition, options?: RequestOptions)'
    parameters:
    - id: body
      type:
      - '@azure/cosmos.DatabaseDefinition'
      description: <span data-ttu-id="2c021-115">O <xref:DatabaseDefinition> que representa o <xref:Database> a ser criado.</span><span class="sxs-lookup"><span data-stu-id="2c021-115">The <xref:DatabaseDefinition> that represents the <xref:Database> to be created.</span></span>
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: "\n"
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.DatabaseResponse>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Databases.constructor'
  name: Databases
  children: []
  type: constructor
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'new Databases(client: CosmosClient)'
    parameters:
    - id: client
      type:
      - '@azure/cosmos.CosmosClient'
      description: ''
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Databases.query'
  name: query
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c021-116">Consulta todos os bancos de dados.</span><span class="sxs-lookup"><span data-stu-id="2c021-116">Queries all databases.</span></span>
  syntax:
    content: 'function query(query: string | SqlQuerySpec, options?: FeedOptions)'
    parameters:
    - id: query
      type:
      - string | @azure/cosmos.SqlQuerySpec
      description: <span data-ttu-id="2c021-117">Configuração de consulta para a operação.</span><span class="sxs-lookup"><span data-stu-id="2c021-117">Query configuration for the operation.</span></span> <span data-ttu-id="2c021-118">Consulte <xref:SqlQuerySpec> para obter mais informações sobre como configurar uma consulta.</span><span class="sxs-lookup"><span data-stu-id="2c021-118">See <xref:SqlQuerySpec> for more info on how to configure a query.</span></span>
    - id: options
      type:
      - '@azure/cosmos.FeedOptions'
      description: <span data-ttu-id="2c021-119">Use para definir opções como tamanho da página de resposta, tokens de continuação, etc.</span><span class="sxs-lookup"><span data-stu-id="2c021-119">Use to set options like response page size, continuation tokens, etc.</span></span>
      optional: true
    return:
      type:
      - '@azure/cosmos.QueryIterator<@azure/cosmos.DatabaseDefinition>'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Databases.readAll'
  name: readAll
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c021-120">Lê todos os bancos de dados.</span><span class="sxs-lookup"><span data-stu-id="2c021-120">Reads all databases.</span></span>
  syntax:
    content: 'function readAll(options?: FeedOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.FeedOptions'
      description: <span data-ttu-id="2c021-121">Use para definir opções como tamanho da página de resposta, tokens de continuação, etc.</span><span class="sxs-lookup"><span data-stu-id="2c021-121">Use to set options like response page size, continuation tokens, etc.</span></span>
      optional: true
    return:
      type:
      - '@azure/cosmos.QueryIterator<@azure/cosmos.DatabaseDefinition>'
  package: '@azure/cosmos'
references:
- uid: '@azure/cosmos.CosmosClient'
  spec.typeScript:
  - name: CosmosClient
    fullName: CosmosClient
    uid: '@azure/cosmos.CosmosClient'
- uid: '@azure/cosmos.DatabaseDefinition'
  spec.typeScript:
  - name: DatabaseDefinition
    fullName: DatabaseDefinition
    uid: '@azure/cosmos.DatabaseDefinition'
- uid: '@azure/cosmos.RequestOptions'
  spec.typeScript:
  - name: RequestOptions
    fullName: RequestOptions
    uid: '@azure/cosmos.RequestOptions'
- uid: Promise<@azure/cosmos.DatabaseResponse>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DatabaseResponse
    fullName: DatabaseResponse
    uid: '@azure/cosmos.DatabaseResponse'
  - name: '>'
    fullName: '>'
- uid: string | @azure/cosmos.SqlQuerySpec
  spec.typeScript:
  - name: 'string | '
    fullName: 'string | '
  - name: SqlQuerySpec
    fullName: SqlQuerySpec
    uid: '@azure/cosmos.SqlQuerySpec'
- uid: '@azure/cosmos.FeedOptions'
  spec.typeScript:
  - name: FeedOptions
    fullName: FeedOptions
    uid: '@azure/cosmos.FeedOptions'
- uid: '@azure/cosmos.QueryIterator<@azure/cosmos.DatabaseDefinition>'
  spec.typeScript:
  - name: QueryIterator
    fullName: QueryIterator
    uid: '@azure/cosmos.QueryIterator'
  - name: <
    fullName: <
  - name: DatabaseDefinition
    fullName: DatabaseDefinition
    uid: '@azure/cosmos.DatabaseDefinition'
  - name: '>'
    fullName: '>'
