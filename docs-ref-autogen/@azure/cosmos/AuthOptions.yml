### YamlMime:UniversalReference
ms.openlocfilehash: 44cb62f5285b6b7e9930546a156bc0fc2aa6ad42
ms.sourcegitcommit: ce76ec3eda83746ef9a765165173b5c00b5b7df6
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 12/20/2018
ms.locfileid: "53661000"
items:
- uid: '@azure/cosmos.AuthOptions'
  name: AuthOptions
  fullName: AuthOptions
  children:
  - '@azure/cosmos.AuthOptions.key'
  - '@azure/cosmos.AuthOptions.masterKey'
  - '@azure/cosmos.AuthOptions.permissionFeed'
  - '@azure/cosmos.AuthOptions.resourceTokens'
  - '@azure/cosmos.AuthOptions.tokenProvider'
  langs:
  - typeScript
  type: interface
  summary: ''
  package: '@azure/cosmos'
- uid: '@azure/cosmos.AuthOptions.key'
  name: key
  fullName: key
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="e5220-101">Chave mestra da conta ou a chave somente de leitura</span><span class="sxs-lookup"><span data-stu-id="e5220-101">Account master key or read only key</span></span>
  optional: true
  syntax:
    content: 'key?: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
- uid: '@azure/cosmos.AuthOptions.masterKey'
  name: masterKey
  fullName: masterKey
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="e5220-102">A chave mestra de autorização para usar para criar o cliente.</span><span class="sxs-lookup"><span data-stu-id="e5220-102">The authorization master key to use to create the client.</span></span>
  optional: true
  syntax:
    content: 'masterKey?: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
- uid: '@azure/cosmos.AuthOptions.permissionFeed'
  name: permissionFeed
  fullName: permissionFeed
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="e5220-103">Uma matriz de <xref:Permission> objetos.</span><span class="sxs-lookup"><span data-stu-id="e5220-103">An array of <xref:Permission> objects.</span></span>
  optional: true
  syntax:
    content: 'permissionFeed?: PermissionDefinition[]'
    return:
      type:
      - '@azure/cosmos.PermissionDefinition[]'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.AuthOptions.resourceTokens'
  name: resourceTokens
  fullName: resourceTokens
  children: []
  langs:
  - typeScript
  type: property
  summary: >-
    <span data-ttu-id="e5220-104">Um objeto que contém os tokens de recursos.</span><span class="sxs-lookup"><span data-stu-id="e5220-104">An object that contains resources tokens.</span></span>

    <span data-ttu-id="e5220-105">As chaves do objeto são Ids de recurso e os valores são os tokens de recurso.</span><span class="sxs-lookup"><span data-stu-id="e5220-105">Keys for the object are resource Ids and values are the resource tokens.</span></span>
  optional: true
  syntax:
    content: 'resourceTokens?: [key: string]: string'
    return:
      type:
      - '[key: string]: string'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.AuthOptions.tokenProvider'
  name: tokenProvider
  fullName: tokenProvider
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  optional: true
  syntax:
    content: 'tokenProvider?: any'
    return:
      type:
      - any
  package: '@azure/cosmos'
references:
- uid: '@azure/cosmos.PermissionDefinition[]'
  name: PermissionDefinition[]
  spec.typeScript:
  - name: PermissionDefinition
    fullName: PermissionDefinition
    uid: '@azure/cosmos.PermissionDefinition'
  - name: '[]'
    fullName: '[]'
