### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI'
    name: ManagementGroupsAPI
    fullName: ManagementGroupsAPI
    children:
      - '@azure/arm-managementgroups.ManagementGroupsAPI.acceptLanguage'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.apiVersion'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.beginLongRunningRequest'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.checkNameAvailability'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.checkNameAvailability_2'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.checkNameAvailability_1'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.credentials'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.entities'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.longRunningOperationRetryTimeout'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.managementGroups'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.constructor'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.managementGroupSubscriptions'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.operations'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.restoreLROPoller'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.sendLongRunningRequest'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.sendLRORequest'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.sendOperationRequest'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.sendRequest'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.startTenantBackfill'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.startTenantBackfill_2'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.startTenantBackfill_1'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.tenantBackfillStatus'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.tenantBackfillStatus_2'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.tenantBackfillStatus_1'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/arm-managementgroups.ManagementGroupsAPIContext'
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.acceptLanguage'
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.apiVersion'
    name: apiVersion
    fullName: apiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'apiVersion?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.beginLongRunningRequest'
    name: 'beginLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="b8526-101">Enviar a solicitação inicial de um LRO (operação de longa duração) e obter de volta um HttpLongRunningOperationResponse que fornece métodos para sondar o LRO e verificando se o LRO for concluída.</span><span class="sxs-lookup"><span data-stu-id="b8526-101">Send the initial request of a LRO (long running operation) and get back an HttpLongRunningOperationResponse that provides methods for polling the LRO and checking if the LRO is finished.</span></span>
    syntax:
      content: 'function beginLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: <span data-ttu-id="b8526-102">O objeto de solicitação</span><span class="sxs-lookup"><span data-stu-id="b8526-102">The request object</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.checkNameAvailability'
    name: 'checkNameAvailability(CheckNameAvailabilityRequest, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="b8526-103">Verifica se o nome do grupo de gerenciamento especificado é válido e exclusivo</span><span class="sxs-lookup"><span data-stu-id="b8526-103">Checks if the specified management group name is valid and unique</span></span>
    syntax:
      content: 'function checkNameAvailability(checkNameAvailabilityRequest: CheckNameAvailabilityRequest, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: checkNameAvailabilityRequest
          type:
            - '@azure/arm-managementgroups.CheckNameAvailabilityRequest'
          description: <span data-ttu-id="b8526-104">Parâmetros de verificação de disponibilidade do nome de grupo de gerenciamento.</span><span class="sxs-lookup"><span data-stu-id="b8526-104">Management group name availability check parameters.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CheckNameAvailabilityResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.checkNameAvailability_2'
    name: 'checkNameAvailability(CheckNameAvailabilityRequest, RequestOptionsBase, ServiceCallback<CheckNameAvailabilityResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function checkNameAvailability(checkNameAvailabilityRequest: CheckNameAvailabilityRequest, options: RequestOptionsBase, callback: ServiceCallback<CheckNameAvailabilityResult>)'
      parameters:
        - id: checkNameAvailabilityRequest
          type:
            - '@azure/arm-managementgroups.CheckNameAvailabilityRequest'
          description: <span data-ttu-id="b8526-105">Parâmetros de verificação de disponibilidade do nome de grupo de gerenciamento.</span><span class="sxs-lookup"><span data-stu-id="b8526-105">Management group name availability check parameters.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="b8526-106">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="b8526-106">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-managementgroups.CheckNameAvailabilityResult>
          description: |
            <span data-ttu-id="b8526-107">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="b8526-107">The callback</span></span>
      return:
        type:
          - Promise<Models.CheckNameAvailabilityResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.checkNameAvailability_1'
    name: 'checkNameAvailability(CheckNameAvailabilityRequest, ServiceCallback<CheckNameAvailabilityResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function checkNameAvailability(checkNameAvailabilityRequest: CheckNameAvailabilityRequest, callback: ServiceCallback<CheckNameAvailabilityResult>)'
      parameters:
        - id: checkNameAvailabilityRequest
          type:
            - '@azure/arm-managementgroups.CheckNameAvailabilityRequest'
          description: <span data-ttu-id="b8526-108">Parâmetros de verificação de disponibilidade do nome de grupo de gerenciamento.</span><span class="sxs-lookup"><span data-stu-id="b8526-108">Management group name availability check parameters.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-managementgroups.CheckNameAvailabilityResult>
          description: |
            <span data-ttu-id="b8526-109">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="b8526-109">The callback</span></span>
      return:
        type:
          - Promise<Models.CheckNameAvailabilityResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.entities'
    name: entities
    fullName: entities
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'entities: Entities'
      return:
        type:
          - '@azure/arm-managementgroups.Entities'
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.longRunningOperationRetryTimeout'
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="b8526-110">O tempo limite de repetição em segundos para operações de execução longa.</span><span class="sxs-lookup"><span data-stu-id="b8526-110">The retry timeout in seconds for Long Running Operations.</span></span> <span data-ttu-id="b8526-111">O valor padrão é 30.</span><span class="sxs-lookup"><span data-stu-id="b8526-111">Default value is 30.</span></span>
    optional: true
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.managementGroups'
    name: managementGroups
    fullName: managementGroups
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'managementGroups: ManagementGroups'
      return:
        type:
          - '@azure/arm-managementgroups.ManagementGroups'
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.constructor'
    name: 'ManagementGroupsAPI(ServiceClientCredentials, Models.ManagementGroupsAPIOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="b8526-112">Inicializa uma nova instância da classe ManagementGroupsAPI.</span><span class="sxs-lookup"><span data-stu-id="b8526-112">Initializes a new instance of the ManagementGroupsAPI class.</span></span>
    syntax:
      content: 'new ManagementGroupsAPI(credentials: ServiceClientCredentials, options?: Models.ManagementGroupsAPIOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: <span data-ttu-id="b8526-113">Credenciais necessárias para o cliente se conectar ao Azure.</span><span class="sxs-lookup"><span data-stu-id="b8526-113">Credentials needed for the client to connect to Azure.</span></span>
        - id: options
          type:
            - Models.ManagementGroupsAPIOptions
          description: ''
          optional: true
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.managementGroupSubscriptions'
    name: managementGroupSubscriptions
    fullName: managementGroupSubscriptions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'managementGroupSubscriptions: ManagementGroupSubscriptions'
      return:
        type:
          - '@azure/arm-managementgroups.ManagementGroupSubscriptions'
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.operations'
    name: operations
    fullName: operations
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'operations: Operations'
      return:
        type:
          - '@azure/arm-managementgroups.Operations'
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.restoreLROPoller'
    name: restoreLROPoller(LROPollState)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="b8526-114">Restaure um LROPoller do LROPollState fornecido.</span><span class="sxs-lookup"><span data-stu-id="b8526-114">Restore an LROPoller from the provided LROPollState.</span></span> <span data-ttu-id="b8526-115">Esse método pode ser usado para recriar um LROPoller em um computador ou processo diferente.</span><span class="sxs-lookup"><span data-stu-id="b8526-115">This method can be used to recreate an LROPoller on a different process or machine.</span></span>
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type:
            - LROPollState
          description: ''
      return:
        type:
          - LROPoller
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.sendLongRunningRequest'
    name: 'sendLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="b8526-116">Fornece um mecanismo para fazer uma solicitação que sondar e fornecerá o resultado final.</span><span class="sxs-lookup"><span data-stu-id="b8526-116">Provides a mechanism to make a request that will poll and provide the final result.</span></span>
    syntax:
      content: 'function sendLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: <span data-ttu-id="b8526-117">O objeto de solicitação</span><span class="sxs-lookup"><span data-stu-id="b8526-117">The request object</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.sendLRORequest'
    name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="b8526-118">Enviar a solicitação inicial de um LRO (operação de longa duração) e obter de volta um LROPoller que fornece métodos para sondar o LRO e verificando se o LRO for concluída.</span><span class="sxs-lookup"><span data-stu-id="b8526-118">Send the initial request of a LRO (long running operation) and get back an LROPoller that provides methods for polling the LRO and checking if the LRO is finished.</span></span>
    syntax:
      content: 'function sendLRORequest(operationArguments: OperationArguments, operationSpec: OperationSpec, options?: RequestOptionsBase)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: <span data-ttu-id="b8526-119">Os argumentos para a operação.</span><span class="sxs-lookup"><span data-stu-id="b8526-119">The arguments to the operation.</span></span>
        - id: operationSpec
          type:
            - OperationSpec
          description: <span data-ttu-id="b8526-120">A especificação para a operação.</span><span class="sxs-lookup"><span data-stu-id="b8526-120">The specification for the operation.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="b8526-121">Opções adicionais a serem enviados ao fazer a solicitação.</span><span class="sxs-lookup"><span data-stu-id="b8526-121">Additional options to be sent while making the request.</span></span>
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="b8526-122">Envie uma solicitação HTTP que é populada usando o OperationSpec fornecido.</span><span class="sxs-lookup"><span data-stu-id="b8526-122">Send an HTTP request that is populated using the provided OperationSpec.</span></span>
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: <span data-ttu-id="b8526-123">Os argumentos que serão preenchidos de valores de modelo da solicitação HTTP.</span><span class="sxs-lookup"><span data-stu-id="b8526-123">The arguments that the HTTP request's templated values will be populated from.</span></span>
        - id: operationSpec
          type:
            - OperationSpec
          description: <span data-ttu-id="b8526-124">OperationSpec serem usados para popular o httpRequest.</span><span class="sxs-lookup"><span data-stu-id="b8526-124">The OperationSpec to use to populate the httpRequest.</span></span>
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            <span data-ttu-id="b8526-125">O retorno de chamada a ser chamada quando a resposta é recebida.</span><span class="sxs-lookup"><span data-stu-id="b8526-125">The callback to call when the response is received.</span></span>
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="b8526-126">Envie httpRequest fornecido.</span><span class="sxs-lookup"><span data-stu-id="b8526-126">Send the provided httpRequest.</span></span>
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.startTenantBackfill'
    name: startTenantBackfill(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="b8526-127">Inicia o aterramento assinaturas para o locatário.</span><span class="sxs-lookup"><span data-stu-id="b8526-127">Starts backfilling subscriptions for the Tenant.</span></span>
    syntax:
      content: 'function startTenantBackfill(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.StartTenantBackfillResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.startTenantBackfill_2'
    name: 'startTenantBackfill(RequestOptionsBase, ServiceCallback<TenantBackfillStatusResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startTenantBackfill(options: RequestOptionsBase, callback: ServiceCallback<TenantBackfillStatusResult>)'
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="b8526-128">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="b8526-128">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-managementgroups.TenantBackfillStatusResult>
          description: |
            <span data-ttu-id="b8526-129">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="b8526-129">The callback</span></span>
      return:
        type:
          - Promise<Models.StartTenantBackfillResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.startTenantBackfill_1'
    name: startTenantBackfill(ServiceCallback<TenantBackfillStatusResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startTenantBackfill(callback: ServiceCallback<TenantBackfillStatusResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-managementgroups.TenantBackfillStatusResult>
          description: |
            <span data-ttu-id="b8526-130">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="b8526-130">The callback</span></span>
      return:
        type:
          - Promise<Models.StartTenantBackfillResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.tenantBackfillStatus'
    name: tenantBackfillStatus(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="b8526-131">Obtém o status de aterramento de locatário</span><span class="sxs-lookup"><span data-stu-id="b8526-131">Gets tenant backfill status</span></span>
    syntax:
      content: 'function tenantBackfillStatus(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TenantBackfillStatusResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.tenantBackfillStatus_2'
    name: 'tenantBackfillStatus(RequestOptionsBase, ServiceCallback<TenantBackfillStatusResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function tenantBackfillStatus(options: RequestOptionsBase, callback: ServiceCallback<TenantBackfillStatusResult>)'
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="b8526-132">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="b8526-132">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-managementgroups.TenantBackfillStatusResult>
          description: |
            <span data-ttu-id="b8526-133">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="b8526-133">The callback</span></span>
      return:
        type:
          - Promise<Models.TenantBackfillStatusResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.tenantBackfillStatus_1'
    name: tenantBackfillStatus(ServiceCallback<TenantBackfillStatusResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function tenantBackfillStatus(callback: ServiceCallback<TenantBackfillStatusResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-managementgroups.TenantBackfillStatusResult>
          description: |
            <span data-ttu-id="b8526-134">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="b8526-134">The callback</span></span>
      return:
        type:
          - Promise<Models.TenantBackfillStatusResponse>
    package: '@azure/arm-managementgroups'
references:
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPIContext'
    name: ManagementGroupsAPIContext
    spec.typeScript:
      - name: ManagementGroupsAPIContext
        fullName: ManagementGroupsAPIContext
        uid: '@azure/arm-managementgroups.ManagementGroupsAPIContext'
  - uid: '@azure/arm-managementgroups.Entities'
    name: Entities
    spec.typeScript:
      - name: Entities
        fullName: Entities
        uid: '@azure/arm-managementgroups.Entities'
  - uid: '@azure/arm-managementgroups.ManagementGroupSubscriptions'
    name: ManagementGroupSubscriptions
    spec.typeScript:
      - name: ManagementGroupSubscriptions
        fullName: ManagementGroupSubscriptions
        uid: '@azure/arm-managementgroups.ManagementGroupSubscriptions'
  - uid: '@azure/arm-managementgroups.ManagementGroups'
    name: ManagementGroups
    spec.typeScript:
      - name: ManagementGroups
        fullName: ManagementGroups
        uid: '@azure/arm-managementgroups.ManagementGroups'
  - uid: '@azure/arm-managementgroups.Operations'
    name: Operations
    spec.typeScript:
      - name: Operations
        fullName: Operations
        uid: '@azure/arm-managementgroups.Operations'
  - uid: '@azure/arm-managementgroups.CheckNameAvailabilityRequest'
    name: CheckNameAvailabilityRequest
    spec.typeScript:
      - name: CheckNameAvailabilityRequest
        fullName: CheckNameAvailabilityRequest
        uid: '@azure/arm-managementgroups.CheckNameAvailabilityRequest'
  - uid: ServiceCallback<@azure/arm-managementgroups.CheckNameAvailabilityResult>
    name: CheckNameAvailabilityResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CheckNameAvailabilityResult
        fullName: CheckNameAvailabilityResult
        uid: '@azure/arm-managementgroups.CheckNameAvailabilityResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-managementgroups.TenantBackfillStatusResult>
    name: TenantBackfillStatusResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TenantBackfillStatusResult
        fullName: TenantBackfillStatusResult
        uid: '@azure/arm-managementgroups.TenantBackfillStatusResult'
      - name: '>'
        fullName: '>'