### YamlMime:UniversalReference
items:
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeInfoListOptionalParams'
    name: ServiceFabricClientGetNodeInfoListOptionalParams
    fullName: ServiceFabricClientGetNodeInfoListOptionalParams
    children:
      - '@azure/servicefabric.ServiceFabricClientGetNodeInfoListOptionalParams.abortSignal'
      - '@azure/servicefabric.ServiceFabricClientGetNodeInfoListOptionalParams.continuationToken'
      - '@azure/servicefabric.ServiceFabricClientGetNodeInfoListOptionalParams.customHeaders'
      - '@azure/servicefabric.ServiceFabricClientGetNodeInfoListOptionalParams.maxResults'
      - '@azure/servicefabric.ServiceFabricClientGetNodeInfoListOptionalParams.nodeStatusFilter'
      - '@azure/servicefabric.ServiceFabricClientGetNodeInfoListOptionalParams.onDownloadProgress'
      - '@azure/servicefabric.ServiceFabricClientGetNodeInfoListOptionalParams.onUploadProgress'
      - '@azure/servicefabric.ServiceFabricClientGetNodeInfoListOptionalParams.timeout'
      - '@azure/servicefabric.ServiceFabricClientGetNodeInfoListOptionalParams.timeoutParameter'
    langs:
      - typeScript
    type: interface
    summary: Parâmetros opcionais.
    extends:
      name: RequestOptionsBase
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeInfoListOptionalParams.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: O sinal que pode ser usado para anular as solicitações.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeInfoListOptionalParams.continuationToken'
    name: continuationToken
    fullName: continuationToken
    children: []
    langs:
      - typeScript
    type: property
    summary: 'O parâmetro do token de continuação é usado para obter o próximo conjunto de resultados. Um token de continuação com um valor não vazio será incluso na resposta da API quando os resultados do sistema não couberem em uma única resposta. Quando esse valor for passado para a próxima chamada de API, a API retornará o próximo conjunto de resultados. Se não houver mais resultados, o token de continuação não conterá um valor. O valor desse parâmetro não deve ser codificado em URL.'
    optional: true
    syntax:
      content: 'continuationToken?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeInfoListOptionalParams.customHeaders'
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: '{object} [customHeaders] Cabeçalhos de solicitação personalizado que serão aplicados antes que a solicitação é enviada definido pelo usuário.'
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeInfoListOptionalParams.maxResults'
    name: maxResults
    fullName: maxResults
    children: []
    langs:
      - typeScript
    type: property
    summary: 'O número máximo de resultados a serem retornados como parte das consultas paginadas. Esse parâmetro define o limite superior no número de resultados retornados. Os resultados retornados podem ser inferiores aos resultados máximos especificados se não couberem na mensagem, de acordo com as restrições de tamanho máximo de mensagem definidas na configuração. Se esse parâmetro for zero, ou não for especificado, a consulta paginada incluirá o máximo de resultados possível na mensagem de retorno. Valor padrão: 0.'
    optional: true
    syntax:
      content: 'maxResults?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeInfoListOptionalParams.nodeStatusFilter'
    name: nodeStatusFilter
    fullName: nodeStatusFilter
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Permite a filtragem de nós de acordo com o NodeStatus. Somente os nós que correspondem ao valor do filtro especificado serão retornados. O valor do filtro pode ser um dos seguintes.
      Os valores possíveis incluem: 'default', 'todos', 'up', 'Inativo', 'Habilitar', 'Desabilitar', 'desabilitado', 'unknown', 'removido'. Valor padrão: 'default'.
    optional: true
    syntax:
      content: 'nodeStatusFilter?: NodeStatusFilter'
      return:
        type:
          - '@azure/servicefabric.NodeStatusFilter'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeInfoListOptionalParams.onDownloadProgress'
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Retorno de chamada que é acionada mediante o andamento do download.
    optional: true
    syntax:
      content: 'onDownloadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeInfoListOptionalParams.onUploadProgress'
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Retorno de chamada que é acionada mediante o progresso do carregamento.
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeInfoListOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: O número de milissegundos que uma solicitação pode levar antes encerrado automaticamente.
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeInfoListOptionalParams.timeoutParameter'
    name: timeoutParameter
    fullName: timeoutParameter
    children: []
    langs:
      - typeScript
    type: property
    summary: 'O tempo limite do servidor para executar a operação em segundos. Esse tempo limite Especifica a duração de tempo que o cliente está disposto a esperar a conclusão da operação solicitada. O valor padrão para esse parâmetro é 60 segundos. Valor padrão: 60.'
    optional: true
    syntax:
      content: 'timeoutParameter?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/servicefabric'
references:
  - uid: '@azure/servicefabric.NodeStatusFilter'
    name: NodeStatusFilter
    spec.typeScript:
      - name: NodeStatusFilter
        fullName: NodeStatusFilter
        uid: '@azure/servicefabric.NodeStatusFilter'