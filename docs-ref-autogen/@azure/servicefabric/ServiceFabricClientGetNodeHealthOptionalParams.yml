### YamlMime:UniversalReference
items:
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeHealthOptionalParams'
    name: ServiceFabricClientGetNodeHealthOptionalParams
    fullName: ServiceFabricClientGetNodeHealthOptionalParams
    children:
      - '@azure/servicefabric.ServiceFabricClientGetNodeHealthOptionalParams.abortSignal'
      - '@azure/servicefabric.ServiceFabricClientGetNodeHealthOptionalParams.customHeaders'
      - '@azure/servicefabric.ServiceFabricClientGetNodeHealthOptionalParams.eventsHealthStateFilter'
      - '@azure/servicefabric.ServiceFabricClientGetNodeHealthOptionalParams.onDownloadProgress'
      - '@azure/servicefabric.ServiceFabricClientGetNodeHealthOptionalParams.onUploadProgress'
      - '@azure/servicefabric.ServiceFabricClientGetNodeHealthOptionalParams.timeout'
      - '@azure/servicefabric.ServiceFabricClientGetNodeHealthOptionalParams.timeoutParameter'
    langs:
      - typeScript
    type: interface
    summary: Parâmetros opcionais.
    extends:
      name: RequestOptionsBase
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeHealthOptionalParams.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: O sinal que pode ser usado para anular as solicitações.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeHealthOptionalParams.customHeaders'
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: '{object} [customHeaders] Cabeçalhos de solicitação personalizado que serão aplicados antes que a solicitação é enviada definido pelo usuário.'
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeHealthOptionalParams.eventsHealthStateFilter'
    name: eventsHealthStateFilter
    fullName: eventsHealthStateFilter
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      Permite filtrar a coleção de objetos HealthEvent retornados com base no estado de integridade.
      Os valores possíveis para esse parâmetro incluem o valor de inteiro de um dos seguintes estados de integridade.
      Somente os eventos que correspondem ao filtro são retornados. Todos os eventos são usados para avaliar o estado de integridade agregado.
      Se não for especificado, retorna todas as entradas. Os valores de estado são enumerações baseadas no sinalizador. Assim, o valor pode ser uma combinação desses valores obtidos, usando o operador “OR” bit a bit.
      Por exemplo, se o valor fornecido for 6, serão retornados todos os eventos com o valor de HealthState de OK (2) e de Aviso (4).
      - Default – valor padrão. Corresponde a qualquer HealthState. O valor é zero.
      - None - filtro que não corresponde a qualquer valor de HealthState. Usado para não retornar qualquer resultado em um determinado conjunto de estados. O valor é 1.
      - Okey - filtro que corresponde à entrada com o valor de HealthState Okey. O valor é 2.
      - Warning - filtro que corresponde à entrada com HealthState valor Warning. O valor é 4.
      - Error - filtro que corresponde à entrada com o valor de HealthState Error. O valor é 8.
      - All - filtro que corresponde à entrada com qualquer valor de HealthState. O valor é 65535. Valor padrão: 0.
    optional: true
    syntax:
      content: 'eventsHealthStateFilter?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeHealthOptionalParams.onDownloadProgress'
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Retorno de chamada que é acionada mediante o andamento do download.
    optional: true
    syntax:
      content: 'onDownloadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeHealthOptionalParams.onUploadProgress'
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Retorno de chamada que é acionada mediante o progresso do carregamento.
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeHealthOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: O número de milissegundos que uma solicitação pode levar antes encerrado automaticamente.
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeHealthOptionalParams.timeoutParameter'
    name: timeoutParameter
    fullName: timeoutParameter
    children: []
    langs:
      - typeScript
    type: property
    summary: 'O tempo limite do servidor para executar a operação em segundos. Esse tempo limite Especifica a duração de tempo que o cliente está disposto a esperar a conclusão da operação solicitada. O valor padrão para esse parâmetro é 60 segundos. Valor padrão: 60.'
    optional: true
    syntax:
      content: 'timeoutParameter?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/servicefabric'