### YamlMime:UniversalReference
items:
  - uid: '@azure/servicefabric.ChaosTargetFilter'
    name: ChaosTargetFilter
    fullName: ChaosTargetFilter
    children:
      - '@azure/servicefabric.ChaosTargetFilter.applicationInclusionList'
      - '@azure/servicefabric.ChaosTargetFilter.nodeTypeInclusionList'
    langs:
      - typeScript
    type: interface
    summary: |-
      Define todos os filtros para falhas do Chaos, por exemplo, somente determinados tipos de nó a falha ou falha apenas em determinados aplicativos.
      Se ChaosTargetFilter não for usado, Chaos falha em todas as entidades de cluster. Se ChaosTargetFilter for usado, Chaos falha apenas as entidades que atendem a especificação de ChaosTargetFilter. NodeTypeInclusionList e ApplicationInclusionList permitem apenas uma semântica de união.
      Não é possível especificar uma interseção de NodeTypeInclusionList e ApplicationInclusionList. Por exemplo, não é possível especificar "falha deste aplicativo somente quando ele estiver nesse tipo de nó."
      Depois que uma entidade é incluída em NodeTypeInclusionList ou ApplicationInclusionList, essa entidade não pode ser excluída usando ChaosTargetFilter. Mesmo se não aparecer aplicativoX no ApplicationInclusionList, em alguns aplicativosX de iteração Chaos podem apresentar falha porque isso acontece de estar em um nó de nodeTypeY que está incluído no NodeTypeInclusionList. Se NodeTypeInclusionList e ApplicationInclusionList são nulos ou vazios, ArgumentException será lançada.
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosTargetFilter.applicationInclusionList'
    name: applicationInclusionList
    fullName: applicationInclusionList
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      uma lista de URIs de aplicativo para incluir em falhas de Chaos.
      Todas as réplicas que pertencem aos serviços desses aplicativos são receptivos a falhas de réplica (reinicialização de réplica, remover réplica, mover primário e secundário de movimentação) por Chaos.
      Chaos pode reiniciar um pacote de código somente se o pacote de código hospeda réplicas somente desses aplicativos.
      Se um aplicativo não aparecer nessa lista, ele ainda pode falhar em alguma iteração do Chaos se o aplicativo terminar em um nó de um tipo de nó que está incluído em NodeTypeInclusionList.
      No entanto, se aplicativoX for vinculado a nodeTypeY por meio de restrições de posicionamento e aplicativoX está ausente do ApplicationInclusionList e nodeTypeY está ausente do NodeTypeInclusionList, em seguida, aplicativoX será nunca interrompido.
      No máximo 1000 nomes de tipo de nó podem ser incluídos nessa lista; para aumentar esse número, uma atualização de configuração é necessária para a configuração de MaxNumberOfApplicationsInChaosEntityFilter.
    optional: true
    syntax:
      content: 'applicationInclusionList?: string[]'
      return:
        type:
          - 'string[]'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosTargetFilter.nodeTypeInclusionList'
    name: nodeTypeInclusionList
    fullName: nodeTypeInclusionList
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      uma lista de tipos de nó para incluir em falhas de Chaos.
      Todos os tipos de falhas (reiniciar o nó, reiniciar o pacote de códigos, remover a réplica, reiniciar a réplica, mover primário e mover secundário) estão habilitados para os nós desses tipos de nó.
      Se um tipo de nó (digamos NodeTypeX) não aparece na NodeTypeInclusionList, em seguida, falhas de nível de nó (como NodeRestart) nunca serão habilitadas para os nós de NodeTypeX, mas falhas de pacote e de réplica de código ainda podem ser habilitadas para NodeTypeX se um aplicativo na ApplicationInclusionList.
      acontece deve residir em um nó de NodeTypeX.
      No máximo 100 nomes de tipo de nó podem ser incluídos nessa lista; para aumentar esse número, uma atualização de configuração é necessária para a configuração de MaxNumberOfNodeTypesInChaosEntityFilter.
    optional: true
    syntax:
      content: 'nodeTypeInclusionList?: string[]'
      return:
        type:
          - 'string[]'
    package: '@azure/servicefabric'