### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-authorization.DenyAssignmentListResult'
    name: DenyAssignmentListResult
    fullName: DenyAssignmentListResult
    children:
      - '@azure/arm-authorization.DenyAssignmentListResult.Array'
      - '@azure/arm-authorization.DenyAssignmentListResult.concat'
      - '@azure/arm-authorization.DenyAssignmentListResult.concat_1'
      - '@azure/arm-authorization.DenyAssignmentListResult.copyWithin'
      - '@azure/arm-authorization.DenyAssignmentListResult.entries'
      - '@azure/arm-authorization.DenyAssignmentListResult.every'
      - '@azure/arm-authorization.DenyAssignmentListResult.fill'
      - '@azure/arm-authorization.DenyAssignmentListResult.filter_1'
      - '@azure/arm-authorization.DenyAssignmentListResult.filter'
      - '@azure/arm-authorization.DenyAssignmentListResult.find'
      - '@azure/arm-authorization.DenyAssignmentListResult.find_1'
      - '@azure/arm-authorization.DenyAssignmentListResult.findIndex'
      - '@azure/arm-authorization.DenyAssignmentListResult.forEach'
      - '@azure/arm-authorization.DenyAssignmentListResult.indexOf'
      - '@azure/arm-authorization.DenyAssignmentListResult.join'
      - '@azure/arm-authorization.DenyAssignmentListResult.keys'
      - '@azure/arm-authorization.DenyAssignmentListResult.lastIndexOf'
      - '@azure/arm-authorization.DenyAssignmentListResult.length'
      - '@azure/arm-authorization.DenyAssignmentListResult.map'
      - '@azure/arm-authorization.DenyAssignmentListResult.nextLink'
      - '@azure/arm-authorization.DenyAssignmentListResult.pop'
      - '@azure/arm-authorization.DenyAssignmentListResult.push'
      - '@azure/arm-authorization.DenyAssignmentListResult.reduce'
      - '@azure/arm-authorization.DenyAssignmentListResult.reduce_1'
      - '@azure/arm-authorization.DenyAssignmentListResult.reduce_2'
      - '@azure/arm-authorization.DenyAssignmentListResult.reduceRight'
      - '@azure/arm-authorization.DenyAssignmentListResult.reduceRight_1'
      - '@azure/arm-authorization.DenyAssignmentListResult.reduceRight_2'
      - '@azure/arm-authorization.DenyAssignmentListResult.reverse'
      - '@azure/arm-authorization.DenyAssignmentListResult.shift'
      - '@azure/arm-authorization.DenyAssignmentListResult.slice'
      - '@azure/arm-authorization.DenyAssignmentListResult.some'
      - '@azure/arm-authorization.DenyAssignmentListResult.sort'
      - '@azure/arm-authorization.DenyAssignmentListResult.splice_1'
      - '@azure/arm-authorization.DenyAssignmentListResult.splice'
      - '@azure/arm-authorization.DenyAssignmentListResult.toLocaleString'
      - '@azure/arm-authorization.DenyAssignmentListResult.toString'
      - '@azure/arm-authorization.DenyAssignmentListResult.unshift'
      - '@azure/arm-authorization.DenyAssignmentListResult.values'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: Array<@azure/arm-authorization.DenyAssignment>
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.Array'
    name: Array
    fullName: Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Array: ArrayConstructor'
      return:
        type:
          - ArrayConstructor
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.concat'
    name: 'concat(ConcatArray<DenyAssignment>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="22744-101">Combina duas ou mais matrizes.</span><span class="sxs-lookup"><span data-stu-id="22744-101">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: ConcatArray<DenyAssignment>[])'
      parameters:
        - id: items
          type:
            - 'ConcatArray<@azure/arm-authorization.DenyAssignment>[]'
          description: |
            <span data-ttu-id="22744-102">Itens adicionais a serem adicionados ao final de array1.</span><span class="sxs-lookup"><span data-stu-id="22744-102">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - '@azure/arm-authorization.DenyAssignment[]'
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.concat_1'
    name: 'concat(T | ConcatArray<T>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="22744-103">Combina duas ou mais matrizes.</span><span class="sxs-lookup"><span data-stu-id="22744-103">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: T | ConcatArray<T>[])'
      parameters:
        - id: items
          type:
            - 'T | ConcatArray<T>[]'
          description: |
            <span data-ttu-id="22744-104">Itens adicionais a serem adicionados ao final de array1.</span><span class="sxs-lookup"><span data-stu-id="22744-104">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - '@azure/arm-authorization.DenyAssignment[]'
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.copyWithin'
    name: 'copyWithin(number, number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="22744-105">Retorna este objeto depois de copiar uma seção da matriz identificada pelo início e término à mesma matriz, começando no destino de posição</span><span class="sxs-lookup"><span data-stu-id="22744-105">Returns the this object after copying a section of the array identified by start and end to the same array starting at position target</span></span>'
    syntax:
      content: 'function copyWithin(target: number, start: number, end?: undefined | number)'
      parameters:
        - id: target
          type:
            - number
          description: '<span data-ttu-id="22744-106">Se o destino for negativo, ele é tratado como comprimento + em que o comprimento é o comprimento da matriz de destino.</span><span class="sxs-lookup"><span data-stu-id="22744-106">If target is negative, it is treated as length+target where length is the length of the array.</span></span>'
        - id: start
          type:
            - number
          description: '<span data-ttu-id="22744-107">Se o início for negativo, ele é tratado como comprimento + início.</span><span class="sxs-lookup"><span data-stu-id="22744-107">If start is negative, it is treated as length+start.</span></span> <span data-ttu-id="22744-108">Se end for negativo, ele é tratado como comprimento + end.</span><span class="sxs-lookup"><span data-stu-id="22744-108">If end is negative, it is treated as length+end.</span></span>'
        - id: end
          type:
            - undefined | number
          description: |
            <span data-ttu-id="22744-109">Se não for especificado, o comprimento do objeto é usado como valor padrão.</span><span class="sxs-lookup"><span data-stu-id="22744-109">If not specified, length of the this object is used as its default value.</span></span>
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.entries'
    name: entries()
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="22744-110">Retorna um que pode ser iterado de pares chave-valor para cada entrada na matriz</span><span class="sxs-lookup"><span data-stu-id="22744-110">Returns an iterable of key, value pairs for every entry in the array</span></span>'
    syntax:
      content: function entries()
      parameters: []
      return:
        type:
          - IterableIterator<Object>
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.every'
    name: 'every((value: DenyAssignment, index: number, array: DenyAssignment[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="22744-111">Determina se todos os membros de uma matriz satisfazem o teste especificado.</span><span class="sxs-lookup"><span data-stu-id="22744-111">Determines whether all the members of an array satisfy the specified test.</span></span>
    syntax:
      content: 'function every(callbackfn: (value: DenyAssignment, index: number, array: DenyAssignment[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: DenyAssignment, index: number, array: DenyAssignment[]) => boolean'
          description: '<span data-ttu-id="22744-112">Uma função que aceita até três argumentos.</span><span class="sxs-lookup"><span data-stu-id="22744-112">A function that accepts up to three arguments.</span></span> <span data-ttu-id="22744-113">O cada método chama a função de callbackfn para cada elemento em array1 até que o callbackfn retorna false, ou até o final da matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-113">The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="22744-114">Um objeto ao qual a palavra-chave this pode referir-se na função callbackfn.</span><span class="sxs-lookup"><span data-stu-id="22744-114">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="22744-115">Se thisArg for omitido, undefined será usado como este valor.</span><span class="sxs-lookup"><span data-stu-id="22744-115">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.fill'
    name: 'fill(DenyAssignment, undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="22744-116">Retorna este objeto depois de preencher a seção identificada por iniciar e termina com valor</span><span class="sxs-lookup"><span data-stu-id="22744-116">Returns the this object after filling the section identified by start and end with value</span></span>
    syntax:
      content: 'function fill(value: DenyAssignment, start?: undefined | number, end?: undefined | number)'
      parameters:
        - id: value
          type:
            - '@azure/arm-authorization.DenyAssignment'
          description: <span data-ttu-id="22744-117">valor para preencher a seção de matriz com</span><span class="sxs-lookup"><span data-stu-id="22744-117">value to fill array section with</span></span>
        - id: start
          type:
            - undefined | number
          description: '<span data-ttu-id="22744-118">índice no qual começar a preencher a matriz no.</span><span class="sxs-lookup"><span data-stu-id="22744-118">index to start filling the array at.</span></span> <span data-ttu-id="22744-119">Se o início for negativo, ele é tratado como comprimento + início em que o comprimento é o comprimento da matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-119">If start is negative, it is treated as length+start where length is the length of the array.</span></span>'
          optional: true
        - id: end
          type:
            - undefined | number
          description: |
            <span data-ttu-id="22744-120">índice para interromper a preencher a matriz no.</span><span class="sxs-lookup"><span data-stu-id="22744-120">index to stop filling the array at.</span></span> <span data-ttu-id="22744-121">Se end for negativo, ele é tratado como comprimento + end.</span><span class="sxs-lookup"><span data-stu-id="22744-121">If end is negative, it is treated as length+end.</span></span>
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.filter_1'
    name: 'filter((value: DenyAssignment, index: number, array: DenyAssignment[]) => any, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="22744-122">Retorna os elementos de uma matriz que atendem à condição especificada em uma função de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="22744-122">Returns the elements of an array that meet the condition specified in a callback function.</span></span>
    syntax:
      content: 'function filter(callbackfn: (value: DenyAssignment, index: number, array: DenyAssignment[]) => any, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: DenyAssignment, index: number, array: DenyAssignment[]) => any'
          description: <span data-ttu-id="22744-123">Uma função que aceita até três argumentos.</span><span class="sxs-lookup"><span data-stu-id="22744-123">A function that accepts up to three arguments.</span></span> <span data-ttu-id="22744-124">O método de filtro chama a função callbackfn uma vez para cada elemento na matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-124">The filter method calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="22744-125">Um objeto ao qual a palavra-chave this pode referir-se na função callbackfn.</span><span class="sxs-lookup"><span data-stu-id="22744-125">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="22744-126">Se thisArg for omitido, undefined será usado como este valor.</span><span class="sxs-lookup"><span data-stu-id="22744-126">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - '@azure/arm-authorization.DenyAssignment[]'
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.filter'
    name: 'filter((value: DenyAssignment, index: number, array: DenyAssignment[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="22744-127">Retorna os elementos de uma matriz que atendem à condição especificada em uma função de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="22744-127">Returns the elements of an array that meet the condition specified in a callback function.</span></span>
    syntax:
      content: 'function filter<S>(callbackfn: (value: DenyAssignment, index: number, array: DenyAssignment[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: DenyAssignment, index: number, array: DenyAssignment[]) => boolean'
          description: <span data-ttu-id="22744-128">Uma função que aceita até três argumentos.</span><span class="sxs-lookup"><span data-stu-id="22744-128">A function that accepts up to three arguments.</span></span> <span data-ttu-id="22744-129">O método de filtro chama a função callbackfn uma vez para cada elemento na matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-129">The filter method calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="22744-130">Um objeto ao qual a palavra-chave this pode referir-se na função callbackfn.</span><span class="sxs-lookup"><span data-stu-id="22744-130">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="22744-131">Se thisArg for omitido, undefined será usado como este valor.</span><span class="sxs-lookup"><span data-stu-id="22744-131">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'S[]'
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.find'
    name: 'find((this: void, value: DenyAssignment, index: number, obj: DenyAssignment[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="22744-132">Retorna o valor do primeiro elemento na matriz em que o predicado é caso contrário, true e indefinido.</span><span class="sxs-lookup"><span data-stu-id="22744-132">Returns the value of the first element in the array where predicate is true, and undefined otherwise.</span></span>'
    syntax:
      content: 'function find<S>(predicate: (this: void, value: DenyAssignment, index: number, obj: DenyAssignment[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(this: void, value: DenyAssignment, index: number, obj: DenyAssignment[]) => boolean'
          description: '<span data-ttu-id="22744-133">Localize o predicado de chamadas uma vez para cada elemento da matriz, em ordem crescente, até encontrar um no qual o predicado retornar verdadeiro.</span><span class="sxs-lookup"><span data-stu-id="22744-133">find calls predicate once for each element of the array, in ascending order, until it finds one where predicate returns true.</span></span> <span data-ttu-id="22744-134">Se esse elemento for encontrado, find retorna imediatamente o valor desse elemento.</span><span class="sxs-lookup"><span data-stu-id="22744-134">If such an element is found, find immediately returns that element value.</span></span> <span data-ttu-id="22744-135">Caso contrário, procurar retorna indefinido.</span><span class="sxs-lookup"><span data-stu-id="22744-135">Otherwise, find returns undefined.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="22744-136">Se fornecido, ele será usado como este valor para cada invocação do predicado.</span><span class="sxs-lookup"><span data-stu-id="22744-136">If provided, it will be used as the this value for each invocation of predicate.</span></span> <span data-ttu-id="22744-137">Se não for fornecido, ' indefinido é usado em vez disso.</span><span class="sxs-lookup"><span data-stu-id="22744-137">If it is not provided, undefined is used instead.</span></span>
          optional: true
      return:
        type:
          - S | undefined
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.find_1'
    name: 'find((value: DenyAssignment, index: number, obj: DenyAssignment[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="22744-138">Retorna o valor do primeiro elemento na matriz em que o predicado é caso contrário, true e indefinido.</span><span class="sxs-lookup"><span data-stu-id="22744-138">Returns the value of the first element in the array where predicate is true, and undefined otherwise.</span></span>'
    syntax:
      content: 'function find(predicate: (value: DenyAssignment, index: number, obj: DenyAssignment[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(value: DenyAssignment, index: number, obj: DenyAssignment[]) => boolean'
          description: ''
        - id: thisArg
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - '@azure/arm-authorization.DenyAssignment | undefined'
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.findIndex'
    name: 'findIndex((value: DenyAssignment, index: number, obj: DenyAssignment[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="22744-139">Retorna o índice do primeiro elemento na matriz em que o predicado é true e -1 caso contrário.</span><span class="sxs-lookup"><span data-stu-id="22744-139">Returns the index of the first element in the array where predicate is true, and -1 otherwise.</span></span>'
    syntax:
      content: 'function findIndex(predicate: (value: DenyAssignment, index: number, obj: DenyAssignment[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(value: DenyAssignment, index: number, obj: DenyAssignment[]) => boolean'
          description: '<span data-ttu-id="22744-140">Localize o predicado de chamadas uma vez para cada elemento da matriz, em ordem crescente, até encontrar um no qual o predicado retornar verdadeiro.</span><span class="sxs-lookup"><span data-stu-id="22744-140">find calls predicate once for each element of the array, in ascending order, until it finds one where predicate returns true.</span></span> <span data-ttu-id="22744-141">Se esse elemento for encontrado, findIndex retorna imediatamente esse índice do elemento.</span><span class="sxs-lookup"><span data-stu-id="22744-141">If such an element is found, findIndex immediately returns that element index.</span></span> <span data-ttu-id="22744-142">Caso contrário, findIndex retornará -1.</span><span class="sxs-lookup"><span data-stu-id="22744-142">Otherwise, findIndex returns -1.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="22744-143">Se fornecido, ele será usado como este valor para cada invocação do predicado.</span><span class="sxs-lookup"><span data-stu-id="22744-143">If provided, it will be used as the this value for each invocation of predicate.</span></span> <span data-ttu-id="22744-144">Se não for fornecido, ' indefinido é usado em vez disso.</span><span class="sxs-lookup"><span data-stu-id="22744-144">If it is not provided, undefined is used instead.</span></span>
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.forEach'
    name: 'forEach((value: DenyAssignment, index: number, array: DenyAssignment[]) => void, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="22744-145">Executa a ação especificada para cada elemento em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-145">Performs the specified action for each element in an array.</span></span>
    syntax:
      content: 'function forEach(callbackfn: (value: DenyAssignment, index: number, array: DenyAssignment[]) => void, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: DenyAssignment, index: number, array: DenyAssignment[]) => void'
          description: <span data-ttu-id="22744-146">Uma função que aceita até três argumentos.</span><span class="sxs-lookup"><span data-stu-id="22744-146">A function that accepts up to three arguments.</span></span> <span data-ttu-id="22744-147">forEach chama a função callbackfn uma vez para cada elemento na matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-147">forEach calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="22744-148">Um objeto ao qual a palavra-chave this pode referir-se na função callbackfn.</span><span class="sxs-lookup"><span data-stu-id="22744-148">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="22744-149">Se thisArg for omitido, undefined será usado como este valor.</span><span class="sxs-lookup"><span data-stu-id="22744-149">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.indexOf'
    name: 'indexOf(DenyAssignment, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="22744-150">Retorna o índice da primeira ocorrência de um valor em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-150">Returns the index of the first occurrence of a value in an array.</span></span>
    syntax:
      content: 'function indexOf(searchElement: DenyAssignment, fromIndex?: undefined | number)'
      parameters:
        - id: searchElement
          type:
            - '@azure/arm-authorization.DenyAssignment'
          description: <span data-ttu-id="22744-151">O valor a ser localizado na matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-151">The value to locate in the array.</span></span>
        - id: fromIndex
          type:
            - undefined | number
          description: |
            <span data-ttu-id="22744-152">O índice de matriz no qual iniciar a pesquisa.</span><span class="sxs-lookup"><span data-stu-id="22744-152">The array index at which to begin the search.</span></span> <span data-ttu-id="22744-153">Se fromIndex for omitido, a pesquisa começa no índice 0.</span><span class="sxs-lookup"><span data-stu-id="22744-153">If fromIndex is omitted, the search starts at index 0.</span></span>
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.join'
    name: join(undefined | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="22744-154">Adiciona todos os elementos de uma matriz separados pela cadeia de caracteres de separador especificado.</span><span class="sxs-lookup"><span data-stu-id="22744-154">Adds all the elements of an array separated by the specified separator string.</span></span>
    syntax:
      content: 'function join(separator?: undefined | string)'
      parameters:
        - id: separator
          type:
            - undefined | string
          description: |
            <span data-ttu-id="22744-155">Uma cadeia de caracteres usada para separar um elemento de uma matriz do próximo na cadeia de caracteres resultante.</span><span class="sxs-lookup"><span data-stu-id="22744-155">A string used to separate one element of an array from the next in the resulting String.</span></span> <span data-ttu-id="22744-156">Se omitido, os elementos da matriz são separados por uma vírgula.</span><span class="sxs-lookup"><span data-stu-id="22744-156">If omitted, the array elements are separated with a comma.</span></span>
          optional: true
      return:
        type:
          - string
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.keys'
    name: keys()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="22744-157">Retorna um que pode ser iterado de chaves na matriz</span><span class="sxs-lookup"><span data-stu-id="22744-157">Returns an iterable of keys in the array</span></span>
    syntax:
      content: function keys()
      parameters: []
      return:
        type:
          - IterableIterator<number>
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.lastIndexOf'
    name: 'lastIndexOf(DenyAssignment, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="22744-158">Retorna o índice da última ocorrência de um valor especificado em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-158">Returns the index of the last occurrence of a specified value in an array.</span></span>
    syntax:
      content: 'function lastIndexOf(searchElement: DenyAssignment, fromIndex?: undefined | number)'
      parameters:
        - id: searchElement
          type:
            - '@azure/arm-authorization.DenyAssignment'
          description: <span data-ttu-id="22744-159">O valor a ser localizado na matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-159">The value to locate in the array.</span></span>
        - id: fromIndex
          type:
            - undefined | number
          description: |
            <span data-ttu-id="22744-160">O índice de matriz no qual iniciar a pesquisa.</span><span class="sxs-lookup"><span data-stu-id="22744-160">The array index at which to begin the search.</span></span> <span data-ttu-id="22744-161">Se fromIndex for omitido, a pesquisa começa no último índice na matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-161">If fromIndex is omitted, the search starts at the last index in the array.</span></span>
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.length'
    name: length
    fullName: length
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="22744-162">Obtém ou define o comprimento da matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-162">Gets or sets the length of the array.</span></span> <span data-ttu-id="22744-163">Isso é um número maior do que o elemento mais alto definido em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-163">This is a number one higher than the highest element defined in an array.</span></span>
    syntax:
      content: 'length: number'
      return:
        type:
          - number
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.map'
    name: 'map((value: DenyAssignment, index: number, array: DenyAssignment[]) => U, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="22744-164">Chama uma função de retorno de chamada definida em cada elemento de uma matriz e retorna uma matriz que contém os resultados.</span><span class="sxs-lookup"><span data-stu-id="22744-164">Calls a defined callback function on each element of an array, and returns an array that contains the results.</span></span>'
    syntax:
      content: 'function map<U>(callbackfn: (value: DenyAssignment, index: number, array: DenyAssignment[]) => U, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: DenyAssignment, index: number, array: DenyAssignment[]) => U'
          description: <span data-ttu-id="22744-165">Uma função que aceita até três argumentos.</span><span class="sxs-lookup"><span data-stu-id="22744-165">A function that accepts up to three arguments.</span></span> <span data-ttu-id="22744-166">O método map chama a função de callbackfn uma vez para cada elemento na matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-166">The map method calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="22744-167">Um objeto ao qual a palavra-chave this pode referir-se na função callbackfn.</span><span class="sxs-lookup"><span data-stu-id="22744-167">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="22744-168">Se thisArg for omitido, undefined será usado como este valor.</span><span class="sxs-lookup"><span data-stu-id="22744-168">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'U[]'
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.nextLink'
    name: nextLink
    fullName: nextLink
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'nextLink?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.pop'
    name: pop()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="22744-169">Remove o último elemento de uma matriz e o retorna.</span><span class="sxs-lookup"><span data-stu-id="22744-169">Removes the last element from an array and returns it.</span></span>
    syntax:
      content: function pop()
      parameters: []
      return:
        type:
          - '@azure/arm-authorization.DenyAssignment | undefined'
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.push'
    name: 'push(DenyAssignment[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="22744-170">Acrescenta novos elementos em uma matriz e retorna o novo comprimento da matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-170">Appends new elements to an array, and returns the new length of the array.</span></span>'
    syntax:
      content: 'function push(items: DenyAssignment[])'
      parameters:
        - id: items
          type:
            - '@azure/arm-authorization.DenyAssignment[]'
          description: |
            <span data-ttu-id="22744-171">Novos elementos da matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-171">New elements of the Array.</span></span>
      return:
        type:
          - number
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.reduce'
    name: 'reduce((previousValue: DenyAssignment, currentValue: DenyAssignment, currentIndex: number, array: DenyAssignment[]) => DenyAssignment)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="22744-172">Chama a função de retorno de chamada especificados para todos os elementos em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-172">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="22744-173">O valor de retorno da função de retorno de chamada é o resultado acumulado e é fornecido como um argumento na próxima chamada para a função de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="22744-173">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: DenyAssignment, currentValue: DenyAssignment, currentIndex: number, array: DenyAssignment[]) => DenyAssignment)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: DenyAssignment, currentValue: DenyAssignment, currentIndex: number, array: DenyAssignment[]) => DenyAssignment'
          description: <span data-ttu-id="22744-174">Uma função que aceita até quatro argumentos.</span><span class="sxs-lookup"><span data-stu-id="22744-174">A function that accepts up to four arguments.</span></span> <span data-ttu-id="22744-175">O método reduce chama a função de callbackfn uma vez para cada elemento na matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-175">The reduce method calls the callbackfn function one time for each element in the array.</span></span>
      return:
        type:
          - '@azure/arm-authorization.DenyAssignment'
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.reduce_1'
    name: 'reduce((previousValue: DenyAssignment, currentValue: DenyAssignment, currentIndex: number, array: DenyAssignment[]) => DenyAssignment, DenyAssignment)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="22744-176">Chama a função de retorno de chamada especificados para todos os elementos em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-176">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="22744-177">O valor de retorno da função de retorno de chamada é o resultado acumulado e é fornecido como um argumento na próxima chamada para a função de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="22744-177">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: DenyAssignment, currentValue: DenyAssignment, currentIndex: number, array: DenyAssignment[]) => DenyAssignment, initialValue: DenyAssignment)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: DenyAssignment, currentValue: DenyAssignment, currentIndex: number, array: DenyAssignment[]) => DenyAssignment'
          description: ''
        - id: initialValue
          type:
            - '@azure/arm-authorization.DenyAssignment'
          description: ''
      return:
        type:
          - '@azure/arm-authorization.DenyAssignment'
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.reduce_2'
    name: 'reduce((previousValue: U, currentValue: DenyAssignment, currentIndex: number, array: DenyAssignment[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="22744-178">Chama a função de retorno de chamada especificados para todos os elementos em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-178">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="22744-179">O valor de retorno da função de retorno de chamada é o resultado acumulado e é fornecido como um argumento na próxima chamada para a função de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="22744-179">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce<U>(callbackfn: (previousValue: U, currentValue: DenyAssignment, currentIndex: number, array: DenyAssignment[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: DenyAssignment, currentIndex: number, array: DenyAssignment[]) => U'
          description: <span data-ttu-id="22744-180">Uma função que aceita até quatro argumentos.</span><span class="sxs-lookup"><span data-stu-id="22744-180">A function that accepts up to four arguments.</span></span> <span data-ttu-id="22744-181">O método reduce chama a função de callbackfn uma vez para cada elemento na matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-181">The reduce method calls the callbackfn function one time for each element in the array.</span></span>
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="22744-182">Se initialValue for especificado, ele é usado como o valor inicial para iniciar o acúmulo.</span><span class="sxs-lookup"><span data-stu-id="22744-182">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="22744-183">A primeira chamada para a função callbackfn fornece esse valor como um argumento, em vez de um valor de matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-183">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.reduceRight'
    name: 'reduceRight((previousValue: DenyAssignment, currentValue: DenyAssignment, currentIndex: number, array: DenyAssignment[]) => DenyAssignment)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="22744-184">Chama a função de retorno de chamada especificados para todos os elementos em uma matriz, em ordem decrescente.</span><span class="sxs-lookup"><span data-stu-id="22744-184">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="22744-185">O valor de retorno da função de retorno de chamada é o resultado acumulado e é fornecido como um argumento na próxima chamada para a função de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="22744-185">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: DenyAssignment, currentValue: DenyAssignment, currentIndex: number, array: DenyAssignment[]) => DenyAssignment)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: DenyAssignment, currentValue: DenyAssignment, currentIndex: number, array: DenyAssignment[]) => DenyAssignment'
          description: <span data-ttu-id="22744-186">Uma função que aceita até quatro argumentos.</span><span class="sxs-lookup"><span data-stu-id="22744-186">A function that accepts up to four arguments.</span></span> <span data-ttu-id="22744-187">O método reduceRight chama a função callbackfn uma vez para cada elemento na matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-187">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>
      return:
        type:
          - '@azure/arm-authorization.DenyAssignment'
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.reduceRight_1'
    name: 'reduceRight((previousValue: DenyAssignment, currentValue: DenyAssignment, currentIndex: number, array: DenyAssignment[]) => DenyAssignment, DenyAssignment)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="22744-188">Chama a função de retorno de chamada especificados para todos os elementos em uma matriz, em ordem decrescente.</span><span class="sxs-lookup"><span data-stu-id="22744-188">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="22744-189">O valor de retorno da função de retorno de chamada é o resultado acumulado e é fornecido como um argumento na próxima chamada para a função de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="22744-189">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: DenyAssignment, currentValue: DenyAssignment, currentIndex: number, array: DenyAssignment[]) => DenyAssignment, initialValue: DenyAssignment)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: DenyAssignment, currentValue: DenyAssignment, currentIndex: number, array: DenyAssignment[]) => DenyAssignment'
          description: ''
        - id: initialValue
          type:
            - '@azure/arm-authorization.DenyAssignment'
          description: ''
      return:
        type:
          - '@azure/arm-authorization.DenyAssignment'
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.reduceRight_2'
    name: 'reduceRight((previousValue: U, currentValue: DenyAssignment, currentIndex: number, array: DenyAssignment[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="22744-190">Chama a função de retorno de chamada especificados para todos os elementos em uma matriz, em ordem decrescente.</span><span class="sxs-lookup"><span data-stu-id="22744-190">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="22744-191">O valor de retorno da função de retorno de chamada é o resultado acumulado e é fornecido como um argumento na próxima chamada para a função de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="22744-191">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight<U>(callbackfn: (previousValue: U, currentValue: DenyAssignment, currentIndex: number, array: DenyAssignment[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: DenyAssignment, currentIndex: number, array: DenyAssignment[]) => U'
          description: <span data-ttu-id="22744-192">Uma função que aceita até quatro argumentos.</span><span class="sxs-lookup"><span data-stu-id="22744-192">A function that accepts up to four arguments.</span></span> <span data-ttu-id="22744-193">O método reduceRight chama a função callbackfn uma vez para cada elemento na matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-193">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="22744-194">Se initialValue for especificado, ele é usado como o valor inicial para iniciar o acúmulo.</span><span class="sxs-lookup"><span data-stu-id="22744-194">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="22744-195">A primeira chamada para a função callbackfn fornece esse valor como um argumento, em vez de um valor de matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-195">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.reverse'
    name: reverse()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="22744-196">Inverte os elementos em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-196">Reverses the elements in an Array.</span></span>
    syntax:
      content: function reverse()
      parameters: []
      return:
        type:
          - '@azure/arm-authorization.DenyAssignment[]'
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.shift'
    name: shift()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="22744-197">Remove o primeiro elemento de uma matriz e o retorna.</span><span class="sxs-lookup"><span data-stu-id="22744-197">Removes the first element from an array and returns it.</span></span>
    syntax:
      content: function shift()
      parameters: []
      return:
        type:
          - '@azure/arm-authorization.DenyAssignment | undefined'
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.slice'
    name: 'slice(undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="22744-198">Retorna uma seção de uma matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-198">Returns a section of an array.</span></span>
    syntax:
      content: 'function slice(start?: undefined | number, end?: undefined | number)'
      parameters:
        - id: start
          type:
            - undefined | number
          description: <span data-ttu-id="22744-199">O início da parte especificada da matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-199">The beginning of the specified portion of the array.</span></span>
          optional: true
        - id: end
          type:
            - undefined | number
          description: |
            <span data-ttu-id="22744-200">O final da parte especificada da matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-200">The end of the specified portion of the array.</span></span>
          optional: true
      return:
        type:
          - '@azure/arm-authorization.DenyAssignment[]'
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.some'
    name: 'some((value: DenyAssignment, index: number, array: DenyAssignment[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="22744-201">Determina se a função de retorno de chamada especificada retorna true para qualquer elemento de uma matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-201">Determines whether the specified callback function returns true for any element of an array.</span></span>
    syntax:
      content: 'function some(callbackfn: (value: DenyAssignment, index: number, array: DenyAssignment[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: DenyAssignment, index: number, array: DenyAssignment[]) => boolean'
          description: '<span data-ttu-id="22744-202">Uma função que aceita até três argumentos.</span><span class="sxs-lookup"><span data-stu-id="22744-202">A function that accepts up to three arguments.</span></span> <span data-ttu-id="22744-203">Método some chama a função de callbackfn para cada elemento em array1 até que o callbackfn retorna true ou até o final da matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-203">The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="22744-204">Um objeto ao qual a palavra-chave this pode referir-se na função callbackfn.</span><span class="sxs-lookup"><span data-stu-id="22744-204">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="22744-205">Se thisArg for omitido, undefined será usado como este valor.</span><span class="sxs-lookup"><span data-stu-id="22744-205">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.sort'
    name: 'sort(undefined | (a: DenyAssignment, b: DenyAssignment) => number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="22744-206">Classifica uma matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-206">Sorts an array.</span></span>
    syntax:
      content: 'function sort(compareFn?: undefined | (a: DenyAssignment, b: DenyAssignment) => number)'
      parameters:
        - id: compareFn
          type:
            - 'undefined | (a: DenyAssignment, b: DenyAssignment) => number'
          description: |
            <span data-ttu-id="22744-207">O nome da função usada para determinar a ordem dos elementos.</span><span class="sxs-lookup"><span data-stu-id="22744-207">The name of the function used to determine the order of the elements.</span></span> <span data-ttu-id="22744-208">Se omitido, os elementos são classificados em ordem crescente, ordem de caracteres ASCII.</span><span class="sxs-lookup"><span data-stu-id="22744-208">If omitted, the elements are sorted in ascending, ASCII character order.</span></span>
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.splice_1'
    name: 'splice(number, number, DenyAssignment[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="22744-209">Remove elementos de uma matriz e, se necessário, insere novos elementos em seu lugar, retornando os elementos excluídos.</span><span class="sxs-lookup"><span data-stu-id="22744-209">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount: number, items: DenyAssignment[])'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="22744-210">O local baseado em zero na matriz da qual iniciar remoção de elementos.</span><span class="sxs-lookup"><span data-stu-id="22744-210">The zero-based location in the array from which to start removing elements.</span></span>
        - id: deleteCount
          type:
            - number
          description: <span data-ttu-id="22744-211">O número de elementos a serem removidos.</span><span class="sxs-lookup"><span data-stu-id="22744-211">The number of elements to remove.</span></span>
        - id: items
          type:
            - '@azure/arm-authorization.DenyAssignment[]'
          description: |
            <span data-ttu-id="22744-212">Elementos a serem inseridos na matriz no lugar os elementos excluídos.</span><span class="sxs-lookup"><span data-stu-id="22744-212">Elements to insert into the array in place of the deleted elements.</span></span>
      return:
        type:
          - '@azure/arm-authorization.DenyAssignment[]'
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.splice'
    name: 'splice(number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="22744-213">Remove elementos de uma matriz e, se necessário, insere novos elementos em seu lugar, retornando os elementos excluídos.</span><span class="sxs-lookup"><span data-stu-id="22744-213">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount?: undefined | number)'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="22744-214">O local baseado em zero na matriz da qual iniciar remoção de elementos.</span><span class="sxs-lookup"><span data-stu-id="22744-214">The zero-based location in the array from which to start removing elements.</span></span>
        - id: deleteCount
          type:
            - undefined | number
          description: |
            <span data-ttu-id="22744-215">O número de elementos a serem removidos.</span><span class="sxs-lookup"><span data-stu-id="22744-215">The number of elements to remove.</span></span>
          optional: true
      return:
        type:
          - '@azure/arm-authorization.DenyAssignment[]'
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.toLocaleString'
    name: toLocaleString()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="22744-216">Retorna uma representação de cadeia de caracteres de uma matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-216">Returns a string representation of an array.</span></span> <span data-ttu-id="22744-217">Os elementos são convertidos em cadeia de caracteres usando seus métodos toLocalString.</span><span class="sxs-lookup"><span data-stu-id="22744-217">The elements are converted to string using their toLocalString methods.</span></span>
    syntax:
      content: function toLocaleString()
      parameters: []
      return:
        type:
          - string
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.toString'
    name: toString()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="22744-218">Retorna uma representação de cadeia de caracteres de uma matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-218">Returns a string representation of an array.</span></span>
    syntax:
      content: function toString()
      parameters: []
      return:
        type:
          - string
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.unshift'
    name: 'unshift(DenyAssignment[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="22744-219">Insere novos elementos no início de uma matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-219">Inserts new elements at the start of an array.</span></span>
    syntax:
      content: 'function unshift(items: DenyAssignment[])'
      parameters:
        - id: items
          type:
            - '@azure/arm-authorization.DenyAssignment[]'
          description: |
            <span data-ttu-id="22744-220">Elementos a serem inseridos no início da matriz.</span><span class="sxs-lookup"><span data-stu-id="22744-220">Elements to insert at the start of the Array.</span></span>
      return:
        type:
          - number
    package: '@azure/arm-authorization'
  - uid: '@azure/arm-authorization.DenyAssignmentListResult.values'
    name: values()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="22744-221">Retorna um que pode ser iterado dos valores na matriz</span><span class="sxs-lookup"><span data-stu-id="22744-221">Returns an iterable of values in the array</span></span>
    syntax:
      content: function values()
      parameters: []
      return:
        type:
          - IterableIterator<@azure/arm-authorization.DenyAssignment>
    package: '@azure/arm-authorization'
references:
  - uid: Array<@azure/arm-authorization.DenyAssignment>
    name: DenyAssignment>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: DenyAssignment
        fullName: DenyAssignment
        uid: '@azure/arm-authorization.DenyAssignment'
      - name: '>'
        fullName: '>'
  - uid: 'ConcatArray<@azure/arm-authorization.DenyAssignment>[]'
    name: 'DenyAssignment>[]'
    spec.typeScript:
      - name: ConcatArray<
        fullName: ConcatArray<
      - name: DenyAssignment
        fullName: DenyAssignment
        uid: '@azure/arm-authorization.DenyAssignment'
      - name: '>[]'
        fullName: '>[]'
  - uid: '@azure/arm-authorization.DenyAssignment[]'
    name: 'DenyAssignment[]'
    spec.typeScript:
      - name: DenyAssignment
        fullName: DenyAssignment
        uid: '@azure/arm-authorization.DenyAssignment'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/arm-authorization.DenyAssignment'
    name: DenyAssignment
    spec.typeScript:
      - name: DenyAssignment
        fullName: DenyAssignment
        uid: '@azure/arm-authorization.DenyAssignment'
  - uid: '@azure/arm-authorization.DenyAssignment | undefined'
    name: DenyAssignment | undefined
    spec.typeScript:
      - name: DenyAssignment
        fullName: DenyAssignment
        uid: '@azure/arm-authorization.DenyAssignment'
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: IterableIterator<@azure/arm-authorization.DenyAssignment>
    name: DenyAssignment>
    spec.typeScript:
      - name: IterableIterator<
        fullName: IterableIterator<
      - name: DenyAssignment
        fullName: DenyAssignment
        uid: '@azure/arm-authorization.DenyAssignment'
      - name: '>'
        fullName: '>'