### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-containerregistry.ScopeMaps'
    name: ScopeMaps
    fullName: ScopeMaps
    children:
      - '@azure/arm-containerregistry.ScopeMaps.beginCreate'
      - '@azure/arm-containerregistry.ScopeMaps.beginDeleteMethod'
      - '@azure/arm-containerregistry.ScopeMaps.beginUpdate'
      - '@azure/arm-containerregistry.ScopeMaps.create'
      - '@azure/arm-containerregistry.ScopeMaps.deleteMethod'
      - '@azure/arm-containerregistry.ScopeMaps.get'
      - '@azure/arm-containerregistry.ScopeMaps.get_2'
      - '@azure/arm-containerregistry.ScopeMaps.get_1'
      - '@azure/arm-containerregistry.ScopeMaps.list'
      - '@azure/arm-containerregistry.ScopeMaps.list_2'
      - '@azure/arm-containerregistry.ScopeMaps.list_1'
      - '@azure/arm-containerregistry.ScopeMaps.listNext'
      - '@azure/arm-containerregistry.ScopeMaps.listNext_2'
      - '@azure/arm-containerregistry.ScopeMaps.listNext_1'
      - '@azure/arm-containerregistry.ScopeMaps.constructor'
      - '@azure/arm-containerregistry.ScopeMaps.update'
    langs:
      - typeScript
    type: class
    summary: Classe que representa um ScopeMaps.
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.ScopeMaps.beginCreate'
    name: 'beginCreate(string, string, string, ScopeMap, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Cria um mapa de escopo para um registro de contêiner com os parâmetros especificados.
    syntax:
      content: 'function beginCreate(resourceGroupName: string, registryName: string, scopeMapName: string, scopeMapCreateParameters: ScopeMap, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos ao qual pertence o registro de contêiner.
        - id: registryName
          type:
            - string
          description: O nome do registro de contêiner.
        - id: scopeMapName
          type:
            - string
          description: O nome do mapa de escopo.
        - id: scopeMapCreateParameters
          type:
            - '@azure/arm-containerregistry.ScopeMap'
          description: Os parâmetros para a criação de um mapa de escopo.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.ScopeMaps.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Excluir um mapa de escopo de um registro de contêiner.
    syntax:
      content: 'function beginDeleteMethod(resourceGroupName: string, registryName: string, scopeMapName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos ao qual pertence o registro de contêiner.
        - id: registryName
          type:
            - string
          description: O nome do registro de contêiner.
        - id: scopeMapName
          type:
            - string
          description: O nome do mapa de escopo.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.ScopeMaps.beginUpdate'
    name: 'beginUpdate(string, string, string, ScopeMapUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Atualiza um mapa de escopo com os parâmetros especificados.
    syntax:
      content: 'function beginUpdate(resourceGroupName: string, registryName: string, scopeMapName: string, scopeMapUpdateParameters: ScopeMapUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos ao qual pertence o registro de contêiner.
        - id: registryName
          type:
            - string
          description: O nome do registro de contêiner.
        - id: scopeMapName
          type:
            - string
          description: O nome do mapa de escopo.
        - id: scopeMapUpdateParameters
          type:
            - '@azure/arm-containerregistry.ScopeMapUpdateParameters'
          description: Os parâmetros para a atualização de um mapa de escopo.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.ScopeMaps.create'
    name: 'create(string, string, string, ScopeMap, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Cria um mapa de escopo para um registro de contêiner com os parâmetros especificados.
    syntax:
      content: 'function create(resourceGroupName: string, registryName: string, scopeMapName: string, scopeMapCreateParameters: ScopeMap, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos ao qual pertence o registro de contêiner.
        - id: registryName
          type:
            - string
          description: O nome do registro de contêiner.
        - id: scopeMapName
          type:
            - string
          description: O nome do mapa de escopo.
        - id: scopeMapCreateParameters
          type:
            - '@azure/arm-containerregistry.ScopeMap'
          description: Os parâmetros para a criação de um mapa de escopo.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ScopeMapsCreateResponse>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.ScopeMaps.deleteMethod'
    name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Excluir um mapa de escopo de um registro de contêiner.
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, registryName: string, scopeMapName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos ao qual pertence o registro de contêiner.
        - id: registryName
          type:
            - string
          description: O nome do registro de contêiner.
        - id: scopeMapName
          type:
            - string
          description: O nome do mapa de escopo.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.ScopeMaps.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Obtém as propriedades do mapa do escopo especificado.
    syntax:
      content: 'function get(resourceGroupName: string, registryName: string, scopeMapName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos ao qual pertence o registro de contêiner.
        - id: registryName
          type:
            - string
          description: O nome do registro de contêiner.
        - id: scopeMapName
          type:
            - string
          description: O nome do mapa de escopo.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ScopeMapsGetResponse>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.ScopeMaps.get_2'
    name: 'get(string, string, string, RequestOptionsBase, ServiceCallback<ScopeMap>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, registryName: string, scopeMapName: string, options: RequestOptionsBase, callback: ServiceCallback<ScopeMap>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos ao qual pertence o registro de contêiner.
        - id: registryName
          type:
            - string
          description: O nome do registro de contêiner.
        - id: scopeMapName
          type:
            - string
          description: O nome do mapa de escopo.
        - id: options
          type:
            - RequestOptionsBase
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerregistry.ScopeMap>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.ScopeMapsGetResponse>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.ScopeMaps.get_1'
    name: 'get(string, string, string, ServiceCallback<ScopeMap>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, registryName: string, scopeMapName: string, callback: ServiceCallback<ScopeMap>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos ao qual pertence o registro de contêiner.
        - id: registryName
          type:
            - string
          description: O nome do registro de contêiner.
        - id: scopeMapName
          type:
            - string
          description: O nome do mapa de escopo.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerregistry.ScopeMap>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.ScopeMapsGetResponse>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.ScopeMaps.list'
    name: 'list(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Listas de todo o escopo é mapeado para o registro de contêiner especificado.
    syntax:
      content: 'function list(resourceGroupName: string, registryName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos ao qual pertence o registro de contêiner.
        - id: registryName
          type:
            - string
          description: O nome do registro de contêiner.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ScopeMapsListResponse>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.ScopeMaps.list_2'
    name: 'list(string, string, RequestOptionsBase, ServiceCallback<ScopeMapListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(resourceGroupName: string, registryName: string, options: RequestOptionsBase, callback: ServiceCallback<ScopeMapListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos ao qual pertence o registro de contêiner.
        - id: registryName
          type:
            - string
          description: O nome do registro de contêiner.
        - id: options
          type:
            - RequestOptionsBase
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerregistry.ScopeMapListResult>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.ScopeMapsListResponse>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.ScopeMaps.list_1'
    name: 'list(string, string, ServiceCallback<ScopeMapListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(resourceGroupName: string, registryName: string, callback: ServiceCallback<ScopeMapListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos ao qual pertence o registro de contêiner.
        - id: registryName
          type:
            - string
          description: O nome do registro de contêiner.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerregistry.ScopeMapListResult>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.ScopeMapsListResponse>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.ScopeMaps.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Listas de todo o escopo é mapeado para o registro de contêiner especificado.
    syntax:
      content: 'function listNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink da chamada bem-sucedida anterior à operação de lista.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ScopeMapsListNextResponse>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.ScopeMaps.listNext_2'
    name: 'listNext(string, RequestOptionsBase, ServiceCallback<ScopeMapListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<ScopeMapListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink da chamada bem-sucedida anterior à operação de lista.
        - id: options
          type:
            - RequestOptionsBase
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerregistry.ScopeMapListResult>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.ScopeMapsListNextResponse>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.ScopeMaps.listNext_1'
    name: 'listNext(string, ServiceCallback<ScopeMapListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, callback: ServiceCallback<ScopeMapListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink da chamada bem-sucedida anterior à operação de lista.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerregistry.ScopeMapListResult>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.ScopeMapsListNextResponse>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.ScopeMaps.constructor'
    name: ScopeMaps(ContainerRegistryManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Crie um ScopeMaps.
    syntax:
      content: 'new ScopeMaps(client: ContainerRegistryManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-containerregistry.ContainerRegistryManagementClientContext'
          description: |
            Referência para o cliente do serviço.
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.ScopeMaps.update'
    name: 'update(string, string, string, ScopeMapUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Atualiza um mapa de escopo com os parâmetros especificados.
    syntax:
      content: 'function update(resourceGroupName: string, registryName: string, scopeMapName: string, scopeMapUpdateParameters: ScopeMapUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos ao qual pertence o registro de contêiner.
        - id: registryName
          type:
            - string
          description: O nome do registro de contêiner.
        - id: scopeMapName
          type:
            - string
          description: O nome do mapa de escopo.
        - id: scopeMapUpdateParameters
          type:
            - '@azure/arm-containerregistry.ScopeMapUpdateParameters'
          description: Os parâmetros para a atualização de um mapa de escopo.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ScopeMapsUpdateResponse>
    package: '@azure/arm-containerregistry'
references:
  - uid: '@azure/arm-containerregistry.ContainerRegistryManagementClientContext'
    name: ContainerRegistryManagementClientContext
    spec.typeScript:
      - name: ContainerRegistryManagementClientContext
        fullName: ContainerRegistryManagementClientContext
        uid: '@azure/arm-containerregistry.ContainerRegistryManagementClientContext'
  - uid: '@azure/arm-containerregistry.ScopeMap'
    name: ScopeMap
    spec.typeScript:
      - name: ScopeMap
        fullName: ScopeMap
        uid: '@azure/arm-containerregistry.ScopeMap'
  - uid: '@azure/arm-containerregistry.ScopeMapUpdateParameters'
    name: ScopeMapUpdateParameters
    spec.typeScript:
      - name: ScopeMapUpdateParameters
        fullName: ScopeMapUpdateParameters
        uid: '@azure/arm-containerregistry.ScopeMapUpdateParameters'
  - uid: ServiceCallback<@azure/arm-containerregistry.ScopeMap>
    name: ScopeMap>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ScopeMap
        fullName: ScopeMap
        uid: '@azure/arm-containerregistry.ScopeMap'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-containerregistry.ScopeMapListResult>
    name: ScopeMapListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ScopeMapListResult
        fullName: ScopeMapListResult
        uid: '@azure/arm-containerregistry.ScopeMapListResult'
      - name: '>'
        fullName: '>'