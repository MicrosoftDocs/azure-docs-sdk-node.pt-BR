### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.Sender'
    name: Sender
    fullName: Sender
    children:
      - '@azure/service-bus.Sender.cancelScheduledMessage'
      - '@azure/service-bus.Sender.cancelScheduledMessages'
      - '@azure/service-bus.Sender.close'
      - '@azure/service-bus.Sender.isClosed'
      - '@azure/service-bus.Sender.scheduleMessage'
      - '@azure/service-bus.Sender.scheduleMessages'
      - '@azure/service-bus.Sender.send'
      - '@azure/service-bus.Sender.sendBatch'
    langs:
      - typeScript
    type: class
    summary: |-
      <span data-ttu-id="44540-101">A classe de remetente pode ser usada para enviar mensagens, agendar mensagens sejam enviados em um momento posterior e Cancelar tais mensagens agendadas.</span><span class="sxs-lookup"><span data-stu-id="44540-101">The Sender class can be used to send messages, schedule messages to be sent at a later time and cancel such scheduled messages.</span></span>
      <span data-ttu-id="44540-102">Use o `createSender` função no QueueClient ou TopicClient para criar uma instância de um remetente.</span><span class="sxs-lookup"><span data-stu-id="44540-102">Use the `createSender` function on the QueueClient or TopicClient to instantiate a Sender.</span></span>
      <span data-ttu-id="44540-103">A classe do remetente é uma abstração sobre o link de remetente AMQP subjacente.</span><span class="sxs-lookup"><span data-stu-id="44540-103">The Sender class is an abstraction over the underlying AMQP sender link.</span></span>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.cancelScheduledMessage'
    name: cancelScheduledMessage(Long)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="44540-104">Cancela uma mensagem que foi agendada para aparecer em uma fila/assinatura do barramento de serviço.</span><span class="sxs-lookup"><span data-stu-id="44540-104">Cancels a message that was scheduled to appear on a ServiceBus Queue/Subscription.</span></span>
    syntax:
      content: 'function cancelScheduledMessage(sequenceNumber: Long)'
      parameters:
        - id: sequenceNumber
          type:
            - Long
          description: <span data-ttu-id="44540-105">O número de sequência da mensagem a ser cancelada.</span><span class="sxs-lookup"><span data-stu-id="44540-105">The sequence number of the message to be cancelled.</span></span>
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.cancelScheduledMessages'
    name: 'cancelScheduledMessages(Long[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="44540-106">Cancela a várias mensagens que foram agendadas para aparecer em uma fila/assinatura do barramento de serviço.</span><span class="sxs-lookup"><span data-stu-id="44540-106">Cancels multiple messages that were scheduled to appear on a ServiceBus Queue/Subscription.</span></span>
    syntax:
      content: 'function cancelScheduledMessages(sequenceNumbers: Long[])'
      parameters:
        - id: sequenceNumbers
          type:
            - 'Long[]'
          description: <span data-ttu-id="44540-107">Uma matriz de números de sequência das mensagens a ser cancelada.</span><span class="sxs-lookup"><span data-stu-id="44540-107">An Array of sequence numbers of the messages to be cancelled.</span></span>
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.close'
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="44540-108">Fecha o link do remetente AMQP subjacente.</span><span class="sxs-lookup"><span data-stu-id="44540-108">Closes the underlying AMQP sender link.</span></span>
      <span data-ttu-id="44540-109">Depois de fechada, o remetente não pode ser usado para nenhuma outra operação.</span><span class="sxs-lookup"><span data-stu-id="44540-109">Once closed, the sender cannot be used for any further operations.</span></span>
      <span data-ttu-id="44540-110">Use o `createSender` função no QueueClient ou TopicClient para instanciar um novo remetente</span><span class="sxs-lookup"><span data-stu-id="44540-110">Use the `createSender` function on the QueueClient or TopicClient to instantiate a new Sender</span></span>
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.isClosed'
    name: isClosed
    fullName: isClosed
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="44540-111">Retorna `true` se o remetente ou o cliente que criou a ele foi fechado</span><span class="sxs-lookup"><span data-stu-id="44540-111">Returns `true` if either the sender or the client that created it has been closed</span></span>
    syntax:
      content: 'isClosed: boolean'
      return:
        type:
          - boolean
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.scheduleMessage'
    name: 'scheduleMessage(Date, SendableMessageInfo)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="44540-112">Agendas dada mensagem apareça no barramento de serviço de fila/assinatura em um momento posterior.</span><span class="sxs-lookup"><span data-stu-id="44540-112">Schedules given message to appear on Service Bus Queue/Subscription at a later time.</span></span>
    syntax:
      content: 'function scheduleMessage(scheduledEnqueueTimeUtc: Date, message: SendableMessageInfo)'
      parameters:
        - id: scheduledEnqueueTimeUtc
          type:
            - Date
          description: <span data-ttu-id="44540-113">A hora UTC em que a mensagem deve ser enfileirada.</span><span class="sxs-lookup"><span data-stu-id="44540-113">The UTC time at which the message should be enqueued.</span></span>
        - id: message
          type:
            - '@azure/service-bus.SendableMessageInfo'
          description: <span data-ttu-id="44540-114">A mensagem de que precisa ser agendada.</span><span class="sxs-lookup"><span data-stu-id="44540-114">The message that needs to be scheduled.</span></span>
      return:
        type:
          - Promise<Long>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.scheduleMessages'
    name: 'scheduleMessages(Date, SendableMessageInfo[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="44540-115">Agendas recebe mensagens apareçam no barramento de serviço de fila/assinatura em um momento posterior.</span><span class="sxs-lookup"><span data-stu-id="44540-115">Schedules given messages to appear on Service Bus Queue/Subscription at a later time.</span></span>
    syntax:
      content: 'function scheduleMessages(scheduledEnqueueTimeUtc: Date, messages: SendableMessageInfo[])'
      parameters:
        - id: scheduledEnqueueTimeUtc
          type:
            - Date
          description: <span data-ttu-id="44540-116">A hora UTC em que as mensagens devem ser enfileirado.</span><span class="sxs-lookup"><span data-stu-id="44540-116">The UTC time at which the messages should be enqueued.</span></span>
        - id: messages
          type:
            - '@azure/service-bus.SendableMessageInfo[]'
          description: <span data-ttu-id="44540-117">Matriz de mensagens que precisa ser agendada.</span><span class="sxs-lookup"><span data-stu-id="44540-117">Array of Messages that need to be scheduled.</span></span>
      return:
        type:
          - 'Promise<Long[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.send'
    name: send(SendableMessageInfo)
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="44540-118">Envia a mensagem fornecida após a criação de um link de remetente do AMQP se ele ainda não existe.</span><span class="sxs-lookup"><span data-stu-id="44540-118">Sends the given message after creating an AMQP Sender link if it doesnt already exists.</span></span>
      <span data-ttu-id="44540-119">Para enviar uma mensagem para um `session` e/ou `partition` fila/tópico habilitado, defina as `sessionId` e/ou `partitionKey` propriedades respectivamente na mensagem.</span><span class="sxs-lookup"><span data-stu-id="44540-119">To send a message to a `session` and/or `partition` enabled Queue/Topic, set the `sessionId` and/or `partitionKey` properties respectively on the message.</span></span>
    syntax:
      content: 'function send(message: SendableMessageInfo)'
      parameters:
        - id: message
          type:
            - '@azure/service-bus.SendableMessageInfo'
          description: <span data-ttu-id="44540-120">Mensagem a enviar.</span><span class="sxs-lookup"><span data-stu-id="44540-120">Message to send.</span></span>
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.sendBatch'
    name: 'sendBatch(SendableMessageInfo[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="44540-121">Envia as mensagens de determinado em um único lote, ou seja, em uma única mensagem do AMQP, depois de criar um link de remetente do AMQP se ele ainda não existe.</span><span class="sxs-lookup"><span data-stu-id="44540-121">Sends the given messages in a single batch i.e. in a single AMQP message after creating an AMQP Sender link if it doesnt already exists.</span></span>
      - <span data-ttu-id="44540-122">Para enviar mensagens para um `session` e/ou `partition` fila/tópico habilitado, defina as `sessionId` e/ou `partitionKey` propriedades respectivamente nas mensagens.</span><span class="sxs-lookup"><span data-stu-id="44540-122">To send messages to a `session` and/or `partition` enabled Queue/Topic, set the `sessionId` and/or `partitionKey` properties respectively on the messages.</span></span>
      - <span data-ttu-id="44540-123">Ao fazer isso, todas as mensagens em lote devem ter o mesmo `sessionId` (se estiver usando sessões) e o mesmo `parititionKey` (se estiver usando partições).</span><span class="sxs-lookup"><span data-stu-id="44540-123">When doing so, all messages in the batch should have the same `sessionId` (if using sessions) and the same `parititionKey` (if using paritions).</span></span>
    syntax:
      content: 'function sendBatch(messages: SendableMessageInfo[])'
      parameters:
        - id: messages
          type:
            - '@azure/service-bus.SendableMessageInfo[]'
          description: <span data-ttu-id="44540-124">Uma matriz de objetos de SendableMessageInfo a serem enviados em uma mensagem de lote.</span><span class="sxs-lookup"><span data-stu-id="44540-124">An array of SendableMessageInfo objects to be sent in a Batch message.</span></span>
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
references:
  - uid: '@azure/service-bus.SendableMessageInfo'
    name: SendableMessageInfo
    spec.typeScript:
      - name: SendableMessageInfo
        fullName: SendableMessageInfo
        uid: '@azure/service-bus.SendableMessageInfo'
  - uid: '@azure/service-bus.SendableMessageInfo[]'
    name: 'SendableMessageInfo[]'
    spec.typeScript:
      - name: SendableMessageInfo
        fullName: SendableMessageInfo
        uid: '@azure/service-bus.SendableMessageInfo'
      - name: '[]'
        fullName: '[]'