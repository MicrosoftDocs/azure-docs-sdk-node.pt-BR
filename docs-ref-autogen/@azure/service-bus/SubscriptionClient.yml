### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.SubscriptionClient'
    name: SubscriptionClient
    fullName: SubscriptionClient
    children:
      - '@azure/service-bus.SubscriptionClient.addRule'
      - '@azure/service-bus.SubscriptionClient.close'
      - '@azure/service-bus.SubscriptionClient.createReceiver'
      - '@azure/service-bus.SubscriptionClient.createReceiver_1'
      - '@azure/service-bus.SubscriptionClient.defaultRuleName'
      - '@azure/service-bus.SubscriptionClient.entityPath'
      - '@azure/service-bus.SubscriptionClient.getRules'
      - '@azure/service-bus.SubscriptionClient.id'
      - '@azure/service-bus.SubscriptionClient.peek'
      - '@azure/service-bus.SubscriptionClient.peekBySequenceNumber'
      - '@azure/service-bus.SubscriptionClient.removeRule'
      - '@azure/service-bus.SubscriptionClient.subscriptionName'
      - '@azure/service-bus.SubscriptionClient.topicName'
    langs:
      - typeScript
    type: class
    summary: |-
      <span data-ttu-id="99fcf-101">Descreve o cliente que permite interagir com uma assinatura do barramento de serviço.</span><span class="sxs-lookup"><span data-stu-id="99fcf-101">Describes the client that allows interacting with a Service Bus Subscription.</span></span>
      <span data-ttu-id="99fcf-102">Use o `createSubscriptionClient` função no objeto ServiceBusClient para instanciar um SubscriptionClient</span><span class="sxs-lookup"><span data-stu-id="99fcf-102">Use the `createSubscriptionClient` function on the ServiceBusClient object to instantiate a SubscriptionClient</span></span>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.addRule'
    name: 'addRule(string, boolean | string | CorrelationFilter, undefined | string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="99fcf-103">Adiciona uma regra na assinatura, conforme definido pelo nome da regra fornecido, filtro e ação.</span><span class="sxs-lookup"><span data-stu-id="99fcf-103">Adds a rule on the subscription as defined by the given rule name, filter and action.</span></span>
      <span data-ttu-id="99fcf-104">**Observação**: Remova o filtro verdadeiro padrão da assinatura antes de adicionar uma regra.</span><span class="sxs-lookup"><span data-stu-id="99fcf-104">**Note**: Remove the default true filter on the subscription before adding a rule.</span></span>
      <span data-ttu-id="99fcf-105">Caso contrário, a regra adicionada terá nenhum efeito, pois o filtro verdadeiro sempre resultará na assinatura do recebimento de todas as mensagens.</span><span class="sxs-lookup"><span data-stu-id="99fcf-105">Otherwise, the added rule will have no affect as the true filter will always result in the subscription receiving all messages.</span></span>
    syntax:
      content: 'function addRule(ruleName: string, filter: boolean | string | CorrelationFilter, sqlRuleActionExpression?: undefined | string)'
      parameters:
        - id: ruleName
          type:
            - string
          description: <span data-ttu-id="99fcf-106">Nome da regra</span><span class="sxs-lookup"><span data-stu-id="99fcf-106">Name of the rule</span></span>
        - id: filter
          type:
            - boolean | string | @azure/service-bus.CorrelationFilter
          description: '<span data-ttu-id="99fcf-107">Um booliano, expressão SQL ou um filtro de correlação.</span><span class="sxs-lookup"><span data-stu-id="99fcf-107">A Boolean, SQL expression or a Correlation filter.</span></span> <span data-ttu-id="99fcf-108">Para obter a sintaxe de filtro SQL, consulte [sintaxe SQLFilter](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-messaging-sql-filter).</span><span class="sxs-lookup"><span data-stu-id="99fcf-108">For SQL Filter syntax, see [SQLFilter syntax](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-messaging-sql-filter).</span></span>'
        - id: sqlRuleActionExpression
          type:
            - undefined | string
          description: |
            <span data-ttu-id="99fcf-109">Ação a ser executada se a mensagem satisfaz a expressão de filtragem.</span><span class="sxs-lookup"><span data-stu-id="99fcf-109">Action to perform if the message satisfies the filtering expression.</span></span> <span data-ttu-id="99fcf-110">Para obter a sintaxe da ação de regra de SQL, consulte [sintaxe SQLRuleAction](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-messaging-sql-rule-action).</span><span class="sxs-lookup"><span data-stu-id="99fcf-110">For SQL Rule Action syntax, see [SQLRuleAction syntax](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-messaging-sql-rule-action).</span></span>
          optional: true
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.close'
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="99fcf-111">Fecha o link AMQP para os receptores criados por esse cliente.</span><span class="sxs-lookup"><span data-stu-id="99fcf-111">Closes the AMQP link for the receivers created by this client.</span></span>
      <span data-ttu-id="99fcf-112">Depois de fechada, nem o SubscriptionClient nem seus destinatários podem ser usados para nenhuma outra operação.</span><span class="sxs-lookup"><span data-stu-id="99fcf-112">Once closed, neither the SubscriptionClient nor its receivers can be used for any further operations.</span></span>
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.createReceiver'
    name: createReceiver(ReceiveMode)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="99fcf-113">Cria um receptor para receber mensagens de uma assinatura que não têm sessões habilitadas.</span><span class="sxs-lookup"><span data-stu-id="99fcf-113">Creates a Receiver for receiving messages from a Subscription which does not have sessions enabled.</span></span>
      - <span data-ttu-id="99fcf-114">Gera o erro se um receptor de aberto já existe para este SubscriptionClient.</span><span class="sxs-lookup"><span data-stu-id="99fcf-114">Throws error if an open receiver already exists for this SubscriptionClient.</span></span>
      - <span data-ttu-id="99fcf-115">Lança `InvalidOperationError` se a assinatura tiver sessões habilitadas (nesse caso, use a sobrecarga desse método que usa `sessionOptions` argumento)</span><span class="sxs-lookup"><span data-stu-id="99fcf-115">Throws `InvalidOperationError` if the Subscription has sessions enabled (in which case, use the overload of this method which takes `sessionOptions` argument)</span></span>
    syntax:
      content: 'function createReceiver(receiveMode: ReceiveMode)'
      parameters:
        - id: receiveMode
          type:
            - '@azure/service-bus.ReceiveMode'
          description: |
            <span data-ttu-id="99fcf-116">Uma enumeração que indica o modo no qual as mensagens devem ser recebidas.</span><span class="sxs-lookup"><span data-stu-id="99fcf-116">An enum indicating the mode in which messages should be received.</span></span> <span data-ttu-id="99fcf-117">Os valores possíveis são:</span><span class="sxs-lookup"><span data-stu-id="99fcf-117">Possible values are:</span></span>
            - <span data-ttu-id="99fcf-118">`ReceiveMode.peekLock`: Depois que uma mensagem é recebida nesse modo, o destinatário possui um bloqueio na mensagem por um período específico.</span><span class="sxs-lookup"><span data-stu-id="99fcf-118">`ReceiveMode.peekLock`: Once a message is received in this mode, the receiver has a lock on the message for a particular duration.</span></span> <span data-ttu-id="99fcf-119">Se a mensagem não estiver totalmente liquidada, desta vez, ela chega à volta no barramento de serviço a ser obtido, a próxima operação de recebimento.</span><span class="sxs-lookup"><span data-stu-id="99fcf-119">If the message is not settled by this time, it lands back on Service Bus to be fetched by the next receive operation.</span></span>
            - <span data-ttu-id="99fcf-120">`ReceiveMode.receiveAndDelete`: As mensagens recebidas neste modo automaticamente removidas do barramento de serviço.</span><span class="sxs-lookup"><span data-stu-id="99fcf-120">`ReceiveMode.receiveAndDelete`: Messages received in this mode get automatically removed from Service Bus.</span></span>
      return:
        type:
          - '@azure/service-bus.Receiver'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.createReceiver_1'
    name: 'createReceiver(ReceiveMode, SessionReceiverOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="99fcf-121">Cria um receptor para receber mensagens de uma sessão habilitada a assinatura.</span><span class="sxs-lookup"><span data-stu-id="99fcf-121">Creates a Receiver for receiving messages from a session enabled Subscription.</span></span> <span data-ttu-id="99fcf-122">Quando nenhum sessionId é fornecida, a sessão aleatória entre as sessões disponíveis é usada.</span><span class="sxs-lookup"><span data-stu-id="99fcf-122">When no sessionId is given, a random session among the available sessions is used.</span></span>
      - <span data-ttu-id="99fcf-123">Gera o erro se um receptor de aberto já existe para determinado sessionId.</span><span class="sxs-lookup"><span data-stu-id="99fcf-123">Throws error if an open receiver already exists for given sessionId.</span></span>
      - <span data-ttu-id="99fcf-124">Lança `SessionCannotBeLockedError` se a assinatura não tem sessões habilitadas (nesse caso, não passe a `sessionOptions` argumento) ou se o barramento de serviço não for capaz de obter um bloqueio na sessão (na qual caso tentam novamente após algum tempo)</span><span class="sxs-lookup"><span data-stu-id="99fcf-124">Throws `SessionCannotBeLockedError` if the Subscription does not have sessions enabled (in which case do not pass the `sessionOptions` argument) or if Service Bus is not able to get a lock on the session (in which case try again after some time)</span></span>
    syntax:
      content: 'function createReceiver(receiveMode: ReceiveMode, sessionOptions: SessionReceiverOptions)'
      parameters:
        - id: receiveMode
          type:
            - '@azure/service-bus.ReceiveMode'
          description: |-
            <span data-ttu-id="99fcf-125">Uma enumeração que indica o modo no qual as mensagens devem ser recebidas.</span><span class="sxs-lookup"><span data-stu-id="99fcf-125">An enum indicating the mode in which messages should be received.</span></span> <span data-ttu-id="99fcf-126">Os valores possíveis são:</span><span class="sxs-lookup"><span data-stu-id="99fcf-126">Possible values are:</span></span>
            - <span data-ttu-id="99fcf-127">`ReceiveMode.peekLock`: Depois que uma mensagem é recebida nesse modo, o destinatário possui um bloqueio na mensagem por um período específico.</span><span class="sxs-lookup"><span data-stu-id="99fcf-127">`ReceiveMode.peekLock`: Once a message is received in this mode, the receiver has a lock on the message for a particular duration.</span></span> <span data-ttu-id="99fcf-128">Se a mensagem não estiver totalmente liquidada, desta vez, ela chega à volta no barramento de serviço a ser obtido, a próxima operação de recebimento.</span><span class="sxs-lookup"><span data-stu-id="99fcf-128">If the message is not settled by this time, it lands back on Service Bus to be fetched by the next receive operation.</span></span>
            - <span data-ttu-id="99fcf-129">`ReceiveMode.receiveAndDelete`: As mensagens recebidas neste modo automaticamente removidas do barramento de serviço.</span><span class="sxs-lookup"><span data-stu-id="99fcf-129">`ReceiveMode.receiveAndDelete`: Messages received in this mode get automatically removed from Service Bus.</span></span>
        - id: sessionOptions
          type:
            - '@azure/service-bus.SessionReceiverOptions'
          description: |
            <span data-ttu-id="99fcf-130">Opções para fornecer sessionId e a duração de renovação de bloqueio automático para o destinatário de sessão.</span><span class="sxs-lookup"><span data-stu-id="99fcf-130">Options to provide sessionId and duration of automatic lock renewal for the session receiver.</span></span>
      return:
        type:
          - '@azure/service-bus.SessionReceiver'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.defaultRuleName'
    name: defaultRuleName
    fullName: defaultRuleName
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="99fcf-131">O nome da regra padrão na assinatura.</span><span class="sxs-lookup"><span data-stu-id="99fcf-131">The name of the default rule on the subscription.</span></span>
    syntax:
      content: 'defaultRuleName: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.entityPath'
    name: entityPath
    fullName: entityPath
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="99fcf-132">O caminho para a assinatura do barramento de serviço para o qual esse cliente é criado.</span><span class="sxs-lookup"><span data-stu-id="99fcf-132">The path for the Service Bus Subscription for which this client is created.</span></span>
    syntax:
      content: 'entityPath: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.getRules'
    name: getRules()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="99fcf-133">Obtém todas as regras associadas à assinatura</span><span class="sxs-lookup"><span data-stu-id="99fcf-133">Gets all rules associated with the subscription</span></span>
    syntax:
      content: function getRules()
      parameters: []
      return:
        type:
          - 'Promise<@azure/service-bus.RuleDescription[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="99fcf-134">Um identificador exclusivo para este cliente.</span><span class="sxs-lookup"><span data-stu-id="99fcf-134">A unique identifier for this client.</span></span>
    syntax:
      content: 'id: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.peek'
    name: peek(undefined | number)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="99fcf-135">Busca o próximo lote de mensagens ativas (incluindo adiada, mas não morto mensagens).</span><span class="sxs-lookup"><span data-stu-id="99fcf-135">Fetches the next batch of active messages (including deferred but not deadlettered messages).</span></span>
      - <span data-ttu-id="99fcf-136">A primeira chamada para `peek()` busca a primeira mensagem ativa.</span><span class="sxs-lookup"><span data-stu-id="99fcf-136">The first call to `peek()` fetches the first active message.</span></span> <span data-ttu-id="99fcf-137">Cada chamada subsequente busca a mensagem subsequente.</span><span class="sxs-lookup"><span data-stu-id="99fcf-137">Each subsequent call fetches the subsequent message.</span></span>
      - <span data-ttu-id="99fcf-138">Ao contrário de um `received` mensagem, `peeked` mensagem é uma versão somente leitura da mensagem.</span><span class="sxs-lookup"><span data-stu-id="99fcf-138">Unlike a `received` message, `peeked` message is a read-only version of the message.</span></span>
      <span data-ttu-id="99fcf-139">Ele não pode ser `Completed/Abandoned/Deferred/Deadlettered`.</span><span class="sxs-lookup"><span data-stu-id="99fcf-139">It cannot be `Completed/Abandoned/Deferred/Deadlettered`.</span></span> <span data-ttu-id="99fcf-140">O bloqueio não pode ser renovado.</span><span class="sxs-lookup"><span data-stu-id="99fcf-140">The lock on it cannot be renewed.</span></span>
    syntax:
      content: 'function peek(maxMessageCount?: undefined | number)'
      parameters:
        - id: maxMessageCount
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.peekBySequenceNumber'
    name: 'peekBySequenceNumber(Long, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="99fcf-141">Exibe o número desejado de mensagens ativas (incluindo adiada, mas não morto mensagens) do número de sequência especificado.</span><span class="sxs-lookup"><span data-stu-id="99fcf-141">Peeks the desired number of active messages (including deferred but not deadlettered messages) from the specified sequence number.</span></span>
      - <span data-ttu-id="99fcf-142">Ao contrário de um `received` mensagem, `peeked` mensagem é uma versão somente leitura da mensagem.</span><span class="sxs-lookup"><span data-stu-id="99fcf-142">Unlike a `received` message, `peeked` message is a read-only version of the message.</span></span>
      <span data-ttu-id="99fcf-143">Ele não pode ser `Completed/Abandoned/Deferred/Deadlettered`.</span><span class="sxs-lookup"><span data-stu-id="99fcf-143">It cannot be `Completed/Abandoned/Deferred/Deadlettered`.</span></span> <span data-ttu-id="99fcf-144">O bloqueio não pode ser renovado.</span><span class="sxs-lookup"><span data-stu-id="99fcf-144">The lock on it cannot be renewed.</span></span>
    syntax:
      content: 'function peekBySequenceNumber(fromSequenceNumber: Long, maxMessageCount?: undefined | number)'
      parameters:
        - id: fromSequenceNumber
          type:
            - Long
          description: <span data-ttu-id="99fcf-145">O número de sequência a partir do qual ler a mensagem.</span><span class="sxs-lookup"><span data-stu-id="99fcf-145">The sequence number from where to read the message.</span></span>
        - id: maxMessageCount
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.removeRule'
    name: removeRule(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="99fcf-146">Remove a regra na assinatura identificada pelo nome da regra fornecido.</span><span class="sxs-lookup"><span data-stu-id="99fcf-146">Removes the rule on the subscription identified by the given rule name.</span></span>
      <span data-ttu-id="99fcf-147">**Cuidado**: Se todas as regras em uma assinatura são removidas, a assinatura não receberá mais mensagens.</span><span class="sxs-lookup"><span data-stu-id="99fcf-147">**Caution**: If all rules on a subscription are removed, then the subscription will not receive any more messages.</span></span>
    syntax:
      content: 'function removeRule(ruleName: string)'
      parameters:
        - id: ruleName
          type:
            - string
          description: |+

      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.subscriptionName'
    name: subscriptionName
    fullName: subscriptionName
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="99fcf-148">O nome da assinatura do barramento de serviço para o qual esse cliente é criado.</span><span class="sxs-lookup"><span data-stu-id="99fcf-148">The name of the Service Bus Subscription for which this client is created.</span></span>
    syntax:
      content: 'subscriptionName: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.topicName'
    name: topicName
    fullName: topicName
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="99fcf-149">O nome do tópico do barramento de serviço cuja assinatura, esse cliente é criado.</span><span class="sxs-lookup"><span data-stu-id="99fcf-149">The name of the Service Bus Topic for whose Subscription, this client is created.</span></span>'
    syntax:
      content: 'topicName: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
references:
  - uid: boolean | string | @azure/service-bus.CorrelationFilter
    name: CorrelationFilter
    spec.typeScript:
      - name: 'boolean | string | '
        fullName: 'boolean | string | '
      - name: CorrelationFilter
        fullName: CorrelationFilter
        uid: '@azure/service-bus.CorrelationFilter'
  - uid: '@azure/service-bus.ReceiveMode'
    name: ReceiveMode
    spec.typeScript:
      - name: ReceiveMode
        fullName: ReceiveMode
        uid: '@azure/service-bus.ReceiveMode'
  - uid: '@azure/service-bus.Receiver'
    name: Receiver
    spec.typeScript:
      - name: Receiver
        fullName: Receiver
        uid: '@azure/service-bus.Receiver'
  - uid: '@azure/service-bus.SessionReceiverOptions'
    name: SessionReceiverOptions
    spec.typeScript:
      - name: SessionReceiverOptions
        fullName: SessionReceiverOptions
        uid: '@azure/service-bus.SessionReceiverOptions'
  - uid: '@azure/service-bus.SessionReceiver'
    name: SessionReceiver
    spec.typeScript:
      - name: SessionReceiver
        fullName: SessionReceiver
        uid: '@azure/service-bus.SessionReceiver'
  - uid: 'Promise<@azure/service-bus.RuleDescription[]>'
    name: 'RuleDescription[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: RuleDescription
        fullName: RuleDescription
        uid: '@azure/service-bus.RuleDescription'
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    name: 'ReceivedMessageInfo[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReceivedMessageInfo
        fullName: ReceivedMessageInfo
        uid: '@azure/service-bus.ReceivedMessageInfo'
      - name: '[]>'
        fullName: '[]>'