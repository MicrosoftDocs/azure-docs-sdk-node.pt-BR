### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.QueueClient'
    name: QueueClient
    fullName: QueueClient
    children:
      - '@azure/service-bus.QueueClient.close'
      - '@azure/service-bus.QueueClient.createReceiver'
      - '@azure/service-bus.QueueClient.createReceiver_1'
      - '@azure/service-bus.QueueClient.createSender'
      - '@azure/service-bus.QueueClient.entityPath'
      - '@azure/service-bus.QueueClient.getDeadLetterQueuePath'
      - '@azure/service-bus.QueueClient.id'
      - '@azure/service-bus.QueueClient.peek'
      - '@azure/service-bus.QueueClient.peekBySequenceNumber'
    langs:
      - typeScript
    type: class
    summary: |-
      <span data-ttu-id="89b3e-101">Descreve o cliente que permite interagir com uma fila do barramento de serviço.</span><span class="sxs-lookup"><span data-stu-id="89b3e-101">Describes the client that allows interacting with a Service Bus Queue.</span></span>
      <span data-ttu-id="89b3e-102">Use o `createQueueClient` função no objeto ServiceBusClient para instanciar um QueueClient</span><span class="sxs-lookup"><span data-stu-id="89b3e-102">Use the `createQueueClient` function on the ServiceBusClient object to instantiate a QueueClient</span></span>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.close'
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="89b3e-103">Fecha todos os links do AMQP para remetente/receptores criados por esse cliente.</span><span class="sxs-lookup"><span data-stu-id="89b3e-103">Closes all the AMQP links for sender/receivers created by this client.</span></span>
      <span data-ttu-id="89b3e-104">Depois de fechada, nem o QueueClient nem seus remetente/destinatários podem ser usados para nenhuma outra operação.</span><span class="sxs-lookup"><span data-stu-id="89b3e-104">Once closed, neither the QueueClient nor its sender/receivers can be used for any further operations.</span></span>
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.createReceiver'
    name: createReceiver(ReceiveMode)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="89b3e-105">Cria um receptor para receber mensagens de uma fila que não têm sessões habilitadas.</span><span class="sxs-lookup"><span data-stu-id="89b3e-105">Creates a Receiver for receiving messages from a Queue which does not have sessions enabled.</span></span>
      - <span data-ttu-id="89b3e-106">Gera o erro se um receptor de aberto já existe para este QueueClient.</span><span class="sxs-lookup"><span data-stu-id="89b3e-106">Throws error if an open receiver already exists for this QueueClient.</span></span>
      - <span data-ttu-id="89b3e-107">Lança `InvalidOperationError` se a fila tem sessões habilitadas (nesse caso, use a sobrecarga desse método que usa `sessionOptions` argumento)</span><span class="sxs-lookup"><span data-stu-id="89b3e-107">Throws `InvalidOperationError` if the Queue has sessions enabled (in which case, use the overload of this method which takes `sessionOptions` argument)</span></span>
    syntax:
      content: 'function createReceiver(receiveMode: ReceiveMode)'
      parameters:
        - id: receiveMode
          type:
            - '@azure/service-bus.ReceiveMode'
          description: |
            <span data-ttu-id="89b3e-108">Uma enumeração que indica o modo no qual as mensagens devem ser recebidas.</span><span class="sxs-lookup"><span data-stu-id="89b3e-108">An enum indicating the mode in which messages should be received.</span></span> <span data-ttu-id="89b3e-109">Os valores possíveis são:</span><span class="sxs-lookup"><span data-stu-id="89b3e-109">Possible values are:</span></span>
            - <span data-ttu-id="89b3e-110">`ReceiveMode.peekLock`: Depois que uma mensagem é recebida nesse modo, o destinatário possui um bloqueio na mensagem por um período específico.</span><span class="sxs-lookup"><span data-stu-id="89b3e-110">`ReceiveMode.peekLock`: Once a message is received in this mode, the receiver has a lock on the message for a particular duration.</span></span> <span data-ttu-id="89b3e-111">Se a mensagem não estiver totalmente liquidada, desta vez, ela chega à volta no barramento de serviço a ser obtido, a próxima operação de recebimento.</span><span class="sxs-lookup"><span data-stu-id="89b3e-111">If the message is not settled by this time, it lands back on Service Bus to be fetched by the next receive operation.</span></span>
            - <span data-ttu-id="89b3e-112">`ReceiveMode.receiveAndDelete`: As mensagens recebidas neste modo automaticamente removidas do barramento de serviço.</span><span class="sxs-lookup"><span data-stu-id="89b3e-112">`ReceiveMode.receiveAndDelete`: Messages received in this mode get automatically removed from Service Bus.</span></span>
      return:
        type:
          - '@azure/service-bus.Receiver'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.createReceiver_1'
    name: 'createReceiver(ReceiveMode, SessionReceiverOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="89b3e-113">Cria um receptor para receber mensagens de uma sessão habilitada a fila.</span><span class="sxs-lookup"><span data-stu-id="89b3e-113">Creates a Receiver for receiving messages from a session enabled Queue.</span></span> <span data-ttu-id="89b3e-114">Quando nenhum sessionId é fornecida, a sessão aleatória entre as sessões disponíveis é usada.</span><span class="sxs-lookup"><span data-stu-id="89b3e-114">When no sessionId is given, a random session among the available sessions is used.</span></span>
      - <span data-ttu-id="89b3e-115">Gera o erro se um receptor de aberto já existe para determinado sessionId.</span><span class="sxs-lookup"><span data-stu-id="89b3e-115">Throws error if an open receiver already exists for given sessionId.</span></span>
      - <span data-ttu-id="89b3e-116">Lança `SessionCannotBeLockedError` se a fila não têm sessões habilitadas (nesse caso, não passe a `sessionOptions` argumento) ou se o barramento de serviço não for capaz de obter um bloqueio na sessão (na qual caso tentam novamente após algum tempo)</span><span class="sxs-lookup"><span data-stu-id="89b3e-116">Throws `SessionCannotBeLockedError` if the Queue does not have sessions enabled (in which case do not pass the `sessionOptions` argument) or if Service Bus is not able to get a lock on the session (in which case try again after some time)</span></span>
    syntax:
      content: 'function createReceiver(receiveMode: ReceiveMode, sessionOptions: SessionReceiverOptions)'
      parameters:
        - id: receiveMode
          type:
            - '@azure/service-bus.ReceiveMode'
          description: |-
            <span data-ttu-id="89b3e-117">Uma enumeração que indica o modo no qual as mensagens devem ser recebidas.</span><span class="sxs-lookup"><span data-stu-id="89b3e-117">An enum indicating the mode in which messages should be received.</span></span> <span data-ttu-id="89b3e-118">Os valores possíveis são:</span><span class="sxs-lookup"><span data-stu-id="89b3e-118">Possible values are:</span></span>
            - <span data-ttu-id="89b3e-119">`ReceiveMode.peekLock`: Depois que uma mensagem é recebida nesse modo, o destinatário possui um bloqueio na mensagem por um período específico.</span><span class="sxs-lookup"><span data-stu-id="89b3e-119">`ReceiveMode.peekLock`: Once a message is received in this mode, the receiver has a lock on the message for a particular duration.</span></span> <span data-ttu-id="89b3e-120">Se a mensagem não estiver totalmente liquidada, desta vez, ela chega à volta no barramento de serviço a ser obtido, a próxima operação de recebimento.</span><span class="sxs-lookup"><span data-stu-id="89b3e-120">If the message is not settled by this time, it lands back on Service Bus to be fetched by the next receive operation.</span></span>
            - <span data-ttu-id="89b3e-121">`ReceiveMode.receiveAndDelete`: As mensagens recebidas neste modo automaticamente removidas do barramento de serviço.</span><span class="sxs-lookup"><span data-stu-id="89b3e-121">`ReceiveMode.receiveAndDelete`: Messages received in this mode get automatically removed from Service Bus.</span></span>
        - id: sessionOptions
          type:
            - '@azure/service-bus.SessionReceiverOptions'
          description: |
            <span data-ttu-id="89b3e-122">Opções para fornecer sessionId e a duração de renovação de bloqueio automático para o destinatário de sessão.</span><span class="sxs-lookup"><span data-stu-id="89b3e-122">Options to provide sessionId and duration of automatic lock renewal for the session receiver.</span></span>
      return:
        type:
          - '@azure/service-bus.SessionReceiver'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.createSender'
    name: createSender()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="89b3e-123">Cria um remetente a ser usado para enviar mensagens, as mensagens sejam enviadas em um momento posterior de agendamento e Cancelando tais mensagens agendadas.</span><span class="sxs-lookup"><span data-stu-id="89b3e-123">Creates a Sender to be used for sending messages, scheduling messages to be sent at a later time and cancelling such scheduled messages.</span></span>
      - <span data-ttu-id="89b3e-124">Gera o erro se um remetente abrir já existe para este QueueClient.</span><span class="sxs-lookup"><span data-stu-id="89b3e-124">Throws error if an open sender already exists for this QueueClient.</span></span>
    syntax:
      content: function createSender()
      parameters: []
      return:
        type:
          - '@azure/service-bus.Sender'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.entityPath'
    name: entityPath
    fullName: entityPath
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="89b3e-125">O caminho para a fila do barramento de serviço para o qual esse cliente é criado.</span><span class="sxs-lookup"><span data-stu-id="89b3e-125">The path for the Service Bus Queue for which this client is created.</span></span>
    syntax:
      content: 'entityPath: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.getDeadLetterQueuePath'
    name: getDeadLetterQueuePath(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="89b3e-126">Retorna o nome de fila de mensagens mortas correspondente para a fila representada pelo nome fornecido.</span><span class="sxs-lookup"><span data-stu-id="89b3e-126">Returns the corresponding dead letter queue name for the queue represented by the given name.</span></span>
      <span data-ttu-id="89b3e-127">Use isso no `createQueueClient` funcionarão no `ServiceBusClient` instância para receber mensagens de uma fila de mensagens mortas.</span><span class="sxs-lookup"><span data-stu-id="89b3e-127">Use this in the `createQueueClient` function on the `ServiceBusClient` instance to receive messages from a dead letter queue.</span></span>
    syntax:
      content: 'static function getDeadLetterQueuePath(queueName: string)'
      parameters:
        - id: queueName
          type:
            - string
          description: |
            <span data-ttu-id="89b3e-128">Nome da fila que está sendo buscada nome do cujo correspondente de mensagens mortas</span><span class="sxs-lookup"><span data-stu-id="89b3e-128">Name of the queue whose dead letter counterpart's name is being fetched</span></span>
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="89b3e-129">Um identificador exclusivo para este cliente.</span><span class="sxs-lookup"><span data-stu-id="89b3e-129">A unique identifier for this client.</span></span>
    syntax:
      content: 'id: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.peek'
    name: peek(undefined | number)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="89b3e-130">Busca o próximo lote de mensagens ativas (incluindo adiada, mas não morto mensagens).</span><span class="sxs-lookup"><span data-stu-id="89b3e-130">Fetches the next batch of active messages (including deferred but not deadlettered messages).</span></span>
      - <span data-ttu-id="89b3e-131">A primeira chamada para `peek()` busca a primeira mensagem ativa.</span><span class="sxs-lookup"><span data-stu-id="89b3e-131">The first call to `peek()` fetches the first active message.</span></span> <span data-ttu-id="89b3e-132">Cada chamada subsequente busca a mensagem subsequente.</span><span class="sxs-lookup"><span data-stu-id="89b3e-132">Each subsequent call fetches the subsequent message.</span></span>
      - <span data-ttu-id="89b3e-133">Ao contrário de um `received` mensagem, `peeked` mensagem é uma versão somente leitura da mensagem.</span><span class="sxs-lookup"><span data-stu-id="89b3e-133">Unlike a `received` message, `peeked` message is a read-only version of the message.</span></span>
      <span data-ttu-id="89b3e-134">Ele não pode ser `Completed/Abandoned/Deferred/Deadlettered`.</span><span class="sxs-lookup"><span data-stu-id="89b3e-134">It cannot be `Completed/Abandoned/Deferred/Deadlettered`.</span></span> <span data-ttu-id="89b3e-135">O bloqueio não pode ser renovado.</span><span class="sxs-lookup"><span data-stu-id="89b3e-135">The lock on it cannot be renewed.</span></span>
    syntax:
      content: 'function peek(maxMessageCount?: undefined | number)'
      parameters:
        - id: maxMessageCount
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.peekBySequenceNumber'
    name: 'peekBySequenceNumber(Long, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="89b3e-136">Exibe o número desejado de mensagens ativas (incluindo adiada, mas não morto mensagens) do número de sequência especificado.</span><span class="sxs-lookup"><span data-stu-id="89b3e-136">Peeks the desired number of active messages (including deferred but not deadlettered messages) from the specified sequence number.</span></span>
      - <span data-ttu-id="89b3e-137">Ao contrário de um `received` mensagem, `peeked` mensagem é uma versão somente leitura da mensagem.</span><span class="sxs-lookup"><span data-stu-id="89b3e-137">Unlike a `received` message, `peeked` message is a read-only version of the message.</span></span>
      <span data-ttu-id="89b3e-138">Ele não pode ser `Completed/Abandoned/Deferred/Deadlettered`.</span><span class="sxs-lookup"><span data-stu-id="89b3e-138">It cannot be `Completed/Abandoned/Deferred/Deadlettered`.</span></span> <span data-ttu-id="89b3e-139">O bloqueio não pode ser renovado.</span><span class="sxs-lookup"><span data-stu-id="89b3e-139">The lock on it cannot be renewed.</span></span>
    syntax:
      content: 'function peekBySequenceNumber(fromSequenceNumber: Long, maxMessageCount?: undefined | number)'
      parameters:
        - id: fromSequenceNumber
          type:
            - Long
          description: <span data-ttu-id="89b3e-140">O número de sequência a partir do qual ler a mensagem.</span><span class="sxs-lookup"><span data-stu-id="89b3e-140">The sequence number from where to read the message.</span></span>
        - id: maxMessageCount
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    package: '@azure/service-bus'
references:
  - uid: '@azure/service-bus.ReceiveMode'
    name: ReceiveMode
    spec.typeScript:
      - name: ReceiveMode
        fullName: ReceiveMode
        uid: '@azure/service-bus.ReceiveMode'
  - uid: '@azure/service-bus.Receiver'
    name: Receiver
    spec.typeScript:
      - name: Receiver
        fullName: Receiver
        uid: '@azure/service-bus.Receiver'
  - uid: '@azure/service-bus.SessionReceiverOptions'
    name: SessionReceiverOptions
    spec.typeScript:
      - name: SessionReceiverOptions
        fullName: SessionReceiverOptions
        uid: '@azure/service-bus.SessionReceiverOptions'
  - uid: '@azure/service-bus.SessionReceiver'
    name: SessionReceiver
    spec.typeScript:
      - name: SessionReceiver
        fullName: SessionReceiver
        uid: '@azure/service-bus.SessionReceiver'
  - uid: '@azure/service-bus.Sender'
    name: Sender
    spec.typeScript:
      - name: Sender
        fullName: Sender
        uid: '@azure/service-bus.Sender'
  - uid: 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    name: 'ReceivedMessageInfo[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReceivedMessageInfo
        fullName: ReceivedMessageInfo
        uid: '@azure/service-bus.ReceivedMessageInfo'
      - name: '[]>'
        fullName: '[]>'