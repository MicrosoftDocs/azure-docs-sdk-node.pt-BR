### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.Receiver'
    name: Receiver
    fullName: Receiver
    children:
      - '@azure/service-bus.Receiver.close'
      - '@azure/service-bus.Receiver.getMessageIterator'
      - '@azure/service-bus.Receiver.isClosed'
      - '@azure/service-bus.Receiver.isReceivingMessages'
      - '@azure/service-bus.Receiver.receiveDeferredMessage'
      - '@azure/service-bus.Receiver.receiveDeferredMessages'
      - '@azure/service-bus.Receiver.receiveMessages'
      - '@azure/service-bus.Receiver.receiveMode'
      - '@azure/service-bus.Receiver.registerMessageHandler'
      - '@azure/service-bus.Receiver.renewMessageLock'
    langs:
      - typeScript
    type: class
    summary: |-
      <span data-ttu-id="8c475-101">A classe do receptor pode ser usada para receber mensagens em um lote ou Registrando manipuladores.</span><span class="sxs-lookup"><span data-stu-id="8c475-101">The Receiver class can be used to receive messages in a batch or by registering handlers.</span></span>
      <span data-ttu-id="8c475-102">Use o `createReceiver` função no QueueClient ou SubscriptionClient para instanciar um receptor.</span><span class="sxs-lookup"><span data-stu-id="8c475-102">Use the `createReceiver` function on the QueueClient or SubscriptionClient to instantiate a Receiver.</span></span>
      <span data-ttu-id="8c475-103">A classe do receptor é uma abstração de link receptor AMQP subjacente.</span><span class="sxs-lookup"><span data-stu-id="8c475-103">The Receiver class is an abstraction over the underlying AMQP receiver link.</span></span>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Receiver.close'
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="8c475-104">Fecha o link de receptor AMQP subjacente.</span><span class="sxs-lookup"><span data-stu-id="8c475-104">Closes the underlying AMQP receiver link.</span></span>
      <span data-ttu-id="8c475-105">Depois de fechada, o receptor não pode ser usado para nenhuma outra operação.</span><span class="sxs-lookup"><span data-stu-id="8c475-105">Once closed, the receiver cannot be used for any further operations.</span></span>
      <span data-ttu-id="8c475-106">Use o `createReceiver` função no QueueClient ou SubscriptionClient para instanciar um novo receptor</span><span class="sxs-lookup"><span data-stu-id="8c475-106">Use the `createReceiver` function on the QueueClient or SubscriptionClient to instantiate a new Receiver</span></span>
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Receiver.getMessageIterator'
    name: getMessageIterator()
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="8c475-107">Obtém um iterador assíncrono sobre mensagens do receptor.</span><span class="sxs-lookup"><span data-stu-id="8c475-107">Gets an async iterator over messages from the receiver.</span></span>
      <span data-ttu-id="8c475-108">Gera um erro se não houver outra operação de recebimento em andamento no destinatário do mesmo.</span><span class="sxs-lookup"><span data-stu-id="8c475-108">Throws an error if there is another receive operation in progress on the same receiver.</span></span> <span data-ttu-id="8c475-109">Se você não tiver certeza se há outra execução da operação de recebimento, verifique o `isReceivingMessages` propriedade no receptor.</span><span class="sxs-lookup"><span data-stu-id="8c475-109">If you are not sure whether there is another receive operation running, check the `isReceivingMessages` property on the receiver.</span></span>

      <span data-ttu-id="8c475-110">Se o iterador não é capaz de buscar uma nova mensagem em mais de um minuto, `undefined` será retornado.</span><span class="sxs-lookup"><span data-stu-id="8c475-110">If the iterator is not able to fetch a new message in over a minute, `undefined` will be returned.</span></span>
    syntax:
      content: function getMessageIterator()
      parameters: []
      return:
        type:
          - AsyncIterableIterator<@azure/service-bus.ServiceBusMessage>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Receiver.isClosed'
    name: isClosed
    fullName: isClosed
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="8c475-111">Retorna `true` se o receptor for fechado.</span><span class="sxs-lookup"><span data-stu-id="8c475-111">Returns `true` if the receiver is closed.</span></span> <span data-ttu-id="8c475-112">Isso pode acontecer uma porque o receptor em si foi fechado ou o cliente que o criou foi fechado.</span><span class="sxs-lookup"><span data-stu-id="8c475-112">This can happen either because the receiver itself has been closed or the client that created it has been closed.</span></span>
    syntax:
      content: 'isClosed: boolean'
      return:
        type:
          - boolean
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Receiver.isReceivingMessages'
    name: isReceivingMessages()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="8c475-113">Indica se o destinatário está recebendo mensagens no momento ou não.</span><span class="sxs-lookup"><span data-stu-id="8c475-113">Indicates whether the receiver is currently receiving messages or not.</span></span>
      <span data-ttu-id="8c475-114">Quando isso retorna true, novos `registerMessageHandler()` ou `receiveMessages()` chamadas não podem ser feitas.</span><span class="sxs-lookup"><span data-stu-id="8c475-114">When this returns true, new `registerMessageHandler()` or `receiveMessages()` calls cannot be made.</span></span>
    syntax:
      content: function isReceivingMessages()
      parameters: []
      return:
        type:
          - boolean
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Receiver.receiveDeferredMessage'
    name: receiveDeferredMessage(Long)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="8c475-115">Retorna uma promessa que resolve para uma mensagem adiada identificada pelo determinado `sequenceNumber`.</span><span class="sxs-lookup"><span data-stu-id="8c475-115">Returns a promise that resolves to a deferred message identified by the given `sequenceNumber`.</span></span>
    syntax:
      content: 'function receiveDeferredMessage(sequenceNumber: Long)'
      parameters:
        - id: sequenceNumber
          type:
            - Long
          description: <span data-ttu-id="8c475-116">O número de sequência da mensagem de que precisa para ser recebida.</span><span class="sxs-lookup"><span data-stu-id="8c475-116">The sequence number of the message that needs to be received.</span></span>
      return:
        type:
          - Promise<@azure/service-bus.ServiceBusMessage | undefined>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Receiver.receiveDeferredMessages'
    name: 'receiveDeferredMessages(Long[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="8c475-117">Retorna uma promessa que resolve para uma matriz das mensagens adiadas identificado por fornecida `sequenceNumbers`.</span><span class="sxs-lookup"><span data-stu-id="8c475-117">Returns a promise that resolves to an array of deferred messages identified by given `sequenceNumbers`.</span></span>
    syntax:
      content: 'function receiveDeferredMessages(sequenceNumbers: Long[])'
      parameters:
        - id: sequenceNumbers
          type:
            - 'Long[]'
          description: <span data-ttu-id="8c475-118">Uma matriz de números de sequência para as mensagens que precisam para ser recebida.</span><span class="sxs-lookup"><span data-stu-id="8c475-118">An array of sequence numbers for the messages that need to be received.</span></span>
      return:
        type:
          - 'Promise<@azure/service-bus.ServiceBusMessage[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Receiver.receiveMessages'
    name: 'receiveMessages(number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="8c475-119">Retorna uma promessa que resolve para uma matriz de mensagens com base em determinadas contagem e o tempo limite ao longo de um receptor de AMQP vincular-se de uma fila/assinatura.</span><span class="sxs-lookup"><span data-stu-id="8c475-119">Returns a promise that resolves to an array of messages based on given count and timeout over an AMQP receiver link from a Queue/Subscription.</span></span>
      <span data-ttu-id="8c475-120">Gera um erro se não houver outra operação de recebimento em andamento no destinatário do mesmo.</span><span class="sxs-lookup"><span data-stu-id="8c475-120">Throws an error if there is another receive operation in progress on the same receiver.</span></span> <span data-ttu-id="8c475-121">Se você não tiver certeza se há outra execução da operação de recebimento, verifique o `isReceivingMessages` propriedade no receptor.</span><span class="sxs-lookup"><span data-stu-id="8c475-121">If you are not sure whether there is another receive operation running, check the `isReceivingMessages` property on the receiver.</span></span>
    syntax:
      content: 'function receiveMessages(maxMessageCount: number, idleTimeoutInSeconds?: undefined | number)'
      parameters:
        - id: maxMessageCount
          type:
            - number
          description: <span data-ttu-id="8c475-122">O número máximo de mensagens para receber da fila/assinatura.</span><span class="sxs-lookup"><span data-stu-id="8c475-122">The maximum number of messages to receive from Queue/Subscription.</span></span>
        - id: idleTimeoutInSeconds
          type:
            - undefined | number
          description: |-
            <span data-ttu-id="8c475-123">O máximo tempo de espera em segundos para o qual o receptor deve esperar para receber a primeira mensagem.</span><span class="sxs-lookup"><span data-stu-id="8c475-123">The maximum wait time in seconds for which the Receiver should wait to receive the first message.</span></span> <span data-ttu-id="8c475-124">Se nenhuma mensagem for recebida por esse tempo, promise retornado é resolvido para uma matriz vazia.</span><span class="sxs-lookup"><span data-stu-id="8c475-124">If no message is received by this time, the returned promise gets resolved to an empty array.</span></span>
            - <span data-ttu-id="8c475-125">**Padrão**: `60` segundos.</span><span class="sxs-lookup"><span data-stu-id="8c475-125">**Default**: `60` seconds.</span></span>
          optional: true
      return:
        type:
          - 'Promise<@azure/service-bus.ServiceBusMessage[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Receiver.receiveMode'
    name: receiveMode
    fullName: receiveMode
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="8c475-126">Denota receiveMode desse receptor.</span><span class="sxs-lookup"><span data-stu-id="8c475-126">Denotes receiveMode of this receiver.</span></span>
    syntax:
      content: 'receiveMode: ReceiveMode'
      return:
        type:
          - '@azure/service-bus.ReceiveMode'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Receiver.registerMessageHandler'
    name: 'registerMessageHandler(OnMessage, OnError, MessageHandlerOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="8c475-127">Registra manipuladores para lidar com o fluxo de mensagens de entrada em um link de receptor AMQP de uma fila/assinatura.</span><span class="sxs-lookup"><span data-stu-id="8c475-127">Registers handlers to deal with the incoming stream of messages over an AMQP receiver link from a Queue/Subscription.</span></span>
      <span data-ttu-id="8c475-128">Para interromper o recebimento de mensagens, chame `close()` no receptor.</span><span class="sxs-lookup"><span data-stu-id="8c475-128">To stop receiving messages, call `close()` on the Receiver.</span></span>
      <span data-ttu-id="8c475-129">Gera um erro se não houver outra operação de recebimento em andamento no destinatário do mesmo.</span><span class="sxs-lookup"><span data-stu-id="8c475-129">Throws an error if there is another receive operation in progress on the same receiver.</span></span> <span data-ttu-id="8c475-130">Se você não tiver certeza se há outra execução da operação de recebimento, verifique o `isReceivingMessages` propriedade no receptor.</span><span class="sxs-lookup"><span data-stu-id="8c475-130">If you are not sure whether there is another receive operation running, check the `isReceivingMessages` property on the receiver.</span></span>
    syntax:
      content: 'function registerMessageHandler(onMessage: OnMessage, onError: OnError, options?: MessageHandlerOptions)'
      parameters:
        - id: onMessage
          type:
            - '@azure/service-bus.OnMessage'
          description: <span data-ttu-id="8c475-131">Manipulador para processar cada mensagem de entrada.</span><span class="sxs-lookup"><span data-stu-id="8c475-131">Handler for processing each incoming message.</span></span>
        - id: onError
          type:
            - '@azure/service-bus.OnError'
          description: <span data-ttu-id="8c475-132">Manipulador para qualquer erro que ocorre ao receber ou processar mensagens.</span><span class="sxs-lookup"><span data-stu-id="8c475-132">Handler for any error that occurs while receiving or processing messages.</span></span>
        - id: options
          type:
            - '@azure/service-bus.MessageHandlerOptions'
          description: |
            <span data-ttu-id="8c475-133">Opções para controlar se as mensagens devem ser concluídas automaticamente, e/ou tem seus bloqueios automaticamente renovado.</span><span class="sxs-lookup"><span data-stu-id="8c475-133">Options to control if messages should be automatically completed, and/or have their locks automatically renewed.</span></span> <span data-ttu-id="8c475-134">Você pode controlar o número máximo de mensagens que devem ser processadas simultaneamente.</span><span class="sxs-lookup"><span data-stu-id="8c475-134">You can control the maximum number of messages that should be concurrently processed.</span></span> <span data-ttu-id="8c475-135">Você também pode fornecer um tempo limite em segundos para indicar a quantidade de tempo de espera por uma nova mensagem antes de fechar o receptor.</span><span class="sxs-lookup"><span data-stu-id="8c475-135">You can also provide a timeout in seconds to denote the amount of time to wait for a new message before closing the receiver.</span></span>
          optional: true
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Receiver.renewMessageLock'
    name: renewMessageLock(string | ServiceBusMessage)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="8c475-136">Renova o bloqueio na mensagem para a duração conforme especificado durante a criação da fila/assinatura.</span><span class="sxs-lookup"><span data-stu-id="8c475-136">Renews the lock on the message for the duration as specified during the Queue/Subscription creation.</span></span>
      - <span data-ttu-id="8c475-137">Verifique o `lockedUntilUtc` propriedade na mensagem para a hora quando o bloqueio expira.</span><span class="sxs-lookup"><span data-stu-id="8c475-137">Check the `lockedUntilUtc` property on the message for the time when the lock expires.</span></span>
      - <span data-ttu-id="8c475-138">Se uma mensagem não for liquidada (usando um `complete()`, `defer()` ou `deadletter()`, antes do bloqueio expirar, os territórios de mensagem novamente na fila/assinatura para a próxima operação de recebimento.</span><span class="sxs-lookup"><span data-stu-id="8c475-138">If a message is not settled (using either `complete()`, `defer()` or `deadletter()`, before its lock expires, then the message lands back in the Queue/Subscription for the next receive operation.</span></span>
    syntax:
      content: 'function renewMessageLock(lockTokenOrMessage: string | ServiceBusMessage)'
      parameters:
        - id: lockTokenOrMessage
          type:
            - string | @azure/service-bus.ServiceBusMessage
          description: <span data-ttu-id="8c475-139">O `lockToken` propriedade de mensagem ou a mensagem em si.</span><span class="sxs-lookup"><span data-stu-id="8c475-139">The `lockToken` property of the message or the message itself.</span></span>
      return:
        type:
          - Promise<Date>
    package: '@azure/service-bus'
references:
  - uid: '@azure/service-bus.ReceiveMode'
    name: ReceiveMode
    spec.typeScript:
      - name: ReceiveMode
        fullName: ReceiveMode
        uid: '@azure/service-bus.ReceiveMode'
  - uid: AsyncIterableIterator<@azure/service-bus.ServiceBusMessage>
    name: ServiceBusMessage>
    spec.typeScript:
      - name: AsyncIterableIterator<
        fullName: AsyncIterableIterator<
      - name: ServiceBusMessage
        fullName: ServiceBusMessage
        uid: '@azure/service-bus.ServiceBusMessage'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.ServiceBusMessage | undefined>
    name: ServiceBusMessage | undefined>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ServiceBusMessage
        fullName: ServiceBusMessage
        uid: '@azure/service-bus.ServiceBusMessage'
      - name: ' | undefined>'
        fullName: ' | undefined>'
  - uid: 'Promise<@azure/service-bus.ServiceBusMessage[]>'
    name: 'ServiceBusMessage[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ServiceBusMessage
        fullName: ServiceBusMessage
        uid: '@azure/service-bus.ServiceBusMessage'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/service-bus.OnMessage'
    name: OnMessage
    spec.typeScript:
      - name: OnMessage
        fullName: OnMessage
        uid: '@azure/service-bus.OnMessage'
  - uid: '@azure/service-bus.OnError'
    name: OnError
    spec.typeScript:
      - name: OnError
        fullName: OnError
        uid: '@azure/service-bus.OnError'
  - uid: '@azure/service-bus.MessageHandlerOptions'
    name: MessageHandlerOptions
    spec.typeScript:
      - name: MessageHandlerOptions
        fullName: MessageHandlerOptions
        uid: '@azure/service-bus.MessageHandlerOptions'
  - uid: string | @azure/service-bus.ServiceBusMessage
    name: ServiceBusMessage
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - name: ServiceBusMessage
        fullName: ServiceBusMessage
        uid: '@azure/service-bus.ServiceBusMessage'