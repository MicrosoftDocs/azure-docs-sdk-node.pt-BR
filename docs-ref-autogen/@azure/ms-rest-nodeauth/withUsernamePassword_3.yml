### YamlMime:UniversalReference
items:
  - uid: '@azure/ms-rest-nodeauth.withUsernamePassword_3'
    name: 'withUsernamePassword(string, string, LoginWithUsernamePasswordOptions, (err: Error, credentials: UserTokenCredentials, subscriptions: Array<LinkedSubscription>) => void)'
    children: []
    type: function
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="47d94-101">Fornece um objeto UserTokenCredentials e a lista de assinaturas associadas à userId em todos os locatários aplicáveis.</span><span class="sxs-lookup"><span data-stu-id="47d94-101">Provides a UserTokenCredentials object and the list of subscriptions associated with that userId across all the applicable tenants.</span></span>
      <span data-ttu-id="47d94-102">Esse método é aplicável somente para as ids organizacionais que não são 2FA habilitado; caso contrário, usar o logon interativo.</span><span class="sxs-lookup"><span data-stu-id="47d94-102">This method is applicable only for organizational ids that are not 2FA enabled otherwise please use interactive login.</span></span>
    syntax:
      content: 'function withUsernamePassword(username: string, password: string, options: LoginWithUsernamePasswordOptions, callback: (err: Error, credentials: UserTokenCredentials, subscriptions: Array<LinkedSubscription>) => void)'
      parameters:
        - id: username
          type:
            - string
          description: ''
        - id: password
          type:
            - string
          description: ''
        - id: options
          type:
            - '@azure/ms-rest-nodeauth.LoginWithUsernamePasswordOptions'
          description: ''
        - id: callback
          type:
            - '(err: Error, credentials: UserTokenCredentials, subscriptions: Array<LinkedSubscription>) => void'
          description: ''
      return:
        type:
          - Promise<@azure/ms-rest-nodeauth.UserTokenCredentials>
    package: '@azure/ms-rest-nodeauth'
references:
  - uid: '@azure/ms-rest-nodeauth.LoginWithUsernamePasswordOptions'
    name: LoginWithUsernamePasswordOptions
    spec.typeScript:
      - name: LoginWithUsernamePasswordOptions
        fullName: LoginWithUsernamePasswordOptions
        uid: '@azure/ms-rest-nodeauth.LoginWithUsernamePasswordOptions'
  - uid: Promise<@azure/ms-rest-nodeauth.UserTokenCredentials>
    name: UserTokenCredentials>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: UserTokenCredentials
        fullName: UserTokenCredentials
        uid: '@azure/ms-rest-nodeauth.UserTokenCredentials'
      - name: '>'
        fullName: '>'