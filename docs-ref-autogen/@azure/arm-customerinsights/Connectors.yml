### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-customerinsights.Connectors'
    name: Connectors
    fullName: Connectors
    children:
      - '@azure/arm-customerinsights.Connectors.beginCreateOrUpdate'
      - '@azure/arm-customerinsights.Connectors.beginDeleteMethod'
      - '@azure/arm-customerinsights.Connectors.constructor'
      - '@azure/arm-customerinsights.Connectors.createOrUpdate'
      - '@azure/arm-customerinsights.Connectors.deleteMethod'
      - '@azure/arm-customerinsights.Connectors.get'
      - '@azure/arm-customerinsights.Connectors.get_2'
      - '@azure/arm-customerinsights.Connectors.get_1'
      - '@azure/arm-customerinsights.Connectors.listByHub'
      - '@azure/arm-customerinsights.Connectors.listByHub_2'
      - '@azure/arm-customerinsights.Connectors.listByHub_1'
      - '@azure/arm-customerinsights.Connectors.listByHubNext'
      - '@azure/arm-customerinsights.Connectors.listByHubNext_2'
      - '@azure/arm-customerinsights.Connectors.listByHubNext_1'
    langs:
      - typeScript
    type: class
    summary: Classe que representa um conectores.
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Connectors.beginCreateOrUpdate'
    name: 'beginCreateOrUpdate(string, string, string, ConnectorResourceFormat, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Cria um conector ou atualiza um conector existente no hub.
    syntax:
      content: 'function beginCreateOrUpdate(resourceGroupName: string, hubName: string, connectorName: string, parameters: ConnectorResourceFormat, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos.
        - id: hubName
          type:
            - string
          description: O nome do hub.
        - id: connectorName
          type:
            - string
          description: O nome do conector.
        - id: parameters
          type:
            - '@azure/arm-customerinsights.ConnectorResourceFormat'
          description: Parâmetros fornecidos para a operação do conector de CreateOrUpdate.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Connectors.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Exclui um conector no hub.
    syntax:
      content: 'function beginDeleteMethod(resourceGroupName: string, hubName: string, connectorName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos.
        - id: hubName
          type:
            - string
          description: O nome do hub.
        - id: connectorName
          type:
            - string
          description: O nome do conector.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Connectors.constructor'
    name: Connectors(CustomerInsightsManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Crie um conectores.
    syntax:
      content: 'new Connectors(client: CustomerInsightsManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-customerinsights.CustomerInsightsManagementClientContext'
          description: |
            Referência para o cliente do serviço.
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Connectors.createOrUpdate'
    name: 'createOrUpdate(string, string, string, ConnectorResourceFormat, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Cria um conector ou atualiza um conector existente no hub.
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, hubName: string, connectorName: string, parameters: ConnectorResourceFormat, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos.
        - id: hubName
          type:
            - string
          description: O nome do hub.
        - id: connectorName
          type:
            - string
          description: O nome do conector.
        - id: parameters
          type:
            - '@azure/arm-customerinsights.ConnectorResourceFormat'
          description: Parâmetros fornecidos para a operação do conector de CreateOrUpdate.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ConnectorsCreateOrUpdateResponse>
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Connectors.deleteMethod'
    name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Exclui um conector no hub.
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, hubName: string, connectorName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos.
        - id: hubName
          type:
            - string
          description: O nome do hub.
        - id: connectorName
          type:
            - string
          description: O nome do conector.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Connectors.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Obtém um conector no hub.
    syntax:
      content: 'function get(resourceGroupName: string, hubName: string, connectorName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos.
        - id: hubName
          type:
            - string
          description: O nome do hub.
        - id: connectorName
          type:
            - string
          description: O nome do conector.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ConnectorsGetResponse>
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Connectors.get_2'
    name: 'get(string, string, string, RequestOptionsBase, ServiceCallback<ConnectorResourceFormat>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, hubName: string, connectorName: string, options: RequestOptionsBase, callback: ServiceCallback<ConnectorResourceFormat>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos.
        - id: hubName
          type:
            - string
          description: O nome do hub.
        - id: connectorName
          type:
            - string
          description: O nome do conector.
        - id: options
          type:
            - RequestOptionsBase
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<@azure/arm-customerinsights.ConnectorResourceFormat>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.ConnectorsGetResponse>
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Connectors.get_1'
    name: 'get(string, string, string, ServiceCallback<ConnectorResourceFormat>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, hubName: string, connectorName: string, callback: ServiceCallback<ConnectorResourceFormat>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos.
        - id: hubName
          type:
            - string
          description: O nome do hub.
        - id: connectorName
          type:
            - string
          description: O nome do conector.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-customerinsights.ConnectorResourceFormat>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.ConnectorsGetResponse>
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Connectors.listByHub'
    name: 'listByHub(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Obtém todos os conectores no hub especificado.
    syntax:
      content: 'function listByHub(resourceGroupName: string, hubName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos.
        - id: hubName
          type:
            - string
          description: O nome do hub.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ConnectorsListByHubResponse>
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Connectors.listByHub_2'
    name: 'listByHub(string, string, RequestOptionsBase, ServiceCallback<ConnectorListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByHub(resourceGroupName: string, hubName: string, options: RequestOptionsBase, callback: ServiceCallback<ConnectorListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos.
        - id: hubName
          type:
            - string
          description: O nome do hub.
        - id: options
          type:
            - RequestOptionsBase
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<@azure/arm-customerinsights.ConnectorListResult>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.ConnectorsListByHubResponse>
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Connectors.listByHub_1'
    name: 'listByHub(string, string, ServiceCallback<ConnectorListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByHub(resourceGroupName: string, hubName: string, callback: ServiceCallback<ConnectorListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos.
        - id: hubName
          type:
            - string
          description: O nome do hub.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-customerinsights.ConnectorListResult>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.ConnectorsListByHubResponse>
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Connectors.listByHubNext'
    name: 'listByHubNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Obtém todos os conectores no hub especificado.
    syntax:
      content: 'function listByHubNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink da chamada bem-sucedida anterior à operação de lista.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ConnectorsListByHubNextResponse>
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Connectors.listByHubNext_2'
    name: 'listByHubNext(string, RequestOptionsBase, ServiceCallback<ConnectorListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByHubNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<ConnectorListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink da chamada bem-sucedida anterior à operação de lista.
        - id: options
          type:
            - RequestOptionsBase
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<@azure/arm-customerinsights.ConnectorListResult>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.ConnectorsListByHubNextResponse>
    package: '@azure/arm-customerinsights'
  - uid: '@azure/arm-customerinsights.Connectors.listByHubNext_1'
    name: 'listByHubNext(string, ServiceCallback<ConnectorListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByHubNext(nextPageLink: string, callback: ServiceCallback<ConnectorListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink da chamada bem-sucedida anterior à operação de lista.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-customerinsights.ConnectorListResult>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.ConnectorsListByHubNextResponse>
    package: '@azure/arm-customerinsights'
references:
  - uid: '@azure/arm-customerinsights.CustomerInsightsManagementClientContext'
    name: CustomerInsightsManagementClientContext
    spec.typeScript:
      - name: CustomerInsightsManagementClientContext
        fullName: CustomerInsightsManagementClientContext
        uid: '@azure/arm-customerinsights.CustomerInsightsManagementClientContext'
  - uid: '@azure/arm-customerinsights.ConnectorResourceFormat'
    name: ConnectorResourceFormat
    spec.typeScript:
      - name: ConnectorResourceFormat
        fullName: ConnectorResourceFormat
        uid: '@azure/arm-customerinsights.ConnectorResourceFormat'
  - uid: ServiceCallback<@azure/arm-customerinsights.ConnectorResourceFormat>
    name: ConnectorResourceFormat>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ConnectorResourceFormat
        fullName: ConnectorResourceFormat
        uid: '@azure/arm-customerinsights.ConnectorResourceFormat'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-customerinsights.ConnectorListResult>
    name: ConnectorListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ConnectorListResult
        fullName: ConnectorListResult
        uid: '@azure/arm-customerinsights.ConnectorListResult'
      - name: '>'
        fullName: '>'