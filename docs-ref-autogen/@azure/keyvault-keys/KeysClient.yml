### YamlMime:UniversalReference
items:
  - uid: '@azure/keyvault-keys.KeysClient'
    name: KeysClient
    fullName: KeysClient
    children:
      - '@azure/keyvault-keys.KeysClient.backupKey'
      - '@azure/keyvault-keys.KeysClient.createEcKey'
      - '@azure/keyvault-keys.KeysClient.createKey'
      - '@azure/keyvault-keys.KeysClient.createRsaKey'
      - '@azure/keyvault-keys.KeysClient.deleteKey'
      - '@azure/keyvault-keys.KeysClient.getDefaultPipeline'
      - '@azure/keyvault-keys.KeysClient.getDeletedKey'
      - '@azure/keyvault-keys.KeysClient.getKey'
      - '@azure/keyvault-keys.KeysClient.importKey'
      - '@azure/keyvault-keys.KeysClient.constructor'
      - '@azure/keyvault-keys.KeysClient.listDeletedKeys'
      - '@azure/keyvault-keys.KeysClient.listKeys'
      - '@azure/keyvault-keys.KeysClient.listKeyVersions'
      - '@azure/keyvault-keys.KeysClient.pipeline'
      - '@azure/keyvault-keys.KeysClient.purgeDeletedKey'
      - '@azure/keyvault-keys.KeysClient.recoverDeletedKey'
      - '@azure/keyvault-keys.KeysClient.restoreKey'
      - '@azure/keyvault-keys.KeysClient.updateKey'
      - '@azure/keyvault-keys.KeysClient.vaultBaseUrl'
    langs:
      - typeScript
    type: class
    summary: <span data-ttu-id="3d6bb-101">O cliente para interagir com a funcionalidade de chaves do Cofre de chaves</span><span class="sxs-lookup"><span data-stu-id="3d6bb-101">The client to interact with the KeyVault keys functionality</span></span>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.backupKey'
    name: 'backupKey(string, RequestOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="3d6bb-102">Solicitações que um backup da chave especificada ser baixados para o cliente.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-102">Requests that a backup of the specified key be downloaded to the client.</span></span> <span data-ttu-id="3d6bb-103">Todas as versões da chave serão baixadas.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-103">All versions of the key will be downloaded.</span></span> <span data-ttu-id="3d6bb-104">Esta operação requer a permissão de chaves/backup.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-104">This operation requires the keys/backup permission.</span></span>
      <span data-ttu-id="3d6bb-105">Exemplo de uso:</span><span class="sxs-lookup"><span data-stu-id="3d6bb-105">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      let backupContents = await client.backupKey("MyKey");
      ```
    syntax:
      content: 'function backupKey(name: string, options?: RequestOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="3d6bb-106">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-106">The name of the key.</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.RequestOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<Uint8Array | undefined>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.createEcKey'
    name: 'createEcKey(string, CreateEcKeyOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="3d6bb-107">A operação de criação de chave pode ser usada para criar qualquer tipo de chave no cofre de chaves do Azure.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-107">The create key operation can be used to create any key type in Azure Key Vault.</span></span> <span data-ttu-id="3d6bb-108">Se a chave denominada já existir, o Azure Key Vault cria uma nova versão da chave.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-108">If the named key already exists, Azure Key Vault creates a new version of the key.</span></span> <span data-ttu-id="3d6bb-109">Ele requer a permissão de chaves/criar.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-109">It requires the keys/create permission.</span></span>
      <span data-ttu-id="3d6bb-110">Exemplo de uso:</span><span class="sxs-lookup"><span data-stu-id="3d6bb-110">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      let result = await client.createEcKey("MyKey", { curve: "P-256" });
      ```
    syntax:
      content: 'function createEcKey(name: string, options?: CreateEcKeyOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="3d6bb-111">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-111">The name of the key.</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.CreateEcKeyOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-keys.Key>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.createKey'
    name: 'createKey(string, JsonWebKeyType, CreateKeyOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="3d6bb-112">A operação de criação de chave pode ser usada para criar qualquer tipo de chave no cofre de chaves do Azure.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-112">The create key operation can be used to create any key type in Azure Key Vault.</span></span> <span data-ttu-id="3d6bb-113">Se a chave denominada já existir, o Azure Key Vault cria uma nova versão da chave.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-113">If the named key already exists, Azure Key Vault creates a new version of the key.</span></span> <span data-ttu-id="3d6bb-114">Ele requer a permissão de chaves/criar.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-114">It requires the keys/create permission.</span></span>
      <span data-ttu-id="3d6bb-115">Exemplo de uso:</span><span class="sxs-lookup"><span data-stu-id="3d6bb-115">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      // Create an elliptic-curve key:
      let result = await client.createKey("MyKey", "EC");
      ```
    syntax:
      content: 'function createKey(name: string, keyType: JsonWebKeyType, options?: CreateKeyOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="3d6bb-116">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-116">The name of the key.</span></span>
        - id: keyType
          type:
            - '@azure/keyvault-keys.JsonWebKeyType'
          description: <span data-ttu-id="3d6bb-117">O tipo da chave.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-117">The type of the key.</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.CreateKeyOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-keys.Key>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.createRsaKey'
    name: 'createRsaKey(string, CreateRsaKeyOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="3d6bb-118">A operação de criação de chave pode ser usada para criar qualquer tipo de chave no cofre de chaves do Azure.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-118">The create key operation can be used to create any key type in Azure Key Vault.</span></span> <span data-ttu-id="3d6bb-119">Se a chave denominada já existir, o Azure Key Vault cria uma nova versão da chave.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-119">If the named key already exists, Azure Key Vault creates a new version of the key.</span></span> <span data-ttu-id="3d6bb-120">Ele requer a permissão de chaves/criar.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-120">It requires the keys/create permission.</span></span>
      <span data-ttu-id="3d6bb-121">Exemplo de uso:</span><span class="sxs-lookup"><span data-stu-id="3d6bb-121">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      let result = await client.createRsaKey("MyKey", { keySize: 2048 });
      ```
    syntax:
      content: 'function createRsaKey(name: string, options?: CreateRsaKeyOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="3d6bb-122">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-122">The name of the key.</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.CreateRsaKeyOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-keys.Key>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.deleteKey'
    name: 'deleteKey(string, RequestOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="3d6bb-123">A operação de exclusão se aplica a qualquer chave armazenada no cofre de chaves do Azure.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-123">The DELETE operation applies to any key stored in Azure Key Vault.</span></span> <span data-ttu-id="3d6bb-124">DELETE não pode ser aplicado a uma versão individual de uma chave.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-124">DELETE cannot be applied to an individual version of a key.</span></span> <span data-ttu-id="3d6bb-125">Esta operação requer a permissão chaves/excluir.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-125">This operation requires the keys/delete permission.</span></span>
      <span data-ttu-id="3d6bb-126">Exemplo de uso:</span><span class="sxs-lookup"><span data-stu-id="3d6bb-126">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      let result = await client.deleteKey("MyKey");
      ```
    syntax:
      content: 'function deleteKey(name: string, options?: RequestOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="3d6bb-127">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-127">The name of the key.</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.RequestOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-keys.DeletedKey>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.getDefaultPipeline'
    name: 'getDefaultPipeline(ServiceClientCredentials | TokenCredential, NewPipelineOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3d6bb-128">Um método estático usado para criar um novo objeto de Pipeline com a credencial fornecida.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-128">A static method used to create a new Pipeline object with the provided Credential.</span></span>
    syntax:
      content: 'static function getDefaultPipeline(credential: ServiceClientCredentials | TokenCredential, pipelineOptions?: NewPipelineOptions)'
      parameters:
        - id: credential
          type:
            - ServiceClientCredentials | TokenCredential
          description: ''
        - id: pipelineOptions
          type:
            - '@azure/keyvault-keys.NewPipelineOptions'
          description: ''
          optional: true
      return:
        type:
          - ServiceClientOptions
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.getDeletedKey'
    name: 'getDeletedKey(string, RequestOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="3d6bb-129">A operação obter chave excluída retorna a chave especificada excluída junto com seus atributos.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-129">The Get Deleted Key operation returns the specified deleted key along with its attributes.</span></span>
      <span data-ttu-id="3d6bb-130">Esta operação requer a permissão de chaves/get.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-130">This operation requires the keys/get permission.</span></span>
      <span data-ttu-id="3d6bb-131">Exemplo de uso:</span><span class="sxs-lookup"><span data-stu-id="3d6bb-131">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      let key = await client.getDeletedKey("MyDeletedKey");
      ```
    syntax:
      content: 'function getDeletedKey(name: string, options?: RequestOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="3d6bb-132">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-132">The name of the key.</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.RequestOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-keys.DeletedKey>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.getKey'
    name: 'getKey(string, GetKeyOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="3d6bb-133">A operação GET é aplicável a qualquer chave armazenada no cofre de chaves do Azure.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-133">The GET operation is applicable to any key stored in Azure Key Vault.</span></span> <span data-ttu-id="3d6bb-134">Esta operação requer a permissão de chaves/get.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-134">This operation requires the keys/get permission.</span></span>
      <span data-ttu-id="3d6bb-135">Exemplo de uso:</span><span class="sxs-lookup"><span data-stu-id="3d6bb-135">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      let key = await client.getKey("MyKey");
      ```
    syntax:
      content: 'function getKey(name: string, options?: GetKeyOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="3d6bb-136">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-136">The name of the key.</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.GetKeyOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-keys.Key>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.importKey'
    name: 'importKey(string, JsonWebKey, ImportKeyOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="3d6bb-137">A operação de importação de chave pode ser usada para importar qualquer tipo de chave para um Azure Key Vault.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-137">The import key operation may be used to import any key type into an Azure Key Vault.</span></span> <span data-ttu-id="3d6bb-138">Se a chave denominada já existir, o Azure Key Vault cria uma nova versão da chave.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-138">If the named key already exists, Azure Key Vault creates a new version of the key.</span></span> <span data-ttu-id="3d6bb-139">Esta operação requer a permissão de chaves/importação.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-139">This operation requires the keys/import permission.</span></span>
      <span data-ttu-id="3d6bb-140">Exemplo de uso:</span><span class="sxs-lookup"><span data-stu-id="3d6bb-140">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      // Key contents in myKeyContents
      let result = await client.importKey("MyKey", myKeyContents);
      ```
    syntax:
      content: 'function importKey(name: string, key: JsonWebKey, options?: ImportKeyOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="3d6bb-141">Nome para a chave importada.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-141">Name for the imported key.</span></span>
        - id: key
          type:
            - '@azure/keyvault-keys.JsonWebKey'
          description: <span data-ttu-id="3d6bb-142">A chave da web Json</span><span class="sxs-lookup"><span data-stu-id="3d6bb-142">The Json web key</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.ImportKeyOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-keys.Key>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.constructor'
    name: 'KeysClient(string, ServiceClientCredentials | TokenCredential, ServiceClientOptions | NewPipelineOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="3d6bb-143">Cria uma instância de KeysClient.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-143">Creates an instance of KeysClient.</span></span>
      <span data-ttu-id="3d6bb-144">Exemplo de uso:</span><span class="sxs-lookup"><span data-stu-id="3d6bb-144">Example usage:</span></span>
      ```ts
      import { KeysClient } from "@azure/keyvault-keys";
      import { EnvironmentCredential } from "@azure/identity";

      let url = `https://<MY KEYVAULT HERE>.vault.azure.net`;
      let credentials = new EnvironmentCredential();

      let client = new KeysClient(url, credentials);
      ```
    syntax:
      content: 'new KeysClient(url: string, credential: ServiceClientCredentials | TokenCredential, pipelineOrOptions?: ServiceClientOptions | NewPipelineOptions)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="3d6bb-145">a url base para o Cofre de chaves.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-145">the base url to the key vault.</span></span>
        - id: credential
          type:
            - ServiceClientCredentials | TokenCredential
          description: ''
        - id: pipelineOrOptions
          type:
            - ServiceClientOptions | @azure/keyvault-keys.NewPipelineOptions
          description: ''
          optional: true
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.listDeletedKeys'
    name: listDeletedKeys(GetKeysOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="3d6bb-146">Itera as chaves excluídas no cofre.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-146">Iterates the deleted keys in the vault.</span></span>  <span data-ttu-id="3d6bb-147">O identificador de chave completo e os atributos são fornecidos na resposta.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-147">The full key identifier and attributes are provided in the response.</span></span> <span data-ttu-id="3d6bb-148">Nenhum valor é retornado para as chaves.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-148">No values are returned for the keys.</span></span> <span data-ttu-id="3d6bb-149">Esta operação requer a permissão de chaves/lista.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-149">This operations requires the keys/list permission.</span></span>
      <span data-ttu-id="3d6bb-150">Exemplo de uso:</span><span class="sxs-lookup"><span data-stu-id="3d6bb-150">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      for await (const keyAttr of client.listDeletedKeys()) {
        const deletedKey = await client.getKey(keyAttr.name);
        console.log("deleted key: ", deletedKey);
      }
      ```
    syntax:
      content: 'function listDeletedKeys(options?: GetKeysOptions)'
      parameters:
        - id: options
          type:
            - '@azure/keyvault-keys.GetKeysOptions'
          description: ''
          optional: true
      return:
        type:
          - 'PagedAsyncIterableIterator<@azure/keyvault-keys.KeyAttributes, @azure/keyvault-keys.KeyAttributes[]>'
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.listKeys'
    name: listKeys(GetKeysOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="3d6bb-151">Itera a versão mais recente de todas as chaves no cofre.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-151">Iterates the latest version of all keys in the vault.</span></span>  <span data-ttu-id="3d6bb-152">O identificador de chave completo e os atributos são fornecidos na resposta.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-152">The full key identifier and attributes are provided in the response.</span></span> <span data-ttu-id="3d6bb-153">Nenhum valor é retornado para as chaves.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-153">No values are returned for the keys.</span></span> <span data-ttu-id="3d6bb-154">Esta operação requer a permissão de chaves/lista.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-154">This operations requires the keys/list permission.</span></span>
      <span data-ttu-id="3d6bb-155">Exemplo de uso:</span><span class="sxs-lookup"><span data-stu-id="3d6bb-155">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      for await (const keyAttr of client.listKeys()) {
        const key = await client.getKey(keyAttr.name);
        console.log("key: ", key);
      }
      ```
    syntax:
      content: 'function listKeys(options?: GetKeysOptions)'
      parameters:
        - id: options
          type:
            - '@azure/keyvault-keys.GetKeysOptions'
          description: ''
          optional: true
      return:
        type:
          - 'PagedAsyncIterableIterator<@azure/keyvault-keys.KeyAttributes, @azure/keyvault-keys.KeyAttributes[]>'
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.listKeyVersions'
    name: 'listKeyVersions(string, GetKeysOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="3d6bb-156">Itera todas as versões de determinada chave no cofre.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-156">Iterates all versions of the given key in the vault.</span></span> <span data-ttu-id="3d6bb-157">O identificador de chave completo, atributos e marcas são fornecidas na resposta.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-157">The full key identifier, attributes, and tags are provided in the response.</span></span> <span data-ttu-id="3d6bb-158">Esta operação requer a permissão de chaves/lista.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-158">This operation requires the keys/list permission.</span></span>
      <span data-ttu-id="3d6bb-159">Exemplo de uso:</span><span class="sxs-lookup"><span data-stu-id="3d6bb-159">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      for await (const keyAttr of client.listKeyVersions("MyKey")) {
        const key = await client.getKey(keyAttr.name);
        console.log("key version: ", key);
      }
      ```
    syntax:
      content: 'function listKeyVersions(name: string, options?: GetKeysOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="3d6bb-160">Nome da chave para buscar as versões para</span><span class="sxs-lookup"><span data-stu-id="3d6bb-160">Name of the key to fetch versions for</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.GetKeysOptions'
          description: ''
          optional: true
      return:
        type:
          - 'PagedAsyncIterableIterator<@azure/keyvault-keys.KeyAttributes, @azure/keyvault-keys.KeyAttributes[]>'
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.pipeline'
    name: pipeline
    fullName: pipeline
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="3d6bb-161">As opções para criar a conexão ao serviço</span><span class="sxs-lookup"><span data-stu-id="3d6bb-161">The options to create the connection to the service</span></span>
    syntax:
      content: 'pipeline: ServiceClientOptions'
      return:
        type:
          - ServiceClientOptions
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.purgeDeletedKey'
    name: 'purgeDeletedKey(string, RequestOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="3d6bb-162">A operação de chave de limpeza excluída remove a chave permanentemente, sem a possibilidade de recuperação.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-162">The purge deleted key operation removes the key permanently, without the possibility of recovery.</span></span> <span data-ttu-id="3d6bb-163">Esta operação só pode ser habilitada em um cofre de exclusão reversível habilitado.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-163">This operation can only be enabled on a soft-delete enabled vault.</span></span> <span data-ttu-id="3d6bb-164">Esta operação requer a permissão de chaves/limpeza.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-164">This operation requires the keys/purge permission.</span></span>
      <span data-ttu-id="3d6bb-165">Exemplo de uso:</span><span class="sxs-lookup"><span data-stu-id="3d6bb-165">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      await client.deleteKey("MyKey");
      // ...
      await client.purgeDeletedKey("MyKey");
      ```
    syntax:
      content: 'function purgeDeletedKey(name: string, options?: RequestOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="3d6bb-166">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-166">The name of the key.</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.RequestOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.recoverDeletedKey'
    name: 'recoverDeletedKey(string, RequestOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="3d6bb-167">Recupera a chave excluída no cofre especificado.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-167">Recovers the deleted key in the specified vault.</span></span> <span data-ttu-id="3d6bb-168">Esta operação só pode ser executada em um cofre de exclusão reversível habilitado.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-168">This operation can only be performed on a soft-delete enabled vault.</span></span> <span data-ttu-id="3d6bb-169">Esta operação requer a permissão de chaves/recuperação.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-169">This operation requires the keys/recover permission.</span></span>
      <span data-ttu-id="3d6bb-170">Exemplo de uso:</span><span class="sxs-lookup"><span data-stu-id="3d6bb-170">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      await client.deleteKey("MyKey");
      // ...
      await client.recoverDeletedKey("MyKey");
      ```
    syntax:
      content: 'function recoverDeletedKey(name: string, options?: RequestOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="3d6bb-171">O nome da chave excluída.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-171">The name of the deleted key.</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.RequestOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-keys.Key>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.restoreKey'
    name: 'restoreKey(Uint8Array, RequestOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="3d6bb-172">Restaura uma chave de backup e todas as suas versões para um cofre.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-172">Restores a backed up key, and all its versions, to a vault.</span></span> <span data-ttu-id="3d6bb-173">Esta operação requer a permissão de chaves/restaurar.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-173">This operation requires the keys/restore permission.</span></span>
      <span data-ttu-id="3d6bb-174">Exemplo de uso:</span><span class="sxs-lookup"><span data-stu-id="3d6bb-174">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      let backupContents = await client.backupKey("MyKey");
      // ...
      let key = await client.restoreKey(backupContents);
      ```
    syntax:
      content: 'function restoreKey(backup: Uint8Array, options?: RequestOptions)'
      parameters:
        - id: backup
          type:
            - Uint8Array
          description: <span data-ttu-id="3d6bb-175">O blob de backup associado a um pacote de chaves.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-175">The backup blob associated with a key bundle.</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.RequestOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-keys.Key>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.updateKey'
    name: 'updateKey(string, string, UpdateKeyOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="3d6bb-176">A operação de atualização altera os atributos especificados de uma chave armazenada existente.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-176">The UPDATE operation changes specified attributes of an existing stored key.</span></span> <span data-ttu-id="3d6bb-177">Atributos que não são especificados na solicitação permanecem inalterados.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-177">Attributes that are not specified in the request are left unchanged.</span></span> <span data-ttu-id="3d6bb-178">O valor de uma chave em si não pode ser alterado.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-178">The value of a key itself cannot be changed.</span></span> <span data-ttu-id="3d6bb-179">Esta operação requer a permissão de chaves/definir.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-179">This operation requires the keys/set permission.</span></span>
      <span data-ttu-id="3d6bb-180">Exemplo de uso:</span><span class="sxs-lookup"><span data-stu-id="3d6bb-180">Example usage:</span></span>
      ```ts
      let keyName = "MyKey";
      let client = new KeysClient(url, credentials);
      let key = await client.getKey(keyName);
      let result = await client.updateKey(keyName, key.version, { enabled: false });
      ```
    syntax:
      content: 'function updateKey(name: string, keyVersion: string, options?: UpdateKeyOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="3d6bb-181">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-181">The name of the key.</span></span>
        - id: keyVersion
          type:
            - string
          description: <span data-ttu-id="3d6bb-182">A versão da chave.</span><span class="sxs-lookup"><span data-stu-id="3d6bb-182">The version of the key.</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.UpdateKeyOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-keys.Key>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.vaultBaseUrl'
    name: vaultBaseUrl
    fullName: vaultBaseUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="3d6bb-183">A URL base para o cofre</span><span class="sxs-lookup"><span data-stu-id="3d6bb-183">The base URL to the vault</span></span>
    syntax:
      content: 'vaultBaseUrl: string'
      return:
        type:
          - string
    package: '@azure/keyvault-keys'
references:
  - uid: ServiceClientOptions | @azure/keyvault-keys.NewPipelineOptions
    name: NewPipelineOptions
    spec.typeScript:
      - name: 'ServiceClientOptions | '
        fullName: 'ServiceClientOptions | '
      - name: NewPipelineOptions
        fullName: NewPipelineOptions
        uid: '@azure/keyvault-keys.NewPipelineOptions'
  - uid: '@azure/keyvault-keys.RequestOptions'
    name: RequestOptions
    spec.typeScript:
      - name: RequestOptions
        fullName: RequestOptions
        uid: '@azure/keyvault-keys.RequestOptions'
  - uid: '@azure/keyvault-keys.CreateEcKeyOptions'
    name: CreateEcKeyOptions
    spec.typeScript:
      - name: CreateEcKeyOptions
        fullName: CreateEcKeyOptions
        uid: '@azure/keyvault-keys.CreateEcKeyOptions'
  - uid: Promise<@azure/keyvault-keys.Key>
    name: Key>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Key
        fullName: Key
        uid: '@azure/keyvault-keys.Key'
      - name: '>'
        fullName: '>'
  - uid: '@azure/keyvault-keys.JsonWebKeyType'
    name: JsonWebKeyType
    spec.typeScript:
      - name: JsonWebKeyType
        fullName: JsonWebKeyType
        uid: '@azure/keyvault-keys.JsonWebKeyType'
  - uid: '@azure/keyvault-keys.CreateKeyOptions'
    name: CreateKeyOptions
    spec.typeScript:
      - name: CreateKeyOptions
        fullName: CreateKeyOptions
        uid: '@azure/keyvault-keys.CreateKeyOptions'
  - uid: '@azure/keyvault-keys.CreateRsaKeyOptions'
    name: CreateRsaKeyOptions
    spec.typeScript:
      - name: CreateRsaKeyOptions
        fullName: CreateRsaKeyOptions
        uid: '@azure/keyvault-keys.CreateRsaKeyOptions'
  - uid: Promise<@azure/keyvault-keys.DeletedKey>
    name: DeletedKey>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeletedKey
        fullName: DeletedKey
        uid: '@azure/keyvault-keys.DeletedKey'
      - name: '>'
        fullName: '>'
  - uid: '@azure/keyvault-keys.GetKeyOptions'
    name: GetKeyOptions
    spec.typeScript:
      - name: GetKeyOptions
        fullName: GetKeyOptions
        uid: '@azure/keyvault-keys.GetKeyOptions'
  - uid: '@azure/keyvault-keys.JsonWebKey'
    name: JsonWebKey
    spec.typeScript:
      - name: JsonWebKey
        fullName: JsonWebKey
        uid: '@azure/keyvault-keys.JsonWebKey'
  - uid: '@azure/keyvault-keys.ImportKeyOptions'
    name: ImportKeyOptions
    spec.typeScript:
      - name: ImportKeyOptions
        fullName: ImportKeyOptions
        uid: '@azure/keyvault-keys.ImportKeyOptions'
  - uid: '@azure/keyvault-keys.GetKeysOptions'
    name: GetKeysOptions
    spec.typeScript:
      - name: GetKeysOptions
        fullName: GetKeysOptions
        uid: '@azure/keyvault-keys.GetKeysOptions'
  - uid: 'PagedAsyncIterableIterator<@azure/keyvault-keys.KeyAttributes, @azure/keyvault-keys.KeyAttributes[]>'
    name: 'KeyAttributes[]>'
    spec.typeScript:
      - name: PagedAsyncIterableIterator<
        fullName: PagedAsyncIterableIterator<
      - name: KeyAttributes
        fullName: KeyAttributes
        uid: '@azure/keyvault-keys.KeyAttributes'
      - name: ', '
        fullName: ', '
      - name: KeyAttributes
        fullName: KeyAttributes
        uid: '@azure/keyvault-keys.KeyAttributes'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/keyvault-keys.UpdateKeyOptions'
    name: UpdateKeyOptions
    spec.typeScript:
      - name: UpdateKeyOptions
        fullName: UpdateKeyOptions
        uid: '@azure/keyvault-keys.UpdateKeyOptions'
  - uid: '@azure/keyvault-keys.NewPipelineOptions'
    name: NewPipelineOptions
    spec.typeScript:
      - name: NewPipelineOptions
        fullName: NewPipelineOptions
        uid: '@azure/keyvault-keys.NewPipelineOptions'