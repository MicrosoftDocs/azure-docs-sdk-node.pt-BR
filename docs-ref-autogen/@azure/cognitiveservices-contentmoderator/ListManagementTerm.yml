### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm'
    name: ListManagementTerm
    fullName: ListManagementTerm
    children:
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.addTerm'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.addTerm_2'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.addTerm_1'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTerms'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTerms_2'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTerms_1'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteTerm'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteTerm_2'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteTerm_1'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.getAllTerms_2'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.getAllTerms'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.getAllTerms_1'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.constructor'
    langs:
      - typeScript
    type: class
    summary: <span data-ttu-id="c8fde-101">Classe que representa um ListManagementTerm.</span><span class="sxs-lookup"><span data-stu-id="c8fde-101">Class representing a ListManagementTerm.</span></span>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.addTerm'
    name: 'addTerm(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="c8fde-102">Adicione um termo à lista de termos com Id igual a lista de que ID passada da lista.</span><span class="sxs-lookup"><span data-stu-id="c8fde-102">Add a term to the term list with list Id equal to list Id passed.</span></span>
    syntax:
      content: 'function addTerm(listId: string, term: string, language: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="c8fde-103">Lista o Id da lista de imagens.</span><span class="sxs-lookup"><span data-stu-id="c8fde-103">List Id of the image list.</span></span>
        - id: term
          type:
            - string
          description: <span data-ttu-id="c8fde-104">Termo a ser excluído</span><span class="sxs-lookup"><span data-stu-id="c8fde-104">Term to be deleted</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="c8fde-105">Idioma dos termos.</span><span class="sxs-lookup"><span data-stu-id="c8fde-105">Language of the terms.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementTermAddTermResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.addTerm_2'
    name: 'addTerm(string, string, string, RequestOptionsBase, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addTerm(listId: string, term: string, language: string, options: RequestOptionsBase, callback: ServiceCallback<any>)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="c8fde-106">Lista o Id da lista de imagens.</span><span class="sxs-lookup"><span data-stu-id="c8fde-106">List Id of the image list.</span></span>
        - id: term
          type:
            - string
          description: <span data-ttu-id="c8fde-107">Termo a ser excluído</span><span class="sxs-lookup"><span data-stu-id="c8fde-107">Term to be deleted</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="c8fde-108">Idioma dos termos.</span><span class="sxs-lookup"><span data-stu-id="c8fde-108">Language of the terms.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="c8fde-109">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="c8fde-109">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            <span data-ttu-id="c8fde-110">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="c8fde-110">The callback</span></span>
      return:
        type:
          - Promise<Models.ListManagementTermAddTermResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.addTerm_1'
    name: 'addTerm(string, string, string, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addTerm(listId: string, term: string, language: string, callback: ServiceCallback<any>)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="c8fde-111">Lista o Id da lista de imagens.</span><span class="sxs-lookup"><span data-stu-id="c8fde-111">List Id of the image list.</span></span>
        - id: term
          type:
            - string
          description: <span data-ttu-id="c8fde-112">Termo a ser excluído</span><span class="sxs-lookup"><span data-stu-id="c8fde-112">Term to be deleted</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="c8fde-113">Idioma dos termos.</span><span class="sxs-lookup"><span data-stu-id="c8fde-113">Language of the terms.</span></span>
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            <span data-ttu-id="c8fde-114">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="c8fde-114">The callback</span></span>
      return:
        type:
          - Promise<Models.ListManagementTermAddTermResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTerms'
    name: 'deleteAllTerms(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="c8fde-115">Exclui todos os termos da lista com Id igual à lista de que ID passada da lista.</span><span class="sxs-lookup"><span data-stu-id="c8fde-115">Deletes all terms from the list with list Id equal to the list Id passed.</span></span>
    syntax:
      content: 'function deleteAllTerms(listId: string, language: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="c8fde-116">Lista o Id da lista de imagens.</span><span class="sxs-lookup"><span data-stu-id="c8fde-116">List Id of the image list.</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="c8fde-117">Idioma dos termos.</span><span class="sxs-lookup"><span data-stu-id="c8fde-117">Language of the terms.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementTermDeleteAllTermsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTerms_2'
    name: 'deleteAllTerms(string, string, RequestOptionsBase, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteAllTerms(listId: string, language: string, options: RequestOptionsBase, callback: ServiceCallback<string>)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="c8fde-118">Lista o Id da lista de imagens.</span><span class="sxs-lookup"><span data-stu-id="c8fde-118">List Id of the image list.</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="c8fde-119">Idioma dos termos.</span><span class="sxs-lookup"><span data-stu-id="c8fde-119">Language of the terms.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="c8fde-120">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="c8fde-120">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            <span data-ttu-id="c8fde-121">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="c8fde-121">The callback</span></span>
      return:
        type:
          - Promise<Models.ListManagementTermDeleteAllTermsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTerms_1'
    name: 'deleteAllTerms(string, string, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteAllTerms(listId: string, language: string, callback: ServiceCallback<string>)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="c8fde-122">Lista o Id da lista de imagens.</span><span class="sxs-lookup"><span data-stu-id="c8fde-122">List Id of the image list.</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="c8fde-123">Idioma dos termos.</span><span class="sxs-lookup"><span data-stu-id="c8fde-123">Language of the terms.</span></span>
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            <span data-ttu-id="c8fde-124">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="c8fde-124">The callback</span></span>
      return:
        type:
          - Promise<Models.ListManagementTermDeleteAllTermsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteTerm'
    name: 'deleteTerm(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="c8fde-125">Exclui um termo da lista com Id igual à lista de que ID passada da lista.</span><span class="sxs-lookup"><span data-stu-id="c8fde-125">Deletes a term from the list with list Id equal to the list Id passed.</span></span>
    syntax:
      content: 'function deleteTerm(listId: string, term: string, language: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="c8fde-126">Lista o Id da lista de imagens.</span><span class="sxs-lookup"><span data-stu-id="c8fde-126">List Id of the image list.</span></span>
        - id: term
          type:
            - string
          description: <span data-ttu-id="c8fde-127">Termo a ser excluído</span><span class="sxs-lookup"><span data-stu-id="c8fde-127">Term to be deleted</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="c8fde-128">Idioma dos termos.</span><span class="sxs-lookup"><span data-stu-id="c8fde-128">Language of the terms.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementTermDeleteTermResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteTerm_2'
    name: 'deleteTerm(string, string, string, RequestOptionsBase, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteTerm(listId: string, term: string, language: string, options: RequestOptionsBase, callback: ServiceCallback<string>)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="c8fde-129">Lista o Id da lista de imagens.</span><span class="sxs-lookup"><span data-stu-id="c8fde-129">List Id of the image list.</span></span>
        - id: term
          type:
            - string
          description: <span data-ttu-id="c8fde-130">Termo a ser excluído</span><span class="sxs-lookup"><span data-stu-id="c8fde-130">Term to be deleted</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="c8fde-131">Idioma dos termos.</span><span class="sxs-lookup"><span data-stu-id="c8fde-131">Language of the terms.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="c8fde-132">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="c8fde-132">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            <span data-ttu-id="c8fde-133">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="c8fde-133">The callback</span></span>
      return:
        type:
          - Promise<Models.ListManagementTermDeleteTermResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteTerm_1'
    name: 'deleteTerm(string, string, string, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteTerm(listId: string, term: string, language: string, callback: ServiceCallback<string>)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="c8fde-134">Lista o Id da lista de imagens.</span><span class="sxs-lookup"><span data-stu-id="c8fde-134">List Id of the image list.</span></span>
        - id: term
          type:
            - string
          description: <span data-ttu-id="c8fde-135">Termo a ser excluído</span><span class="sxs-lookup"><span data-stu-id="c8fde-135">Term to be deleted</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="c8fde-136">Idioma dos termos.</span><span class="sxs-lookup"><span data-stu-id="c8fde-136">Language of the terms.</span></span>
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            <span data-ttu-id="c8fde-137">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="c8fde-137">The callback</span></span>
      return:
        type:
          - Promise<Models.ListManagementTermDeleteTermResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.getAllTerms_2'
    name: 'getAllTerms(string, string, ListManagementTermGetAllTermsOptionalParams, ServiceCallback<Terms>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAllTerms(listId: string, language: string, options: ListManagementTermGetAllTermsOptionalParams, callback: ServiceCallback<Terms>)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="c8fde-138">Lista o Id da lista de imagens.</span><span class="sxs-lookup"><span data-stu-id="c8fde-138">List Id of the image list.</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="c8fde-139">Idioma dos termos.</span><span class="sxs-lookup"><span data-stu-id="c8fde-139">Language of the terms.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ListManagementTermGetAllTermsOptionalParams'
          description: <span data-ttu-id="c8fde-140">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="c8fde-140">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Terms>
          description: |
            <span data-ttu-id="c8fde-141">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="c8fde-141">The callback</span></span>
      return:
        type:
          - Promise<Models.ListManagementTermGetAllTermsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.getAllTerms'
    name: 'getAllTerms(string, string, Models.ListManagementTermGetAllTermsOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="c8fde-142">Obtém todos os termos da lista com lista de Id igual à lista de que ID passada.</span><span class="sxs-lookup"><span data-stu-id="c8fde-142">Gets all terms from the list with list Id equal to the list Id passed.</span></span>
    syntax:
      content: 'function getAllTerms(listId: string, language: string, options?: Models.ListManagementTermGetAllTermsOptionalParams)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="c8fde-143">Lista o Id da lista de imagens.</span><span class="sxs-lookup"><span data-stu-id="c8fde-143">List Id of the image list.</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="c8fde-144">Idioma dos termos.</span><span class="sxs-lookup"><span data-stu-id="c8fde-144">Language of the terms.</span></span>
        - id: options
          type:
            - Models.ListManagementTermGetAllTermsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementTermGetAllTermsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.getAllTerms_1'
    name: 'getAllTerms(string, string, ServiceCallback<Terms>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAllTerms(listId: string, language: string, callback: ServiceCallback<Terms>)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="c8fde-145">Lista o Id da lista de imagens.</span><span class="sxs-lookup"><span data-stu-id="c8fde-145">List Id of the image list.</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="c8fde-146">Idioma dos termos.</span><span class="sxs-lookup"><span data-stu-id="c8fde-146">Language of the terms.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Terms>
          description: |
            <span data-ttu-id="c8fde-147">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="c8fde-147">The callback</span></span>
      return:
        type:
          - Promise<Models.ListManagementTermGetAllTermsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.constructor'
    name: ListManagementTerm(ContentModeratorClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="c8fde-148">Crie um ListManagementTerm.</span><span class="sxs-lookup"><span data-stu-id="c8fde-148">Create a ListManagementTerm.</span></span>
    syntax:
      content: 'new ListManagementTerm(client: ContentModeratorClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext'
          description: |
            <span data-ttu-id="c8fde-149">Referência para o cliente do serviço.</span><span class="sxs-lookup"><span data-stu-id="c8fde-149">Reference to the service client.</span></span>
    package: '@azure/cognitiveservices-contentmoderator'
references:
  - uid: '@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext'
    name: ContentModeratorClientContext
    spec.typeScript:
      - name: ContentModeratorClientContext
        fullName: ContentModeratorClientContext
        uid: '@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-contentmoderator.Terms>
    name: Terms>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Terms
        fullName: Terms
        uid: '@azure/cognitiveservices-contentmoderator.Terms'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTermGetAllTermsOptionalParams'
    name: ListManagementTermGetAllTermsOptionalParams
    spec.typeScript:
      - name: ListManagementTermGetAllTermsOptionalParams
        fullName: ListManagementTermGetAllTermsOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ListManagementTermGetAllTermsOptionalParams'