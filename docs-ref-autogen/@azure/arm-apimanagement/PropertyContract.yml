### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-apimanagement.PropertyContract'
    name: PropertyContract
    fullName: PropertyContract
    children:
      - '@azure/arm-apimanagement.PropertyContract.displayName'
      - '@azure/arm-apimanagement.PropertyContract.id'
      - '@azure/arm-apimanagement.PropertyContract.name'
      - '@azure/arm-apimanagement.PropertyContract.secret'
      - '@azure/arm-apimanagement.PropertyContract.tags'
      - '@azure/arm-apimanagement.PropertyContract.type'
      - '@azure/arm-apimanagement.PropertyContract.value'
    langs:
      - typeScript
    type: interface
    summary: <span data-ttu-id="b3e81-101">Detalhes da propriedade.</span><span class="sxs-lookup"><span data-stu-id="b3e81-101">Property details.</span></span>
    extends:
      name: '@azure/arm-apimanagement.Resource'
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.PropertyContract.displayName'
    name: displayName
    fullName: displayName
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="b3e81-102">Nome exclusivo da propriedade.</span><span class="sxs-lookup"><span data-stu-id="b3e81-102">Unique name of Property.</span></span> <span data-ttu-id="b3e81-103">Ele pode conter apenas letras, dígitos, ponto, traço e caracteres de sublinhado.</span><span class="sxs-lookup"><span data-stu-id="b3e81-103">It may contain only letters, digits, period, dash, and underscore characters.</span></span>'
    syntax:
      content: 'displayName: string'
      return:
        type:
          - string
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.PropertyContract.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="b3e81-104">ID do recurso.</span><span class="sxs-lookup"><span data-stu-id="b3e81-104">Resource ID.</span></span>
      <span data-ttu-id="b3e81-105">**OBSERVAÇÃO: Essa propriedade não será serializada. Ele só poderá ser preenchido pelo servidor.**</span><span class="sxs-lookup"><span data-stu-id="b3e81-105">**NOTE: This property will not be serialized. It can only be populated by the server.**</span></span>
    optional: true
    syntax:
      content: 'id?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.PropertyContract.name'
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="b3e81-106">Nome do recurso.</span><span class="sxs-lookup"><span data-stu-id="b3e81-106">Resource name.</span></span>
      <span data-ttu-id="b3e81-107">**OBSERVAÇÃO: Essa propriedade não será serializada. Ele só poderá ser preenchido pelo servidor.**</span><span class="sxs-lookup"><span data-stu-id="b3e81-107">**NOTE: This property will not be serialized. It can only be populated by the server.**</span></span>
    optional: true
    syntax:
      content: 'name?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.PropertyContract.secret'
    name: secret
    fullName: secret
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="b3e81-108">Determina se o valor é um segredo e se deve ser criptografado ou não.</span><span class="sxs-lookup"><span data-stu-id="b3e81-108">Determines whether the value is a secret and should be encrypted or not.</span></span> <span data-ttu-id="b3e81-109">O valor padrão é falso.</span><span class="sxs-lookup"><span data-stu-id="b3e81-109">Default value is false.</span></span>
    optional: true
    syntax:
      content: 'secret?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.PropertyContract.tags'
    name: tags
    fullName: tags
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="b3e81-110">Marcas opcionais que, quando fornecidas, podem ser usadas para filtrar a lista de propriedades.</span><span class="sxs-lookup"><span data-stu-id="b3e81-110">Optional tags that when provided can be used to filter the property list.</span></span>'
    optional: true
    syntax:
      content: 'tags?: string[]'
      return:
        type:
          - 'string[]'
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.PropertyContract.type'
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="b3e81-111">Tipo de recurso para o recurso de gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="b3e81-111">Resource type for API Management resource.</span></span>
      <span data-ttu-id="b3e81-112">**OBSERVAÇÃO: Essa propriedade não será serializada. Ele só poderá ser preenchido pelo servidor.**</span><span class="sxs-lookup"><span data-stu-id="b3e81-112">**NOTE: This property will not be serialized. It can only be populated by the server.**</span></span>
    optional: true
    syntax:
      content: 'type?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.PropertyContract.value'
    name: value
    fullName: value
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="b3e81-113">Valor da propriedade.</span><span class="sxs-lookup"><span data-stu-id="b3e81-113">Value of the property.</span></span> <span data-ttu-id="b3e81-114">Pode conter expressões de política.</span><span class="sxs-lookup"><span data-stu-id="b3e81-114">Can contain policy expressions.</span></span> <span data-ttu-id="b3e81-115">Ele não pode ficar vazio ou conter apenas espaços em branco.</span><span class="sxs-lookup"><span data-stu-id="b3e81-115">It may not be empty or consist only of whitespace.</span></span>
    syntax:
      content: 'value: string'
      return:
        type:
          - string
    package: '@azure/arm-apimanagement'
references:
  - uid: '@azure/arm-apimanagement.Resource'
    name: Resource
    spec.typeScript:
      - name: Resource
        fullName: Resource
        uid: '@azure/arm-apimanagement.Resource'