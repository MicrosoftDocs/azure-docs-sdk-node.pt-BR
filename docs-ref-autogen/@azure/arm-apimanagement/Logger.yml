### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-apimanagement.Logger'
    name: Logger
    fullName: Logger
    children:
      - '@azure/arm-apimanagement.Logger.createOrUpdate_2'
      - '@azure/arm-apimanagement.Logger.createOrUpdate'
      - '@azure/arm-apimanagement.Logger.createOrUpdate_1'
      - '@azure/arm-apimanagement.Logger.deleteMethod_2'
      - '@azure/arm-apimanagement.Logger.deleteMethod'
      - '@azure/arm-apimanagement.Logger.deleteMethod_1'
      - '@azure/arm-apimanagement.Logger.get'
      - '@azure/arm-apimanagement.Logger.get_2'
      - '@azure/arm-apimanagement.Logger.get_1'
      - '@azure/arm-apimanagement.Logger.getEntityTag'
      - '@azure/arm-apimanagement.Logger.getEntityTag_2'
      - '@azure/arm-apimanagement.Logger.getEntityTag_1'
      - '@azure/arm-apimanagement.Logger.listByService_2'
      - '@azure/arm-apimanagement.Logger.listByService'
      - '@azure/arm-apimanagement.Logger.listByService_1'
      - '@azure/arm-apimanagement.Logger.listByServiceNext'
      - '@azure/arm-apimanagement.Logger.listByServiceNext_2'
      - '@azure/arm-apimanagement.Logger.listByServiceNext_1'
      - '@azure/arm-apimanagement.Logger.constructor'
      - '@azure/arm-apimanagement.Logger.update'
      - '@azure/arm-apimanagement.Logger.update_2'
      - '@azure/arm-apimanagement.Logger.update_1'
    langs:
      - typeScript
    type: class
    summary: <span data-ttu-id="38d49-101">Classe que representa um agente de log.</span><span class="sxs-lookup"><span data-stu-id="38d49-101">Class representing a Logger.</span></span>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.createOrUpdate_2'
    name: 'createOrUpdate(string, string, string, LoggerContract, LoggerCreateOrUpdateOptionalParams, ServiceCallback<LoggerContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, loggerId: string, parameters: LoggerContract, options: LoggerCreateOrUpdateOptionalParams, callback: ServiceCallback<LoggerContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="38d49-102">O nome do grupo de recursos.</span><span class="sxs-lookup"><span data-stu-id="38d49-102">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="38d49-103">O nome do serviço Gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="38d49-103">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="38d49-104">Identificador do agente de log.</span><span class="sxs-lookup"><span data-stu-id="38d49-104">Logger identifier.</span></span> <span data-ttu-id="38d49-105">Deve ser exclusivo na instância do serviço de gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="38d49-105">Must be unique in the API Management service instance.</span></span>
        - id: parameters
          type:
            - '@azure/arm-apimanagement.LoggerContract'
          description: <span data-ttu-id="38d49-106">Crie parâmetros.</span><span class="sxs-lookup"><span data-stu-id="38d49-106">Create parameters.</span></span>
        - id: options
          type:
            - '@azure/arm-apimanagement.LoggerCreateOrUpdateOptionalParams'
          description: <span data-ttu-id="38d49-107">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="38d49-107">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerContract>
          description: |
            <span data-ttu-id="38d49-108">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="38d49-108">The callback</span></span>
      return:
        type:
          - Promise<Models.LoggerCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.createOrUpdate'
    name: 'createOrUpdate(string, string, string, LoggerContract, Models.LoggerCreateOrUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="38d49-109">Cria ou atualiza um agente de log.</span><span class="sxs-lookup"><span data-stu-id="38d49-109">Creates or Updates a logger.</span></span>
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, loggerId: string, parameters: LoggerContract, options?: Models.LoggerCreateOrUpdateOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="38d49-110">O nome do grupo de recursos.</span><span class="sxs-lookup"><span data-stu-id="38d49-110">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="38d49-111">O nome do serviço Gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="38d49-111">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="38d49-112">Identificador do agente de log.</span><span class="sxs-lookup"><span data-stu-id="38d49-112">Logger identifier.</span></span> <span data-ttu-id="38d49-113">Deve ser exclusivo na instância do serviço de gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="38d49-113">Must be unique in the API Management service instance.</span></span>
        - id: parameters
          type:
            - '@azure/arm-apimanagement.LoggerContract'
          description: <span data-ttu-id="38d49-114">Crie parâmetros.</span><span class="sxs-lookup"><span data-stu-id="38d49-114">Create parameters.</span></span>
        - id: options
          type:
            - Models.LoggerCreateOrUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LoggerCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.createOrUpdate_1'
    name: 'createOrUpdate(string, string, string, LoggerContract, ServiceCallback<LoggerContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, loggerId: string, parameters: LoggerContract, callback: ServiceCallback<LoggerContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="38d49-115">O nome do grupo de recursos.</span><span class="sxs-lookup"><span data-stu-id="38d49-115">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="38d49-116">O nome do serviço Gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="38d49-116">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="38d49-117">Identificador do agente de log.</span><span class="sxs-lookup"><span data-stu-id="38d49-117">Logger identifier.</span></span> <span data-ttu-id="38d49-118">Deve ser exclusivo na instância do serviço de gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="38d49-118">Must be unique in the API Management service instance.</span></span>
        - id: parameters
          type:
            - '@azure/arm-apimanagement.LoggerContract'
          description: <span data-ttu-id="38d49-119">Crie parâmetros.</span><span class="sxs-lookup"><span data-stu-id="38d49-119">Create parameters.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerContract>
          description: |
            <span data-ttu-id="38d49-120">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="38d49-120">The callback</span></span>
      return:
        type:
          - Promise<Models.LoggerCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.deleteMethod_2'
    name: 'deleteMethod(string, string, string, string, LoggerDeleteMethodOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, serviceName: string, loggerId: string, ifMatch: string, options: LoggerDeleteMethodOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="38d49-121">O nome do grupo de recursos.</span><span class="sxs-lookup"><span data-stu-id="38d49-121">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="38d49-122">O nome do serviço Gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="38d49-122">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="38d49-123">Identificador do agente de log.</span><span class="sxs-lookup"><span data-stu-id="38d49-123">Logger identifier.</span></span> <span data-ttu-id="38d49-124">Deve ser exclusivo na instância do serviço de gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="38d49-124">Must be unique in the API Management service instance.</span></span>
        - id: ifMatch
          type:
            - string
          description: <span data-ttu-id="38d49-125">ETag da entidade.</span><span class="sxs-lookup"><span data-stu-id="38d49-125">ETag of the Entity.</span></span> <span data-ttu-id="38d49-126">ETag deve coincidir com o estado atual da entidade da resposta de cabeçalho da solicitação GET ou deve ser \* para atualização incondicional.</span><span class="sxs-lookup"><span data-stu-id="38d49-126">ETag should match the current entity state from the header response of the GET request or it should be \* for unconditional update.</span></span>
        - id: options
          type:
            - '@azure/arm-apimanagement.LoggerDeleteMethodOptionalParams'
          description: <span data-ttu-id="38d49-127">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="38d49-127">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="38d49-128">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="38d49-128">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.deleteMethod'
    name: 'deleteMethod(string, string, string, string, Models.LoggerDeleteMethodOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="38d49-129">Exclui o agente de log especificado.</span><span class="sxs-lookup"><span data-stu-id="38d49-129">Deletes the specified logger.</span></span>
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, serviceName: string, loggerId: string, ifMatch: string, options?: Models.LoggerDeleteMethodOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="38d49-130">O nome do grupo de recursos.</span><span class="sxs-lookup"><span data-stu-id="38d49-130">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="38d49-131">O nome do serviço Gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="38d49-131">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="38d49-132">Identificador do agente de log.</span><span class="sxs-lookup"><span data-stu-id="38d49-132">Logger identifier.</span></span> <span data-ttu-id="38d49-133">Deve ser exclusivo na instância do serviço de gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="38d49-133">Must be unique in the API Management service instance.</span></span>
        - id: ifMatch
          type:
            - string
          description: <span data-ttu-id="38d49-134">ETag da entidade.</span><span class="sxs-lookup"><span data-stu-id="38d49-134">ETag of the Entity.</span></span> <span data-ttu-id="38d49-135">ETag deve coincidir com o estado atual da entidade da resposta de cabeçalho da solicitação GET ou deve ser \* para atualização incondicional.</span><span class="sxs-lookup"><span data-stu-id="38d49-135">ETag should match the current entity state from the header response of the GET request or it should be \* for unconditional update.</span></span>
        - id: options
          type:
            - Models.LoggerDeleteMethodOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.deleteMethod_1'
    name: 'deleteMethod(string, string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, serviceName: string, loggerId: string, ifMatch: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="38d49-136">O nome do grupo de recursos.</span><span class="sxs-lookup"><span data-stu-id="38d49-136">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="38d49-137">O nome do serviço Gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="38d49-137">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="38d49-138">Identificador do agente de log.</span><span class="sxs-lookup"><span data-stu-id="38d49-138">Logger identifier.</span></span> <span data-ttu-id="38d49-139">Deve ser exclusivo na instância do serviço de gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="38d49-139">Must be unique in the API Management service instance.</span></span>
        - id: ifMatch
          type:
            - string
          description: <span data-ttu-id="38d49-140">ETag da entidade.</span><span class="sxs-lookup"><span data-stu-id="38d49-140">ETag of the Entity.</span></span> <span data-ttu-id="38d49-141">ETag deve coincidir com o estado atual da entidade da resposta de cabeçalho da solicitação GET ou deve ser \* para atualização incondicional.</span><span class="sxs-lookup"><span data-stu-id="38d49-141">ETag should match the current entity state from the header response of the GET request or it should be \* for unconditional update.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="38d49-142">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="38d49-142">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="38d49-143">Obtém os detalhes do agente de log especificado por seu identificador.</span><span class="sxs-lookup"><span data-stu-id="38d49-143">Gets the details of the logger specified by its identifier.</span></span>
    syntax:
      content: 'function get(resourceGroupName: string, serviceName: string, loggerId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="38d49-144">O nome do grupo de recursos.</span><span class="sxs-lookup"><span data-stu-id="38d49-144">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="38d49-145">O nome do serviço Gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="38d49-145">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="38d49-146">Identificador do agente de log.</span><span class="sxs-lookup"><span data-stu-id="38d49-146">Logger identifier.</span></span> <span data-ttu-id="38d49-147">Deve ser exclusivo na instância do serviço de gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="38d49-147">Must be unique in the API Management service instance.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LoggerGetResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.get_2'
    name: 'get(string, string, string, RequestOptionsBase, ServiceCallback<LoggerContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, serviceName: string, loggerId: string, options: RequestOptionsBase, callback: ServiceCallback<LoggerContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="38d49-148">O nome do grupo de recursos.</span><span class="sxs-lookup"><span data-stu-id="38d49-148">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="38d49-149">O nome do serviço Gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="38d49-149">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="38d49-150">Identificador do agente de log.</span><span class="sxs-lookup"><span data-stu-id="38d49-150">Logger identifier.</span></span> <span data-ttu-id="38d49-151">Deve ser exclusivo na instância do serviço de gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="38d49-151">Must be unique in the API Management service instance.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="38d49-152">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="38d49-152">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerContract>
          description: |
            <span data-ttu-id="38d49-153">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="38d49-153">The callback</span></span>
      return:
        type:
          - Promise<Models.LoggerGetResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.get_1'
    name: 'get(string, string, string, ServiceCallback<LoggerContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, serviceName: string, loggerId: string, callback: ServiceCallback<LoggerContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="38d49-154">O nome do grupo de recursos.</span><span class="sxs-lookup"><span data-stu-id="38d49-154">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="38d49-155">O nome do serviço Gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="38d49-155">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="38d49-156">Identificador do agente de log.</span><span class="sxs-lookup"><span data-stu-id="38d49-156">Logger identifier.</span></span> <span data-ttu-id="38d49-157">Deve ser exclusivo na instância do serviço de gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="38d49-157">Must be unique in the API Management service instance.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerContract>
          description: |
            <span data-ttu-id="38d49-158">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="38d49-158">The callback</span></span>
      return:
        type:
          - Promise<Models.LoggerGetResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.getEntityTag'
    name: 'getEntityTag(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="38d49-159">Obtém a versão de estado (Etag) do agente de log especificado por seu identificador.</span><span class="sxs-lookup"><span data-stu-id="38d49-159">Gets the entity state (Etag) version of the logger specified by its identifier.</span></span>
    syntax:
      content: 'function getEntityTag(resourceGroupName: string, serviceName: string, loggerId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="38d49-160">O nome do grupo de recursos.</span><span class="sxs-lookup"><span data-stu-id="38d49-160">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="38d49-161">O nome do serviço Gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="38d49-161">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="38d49-162">Identificador do agente de log.</span><span class="sxs-lookup"><span data-stu-id="38d49-162">Logger identifier.</span></span> <span data-ttu-id="38d49-163">Deve ser exclusivo na instância do serviço de gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="38d49-163">Must be unique in the API Management service instance.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LoggerGetEntityTagResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.getEntityTag_2'
    name: 'getEntityTag(string, string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getEntityTag(resourceGroupName: string, serviceName: string, loggerId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="38d49-164">O nome do grupo de recursos.</span><span class="sxs-lookup"><span data-stu-id="38d49-164">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="38d49-165">O nome do serviço Gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="38d49-165">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="38d49-166">Identificador do agente de log.</span><span class="sxs-lookup"><span data-stu-id="38d49-166">Logger identifier.</span></span> <span data-ttu-id="38d49-167">Deve ser exclusivo na instância do serviço de gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="38d49-167">Must be unique in the API Management service instance.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="38d49-168">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="38d49-168">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="38d49-169">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="38d49-169">The callback</span></span>
      return:
        type:
          - Promise<Models.LoggerGetEntityTagResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.getEntityTag_1'
    name: 'getEntityTag(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getEntityTag(resourceGroupName: string, serviceName: string, loggerId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="38d49-170">O nome do grupo de recursos.</span><span class="sxs-lookup"><span data-stu-id="38d49-170">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="38d49-171">O nome do serviço Gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="38d49-171">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="38d49-172">Identificador do agente de log.</span><span class="sxs-lookup"><span data-stu-id="38d49-172">Logger identifier.</span></span> <span data-ttu-id="38d49-173">Deve ser exclusivo na instância do serviço de gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="38d49-173">Must be unique in the API Management service instance.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="38d49-174">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="38d49-174">The callback</span></span>
      return:
        type:
          - Promise<Models.LoggerGetEntityTagResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.listByService_2'
    name: 'listByService(string, string, LoggerListByServiceOptionalParams, ServiceCallback<LoggerCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByService(resourceGroupName: string, serviceName: string, options: LoggerListByServiceOptionalParams, callback: ServiceCallback<LoggerCollection>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="38d49-175">O nome do grupo de recursos.</span><span class="sxs-lookup"><span data-stu-id="38d49-175">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="38d49-176">O nome do serviço Gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="38d49-176">The name of the API Management service.</span></span>
        - id: options
          type:
            - '@azure/arm-apimanagement.LoggerListByServiceOptionalParams'
          description: <span data-ttu-id="38d49-177">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="38d49-177">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerCollection>
          description: |
            <span data-ttu-id="38d49-178">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="38d49-178">The callback</span></span>
      return:
        type:
          - Promise<Models.LoggerListByServiceResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.listByService'
    name: 'listByService(string, string, Models.LoggerListByServiceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="38d49-179">Lista uma coleção de agentes na instância do serviço especificado.</span><span class="sxs-lookup"><span data-stu-id="38d49-179">Lists a collection of loggers in the specified service instance.</span></span>
    syntax:
      content: 'function listByService(resourceGroupName: string, serviceName: string, options?: Models.LoggerListByServiceOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="38d49-180">O nome do grupo de recursos.</span><span class="sxs-lookup"><span data-stu-id="38d49-180">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="38d49-181">O nome do serviço Gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="38d49-181">The name of the API Management service.</span></span>
        - id: options
          type:
            - Models.LoggerListByServiceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LoggerListByServiceResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.listByService_1'
    name: 'listByService(string, string, ServiceCallback<LoggerCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByService(resourceGroupName: string, serviceName: string, callback: ServiceCallback<LoggerCollection>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="38d49-182">O nome do grupo de recursos.</span><span class="sxs-lookup"><span data-stu-id="38d49-182">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="38d49-183">O nome do serviço Gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="38d49-183">The name of the API Management service.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerCollection>
          description: |
            <span data-ttu-id="38d49-184">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="38d49-184">The callback</span></span>
      return:
        type:
          - Promise<Models.LoggerListByServiceResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.listByServiceNext'
    name: 'listByServiceNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="38d49-185">Lista uma coleção de agentes na instância do serviço especificado.</span><span class="sxs-lookup"><span data-stu-id="38d49-185">Lists a collection of loggers in the specified service instance.</span></span>
    syntax:
      content: 'function listByServiceNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="38d49-186">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="38d49-186">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LoggerListByServiceNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.listByServiceNext_2'
    name: 'listByServiceNext(string, RequestOptionsBase, ServiceCallback<LoggerCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByServiceNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<LoggerCollection>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="38d49-187">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="38d49-187">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="38d49-188">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="38d49-188">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerCollection>
          description: |
            <span data-ttu-id="38d49-189">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="38d49-189">The callback</span></span>
      return:
        type:
          - Promise<Models.LoggerListByServiceNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.listByServiceNext_1'
    name: 'listByServiceNext(string, ServiceCallback<LoggerCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByServiceNext(nextPageLink: string, callback: ServiceCallback<LoggerCollection>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="38d49-190">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="38d49-190">The NextLink from the previous successful call to List operation.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerCollection>
          description: |
            <span data-ttu-id="38d49-191">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="38d49-191">The callback</span></span>
      return:
        type:
          - Promise<Models.LoggerListByServiceNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.constructor'
    name: Logger(ApiManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="38d49-192">Crie um agente.</span><span class="sxs-lookup"><span data-stu-id="38d49-192">Create a Logger.</span></span>
    syntax:
      content: 'new Logger(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-apimanagement.ApiManagementClientContext'
          description: |
            <span data-ttu-id="38d49-193">Referência para o cliente do serviço.</span><span class="sxs-lookup"><span data-stu-id="38d49-193">Reference to the service client.</span></span>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.update'
    name: 'update(string, string, string, LoggerUpdateContract, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="38d49-194">Atualiza um agente existente.</span><span class="sxs-lookup"><span data-stu-id="38d49-194">Updates an existing logger.</span></span>
    syntax:
      content: 'function update(resourceGroupName: string, serviceName: string, loggerId: string, parameters: LoggerUpdateContract, ifMatch: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="38d49-195">O nome do grupo de recursos.</span><span class="sxs-lookup"><span data-stu-id="38d49-195">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="38d49-196">O nome do serviço Gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="38d49-196">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="38d49-197">Identificador do agente de log.</span><span class="sxs-lookup"><span data-stu-id="38d49-197">Logger identifier.</span></span> <span data-ttu-id="38d49-198">Deve ser exclusivo na instância do serviço de gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="38d49-198">Must be unique in the API Management service instance.</span></span>
        - id: parameters
          type:
            - '@azure/arm-apimanagement.LoggerUpdateContract'
          description: <span data-ttu-id="38d49-199">Atualize parâmetros.</span><span class="sxs-lookup"><span data-stu-id="38d49-199">Update parameters.</span></span>
        - id: ifMatch
          type:
            - string
          description: <span data-ttu-id="38d49-200">ETag da entidade.</span><span class="sxs-lookup"><span data-stu-id="38d49-200">ETag of the Entity.</span></span> <span data-ttu-id="38d49-201">ETag deve coincidir com o estado atual da entidade da resposta de cabeçalho da solicitação GET ou deve ser \* para atualização incondicional.</span><span class="sxs-lookup"><span data-stu-id="38d49-201">ETag should match the current entity state from the header response of the GET request or it should be \* for unconditional update.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.update_2'
    name: 'update(string, string, string, LoggerUpdateContract, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(resourceGroupName: string, serviceName: string, loggerId: string, parameters: LoggerUpdateContract, ifMatch: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="38d49-202">O nome do grupo de recursos.</span><span class="sxs-lookup"><span data-stu-id="38d49-202">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="38d49-203">O nome do serviço Gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="38d49-203">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="38d49-204">Identificador do agente de log.</span><span class="sxs-lookup"><span data-stu-id="38d49-204">Logger identifier.</span></span> <span data-ttu-id="38d49-205">Deve ser exclusivo na instância do serviço de gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="38d49-205">Must be unique in the API Management service instance.</span></span>
        - id: parameters
          type:
            - '@azure/arm-apimanagement.LoggerUpdateContract'
          description: <span data-ttu-id="38d49-206">Atualize parâmetros.</span><span class="sxs-lookup"><span data-stu-id="38d49-206">Update parameters.</span></span>
        - id: ifMatch
          type:
            - string
          description: <span data-ttu-id="38d49-207">ETag da entidade.</span><span class="sxs-lookup"><span data-stu-id="38d49-207">ETag of the Entity.</span></span> <span data-ttu-id="38d49-208">ETag deve coincidir com o estado atual da entidade da resposta de cabeçalho da solicitação GET ou deve ser \* para atualização incondicional.</span><span class="sxs-lookup"><span data-stu-id="38d49-208">ETag should match the current entity state from the header response of the GET request or it should be \* for unconditional update.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="38d49-209">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="38d49-209">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="38d49-210">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="38d49-210">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.update_1'
    name: 'update(string, string, string, LoggerUpdateContract, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(resourceGroupName: string, serviceName: string, loggerId: string, parameters: LoggerUpdateContract, ifMatch: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="38d49-211">O nome do grupo de recursos.</span><span class="sxs-lookup"><span data-stu-id="38d49-211">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="38d49-212">O nome do serviço Gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="38d49-212">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="38d49-213">Identificador do agente de log.</span><span class="sxs-lookup"><span data-stu-id="38d49-213">Logger identifier.</span></span> <span data-ttu-id="38d49-214">Deve ser exclusivo na instância do serviço de gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="38d49-214">Must be unique in the API Management service instance.</span></span>
        - id: parameters
          type:
            - '@azure/arm-apimanagement.LoggerUpdateContract'
          description: <span data-ttu-id="38d49-215">Atualize parâmetros.</span><span class="sxs-lookup"><span data-stu-id="38d49-215">Update parameters.</span></span>
        - id: ifMatch
          type:
            - string
          description: <span data-ttu-id="38d49-216">ETag da entidade.</span><span class="sxs-lookup"><span data-stu-id="38d49-216">ETag of the Entity.</span></span> <span data-ttu-id="38d49-217">ETag deve coincidir com o estado atual da entidade da resposta de cabeçalho da solicitação GET ou deve ser \* para atualização incondicional.</span><span class="sxs-lookup"><span data-stu-id="38d49-217">ETag should match the current entity state from the header response of the GET request or it should be \* for unconditional update.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="38d49-218">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="38d49-218">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
references:
  - uid: '@azure/arm-apimanagement.ApiManagementClientContext'
    name: ApiManagementClientContext
    spec.typeScript:
      - name: ApiManagementClientContext
        fullName: ApiManagementClientContext
        uid: '@azure/arm-apimanagement.ApiManagementClientContext'
  - uid: '@azure/arm-apimanagement.LoggerContract'
    name: LoggerContract
    spec.typeScript:
      - name: LoggerContract
        fullName: LoggerContract
        uid: '@azure/arm-apimanagement.LoggerContract'
  - uid: ServiceCallback<@azure/arm-apimanagement.LoggerContract>
    name: LoggerContract>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LoggerContract
        fullName: LoggerContract
        uid: '@azure/arm-apimanagement.LoggerContract'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-apimanagement.LoggerCreateOrUpdateOptionalParams'
    name: LoggerCreateOrUpdateOptionalParams
    spec.typeScript:
      - name: LoggerCreateOrUpdateOptionalParams
        fullName: LoggerCreateOrUpdateOptionalParams
        uid: '@azure/arm-apimanagement.LoggerCreateOrUpdateOptionalParams'
  - uid: '@azure/arm-apimanagement.LoggerDeleteMethodOptionalParams'
    name: LoggerDeleteMethodOptionalParams
    spec.typeScript:
      - name: LoggerDeleteMethodOptionalParams
        fullName: LoggerDeleteMethodOptionalParams
        uid: '@azure/arm-apimanagement.LoggerDeleteMethodOptionalParams'
  - uid: ServiceCallback<@azure/arm-apimanagement.LoggerCollection>
    name: LoggerCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LoggerCollection
        fullName: LoggerCollection
        uid: '@azure/arm-apimanagement.LoggerCollection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-apimanagement.LoggerListByServiceOptionalParams'
    name: LoggerListByServiceOptionalParams
    spec.typeScript:
      - name: LoggerListByServiceOptionalParams
        fullName: LoggerListByServiceOptionalParams
        uid: '@azure/arm-apimanagement.LoggerListByServiceOptionalParams'
  - uid: '@azure/arm-apimanagement.LoggerUpdateContract'
    name: LoggerUpdateContract
    spec.typeScript:
      - name: LoggerUpdateContract
        fullName: LoggerUpdateContract
        uid: '@azure/arm-apimanagement.LoggerUpdateContract'