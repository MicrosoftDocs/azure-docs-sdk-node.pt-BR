### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-storage.BlobContainers'
    name: BlobContainers
    fullName: BlobContainers
    children:
      - '@azure/arm-storage.BlobContainers.constructor'
      - '@azure/arm-storage.BlobContainers.clearLegalHold'
      - '@azure/arm-storage.BlobContainers.clearLegalHold_2'
      - '@azure/arm-storage.BlobContainers.clearLegalHold_1'
      - '@azure/arm-storage.BlobContainers.create_2'
      - '@azure/arm-storage.BlobContainers.create'
      - '@azure/arm-storage.BlobContainers.create_1'
      - '@azure/arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_2'
      - '@azure/arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy'
      - '@azure/arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_1'
      - '@azure/arm-storage.BlobContainers.deleteImmutabilityPolicy'
      - '@azure/arm-storage.BlobContainers.deleteImmutabilityPolicy_2'
      - '@azure/arm-storage.BlobContainers.deleteImmutabilityPolicy_1'
      - '@azure/arm-storage.BlobContainers.deleteMethod'
      - '@azure/arm-storage.BlobContainers.deleteMethod_2'
      - '@azure/arm-storage.BlobContainers.deleteMethod_1'
      - '@azure/arm-storage.BlobContainers.extendImmutabilityPolicy'
      - '@azure/arm-storage.BlobContainers.extendImmutabilityPolicy_2'
      - '@azure/arm-storage.BlobContainers.extendImmutabilityPolicy_1'
      - '@azure/arm-storage.BlobContainers.get'
      - '@azure/arm-storage.BlobContainers.get_2'
      - '@azure/arm-storage.BlobContainers.get_1'
      - '@azure/arm-storage.BlobContainers.getImmutabilityPolicy_2'
      - '@azure/arm-storage.BlobContainers.getImmutabilityPolicy'
      - '@azure/arm-storage.BlobContainers.getImmutabilityPolicy_1'
      - '@azure/arm-storage.BlobContainers.lease_2'
      - '@azure/arm-storage.BlobContainers.lease'
      - '@azure/arm-storage.BlobContainers.lease_1'
      - '@azure/arm-storage.BlobContainers.list_2'
      - '@azure/arm-storage.BlobContainers.list'
      - '@azure/arm-storage.BlobContainers.list_1'
      - '@azure/arm-storage.BlobContainers.listNext'
      - '@azure/arm-storage.BlobContainers.listNext_2'
      - '@azure/arm-storage.BlobContainers.listNext_1'
      - '@azure/arm-storage.BlobContainers.lockImmutabilityPolicy'
      - '@azure/arm-storage.BlobContainers.lockImmutabilityPolicy_2'
      - '@azure/arm-storage.BlobContainers.lockImmutabilityPolicy_1'
      - '@azure/arm-storage.BlobContainers.setLegalHold'
      - '@azure/arm-storage.BlobContainers.setLegalHold_2'
      - '@azure/arm-storage.BlobContainers.setLegalHold_1'
      - '@azure/arm-storage.BlobContainers.update_2'
      - '@azure/arm-storage.BlobContainers.update'
      - '@azure/arm-storage.BlobContainers.update_1'
    langs:
      - typeScript
    type: class
    summary: Classe que representa um BlobContainers.
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.constructor'
    name: BlobContainers(StorageManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Crie um BlobContainers.
    syntax:
      content: 'new BlobContainers(client: StorageManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-storage.StorageManagementClientContext'
          description: |
            Referência para o cliente do serviço.
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.clearLegalHold'
    name: 'clearLegalHold(string, string, string, string[], msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Limpa legal mantenha as marcas. Limpar a marcação mesma ou inexistente e resulta em uma operação idempotente. ClearLegalHold limpa apenas as marcas especificadas na solicitação.
    syntax:
      content: 'function clearLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: tags
          type:
            - 'string[]'
          description: Cada marca deve ser 3 e 23 caracteres alfanuméricos e é normalizada em letras minúsculas no SRP.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersClearLegalHoldResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.clearLegalHold_2'
    name: 'clearLegalHold(string, string, string, string[], RequestOptionsBase, ServiceCallback<LegalHold>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function clearLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options: RequestOptionsBase, callback: ServiceCallback<LegalHold>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: tags
          type:
            - 'string[]'
          description: Cada marca deve ser 3 e 23 caracteres alfanuméricos e é normalizada em letras minúsculas no SRP.
        - id: options
          type:
            - RequestOptionsBase
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.LegalHold>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.BlobContainersClearLegalHoldResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.clearLegalHold_1'
    name: 'clearLegalHold(string, string, string, string[], ServiceCallback<LegalHold>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function clearLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], callback: ServiceCallback<LegalHold>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: tags
          type:
            - 'string[]'
          description: Cada marca deve ser 3 e 23 caracteres alfanuméricos e é normalizada em letras minúsculas no SRP.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.LegalHold>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.BlobContainersClearLegalHoldResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.create_2'
    name: 'create(string, string, string, BlobContainersCreateOptionalParams, ServiceCallback<BlobContainer>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(resourceGroupName: string, accountName: string, containerName: string, options: BlobContainersCreateOptionalParams, callback: ServiceCallback<BlobContainer>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: options
          type:
            - '@azure/arm-storage.BlobContainersCreateOptionalParams'
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.BlobContainer>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.BlobContainersCreateResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.create'
    name: 'create(string, string, string, Models.BlobContainersCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Cria um novo contêiner na conta especificada conforme descrito pelo corpo da solicitação. O recurso de contêiner inclui os metadados e as propriedades desse contêiner. Ele não inclui uma lista dos blobs presentes no contêiner.
    syntax:
      content: 'function create(resourceGroupName: string, accountName: string, containerName: string, options?: Models.BlobContainersCreateOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: options
          type:
            - Models.BlobContainersCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersCreateResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.create_1'
    name: 'create(string, string, string, ServiceCallback<BlobContainer>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<BlobContainer>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.BlobContainer>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.BlobContainersCreateResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_2'
    name: 'createOrUpdateImmutabilityPolicy(string, string, string, number, BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams, ServiceCallback<ImmutabilityPolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createOrUpdateImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, options: BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams, callback: ServiceCallback<ImmutabilityPolicy>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: immutabilityPeriodSinceCreationInDays
          type:
            - number
          description: 'O período de imutabilidade para os blobs no contêiner desde a criação de política, em dias.'
        - id: options
          type:
            - '@azure/arm-storage.BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams'
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ImmutabilityPolicy>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.BlobContainersCreateOrUpdateImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy'
    name: 'createOrUpdateImmutabilityPolicy(string, string, string, number, Models.BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Cria ou atualiza uma política de imutabilidade desbloqueada. ETag em If-Match é cumprido se fornecido, mas não é necessário para esta operação.'
    syntax:
      content: 'function createOrUpdateImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, options?: Models.BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: immutabilityPeriodSinceCreationInDays
          type:
            - number
          description: 'O período de imutabilidade para os blobs no contêiner desde a criação de política, em dias.'
        - id: options
          type:
            - Models.BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersCreateOrUpdateImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_1'
    name: 'createOrUpdateImmutabilityPolicy(string, string, string, number, ServiceCallback<ImmutabilityPolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createOrUpdateImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, callback: ServiceCallback<ImmutabilityPolicy>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: immutabilityPeriodSinceCreationInDays
          type:
            - number
          description: 'O período de imutabilidade para os blobs no contêiner desde a criação de política, em dias.'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ImmutabilityPolicy>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.BlobContainersCreateOrUpdateImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.deleteImmutabilityPolicy'
    name: 'deleteImmutabilityPolicy(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Anula uma política de imutabilidade desbloqueada. A resposta de exclusão tem immutabilityPeriodSinceCreationInDays definido como 0. ETag em If-Match é necessária para esta operação.
      Exclusão de uma política de imutabilidade bloqueadas não é permitido, única maneira é excluir o contêiner após a exclusão de todos os blobs dentro do contêiner.
    syntax:
      content: 'function deleteImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: ifMatch
          type:
            - string
          description: 'O estado (ETag) versão da entidade para atualizar a política de imutabilidade. Um valor de "*" pode ser usado para aplicar a operação somente se a política de imutabilidade já existe. Se omitido, essa operação sempre será aplicada.'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersDeleteImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.deleteImmutabilityPolicy_2'
    name: 'deleteImmutabilityPolicy(string, string, string, string, RequestOptionsBase, ServiceCallback<ImmutabilityPolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options: RequestOptionsBase, callback: ServiceCallback<ImmutabilityPolicy>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: ifMatch
          type:
            - string
          description: 'O estado (ETag) versão da entidade para atualizar a política de imutabilidade. Um valor de "*" pode ser usado para aplicar a operação somente se a política de imutabilidade já existe. Se omitido, essa operação sempre será aplicada.'
        - id: options
          type:
            - RequestOptionsBase
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ImmutabilityPolicy>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.BlobContainersDeleteImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.deleteImmutabilityPolicy_1'
    name: 'deleteImmutabilityPolicy(string, string, string, string, ServiceCallback<ImmutabilityPolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, callback: ServiceCallback<ImmutabilityPolicy>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: ifMatch
          type:
            - string
          description: 'O estado (ETag) versão da entidade para atualizar a política de imutabilidade. Um valor de "*" pode ser usado para aplicar a operação somente se a política de imutabilidade já existe. Se omitido, essa operação sempre será aplicada.'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ImmutabilityPolicy>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.BlobContainersDeleteImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.deleteMethod'
    name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Exclui o contêiner em sua conta especificado.
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, accountName: string, containerName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.deleteMethod_2'
    name: 'deleteMethod(string, string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, accountName: string, containerName: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: options
          type:
            - RequestOptionsBase
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.deleteMethod_1'
    name: 'deleteMethod(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.extendImmutabilityPolicy'
    name: 'extendImmutabilityPolicy(string, string, string, string, number, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Estende o immutabilityPeriodSinceCreationInDays de uma immutabilityPolicy bloqueada. A única ação permitida em uma política de bloqueado será esta ação. ETag em If-Match é necessária para esta operação.
    syntax:
      content: 'function extendImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: ifMatch
          type:
            - string
          description: 'O estado (ETag) versão da entidade para atualizar a política de imutabilidade. Um valor de "*" pode ser usado para aplicar a operação somente se a política de imutabilidade já existe. Se omitido, essa operação sempre será aplicada.'
        - id: immutabilityPeriodSinceCreationInDays
          type:
            - number
          description: 'O período de imutabilidade para os blobs no contêiner desde a criação de política, em dias.'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersExtendImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.extendImmutabilityPolicy_2'
    name: 'extendImmutabilityPolicy(string, string, string, string, number, RequestOptionsBase, ServiceCallback<ImmutabilityPolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function extendImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, options: RequestOptionsBase, callback: ServiceCallback<ImmutabilityPolicy>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: ifMatch
          type:
            - string
          description: 'O estado (ETag) versão da entidade para atualizar a política de imutabilidade. Um valor de "*" pode ser usado para aplicar a operação somente se a política de imutabilidade já existe. Se omitido, essa operação sempre será aplicada.'
        - id: immutabilityPeriodSinceCreationInDays
          type:
            - number
          description: 'O período de imutabilidade para os blobs no contêiner desde a criação de política, em dias.'
        - id: options
          type:
            - RequestOptionsBase
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ImmutabilityPolicy>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.BlobContainersExtendImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.extendImmutabilityPolicy_1'
    name: 'extendImmutabilityPolicy(string, string, string, string, number, ServiceCallback<ImmutabilityPolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function extendImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, callback: ServiceCallback<ImmutabilityPolicy>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: ifMatch
          type:
            - string
          description: 'O estado (ETag) versão da entidade para atualizar a política de imutabilidade. Um valor de "*" pode ser usado para aplicar a operação somente se a política de imutabilidade já existe. Se omitido, essa operação sempre será aplicada.'
        - id: immutabilityPeriodSinceCreationInDays
          type:
            - number
          description: 'O período de imutabilidade para os blobs no contêiner desde a criação de política, em dias.'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ImmutabilityPolicy>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.BlobContainersExtendImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Obtém as propriedades de um contêiner especificado.
    syntax:
      content: 'function get(resourceGroupName: string, accountName: string, containerName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersGetResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.get_2'
    name: 'get(string, string, string, RequestOptionsBase, ServiceCallback<BlobContainer>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, accountName: string, containerName: string, options: RequestOptionsBase, callback: ServiceCallback<BlobContainer>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: options
          type:
            - RequestOptionsBase
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.BlobContainer>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.BlobContainersGetResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.get_1'
    name: 'get(string, string, string, ServiceCallback<BlobContainer>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<BlobContainer>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.BlobContainer>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.BlobContainersGetResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.getImmutabilityPolicy_2'
    name: 'getImmutabilityPolicy(string, string, string, BlobContainersGetImmutabilityPolicyOptionalParams, ServiceCallback<ImmutabilityPolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, options: BlobContainersGetImmutabilityPolicyOptionalParams, callback: ServiceCallback<ImmutabilityPolicy>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: options
          type:
            - '@azure/arm-storage.BlobContainersGetImmutabilityPolicyOptionalParams'
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ImmutabilityPolicy>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.BlobContainersGetImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.getImmutabilityPolicy'
    name: 'getImmutabilityPolicy(string, string, string, Models.BlobContainersGetImmutabilityPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Obtém a política de imutabilidade existente, juntamente com o ETag correspondente em cabeçalhos de resposta e o corpo.'
    syntax:
      content: 'function getImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, options?: Models.BlobContainersGetImmutabilityPolicyOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: options
          type:
            - Models.BlobContainersGetImmutabilityPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersGetImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.getImmutabilityPolicy_1'
    name: 'getImmutabilityPolicy(string, string, string, ServiceCallback<ImmutabilityPolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<ImmutabilityPolicy>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ImmutabilityPolicy>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.BlobContainersGetImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.lease_2'
    name: 'lease(string, string, string, BlobContainersLeaseOptionalParams, ServiceCallback<LeaseContainerResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function lease(resourceGroupName: string, accountName: string, containerName: string, options: BlobContainersLeaseOptionalParams, callback: ServiceCallback<LeaseContainerResponse>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: options
          type:
            - '@azure/arm-storage.BlobContainersLeaseOptionalParams'
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.LeaseContainerResponse>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.BlobContainersLeaseResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.lease'
    name: 'lease(string, string, string, Models.BlobContainersLeaseOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'A operação de contêiner de concessão estabelece e gerencia um bloqueio em um contêiner para operações de exclusão. A duração do bloqueio pode ser de 15 a 60 segundos, ou pode ser infinita.'
    syntax:
      content: 'function lease(resourceGroupName: string, accountName: string, containerName: string, options?: Models.BlobContainersLeaseOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: options
          type:
            - Models.BlobContainersLeaseOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersLeaseResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.lease_1'
    name: 'lease(string, string, string, ServiceCallback<LeaseContainerResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function lease(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<LeaseContainerResponse>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.LeaseContainerResponse>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.BlobContainersLeaseResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.list_2'
    name: 'list(string, string, BlobContainersListOptionalParams, ServiceCallback<ListContainerItems>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(resourceGroupName: string, accountName: string, options: BlobContainersListOptionalParams, callback: ServiceCallback<ListContainerItems>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: options
          type:
            - '@azure/arm-storage.BlobContainersListOptionalParams'
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ListContainerItems>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.BlobContainersListResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.list'
    name: 'list(string, string, Models.BlobContainersListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Lista todos os contêineres e não oferece suporte a um prefixo, como plano de dados. Também SRP hoje não retorna o token de continuação.'
    syntax:
      content: 'function list(resourceGroupName: string, accountName: string, options?: Models.BlobContainersListOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: options
          type:
            - Models.BlobContainersListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersListResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.list_1'
    name: 'list(string, string, ServiceCallback<ListContainerItems>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(resourceGroupName: string, accountName: string, callback: ServiceCallback<ListContainerItems>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ListContainerItems>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.BlobContainersListResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Lista todos os contêineres e não oferece suporte a um prefixo, como plano de dados. Também SRP hoje não retorna o token de continuação.'
    syntax:
      content: 'function listNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink da chamada bem-sucedida anterior à operação de lista.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersListNextResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.listNext_2'
    name: 'listNext(string, RequestOptionsBase, ServiceCallback<ListContainerItems>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<ListContainerItems>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink da chamada bem-sucedida anterior à operação de lista.
        - id: options
          type:
            - RequestOptionsBase
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ListContainerItems>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.BlobContainersListNextResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.listNext_1'
    name: 'listNext(string, ServiceCallback<ListContainerItems>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, callback: ServiceCallback<ListContainerItems>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink da chamada bem-sucedida anterior à operação de lista.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ListContainerItems>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.BlobContainersListNextResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.lockImmutabilityPolicy'
    name: 'lockImmutabilityPolicy(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Define o ImmutabilityPolicy para o estado bloqueado. A única ação permitida em uma política bloqueada é ExtendImmutabilityPolicy ação. ETag em If-Match é necessária para esta operação.
    syntax:
      content: 'function lockImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: ifMatch
          type:
            - string
          description: 'O estado (ETag) versão da entidade para atualizar a política de imutabilidade. Um valor de "*" pode ser usado para aplicar a operação somente se a política de imutabilidade já existe. Se omitido, essa operação sempre será aplicada.'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersLockImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.lockImmutabilityPolicy_2'
    name: 'lockImmutabilityPolicy(string, string, string, string, RequestOptionsBase, ServiceCallback<ImmutabilityPolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function lockImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options: RequestOptionsBase, callback: ServiceCallback<ImmutabilityPolicy>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: ifMatch
          type:
            - string
          description: 'O estado (ETag) versão da entidade para atualizar a política de imutabilidade. Um valor de "*" pode ser usado para aplicar a operação somente se a política de imutabilidade já existe. Se omitido, essa operação sempre será aplicada.'
        - id: options
          type:
            - RequestOptionsBase
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ImmutabilityPolicy>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.BlobContainersLockImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.lockImmutabilityPolicy_1'
    name: 'lockImmutabilityPolicy(string, string, string, string, ServiceCallback<ImmutabilityPolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function lockImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, callback: ServiceCallback<ImmutabilityPolicy>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: ifMatch
          type:
            - string
          description: 'O estado (ETag) versão da entidade para atualizar a política de imutabilidade. Um valor de "*" pode ser usado para aplicar a operação somente se a política de imutabilidade já existe. Se omitido, essa operação sempre será aplicada.'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ImmutabilityPolicy>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.BlobContainersLockImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.setLegalHold'
    name: 'setLegalHold(string, string, string, string[], msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Conjuntos legal mantêm as marcas. Definindo os mesmos resultados de marca em uma operação idempotente. SetLegalHold segue um padrão de acréscimo e não desmarque out as marcas existentes que não são especificadas na solicitação.
    syntax:
      content: 'function setLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: tags
          type:
            - 'string[]'
          description: Cada marca deve ser 3 e 23 caracteres alfanuméricos e é normalizada em letras minúsculas no SRP.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersSetLegalHoldResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.setLegalHold_2'
    name: 'setLegalHold(string, string, string, string[], RequestOptionsBase, ServiceCallback<LegalHold>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options: RequestOptionsBase, callback: ServiceCallback<LegalHold>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: tags
          type:
            - 'string[]'
          description: Cada marca deve ser 3 e 23 caracteres alfanuméricos e é normalizada em letras minúsculas no SRP.
        - id: options
          type:
            - RequestOptionsBase
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.LegalHold>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.BlobContainersSetLegalHoldResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.setLegalHold_1'
    name: 'setLegalHold(string, string, string, string[], ServiceCallback<LegalHold>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], callback: ServiceCallback<LegalHold>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: tags
          type:
            - 'string[]'
          description: Cada marca deve ser 3 e 23 caracteres alfanuméricos e é normalizada em letras minúsculas no SRP.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.LegalHold>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.BlobContainersSetLegalHoldResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.update_2'
    name: 'update(string, string, string, BlobContainersUpdateOptionalParams, ServiceCallback<BlobContainer>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(resourceGroupName: string, accountName: string, containerName: string, options: BlobContainersUpdateOptionalParams, callback: ServiceCallback<BlobContainer>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: options
          type:
            - '@azure/arm-storage.BlobContainersUpdateOptionalParams'
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.BlobContainer>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.BlobContainersUpdateResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.update'
    name: 'update(string, string, string, Models.BlobContainersUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Atualiza as propriedades de contêiner conforme especificado no corpo da solicitação. Propriedades não mencionadas na solicitação não será alteradas. Atualização falhará se o contêiner especificado ainda não existir.
    syntax:
      content: 'function update(resourceGroupName: string, accountName: string, containerName: string, options?: Models.BlobContainersUpdateOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: options
          type:
            - Models.BlobContainersUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersUpdateResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.update_1'
    name: 'update(string, string, string, ServiceCallback<BlobContainer>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<BlobContainer>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: O nome do grupo de recursos na assinatura do usuário. O nome é diferencia maiusculas de minúsculas.
        - id: accountName
          type:
            - string
          description: 'O nome da conta de armazenamento dentro do grupo de recursos especificado. Os nomes da conta de armazenamento devem ter entre 3 e 24 caracteres, usar números e apenas letras minúsculas.'
        - id: containerName
          type:
            - string
          description: 'O nome do contêiner de blob na conta de armazenamento especificado. Os nomes de contêiner de blob devem ter entre 3 e 63 caracteres de comprimento e usar números, letras minúsculas e traço (-) apenas. Cada caractere traço (-) deve ser imediatamente precedido e seguido por uma letra ou número.'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.BlobContainer>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.BlobContainersUpdateResponse>
    package: '@azure/arm-storage'
references:
  - uid: '@azure/arm-storage.StorageManagementClientContext'
    name: StorageManagementClientContext
    spec.typeScript:
      - name: StorageManagementClientContext
        fullName: StorageManagementClientContext
        uid: '@azure/arm-storage.StorageManagementClientContext'
  - uid: ServiceCallback<@azure/arm-storage.LegalHold>
    name: LegalHold>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LegalHold
        fullName: LegalHold
        uid: '@azure/arm-storage.LegalHold'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-storage.BlobContainer>
    name: BlobContainer>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BlobContainer
        fullName: BlobContainer
        uid: '@azure/arm-storage.BlobContainer'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-storage.BlobContainersCreateOptionalParams'
    name: BlobContainersCreateOptionalParams
    spec.typeScript:
      - name: BlobContainersCreateOptionalParams
        fullName: BlobContainersCreateOptionalParams
        uid: '@azure/arm-storage.BlobContainersCreateOptionalParams'
  - uid: ServiceCallback<@azure/arm-storage.ImmutabilityPolicy>
    name: ImmutabilityPolicy>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImmutabilityPolicy
        fullName: ImmutabilityPolicy
        uid: '@azure/arm-storage.ImmutabilityPolicy'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-storage.BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams'
    name: BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams
    spec.typeScript:
      - name: BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams
        fullName: BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams
        uid: '@azure/arm-storage.BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams'
  - uid: '@azure/arm-storage.BlobContainersGetImmutabilityPolicyOptionalParams'
    name: BlobContainersGetImmutabilityPolicyOptionalParams
    spec.typeScript:
      - name: BlobContainersGetImmutabilityPolicyOptionalParams
        fullName: BlobContainersGetImmutabilityPolicyOptionalParams
        uid: '@azure/arm-storage.BlobContainersGetImmutabilityPolicyOptionalParams'
  - uid: ServiceCallback<@azure/arm-storage.LeaseContainerResponse>
    name: LeaseContainerResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LeaseContainerResponse
        fullName: LeaseContainerResponse
        uid: '@azure/arm-storage.LeaseContainerResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-storage.BlobContainersLeaseOptionalParams'
    name: BlobContainersLeaseOptionalParams
    spec.typeScript:
      - name: BlobContainersLeaseOptionalParams
        fullName: BlobContainersLeaseOptionalParams
        uid: '@azure/arm-storage.BlobContainersLeaseOptionalParams'
  - uid: ServiceCallback<@azure/arm-storage.ListContainerItems>
    name: ListContainerItems>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ListContainerItems
        fullName: ListContainerItems
        uid: '@azure/arm-storage.ListContainerItems'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-storage.BlobContainersListOptionalParams'
    name: BlobContainersListOptionalParams
    spec.typeScript:
      - name: BlobContainersListOptionalParams
        fullName: BlobContainersListOptionalParams
        uid: '@azure/arm-storage.BlobContainersListOptionalParams'
  - uid: '@azure/arm-storage.BlobContainersUpdateOptionalParams'
    name: BlobContainersUpdateOptionalParams
    spec.typeScript:
      - name: BlobContainersUpdateOptionalParams
        fullName: BlobContainersUpdateOptionalParams
        uid: '@azure/arm-storage.BlobContainersUpdateOptionalParams'