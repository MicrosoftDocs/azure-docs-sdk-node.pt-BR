### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-storage.CheckNameAvailabilityResult'
    name: CheckNameAvailabilityResult
    fullName: CheckNameAvailabilityResult
    children:
      - '@azure/arm-storage.CheckNameAvailabilityResult.message'
      - '@azure/arm-storage.CheckNameAvailabilityResult.nameAvailable'
      - '@azure/arm-storage.CheckNameAvailabilityResult.reason'
    langs:
      - typeScript
    type: interface
    summary: <span data-ttu-id="ed490-101">A resposta da operação CheckNameAvailability.</span><span class="sxs-lookup"><span data-stu-id="ed490-101">The CheckNameAvailability operation response.</span></span>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.CheckNameAvailabilityResult.message'
    name: message
    fullName: message
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="ed490-102">Obtém uma mensagem de erro explicando o motivo de valor em mais detalhes.</span><span class="sxs-lookup"><span data-stu-id="ed490-102">Gets an error message explaining the Reason value in more detail.</span></span>
      <span data-ttu-id="ed490-103">**OBSERVAÇÃO: Essa propriedade não será serializada. Ele só poderá ser preenchido pelo servidor.**</span><span class="sxs-lookup"><span data-stu-id="ed490-103">**NOTE: This property will not be serialized. It can only be populated by the server.**</span></span>
    optional: true
    syntax:
      content: 'message?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.CheckNameAvailabilityResult.nameAvailable'
    name: nameAvailable
    fullName: nameAvailable
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="ed490-104">Obtém um valor booliano que indica se o nome está disponível para uso.</span><span class="sxs-lookup"><span data-stu-id="ed490-104">Gets a boolean value that indicates whether the name is available for you to use.</span></span> <span data-ttu-id="ed490-105">Se for true, o nome está disponível.</span><span class="sxs-lookup"><span data-stu-id="ed490-105">If true, the name is available.</span></span> <span data-ttu-id="ed490-106">Se for false, o nome já foi usado ou é inválido e não pode ser usado.</span><span class="sxs-lookup"><span data-stu-id="ed490-106">If false, the name has already been taken or is invalid and cannot be used.</span></span>
      <span data-ttu-id="ed490-107">**OBSERVAÇÃO: Essa propriedade não será serializada. Ele só poderá ser preenchido pelo servidor.**</span><span class="sxs-lookup"><span data-stu-id="ed490-107">**NOTE: This property will not be serialized. It can only be populated by the server.**</span></span>
    optional: true
    syntax:
      content: 'nameAvailable?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.CheckNameAvailabilityResult.reason'
    name: reason
    fullName: reason
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="ed490-108">Obtém o motivo pelo qual um nome de conta de armazenamento não pôde ser usado.</span><span class="sxs-lookup"><span data-stu-id="ed490-108">Gets the reason that a storage account name could not be used.</span></span> <span data-ttu-id="ed490-109">O elemento Reason somente é retornado se NameAvailable é false.</span><span class="sxs-lookup"><span data-stu-id="ed490-109">The Reason element is only returned if NameAvailable is false.</span></span> <span data-ttu-id="ed490-110">Os valores possíveis incluem: ''AccountNameInvalid'', ''AlreadyExists'' **Observação: Essa propriedade não será serializada. Ele só poderá ser preenchido pelo servidor.**</span><span class="sxs-lookup"><span data-stu-id="ed490-110">Possible values include: ''AccountNameInvalid'', ''AlreadyExists'' **NOTE: This property will not be serialized. It can only be populated by the server.**</span></span>'
    optional: true
    syntax:
      content: 'reason?: Reason'
      return:
        type:
          - '@azure/arm-storage.Reason'
    package: '@azure/arm-storage'
references:
  - uid: '@azure/arm-storage.Reason'
    name: Reason
    spec.typeScript:
      - name: Reason
        fullName: Reason
        uid: '@azure/arm-storage.Reason'