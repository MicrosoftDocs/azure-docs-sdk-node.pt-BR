### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-storage.ListContainerItem'
    name: ListContainerItem
    fullName: ListContainerItem
    children:
      - '@azure/arm-storage.ListContainerItem.etag'
      - '@azure/arm-storage.ListContainerItem.hasImmutabilityPolicy'
      - '@azure/arm-storage.ListContainerItem.hasLegalHold'
      - '@azure/arm-storage.ListContainerItem.id'
      - '@azure/arm-storage.ListContainerItem.immutabilityPolicy'
      - '@azure/arm-storage.ListContainerItem.lastModifiedTime'
      - '@azure/arm-storage.ListContainerItem.leaseDuration'
      - '@azure/arm-storage.ListContainerItem.leaseState'
      - '@azure/arm-storage.ListContainerItem.leaseStatus'
      - '@azure/arm-storage.ListContainerItem.legalHold'
      - '@azure/arm-storage.ListContainerItem.metadata'
      - '@azure/arm-storage.ListContainerItem.name'
      - '@azure/arm-storage.ListContainerItem.publicAccess'
      - '@azure/arm-storage.ListContainerItem.type'
    langs:
      - typeScript
    type: interface
    summary: As propriedades do contêiner de blob listados horizontalmente.
    extends:
      name: '@azure/arm-storage.AzureEntityResource'
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.etag'
    name: etag
    fullName: etag
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Etag do recurso.
      **OBSERVAÇÃO: Essa propriedade não será serializada. Ele só poderá ser preenchido pelo servidor.**
    optional: true
    syntax:
      content: 'etag?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.hasImmutabilityPolicy'
    name: hasImmutabilityPolicy
    fullName: hasImmutabilityPolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      A propriedade pública de hasImmutabilityPolicy é definida como true pela política SRP se ImmutabilityPolicy tiver sido criado para esse contêiner. A propriedade pública de hasImmutabilityPolicy é definida como false pela política SRP se ImmutabilityPolicy não tiver sido criado para esse contêiner.
      **OBSERVAÇÃO: Essa propriedade não será serializada. Ele só poderá ser preenchido pelo servidor.**
    optional: true
    syntax:
      content: 'hasImmutabilityPolicy?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.hasLegalHold'
    name: hasLegalHold
    fullName: hasLegalHold
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      A propriedade pública de hasLegalHold é definida como true pela política SRP, se houver pelo menos uma marca existente.
      A propriedade pública de hasLegalHold é definida como false pela política SRP, se todos os existentes legal mantenha as marcas são limpos. Pode haver até 1000 de contêineres de blob com hasLegalHold = true para uma determinada conta.
      **OBSERVAÇÃO: Essa propriedade não será serializada. Ele só poderá ser preenchido pelo servidor.**
    optional: true
    syntax:
      content: 'hasLegalHold?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Recurso Id totalmente qualificada para o recurso. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName} **NOTE: Essa propriedade não será serializada. Ele só poderá ser preenchido pelo servidor.**'
    optional: true
    syntax:
      content: 'id?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.immutabilityPolicy'
    name: immutabilityPolicy
    fullName: immutabilityPolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      A propriedade ImmutabilityPolicy do contêiner.
      **OBSERVAÇÃO: Essa propriedade não será serializada. Ele só poderá ser preenchido pelo servidor.**
    optional: true
    syntax:
      content: 'immutabilityPolicy?: ImmutabilityPolicyProperties'
      return:
        type:
          - '@azure/arm-storage.ImmutabilityPolicyProperties'
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.lastModifiedTime'
    name: lastModifiedTime
    fullName: lastModifiedTime
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Retorna a data e hora que o contêiner foi modificado pela última vez.
      **OBSERVAÇÃO: Essa propriedade não será serializada. Ele só poderá ser preenchido pelo servidor.**
    optional: true
    syntax:
      content: 'lastModifiedTime?: Date'
      return:
        type:
          - Date
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.leaseDuration'
    name: leaseDuration
    fullName: leaseDuration
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Especifica se a concessão em um contêiner tem duração infinita ou fixa, somente quando o contêiner é concedido. Os valores possíveis incluem: ''Infinito'', ''Fixed'' **Observação: Essa propriedade não será serializada. Ele só poderá ser preenchido pelo servidor.**'
    optional: true
    syntax:
      content: 'leaseDuration?: LeaseDuration'
      return:
        type:
          - '@azure/arm-storage.LeaseDuration'
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.leaseState'
    name: leaseState
    fullName: leaseState
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Estado da concessão do contêiner. Os valores possíveis incluem: ''Disponível'' e ''Concedida'', ''expirado'', ''Interrupção'', ''Quebrada'' **Observação: Essa propriedade não será serializada. Ele só poderá ser preenchido pelo servidor.**'
    optional: true
    syntax:
      content: 'leaseState?: LeaseState'
      return:
        type:
          - '@azure/arm-storage.LeaseState'
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.leaseStatus'
    name: leaseStatus
    fullName: leaseStatus
    children: []
    langs:
      - typeScript
    type: property
    summary: 'O status de concessão do contêiner. Os valores possíveis incluem: ''Bloqueado'', ''Desbloqueada'' **Observação: Essa propriedade não será serializada. Ele só poderá ser preenchido pelo servidor.**'
    optional: true
    syntax:
      content: 'leaseStatus?: LeaseStatus'
      return:
        type:
          - '@azure/arm-storage.LeaseStatus'
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.legalHold'
    name: legalHold
    fullName: legalHold
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      A propriedade LegalHold do contêiner.
      **OBSERVAÇÃO: Essa propriedade não será serializada. Ele só poderá ser preenchido pelo servidor.**
    optional: true
    syntax:
      content: 'legalHold?: LegalHoldProperties'
      return:
        type:
          - '@azure/arm-storage.LegalHoldProperties'
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.metadata'
    name: metadata
    fullName: metadata
    children: []
    langs:
      - typeScript
    type: property
    summary: Um par nome-valor para associar ao contêiner como metadados.
    optional: true
    syntax:
      content: 'metadata?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.name'
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: 'O nome do recurso **Observação: Essa propriedade não será serializada. Ele só poderá ser preenchido pelo servidor.**'
    optional: true
    syntax:
      content: 'name?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.publicAccess'
    name: publicAccess
    fullName: publicAccess
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Especifica se os dados no contêiner podem ser acessados publicamente e o nível de acesso.
      Os valores possíveis incluem: 'Container', 'Blob', 'None'
    optional: true
    syntax:
      content: 'publicAccess?: PublicAccess'
      return:
        type:
          - '@azure/arm-storage.PublicAccess'
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.type'
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Tipo do recurso. Ex - Compute/virtualmachines ou Storage/storageaccounts.
      **OBSERVAÇÃO: Essa propriedade não será serializada. Ele só poderá ser preenchido pelo servidor.**
    optional: true
    syntax:
      content: 'type?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-storage'
references:
  - uid: '@azure/arm-storage.AzureEntityResource'
    name: AzureEntityResource
    spec.typeScript:
      - name: AzureEntityResource
        fullName: AzureEntityResource
        uid: '@azure/arm-storage.AzureEntityResource'
  - uid: '@azure/arm-storage.ImmutabilityPolicyProperties'
    name: ImmutabilityPolicyProperties
    spec.typeScript:
      - name: ImmutabilityPolicyProperties
        fullName: ImmutabilityPolicyProperties
        uid: '@azure/arm-storage.ImmutabilityPolicyProperties'
  - uid: '@azure/arm-storage.LeaseDuration'
    name: LeaseDuration
    spec.typeScript:
      - name: LeaseDuration
        fullName: LeaseDuration
        uid: '@azure/arm-storage.LeaseDuration'
  - uid: '@azure/arm-storage.LeaseState'
    name: LeaseState
    spec.typeScript:
      - name: LeaseState
        fullName: LeaseState
        uid: '@azure/arm-storage.LeaseState'
  - uid: '@azure/arm-storage.LeaseStatus'
    name: LeaseStatus
    spec.typeScript:
      - name: LeaseStatus
        fullName: LeaseStatus
        uid: '@azure/arm-storage.LeaseStatus'
  - uid: '@azure/arm-storage.LegalHoldProperties'
    name: LegalHoldProperties
    spec.typeScript:
      - name: LegalHoldProperties
        fullName: LegalHoldProperties
        uid: '@azure/arm-storage.LegalHoldProperties'
  - uid: '@azure/arm-storage.PublicAccess'
    name: PublicAccess
    spec.typeScript:
      - name: PublicAccess
        fullName: PublicAccess
        uid: '@azure/arm-storage.PublicAccess'