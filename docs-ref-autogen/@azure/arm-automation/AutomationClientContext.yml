### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-automation.AutomationClientContext'
    name: AutomationClientContext
    fullName: AutomationClientContext
    children:
      - '@azure/arm-automation.AutomationClientContext.acceptLanguage'
      - '@azure/arm-automation.AutomationClientContext.constructor'
      - '@azure/arm-automation.AutomationClientContext.beginLongRunningRequest'
      - '@azure/arm-automation.AutomationClientContext.countType1'
      - '@azure/arm-automation.AutomationClientContext.credentials'
      - '@azure/arm-automation.AutomationClientContext.longRunningOperationRetryTimeout'
      - '@azure/arm-automation.AutomationClientContext.restoreLROPoller'
      - '@azure/arm-automation.AutomationClientContext.sendLongRunningRequest'
      - '@azure/arm-automation.AutomationClientContext.sendLRORequest'
      - '@azure/arm-automation.AutomationClientContext.sendOperationRequest'
      - '@azure/arm-automation.AutomationClientContext.sendRequest'
      - '@azure/arm-automation.AutomationClientContext.subscriptionId'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: AzureServiceClient
    package: '@azure/arm-automation'
  - uid: '@azure/arm-automation.AutomationClientContext.acceptLanguage'
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
    package: '@azure/arm-automation'
  - uid: '@azure/arm-automation.AutomationClientContext.constructor'
    name: 'AutomationClientContext(ServiceClientCredentials, string, Models.CountType, Models.AutomationClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="1d73f-101">Inicializa uma nova instância da classe AutomationClient.</span><span class="sxs-lookup"><span data-stu-id="1d73f-101">Initializes a new instance of the AutomationClient class.</span></span>
    syntax:
      content: 'new AutomationClientContext(credentials: ServiceClientCredentials, subscriptionId: string, countType1: Models.CountType, options?: Models.AutomationClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: <span data-ttu-id="1d73f-102">Credenciais necessárias para o cliente se conectar ao Azure.</span><span class="sxs-lookup"><span data-stu-id="1d73f-102">Credentials needed for the client to connect to Azure.</span></span>
        - id: subscriptionId
          type:
            - string
          description: <span data-ttu-id="1d73f-103">Obtém as credenciais de assinatura que identificam exclusivamente a assinatura do Microsoft Azure.</span><span class="sxs-lookup"><span data-stu-id="1d73f-103">Gets subscription credentials which uniquely identify Microsoft Azure subscription.</span></span> <span data-ttu-id="1d73f-104">A ID da assinatura faz parte do URI para cada chamada de serviço.</span><span class="sxs-lookup"><span data-stu-id="1d73f-104">The subscription ID forms part of the URI for every service call.</span></span>
        - id: countType1
          type:
            - Models.CountType
          description: '<span data-ttu-id="1d73f-105">O tipo de conta a recuperar.</span><span class="sxs-lookup"><span data-stu-id="1d73f-105">The type of counts to retrieve.</span></span> <span data-ttu-id="1d73f-106">Os valores possíveis incluem: ''status'', ''nodeconfiguration''</span><span class="sxs-lookup"><span data-stu-id="1d73f-106">Possible values include: ''status'', ''nodeconfiguration''</span></span>'
        - id: options
          type:
            - Models.AutomationClientOptions
          description: ''
          optional: true
    package: '@azure/arm-automation'
  - uid: '@azure/arm-automation.AutomationClientContext.beginLongRunningRequest'
    name: 'beginLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1d73f-107">Enviar a solicitação inicial de um LRO (operação de longa duração) e obter de volta um HttpLongRunningOperationResponse que fornece métodos para sondar o LRO e verificando se o LRO for concluída.</span><span class="sxs-lookup"><span data-stu-id="1d73f-107">Send the initial request of a LRO (long running operation) and get back an HttpLongRunningOperationResponse that provides methods for polling the LRO and checking if the LRO is finished.</span></span>
    syntax:
      content: 'function beginLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: <span data-ttu-id="1d73f-108">O objeto de solicitação</span><span class="sxs-lookup"><span data-stu-id="1d73f-108">The request object</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-automation'
  - uid: '@azure/arm-automation.AutomationClientContext.countType1'
    name: countType1
    fullName: countType1
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'countType1: Models.CountType'
      return:
        type:
          - Models.CountType
    package: '@azure/arm-automation'
  - uid: '@azure/arm-automation.AutomationClientContext.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/arm-automation'
  - uid: '@azure/arm-automation.AutomationClientContext.longRunningOperationRetryTimeout'
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="1d73f-109">O tempo limite de repetição em segundos para operações de execução longa.</span><span class="sxs-lookup"><span data-stu-id="1d73f-109">The retry timeout in seconds for Long Running Operations.</span></span> <span data-ttu-id="1d73f-110">O valor padrão é 30.</span><span class="sxs-lookup"><span data-stu-id="1d73f-110">Default value is 30.</span></span>
    optional: true
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/arm-automation'
  - uid: '@azure/arm-automation.AutomationClientContext.restoreLROPoller'
    name: restoreLROPoller(LROPollState)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1d73f-111">Restaure um LROPoller do LROPollState fornecido.</span><span class="sxs-lookup"><span data-stu-id="1d73f-111">Restore an LROPoller from the provided LROPollState.</span></span> <span data-ttu-id="1d73f-112">Esse método pode ser usado para recriar um LROPoller em um computador ou processo diferente.</span><span class="sxs-lookup"><span data-stu-id="1d73f-112">This method can be used to recreate an LROPoller on a different process or machine.</span></span>
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type:
            - LROPollState
          description: ''
      return:
        type:
          - LROPoller
    package: '@azure/arm-automation'
  - uid: '@azure/arm-automation.AutomationClientContext.sendLongRunningRequest'
    name: 'sendLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1d73f-113">Fornece um mecanismo para fazer uma solicitação que sondar e fornecerá o resultado final.</span><span class="sxs-lookup"><span data-stu-id="1d73f-113">Provides a mechanism to make a request that will poll and provide the final result.</span></span>
    syntax:
      content: 'function sendLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: <span data-ttu-id="1d73f-114">O objeto de solicitação</span><span class="sxs-lookup"><span data-stu-id="1d73f-114">The request object</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-automation'
  - uid: '@azure/arm-automation.AutomationClientContext.sendLRORequest'
    name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1d73f-115">Enviar a solicitação inicial de um LRO (operação de longa duração) e obter de volta um LROPoller que fornece métodos para sondar o LRO e verificando se o LRO for concluída.</span><span class="sxs-lookup"><span data-stu-id="1d73f-115">Send the initial request of a LRO (long running operation) and get back an LROPoller that provides methods for polling the LRO and checking if the LRO is finished.</span></span>
    syntax:
      content: 'function sendLRORequest(operationArguments: OperationArguments, operationSpec: OperationSpec, options?: RequestOptionsBase)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: <span data-ttu-id="1d73f-116">Os argumentos para a operação.</span><span class="sxs-lookup"><span data-stu-id="1d73f-116">The arguments to the operation.</span></span>
        - id: operationSpec
          type:
            - OperationSpec
          description: <span data-ttu-id="1d73f-117">A especificação para a operação.</span><span class="sxs-lookup"><span data-stu-id="1d73f-117">The specification for the operation.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="1d73f-118">Opções adicionais a serem enviados ao fazer a solicitação.</span><span class="sxs-lookup"><span data-stu-id="1d73f-118">Additional options to be sent while making the request.</span></span>
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-automation'
  - uid: '@azure/arm-automation.AutomationClientContext.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1d73f-119">Envie uma solicitação HTTP que é populada usando o OperationSpec fornecido.</span><span class="sxs-lookup"><span data-stu-id="1d73f-119">Send an HTTP request that is populated using the provided OperationSpec.</span></span>
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: <span data-ttu-id="1d73f-120">Os argumentos que serão preenchidos de valores de modelo da solicitação HTTP.</span><span class="sxs-lookup"><span data-stu-id="1d73f-120">The arguments that the HTTP request's templated values will be populated from.</span></span>
        - id: operationSpec
          type:
            - OperationSpec
          description: <span data-ttu-id="1d73f-121">OperationSpec serem usados para popular o httpRequest.</span><span class="sxs-lookup"><span data-stu-id="1d73f-121">The OperationSpec to use to populate the httpRequest.</span></span>
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            <span data-ttu-id="1d73f-122">O retorno de chamada a ser chamada quando a resposta é recebida.</span><span class="sxs-lookup"><span data-stu-id="1d73f-122">The callback to call when the response is received.</span></span>
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-automation'
  - uid: '@azure/arm-automation.AutomationClientContext.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1d73f-123">Envie httpRequest fornecido.</span><span class="sxs-lookup"><span data-stu-id="1d73f-123">Send the provided httpRequest.</span></span>
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-automation'
  - uid: '@azure/arm-automation.AutomationClientContext.subscriptionId'
    name: subscriptionId
    fullName: subscriptionId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'subscriptionId: string'
      return:
        type:
          - string
    package: '@azure/arm-automation'