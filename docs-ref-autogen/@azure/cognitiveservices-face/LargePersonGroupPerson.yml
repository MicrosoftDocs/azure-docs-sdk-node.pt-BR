### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson'
    name: LargePersonGroupPerson
    fullName: LargePersonGroupPerson
    children:
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.create_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.create'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.create_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteFace'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteFace_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteFace_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteMethod'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteMethod_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteMethod_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.get'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.get_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.get_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.getFace'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.getFace_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.getFace_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.constructor'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.list_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.list'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.list_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.update_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.update'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.update_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.updateFace_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.updateFace'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.updateFace_1'
    langs:
      - typeScript
    type: class
    summary: Classe que representa um LargePersonGroupPerson.
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_2'
    name: 'addFaceFromStream(string, string, msRest.HttpRequestBody, LargePersonGroupPersonAddFaceFromStreamOptionalParams, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromStream(largePersonGroupId: string, personId: string, image: msRest.HttpRequestBody, options: LargePersonGroupPersonAddFaceFromStreamOptionalParams, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID fazendo referência ao grupo de uma determinada pessoa grandes.
        - id: personId
          type:
            - string
          description: ID de referência a uma determinada pessoa.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Um fluxo de imagem.
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromStreamOptionalParams'
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.LargePersonGroupPersonAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream'
    name: 'addFaceFromStream(string, string, msRest.HttpRequestBody, Models.LargePersonGroupPersonAddFaceFromStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Adicione uma face de uma pessoa em um grupo grande de pessoa para identificação de face ou verificação. Para lidar com uma imagem contém várias faces, face de entrada pode ser especificado como uma imagem com um retângulo targetFace. Ele retorna um persistedFaceId que representa a face adicionada. Nenhuma imagem será armazenada. Somente o recurso de face extraído será armazenado no servidor até que [LargePersonGroup PersonFace – exclua](/docs/services/563879b61984550e40cbbe8d/operations/599ae2966ac60f11b48b5aa3), [LargePersonGroup pessoa - excluir](/docs/services/563879b61984550e40cbbe8d/operations/599ade5c6ac60f11b48b5aa2) ou [LargePersonGroup - Delete](/docs/services/563879b61984550e40cbbe8d/operations/599adc216ac60f11b48b5a9f)é chamado.
      <br /> Observação persistedFaceId é diferente do faceId gerado pelo [enfrentam - detectar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).
      * Qualidade de imagem de face superior significa maior precisão do reconhecimento. Considere as faces de alta qualidade: frontais, clear e face tamanho é de 200 x 200 pixels (100 pixels, entre os olhos) ou maior.
      * Cada entrada de pessoa pode conter até 248 faces.
      * Há suporte para JPEG, PNG, GIF (o primeiro quadro) e formato BMP. O tamanho do arquivo de imagem permitida é de 1KB a 6MB.
      * "targetFace" retângulo deve conter uma face. Zero ou várias faces serão considerados um erro. Se o retângulo "targetFace" fornecido não for retornado por [enfrentam - detectar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), não há nenhuma garantia para detectar e adicionar a face com êxito.
      * Fora do tamanho de face detectável (36 x pixels de 4096 x 36 4096), grandes occlusions pose head ou grandes causará falhas.
      * Adição/exclusão de faces de/para uma pessoa mesma será processado sequencialmente. Adição/exclusão de faces de/para diferentes pessoas são processados em paralelo.
      * O tamanho mínimo de face detectável é de 36 x 36 pixels em uma imagem não maior que 1920 x 1080 pixels.
      Imagens com dimensões mais que 1920 x 1080 pixels precisará de um tamanho de face mínimos proporcionalmente maior.
      * Valores de diferentes 'detectionModel' podem ser fornecidos. Para usar e comparar os modelos diferentes de detecção, consulte [como especificar um modelo de detecção](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)
      | Modelo | Uso recomendado-case(s) |
      | ---------- | -------- |
      | 'detection_01': | O modelo de detecção padrão para [LargePersonGroup pessoa - adicionar
      Face](/docs/services/563879b61984550e40cbbe8d/operations/599adf2a3a7b9412a4d53f42). É recomendável para detecção de face frontal quase. Para cenários com faces do ângulo excepcionalmente grande (head-pose), faces obstruídos ou orientação de imagem incorreto, as faces nesses casos, podem não ser detectadas. | | 'detection_02': | Modelo de detecção, lançado em 2019 talvez com precisão aprimorada, especialmente em pequenas, lado e desfocadas faces. |
    syntax:
      content: 'function addFaceFromStream(largePersonGroupId: string, personId: string, image: msRest.HttpRequestBody, options?: Models.LargePersonGroupPersonAddFaceFromStreamOptionalParams)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID fazendo referência ao grupo de uma determinada pessoa grandes.
        - id: personId
          type:
            - string
          description: ID de referência a uma determinada pessoa.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Um fluxo de imagem.
        - id: options
          type:
            - Models.LargePersonGroupPersonAddFaceFromStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupPersonAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_1'
    name: 'addFaceFromStream(string, string, msRest.HttpRequestBody, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromStream(largePersonGroupId: string, personId: string, image: msRest.HttpRequestBody, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID fazendo referência ao grupo de uma determinada pessoa grandes.
        - id: personId
          type:
            - string
          description: ID de referência a uma determinada pessoa.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Um fluxo de imagem.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.LargePersonGroupPersonAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_2'
    name: 'addFaceFromUrl(string, string, string, LargePersonGroupPersonAddFaceFromUrlOptionalParams, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromUrl(largePersonGroupId: string, personId: string, url: string, options: LargePersonGroupPersonAddFaceFromUrlOptionalParams, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID fazendo referência ao grupo de uma determinada pessoa grandes.
        - id: personId
          type:
            - string
          description: ID de referência a uma determinada pessoa.
        - id: url
          type:
            - string
          description: URL publicamente acessível de uma imagem
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromUrlOptionalParams'
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.LargePersonGroupPersonAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl'
    name: 'addFaceFromUrl(string, string, string, Models.LargePersonGroupPersonAddFaceFromUrlOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Adicione uma face de uma pessoa em um grupo grande de pessoa para identificação de face ou verificação. Para lidar com uma imagem contém várias faces, face de entrada pode ser especificado como uma imagem com um retângulo targetFace. Ele retorna um persistedFaceId que representa a face adicionada. Nenhuma imagem será armazenada. Somente o recurso de face extraído será armazenado no servidor até que [LargePersonGroup PersonFace – exclua](/docs/services/563879b61984550e40cbbe8d/operations/599ae2966ac60f11b48b5aa3), [LargePersonGroup pessoa - excluir](/docs/services/563879b61984550e40cbbe8d/operations/599ade5c6ac60f11b48b5aa2) ou [LargePersonGroup - Delete](/docs/services/563879b61984550e40cbbe8d/operations/599adc216ac60f11b48b5a9f)é chamado.
      <br /> Observação persistedFaceId é diferente do faceId gerado pelo [enfrentam - detectar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).
      * Qualidade de imagem de face superior significa maior precisão do reconhecimento. Considere as faces de alta qualidade: frontais, clear e face tamanho é de 200 x 200 pixels (100 pixels, entre os olhos) ou maior.
      * Cada entrada de pessoa pode conter até 248 faces.
      * Há suporte para JPEG, PNG, GIF (o primeiro quadro) e formato BMP. O tamanho do arquivo de imagem permitida é de 1KB a 6MB.
      * "targetFace" retângulo deve conter uma face. Zero ou várias faces serão considerados um erro. Se o retângulo "targetFace" fornecido não for retornado por [enfrentam - detectar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), não há nenhuma garantia para detectar e adicionar a face com êxito.
      * Fora do tamanho de face detectável (36 x pixels de 4096 x 36 4096), grandes occlusions pose head ou grandes causará falhas.
      * Adição/exclusão de faces de/para uma pessoa mesma será processado sequencialmente. Adição/exclusão de faces de/para diferentes pessoas são processados em paralelo.
      * O tamanho mínimo de face detectável é de 36 x 36 pixels em uma imagem não maior que 1920 x 1080 pixels.
      Imagens com dimensões mais que 1920 x 1080 pixels precisará de um tamanho de face mínimos proporcionalmente maior.
      * Valores de diferentes 'detectionModel' podem ser fornecidos. Para usar e comparar os modelos diferentes de detecção, consulte [como especificar um modelo de detecção](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)
      | Modelo | Uso recomendado-case(s) |
      | ---------- | -------- |
      | 'detection_01': | O modelo de detecção padrão para [LargePersonGroup pessoa - adicionar
      Face](/docs/services/563879b61984550e40cbbe8d/operations/599adf2a3a7b9412a4d53f42). É recomendável para detecção de face frontal quase. Para cenários com faces do ângulo excepcionalmente grande (head-pose), faces obstruídos ou orientação de imagem incorreto, as faces nesses casos, podem não ser detectadas. | | 'detection_02': | Modelo de detecção, lançado em 2019 talvez com precisão aprimorada, especialmente em pequenas, lado e desfocadas faces. |
    syntax:
      content: 'function addFaceFromUrl(largePersonGroupId: string, personId: string, url: string, options?: Models.LargePersonGroupPersonAddFaceFromUrlOptionalParams)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID fazendo referência ao grupo de uma determinada pessoa grandes.
        - id: personId
          type:
            - string
          description: ID de referência a uma determinada pessoa.
        - id: url
          type:
            - string
          description: URL publicamente acessível de uma imagem
        - id: options
          type:
            - Models.LargePersonGroupPersonAddFaceFromUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupPersonAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_1'
    name: 'addFaceFromUrl(string, string, string, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromUrl(largePersonGroupId: string, personId: string, url: string, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID fazendo referência ao grupo de uma determinada pessoa grandes.
        - id: personId
          type:
            - string
          description: ID de referência a uma determinada pessoa.
        - id: url
          type:
            - string
          description: URL publicamente acessível de uma imagem
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.LargePersonGroupPersonAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.create_2'
    name: 'create(string, LargePersonGroupPersonCreateOptionalParams, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(largePersonGroupId: string, options: LargePersonGroupPersonCreateOptionalParams, callback: ServiceCallback<Person>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID fazendo referência ao grupo de uma determinada pessoa grandes.
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargePersonGroupPersonCreateOptionalParams'
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.LargePersonGroupPersonCreateResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.create'
    name: 'create(string, Models.LargePersonGroupPersonCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Crie uma nova pessoa em um grupo grande de pessoa especificada.
    syntax:
      content: 'function create(largePersonGroupId: string, options?: Models.LargePersonGroupPersonCreateOptionalParams)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID fazendo referência ao grupo de uma determinada pessoa grandes.
        - id: options
          type:
            - Models.LargePersonGroupPersonCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupPersonCreateResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.create_1'
    name: 'create(string, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(largePersonGroupId: string, callback: ServiceCallback<Person>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID fazendo referência ao grupo de uma determinada pessoa grandes.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.LargePersonGroupPersonCreateResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteFace'
    name: 'deleteFace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Exclua uma face de uma pessoa em um grupo grande de pessoa persistedFaceId, personId e largePersonGroupId especificado.
      <br /> Adição/exclusão de faces de/para uma pessoa mesma será processado sequencialmente.
      Adição/exclusão de faces de/para diferentes pessoas são processados em paralelo.
    syntax:
      content: 'function deleteFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID fazendo referência ao grupo de uma determinada pessoa grandes.
        - id: personId
          type:
            - string
          description: ID de referência a uma determinada pessoa.
        - id: persistedFaceId
          type:
            - string
          description: ID referenciando um persistedFaceId específico de uma face existente.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteFace_2'
    name: 'deleteFace(string, string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID fazendo referência ao grupo de uma determinada pessoa grandes.
        - id: personId
          type:
            - string
          description: ID de referência a uma determinada pessoa.
        - id: persistedFaceId
          type:
            - string
          description: ID referenciando um persistedFaceId específico de uma face existente.
        - id: options
          type:
            - RequestOptionsBase
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteFace_1'
    name: 'deleteFace(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFace(largePersonGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID fazendo referência ao grupo de uma determinada pessoa grandes.
        - id: personId
          type:
            - string
          description: ID de referência a uma determinada pessoa.
        - id: persistedFaceId
          type:
            - string
          description: ID referenciando um persistedFaceId específico de uma face existente.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Exclua uma pessoa existente de um grupo grande de pessoa. O persistedFaceId, userData, recurso de detecção facial e de nome de pessoa na entrada de pessoa serão todos excluído.'
    syntax:
      content: 'function deleteMethod(largePersonGroupId: string, personId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID fazendo referência ao grupo de uma determinada pessoa grandes.
        - id: personId
          type:
            - string
          description: ID de referência a uma determinada pessoa.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteMethod_2'
    name: 'deleteMethod(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(largePersonGroupId: string, personId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID fazendo referência ao grupo de uma determinada pessoa grandes.
        - id: personId
          type:
            - string
          description: ID de referência a uma determinada pessoa.
        - id: options
          type:
            - RequestOptionsBase
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteMethod_1'
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(largePersonGroupId: string, personId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID fazendo referência ao grupo de uma determinada pessoa grandes.
        - id: personId
          type:
            - string
          description: ID de referência a uma determinada pessoa.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Recupere o faceIds persistente que representa o recurso de face da pessoa registrada e userData e nome de uma pessoa.
    syntax:
      content: 'function get(largePersonGroupId: string, personId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID fazendo referência ao grupo de uma determinada pessoa grandes.
        - id: personId
          type:
            - string
          description: ID de referência a uma determinada pessoa.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupPersonGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(largePersonGroupId: string, personId: string, options: RequestOptionsBase, callback: ServiceCallback<Person>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID fazendo referência ao grupo de uma determinada pessoa grandes.
        - id: personId
          type:
            - string
          description: ID de referência a uma determinada pessoa.
        - id: options
          type:
            - RequestOptionsBase
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.LargePersonGroupPersonGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.get_1'
    name: 'get(string, string, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(largePersonGroupId: string, personId: string, callback: ServiceCallback<Person>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID fazendo referência ao grupo de uma determinada pessoa grandes.
        - id: personId
          type:
            - string
          description: ID de referência a uma determinada pessoa.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.LargePersonGroupPersonGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.getFace'
    name: 'getFace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Recupere informações sobre uma face persistente (especificada pelo persistedFaceId, personId e seu largePersonGroupId que pertence).'
    syntax:
      content: 'function getFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID fazendo referência ao grupo de uma determinada pessoa grandes.
        - id: personId
          type:
            - string
          description: ID de referência a uma determinada pessoa.
        - id: persistedFaceId
          type:
            - string
          description: ID referenciando um persistedFaceId específico de uma face existente.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupPersonGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.getFace_2'
    name: 'getFace(string, string, string, RequestOptionsBase, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options: RequestOptionsBase, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID fazendo referência ao grupo de uma determinada pessoa grandes.
        - id: personId
          type:
            - string
          description: ID de referência a uma determinada pessoa.
        - id: persistedFaceId
          type:
            - string
          description: ID referenciando um persistedFaceId específico de uma face existente.
        - id: options
          type:
            - RequestOptionsBase
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.LargePersonGroupPersonGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.getFace_1'
    name: 'getFace(string, string, string, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFace(largePersonGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID fazendo referência ao grupo de uma determinada pessoa grandes.
        - id: personId
          type:
            - string
          description: ID de referência a uma determinada pessoa.
        - id: persistedFaceId
          type:
            - string
          description: ID referenciando um persistedFaceId específico de uma face existente.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.LargePersonGroupPersonGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.constructor'
    name: LargePersonGroupPerson(FaceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Crie um LargePersonGroupPerson.
    syntax:
      content: 'new LargePersonGroupPerson(client: FaceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-face.FaceClientContext'
          description: |
            Referência para o cliente do serviço.
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.list_2'
    name: 'list(string, LargePersonGroupPersonListOptionalParams, ServiceCallback<Person[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(largePersonGroupId: string, options: LargePersonGroupPersonListOptionalParams, callback: ServiceCallback<Person[]>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID fazendo referência ao grupo de uma determinada pessoa grandes.
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargePersonGroupPersonListOptionalParams'
          description: Os parâmetros opcionais
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.Person[]>'
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.LargePersonGroupPersonListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.list'
    name: 'list(string, Models.LargePersonGroupPersonListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Lista todas as pessoas em um grupo grande de pessoa e recuperar informações de pessoa (incluindo personId, nome, userData e persistedFaceIds de faces registrados da pessoa).'
    syntax:
      content: 'function list(largePersonGroupId: string, options?: Models.LargePersonGroupPersonListOptionalParams)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID fazendo referência ao grupo de uma determinada pessoa grandes.
        - id: options
          type:
            - Models.LargePersonGroupPersonListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupPersonListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.list_1'
    name: 'list(string, ServiceCallback<Person[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(largePersonGroupId: string, callback: ServiceCallback<Person[]>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID fazendo referência ao grupo de uma determinada pessoa grandes.
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.Person[]>'
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.LargePersonGroupPersonListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.update_2'
    name: 'update(string, string, LargePersonGroupPersonUpdateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(largePersonGroupId: string, personId: string, options: LargePersonGroupPersonUpdateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID fazendo referência ao grupo de uma determinada pessoa grandes.
        - id: personId
          type:
            - string
          description: ID de referência a uma determinada pessoa.
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargePersonGroupPersonUpdateOptionalParams'
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.update'
    name: 'update(string, string, Models.LargePersonGroupPersonUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Atualizar o nome ou a dados do usuário de uma pessoa.
    syntax:
      content: 'function update(largePersonGroupId: string, personId: string, options?: Models.LargePersonGroupPersonUpdateOptionalParams)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID fazendo referência ao grupo de uma determinada pessoa grandes.
        - id: personId
          type:
            - string
          description: ID de referência a uma determinada pessoa.
        - id: options
          type:
            - Models.LargePersonGroupPersonUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.update_1'
    name: 'update(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(largePersonGroupId: string, personId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID fazendo referência ao grupo de uma determinada pessoa grandes.
        - id: personId
          type:
            - string
          description: ID de referência a uma determinada pessoa.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.updateFace_2'
    name: 'updateFace(string, string, string, LargePersonGroupPersonUpdateFaceOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options: LargePersonGroupPersonUpdateFaceOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID fazendo referência ao grupo de uma determinada pessoa grandes.
        - id: personId
          type:
            - string
          description: ID de referência a uma determinada pessoa.
        - id: persistedFaceId
          type:
            - string
          description: ID referenciando um persistedFaceId específico de uma face existente.
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargePersonGroupPersonUpdateFaceOptionalParams'
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.updateFace'
    name: 'updateFace(string, string, string, Models.LargePersonGroupPersonUpdateFaceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Atualização de uma pessoa persistentes de campo de dados do usuário da superfície.
    syntax:
      content: 'function updateFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: Models.LargePersonGroupPersonUpdateFaceOptionalParams)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID fazendo referência ao grupo de uma determinada pessoa grandes.
        - id: personId
          type:
            - string
          description: ID de referência a uma determinada pessoa.
        - id: persistedFaceId
          type:
            - string
          description: ID referenciando um persistedFaceId específico de uma face existente.
        - id: options
          type:
            - Models.LargePersonGroupPersonUpdateFaceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.updateFace_1'
    name: 'updateFace(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateFace(largePersonGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID fazendo referência ao grupo de uma determinada pessoa grandes.
        - id: personId
          type:
            - string
          description: ID de referência a uma determinada pessoa.
        - id: persistedFaceId
          type:
            - string
          description: ID referenciando um persistedFaceId específico de uma face existente.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FaceClientContext'
    name: FaceClientContext
    spec.typeScript:
      - name: FaceClientContext
        fullName: FaceClientContext
        uid: '@azure/cognitiveservices-face.FaceClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
    name: PersistedFace>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PersistedFace
        fullName: PersistedFace
        uid: '@azure/cognitiveservices-face.PersistedFace'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromStreamOptionalParams'
    name: LargePersonGroupPersonAddFaceFromStreamOptionalParams
    spec.typeScript:
      - name: LargePersonGroupPersonAddFaceFromStreamOptionalParams
        fullName: LargePersonGroupPersonAddFaceFromStreamOptionalParams
        uid: '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromStreamOptionalParams'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromUrlOptionalParams'
    name: LargePersonGroupPersonAddFaceFromUrlOptionalParams
    spec.typeScript:
      - name: LargePersonGroupPersonAddFaceFromUrlOptionalParams
        fullName: LargePersonGroupPersonAddFaceFromUrlOptionalParams
        uid: '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromUrlOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.Person>
    name: Person>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Person
        fullName: Person
        uid: '@azure/cognitiveservices-face.Person'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonCreateOptionalParams'
    name: LargePersonGroupPersonCreateOptionalParams
    spec.typeScript:
      - name: LargePersonGroupPersonCreateOptionalParams
        fullName: LargePersonGroupPersonCreateOptionalParams
        uid: '@azure/cognitiveservices-face.LargePersonGroupPersonCreateOptionalParams'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.Person[]>'
    name: 'Person[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Person
        fullName: Person
        uid: '@azure/cognitiveservices-face.Person'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonListOptionalParams'
    name: LargePersonGroupPersonListOptionalParams
    spec.typeScript:
      - name: LargePersonGroupPersonListOptionalParams
        fullName: LargePersonGroupPersonListOptionalParams
        uid: '@azure/cognitiveservices-face.LargePersonGroupPersonListOptionalParams'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonUpdateOptionalParams'
    name: LargePersonGroupPersonUpdateOptionalParams
    spec.typeScript:
      - name: LargePersonGroupPersonUpdateOptionalParams
        fullName: LargePersonGroupPersonUpdateOptionalParams
        uid: '@azure/cognitiveservices-face.LargePersonGroupPersonUpdateOptionalParams'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonUpdateFaceOptionalParams'
    name: LargePersonGroupPersonUpdateFaceOptionalParams
    spec.typeScript:
      - name: LargePersonGroupPersonUpdateFaceOptionalParams
        fullName: LargePersonGroupPersonUpdateFaceOptionalParams
        uid: '@azure/cognitiveservices-face.LargePersonGroupPersonUpdateFaceOptionalParams'