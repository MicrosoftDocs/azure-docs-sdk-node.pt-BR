### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams'
    name: FaceFindSimilarOptionalParams
    fullName: FaceFindSimilarOptionalParams
    children:
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.abortSignal'
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.customHeaders'
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.faceIds'
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.faceListId'
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.largeFaceListId'
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.maxNumOfCandidatesReturned'
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.mode'
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.onDownloadProgress'
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.onUploadProgress'
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.timeout'
    langs:
      - typeScript
    type: interface
    summary: Parâmetros opcionais.
    extends:
      name: RequestOptionsBase
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: O sinal que pode ser usado para anular as solicitações.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.customHeaders'
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: '{object} [customHeaders] Cabeçalhos de solicitação personalizado que serão aplicados antes que a solicitação é enviada definido pelo usuário.'
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.faceIds'
    name: faceIds
    fullName: faceIds
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Uma matriz de faceIds candidata. Todos eles são criados por Face - detectar e o faceIds expirará 24 horas após a chamada de detecção. O número de faceIds é limitado a 1000. FaceIds, largeFaceListId e faceListId de parâmetro não deve ser fornecido ao mesmo tempo.'
    optional: true
    syntax:
      content: 'faceIds?: string[]'
      return:
        type:
          - 'string[]'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.faceListId'
    name: faceListId
    fullName: faceListId
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Uma lista de face candidato exclusivo especificado pelo usuário existente, criada na lista de detecção facial - criar uma lista de Face. Lista de face contém um conjunto de persistedFaceIds que são mantidas e nunca expirará.
      FaceIds, largeFaceListId e faceListId de parâmetro não deve ser fornecido ao mesmo tempo.
    optional: true
    syntax:
      content: 'faceListId?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.largeFaceListId'
    name: largeFaceListId
    fullName: largeFaceListId
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Uma lista de face grande candidato exclusivo especificado pelo usuário existente, criado no LargeFaceList – criar. Lista de face grandes contém um conjunto de persistedFaceIds que são mantidas e nunca expirará. FaceIds, largeFaceListId e faceListId de parâmetro não deve ser fornecido ao mesmo tempo.'
    optional: true
    syntax:
      content: 'largeFaceListId?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.maxNumOfCandidatesReturned'
    name: maxNumOfCandidatesReturned
    fullName: maxNumOfCandidatesReturned
    children: []
    langs:
      - typeScript
    type: property
    summary: 'O número de rostos parecidos superior retornado. O intervalo válido é [1, 1000]. Valor padrão: 20.'
    optional: true
    syntax:
      content: 'maxNumOfCandidatesReturned?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.mode'
    name: mode
    fullName: mode
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Modo de pesquisa de face semelhante. Ele pode ser "matchPerson" ou "matchFace". Os valores possíveis incluem: ''matchPerson'', ''matchFace''. Valor padrão: ''matchPerson''.'
    optional: true
    syntax:
      content: 'mode?: FindSimilarMatchMode'
      return:
        type:
          - '@azure/cognitiveservices-face.FindSimilarMatchMode'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.onDownloadProgress'
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Retorno de chamada que é acionada mediante o andamento do download.
    optional: true
    syntax:
      content: 'onDownloadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.onUploadProgress'
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Retorno de chamada que é acionada mediante o progresso do carregamento.
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: O número de milissegundos que uma solicitação pode levar antes encerrado automaticamente.
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FindSimilarMatchMode'
    name: FindSimilarMatchMode
    spec.typeScript:
      - name: FindSimilarMatchMode
        fullName: FindSimilarMatchMode
        uid: '@azure/cognitiveservices-face.FindSimilarMatchMode'