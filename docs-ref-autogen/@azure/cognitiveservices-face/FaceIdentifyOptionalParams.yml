### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.FaceIdentifyOptionalParams'
    name: FaceIdentifyOptionalParams
    fullName: FaceIdentifyOptionalParams
    children:
      - '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.abortSignal'
      - '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.confidenceThreshold'
      - '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.customHeaders'
      - '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.largePersonGroupId'
      - '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.maxNumOfCandidatesReturned'
      - '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.onDownloadProgress'
      - '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.onUploadProgress'
      - '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.personGroupId'
      - '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.timeout'
    langs:
      - typeScript
    type: interface
    summary: Parâmetros opcionais.
    extends:
      name: RequestOptionsBase
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: O sinal que pode ser usado para anular as solicitações.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.confidenceThreshold'
    name: confidenceThreshold
    fullName: confidenceThreshold
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Limite de confiança de identificação, usada para avaliar se uma face pertençam à mesma pessoa.
      O intervalo de confidenceThreshold é [0, 1] (o padrão é especificado pelo algoritmo).
    optional: true
    syntax:
      content: 'confidenceThreshold?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.customHeaders'
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: '{object} [customHeaders] Cabeçalhos de solicitação personalizado que serão aplicados antes que a solicitação é enviada definido pelo usuário.'
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.largePersonGroupId'
    name: largePersonGroupId
    fullName: largePersonGroupId
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      LargePersonGroupId o pessoa grandes do grupo de destino, criado pelo LargePersonGroup – criar.
      LargePersonGroupId e personGroupId de parâmetro não devem ser fornecidos ao mesmo tempo.
    optional: true
    syntax:
      content: 'largePersonGroupId?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.maxNumOfCandidatesReturned'
    name: maxNumOfCandidatesReturned
    fullName: maxNumOfCandidatesReturned
    children: []
    langs:
      - typeScript
    type: property
    summary: 'O intervalo de maxNumOfCandidatesReturned está entre 1 e 5 (o padrão é 1). Valor padrão: 1.'
    optional: true
    syntax:
      content: 'maxNumOfCandidatesReturned?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.onDownloadProgress'
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Retorno de chamada que é acionada mediante o andamento do download.
    optional: true
    syntax:
      content: 'onDownloadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.onUploadProgress'
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Retorno de chamada que é acionada mediante o progresso do carregamento.
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.personGroupId'
    name: personGroupId
    fullName: personGroupId
    children: []
    langs:
      - typeScript
    type: property
    summary: 'PersonGroupId o pessoa do grupo de destino, criado por PersonGroup - criar. LargePersonGroupId e personGroupId de parâmetro não devem ser fornecidos ao mesmo tempo.'
    optional: true
    syntax:
      content: 'personGroupId?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: O número de milissegundos que uma solicitação pode levar antes encerrado automaticamente.
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/cognitiveservices-face'