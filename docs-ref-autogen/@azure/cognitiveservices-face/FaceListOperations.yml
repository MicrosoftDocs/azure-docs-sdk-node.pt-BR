### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.FaceListOperations'
    name: FaceListOperations
    fullName: FaceListOperations
    children:
      - '@azure/cognitiveservices-face.FaceListOperations.addFaceFromStream_2'
      - '@azure/cognitiveservices-face.FaceListOperations.addFaceFromStream'
      - '@azure/cognitiveservices-face.FaceListOperations.addFaceFromStream_1'
      - '@azure/cognitiveservices-face.FaceListOperations.addFaceFromUrl_2'
      - '@azure/cognitiveservices-face.FaceListOperations.addFaceFromUrl'
      - '@azure/cognitiveservices-face.FaceListOperations.addFaceFromUrl_1'
      - '@azure/cognitiveservices-face.FaceListOperations.create_2'
      - '@azure/cognitiveservices-face.FaceListOperations.create'
      - '@azure/cognitiveservices-face.FaceListOperations.create_1'
      - '@azure/cognitiveservices-face.FaceListOperations.deleteFace'
      - '@azure/cognitiveservices-face.FaceListOperations.deleteFace_2'
      - '@azure/cognitiveservices-face.FaceListOperations.deleteFace_1'
      - '@azure/cognitiveservices-face.FaceListOperations.deleteMethod'
      - '@azure/cognitiveservices-face.FaceListOperations.deleteMethod_2'
      - '@azure/cognitiveservices-face.FaceListOperations.deleteMethod_1'
      - '@azure/cognitiveservices-face.FaceListOperations.constructor'
      - '@azure/cognitiveservices-face.FaceListOperations.get_2'
      - '@azure/cognitiveservices-face.FaceListOperations.get'
      - '@azure/cognitiveservices-face.FaceListOperations.get_1'
      - '@azure/cognitiveservices-face.FaceListOperations.list_2'
      - '@azure/cognitiveservices-face.FaceListOperations.list'
      - '@azure/cognitiveservices-face.FaceListOperations.list_1'
      - '@azure/cognitiveservices-face.FaceListOperations.update_2'
      - '@azure/cognitiveservices-face.FaceListOperations.update'
      - '@azure/cognitiveservices-face.FaceListOperations.update_1'
    langs:
      - typeScript
    type: class
    summary: Classe que representa um FaceListOperations.
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromStream_2'
    name: 'addFaceFromStream(string, msRest.HttpRequestBody, FaceListAddFaceFromStreamOptionalParams, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromStream(faceListId: string, image: msRest.HttpRequestBody, options: FaceListAddFaceFromStreamOptionalParams, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: ID fazendo referência a uma lista específica de face.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Um fluxo de imagem.
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams'
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.FaceListAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromStream'
    name: 'addFaceFromStream(string, msRest.HttpRequestBody, Models.FaceListAddFaceFromStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Adicione uma face para obter uma lista especificada de face, até 1.000 faces.
      <br /> Para lidar com uma imagem contém várias faces, face de entrada pode ser especificado como uma imagem com um retângulo targetFace. Ele retorna um persistedFaceId que representa a face adicionada. Nenhuma imagem será armazenada. Somente o recurso de face extraído será armazenado no servidor até que [FaceList - excluir Face](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395251) ou [FaceList - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524f) é chamado.
      <br /> Observação persistedFaceId é diferente do faceId gerado pelo [enfrentam - detectar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).
      * Qualidade de imagem de face superior significa melhor detecção e a precisão do reconhecimento. Considere as faces de alta qualidade: frontais, clear e face tamanho é de 200 x 200 pixels (100 pixels, entre os olhos) ou maior.
      * Há suporte para JPEG, PNG, GIF (o primeiro quadro) e formato BMP. O tamanho do arquivo de imagem permitida é de 1KB a 6MB.
      * "targetFace" retângulo deve conter uma face. Zero ou várias faces serão considerados um erro. Se o retângulo "targetFace" fornecido não for retornado por [enfrentam - detectar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), não há nenhuma garantia para detectar e adicionar a face com êxito.
      * Fora do tamanho de face detectável (36 x pixels de 4096 x 36 4096), grandes occlusions pose head ou grandes causará falhas.
      * Adição/exclusão de faces de/para uma lista de face mesmo são processadas sequencialmente face diferente para/de listas e estão em paralelo.
      * O tamanho mínimo de face detectável é de 36 x 36 pixels em uma imagem não maior que 1920 x 1080 pixels.
      Imagens com dimensões mais que 1920 x 1080 pixels precisará de um tamanho de face mínimos proporcionalmente maior.
      * Valores de diferentes 'detectionModel' podem ser fornecidos. Para usar e comparar os modelos diferentes de detecção, consulte [como especificar um modelo de detecção](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)
      | Modelo | Uso recomendado-case(s) |
      | ---------- | -------- |
      | 'detection_01': | O modelo de detecção padrão para [FaceList - adicionar
      Face](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395250). É recomendável para detecção de face frontal quase. Para cenários com faces do ângulo excepcionalmente grande (head-pose), faces obstruídos ou orientação de imagem incorreto, as faces nesses casos, podem não ser detectadas. | | 'detection_02': | Modelo de detecção, lançado em 2019 talvez com precisão aprimorada, especialmente em pequenas, lado e desfocadas faces. |
    syntax:
      content: 'function addFaceFromStream(faceListId: string, image: msRest.HttpRequestBody, options?: Models.FaceListAddFaceFromStreamOptionalParams)'
      parameters:
        - id: faceListId
          type:
            - string
          description: ID fazendo referência a uma lista específica de face.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Um fluxo de imagem.
        - id: options
          type:
            - Models.FaceListAddFaceFromStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceListAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromStream_1'
    name: 'addFaceFromStream(string, msRest.HttpRequestBody, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromStream(faceListId: string, image: msRest.HttpRequestBody, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: ID fazendo referência a uma lista específica de face.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Um fluxo de imagem.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.FaceListAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromUrl_2'
    name: 'addFaceFromUrl(string, string, FaceListAddFaceFromUrlOptionalParams, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromUrl(faceListId: string, url: string, options: FaceListAddFaceFromUrlOptionalParams, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: ID fazendo referência a uma lista específica de face.
        - id: url
          type:
            - string
          description: URL publicamente acessível de uma imagem
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceListAddFaceFromUrlOptionalParams'
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.FaceListAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromUrl'
    name: 'addFaceFromUrl(string, string, Models.FaceListAddFaceFromUrlOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Adicione uma face para obter uma lista especificada de face, até 1.000 faces.
      <br /> Para lidar com uma imagem contém várias faces, face de entrada pode ser especificado como uma imagem com um retângulo targetFace. Ele retorna um persistedFaceId que representa a face adicionada. Nenhuma imagem será armazenada. Somente o recurso de face extraído será armazenado no servidor até que [FaceList - excluir Face](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395251) ou [FaceList - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524f) é chamado.
      <br /> Observação persistedFaceId é diferente do faceId gerado pelo [enfrentam - detectar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).
      * Qualidade de imagem de face superior significa melhor detecção e a precisão do reconhecimento. Considere as faces de alta qualidade: frontais, clear e face tamanho é de 200 x 200 pixels (100 pixels, entre os olhos) ou maior.
      * Há suporte para JPEG, PNG, GIF (o primeiro quadro) e formato BMP. O tamanho do arquivo de imagem permitida é de 1KB a 6MB.
      * "targetFace" retângulo deve conter uma face. Zero ou várias faces serão considerados um erro. Se o retângulo "targetFace" fornecido não for retornado por [enfrentam - detectar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), não há nenhuma garantia para detectar e adicionar a face com êxito.
      * Fora do tamanho de face detectável (36 x pixels de 4096 x 36 4096), grandes occlusions pose head ou grandes causará falhas.
      * Adição/exclusão de faces de/para uma lista de face mesmo são processadas sequencialmente face diferente para/de listas e estão em paralelo.
      * O tamanho mínimo de face detectável é de 36 x 36 pixels em uma imagem não maior que 1920 x 1080 pixels.
      Imagens com dimensões mais que 1920 x 1080 pixels precisará de um tamanho de face mínimos proporcionalmente maior.
      * Valores de diferentes 'detectionModel' podem ser fornecidos. Para usar e comparar os modelos diferentes de detecção, consulte [como especificar um modelo de detecção](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)
      | Modelo | Uso recomendado-case(s) |
      | ---------- | -------- |
      | 'detection_01': | O modelo de detecção padrão para [FaceList - adicionar
      Face](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395250). É recomendável para detecção de face frontal quase. Para cenários com faces do ângulo excepcionalmente grande (head-pose), faces obstruídos ou orientação de imagem incorreto, as faces nesses casos, podem não ser detectadas. | | 'detection_02': | Modelo de detecção, lançado em 2019 talvez com precisão aprimorada, especialmente em pequenas, lado e desfocadas faces. |
    syntax:
      content: 'function addFaceFromUrl(faceListId: string, url: string, options?: Models.FaceListAddFaceFromUrlOptionalParams)'
      parameters:
        - id: faceListId
          type:
            - string
          description: ID fazendo referência a uma lista específica de face.
        - id: url
          type:
            - string
          description: URL publicamente acessível de uma imagem
        - id: options
          type:
            - Models.FaceListAddFaceFromUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceListAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromUrl_1'
    name: 'addFaceFromUrl(string, string, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromUrl(faceListId: string, url: string, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: ID fazendo referência a uma lista específica de face.
        - id: url
          type:
            - string
          description: URL publicamente acessível de uma imagem
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.FaceListAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.create_2'
    name: 'create(string, FaceListCreateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(faceListId: string, options: FaceListCreateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: ID fazendo referência a uma lista específica de face.
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceListCreateOptionalParams'
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.create'
    name: 'create(string, Models.FaceListCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Crie uma lista de face vazio com faceListId especificado pelo usuário, nome, um userData opcional e recognitionModel. Até 64 face listas são permitidas em uma assinatura.
      <br /> Lista de detecção facial é uma lista de faces, até 1.000 faces e usado por [Face - localizar Similar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237).
      <br /> Após a criação, o usuário deve usar [FaceList - adicionar Face](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395250) para importar as faces. Nenhuma imagem será armazenada. Somente os recursos de face extraídos são armazenados no servidor até que [FaceList - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524f) é chamado.
      <br /> Localizar que semelhante é usado para o cenário gosta de encontrar celebridade semelhante faces, face semelhante, filtragem, ou como uma luz de maneira enfrentam identificação. Mas se o uso real é identificar a pessoa, use [PersonGroup](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395244) /
      [LargePersonGroup](/docs/services/563879b61984550e40cbbe8d/operations/599acdee6ac60f11b48b5a9d) e [enfrentam – identificar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239).
      <br /> Considere [LargeFaceList](/docs/services/563879b61984550e40cbbe8d/operations/5a157b68d2de3616c086f2cc) quando o número de detecção facial é grande. Ele pode dar suporte a até 1.000.000 faces.
      <br />'recognitionModel' deve ser especificado a ser associado a essa lista de face. O valor padrão para 'recognitionModel' é 'recognition_01', se o modelo mais recente necessário, especifique explicitamente o modelo que você precisa nesse parâmetro. Novas faces que são adicionados a uma lista existente de face usará o modelo de reconhecimento que já está associada com a coleção. Recursos de detecção facial existentes em uma lista de face não podem ser atualizados para recursos extraídos por outra versão do modelo de reconhecimento.
      * 'recognition_01': O modelo de reconhecimento de padrão para [FaceList - criar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524b). Essas listas de face criadas antes de março de 2019 estão unidas com esse modelo de reconhecimento.
      * 'recognition_02': Modelo de reconhecimento lançado em março de 2019. 'recognition_02' é recomendável, pois sua precisão geral é aprimorada em comparação com 'recognition_01'.
    syntax:
      content: 'function create(faceListId: string, options?: Models.FaceListCreateOptionalParams)'
      parameters:
        - id: faceListId
          type:
            - string
          description: ID fazendo referência a uma lista específica de face.
        - id: options
          type:
            - Models.FaceListCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.create_1'
    name: 'create(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(faceListId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: ID fazendo referência a uma lista específica de face.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.deleteFace'
    name: 'deleteFace(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Exclua uma face de uma lista de face persistedFaceId e faceListId especificado.
      <br /> Adição/exclusão de faces de/para uma lista de face mesmo são processadas sequencialmente face diferente para/de listas e estão em paralelo.
    syntax:
      content: 'function deleteFace(faceListId: string, persistedFaceId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: faceListId
          type:
            - string
          description: ID fazendo referência a uma lista específica de face.
        - id: persistedFaceId
          type:
            - string
          description: ID referenciando um persistedFaceId específico de uma face existente.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.deleteFace_2'
    name: 'deleteFace(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFace(faceListId: string, persistedFaceId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: ID fazendo referência a uma lista específica de face.
        - id: persistedFaceId
          type:
            - string
          description: ID referenciando um persistedFaceId específico de uma face existente.
        - id: options
          type:
            - RequestOptionsBase
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.deleteFace_1'
    name: 'deleteFace(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFace(faceListId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: ID fazendo referência a uma lista específica de face.
        - id: persistedFaceId
          type:
            - string
          description: ID referenciando um persistedFaceId específico de uma face existente.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.deleteMethod'
    name: 'deleteMethod(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Exclua uma lista de face especificado.
    syntax:
      content: 'function deleteMethod(faceListId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: faceListId
          type:
            - string
          description: ID fazendo referência a uma lista específica de face.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.deleteMethod_2'
    name: 'deleteMethod(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(faceListId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: ID fazendo referência a uma lista específica de face.
        - id: options
          type:
            - RequestOptionsBase
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.deleteMethod_1'
    name: 'deleteMethod(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(faceListId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: ID fazendo referência a uma lista específica de face.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.constructor'
    name: FaceListOperations(FaceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Crie um FaceListOperations.
    syntax:
      content: 'new FaceListOperations(client: FaceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-face.FaceClientContext'
          description: |
            Referência para o cliente do serviço.
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.get_2'
    name: 'get(string, FaceListGetOptionalParams, ServiceCallback<FaceList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(faceListId: string, options: FaceListGetOptionalParams, callback: ServiceCallback<FaceList>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: ID fazendo referência a uma lista específica de face.
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceListGetOptionalParams'
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.FaceList>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.FaceListGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.get'
    name: 'get(string, Models.FaceListGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Recupere uma lista de face faceListId, nome, userData, recognitionModel e faces na lista de face.'
    syntax:
      content: 'function get(faceListId: string, options?: Models.FaceListGetOptionalParams)'
      parameters:
        - id: faceListId
          type:
            - string
          description: ID fazendo referência a uma lista específica de face.
        - id: options
          type:
            - Models.FaceListGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceListGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.get_1'
    name: 'get(string, ServiceCallback<FaceList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(faceListId: string, callback: ServiceCallback<FaceList>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: ID fazendo referência a uma lista específica de face.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.FaceList>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.FaceListGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.list_2'
    name: 'list(FaceListListOptionalParams, ServiceCallback<FaceList[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options: FaceListListOptionalParams, callback: ServiceCallback<FaceList[]>)'
      parameters:
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceListListOptionalParams'
          description: Os parâmetros opcionais
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.FaceList[]>'
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.FaceListListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.list'
    name: list(Models.FaceListListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Listar faceListId, nome, userData e recognitionModel listas de face. <br />
      Para obter informações de face dentro do uso de faceList [FaceList - Get](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524c)
    syntax:
      content: 'function list(options?: Models.FaceListListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.FaceListListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceListListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.list_1'
    name: 'list(ServiceCallback<FaceList[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<FaceList[]>)'
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.FaceList[]>'
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<Models.FaceListListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.update_2'
    name: 'update(string, FaceListUpdateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(faceListId: string, options: FaceListUpdateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: ID fazendo referência a uma lista específica de face.
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceListUpdateOptionalParams'
          description: Os parâmetros opcionais
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.update'
    name: 'update(string, Models.FaceListUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Atualize as informações de uma lista de face.
    syntax:
      content: 'function update(faceListId: string, options?: Models.FaceListUpdateOptionalParams)'
      parameters:
        - id: faceListId
          type:
            - string
          description: ID fazendo referência a uma lista específica de face.
        - id: options
          type:
            - Models.FaceListUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.update_1'
    name: 'update(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(faceListId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: ID fazendo referência a uma lista específica de face.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            O retorno de chamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FaceClientContext'
    name: FaceClientContext
    spec.typeScript:
      - name: FaceClientContext
        fullName: FaceClientContext
        uid: '@azure/cognitiveservices-face.FaceClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
    name: PersistedFace>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PersistedFace
        fullName: PersistedFace
        uid: '@azure/cognitiveservices-face.PersistedFace'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams'
    name: FaceListAddFaceFromStreamOptionalParams
    spec.typeScript:
      - name: FaceListAddFaceFromStreamOptionalParams
        fullName: FaceListAddFaceFromStreamOptionalParams
        uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromUrlOptionalParams'
    name: FaceListAddFaceFromUrlOptionalParams
    spec.typeScript:
      - name: FaceListAddFaceFromUrlOptionalParams
        fullName: FaceListAddFaceFromUrlOptionalParams
        uid: '@azure/cognitiveservices-face.FaceListAddFaceFromUrlOptionalParams'
  - uid: '@azure/cognitiveservices-face.FaceListCreateOptionalParams'
    name: FaceListCreateOptionalParams
    spec.typeScript:
      - name: FaceListCreateOptionalParams
        fullName: FaceListCreateOptionalParams
        uid: '@azure/cognitiveservices-face.FaceListCreateOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.FaceList>
    name: FaceList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: FaceList
        fullName: FaceList
        uid: '@azure/cognitiveservices-face.FaceList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.FaceListGetOptionalParams'
    name: FaceListGetOptionalParams
    spec.typeScript:
      - name: FaceListGetOptionalParams
        fullName: FaceListGetOptionalParams
        uid: '@azure/cognitiveservices-face.FaceListGetOptionalParams'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.FaceList[]>'
    name: 'FaceList[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: FaceList
        fullName: FaceList
        uid: '@azure/cognitiveservices-face.FaceList'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.FaceListListOptionalParams'
    name: FaceListListOptionalParams
    spec.typeScript:
      - name: FaceListListOptionalParams
        fullName: FaceListListOptionalParams
        uid: '@azure/cognitiveservices-face.FaceListListOptionalParams'
  - uid: '@azure/cognitiveservices-face.FaceListUpdateOptionalParams'
    name: FaceListUpdateOptionalParams
    spec.typeScript:
      - name: FaceListUpdateOptionalParams
        fullName: FaceListUpdateOptionalParams
        uid: '@azure/cognitiveservices-face.FaceListUpdateOptionalParams'