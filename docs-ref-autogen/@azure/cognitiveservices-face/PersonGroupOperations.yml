### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations'
    name: PersonGroupOperations
    fullName: PersonGroupOperations
    children:
      - '@azure/cognitiveservices-face.PersonGroupOperations.create'
      - '@azure/cognitiveservices-face.PersonGroupOperations.create_2'
      - '@azure/cognitiveservices-face.PersonGroupOperations.create_1'
      - '@azure/cognitiveservices-face.PersonGroupOperations.deleteMethod'
      - '@azure/cognitiveservices-face.PersonGroupOperations.deleteMethod_2'
      - '@azure/cognitiveservices-face.PersonGroupOperations.deleteMethod_1'
      - '@azure/cognitiveservices-face.PersonGroupOperations.get'
      - '@azure/cognitiveservices-face.PersonGroupOperations.get_2'
      - '@azure/cognitiveservices-face.PersonGroupOperations.get_1'
      - '@azure/cognitiveservices-face.PersonGroupOperations.getTrainingStatus'
      - '@azure/cognitiveservices-face.PersonGroupOperations.getTrainingStatus_2'
      - '@azure/cognitiveservices-face.PersonGroupOperations.getTrainingStatus_1'
      - '@azure/cognitiveservices-face.PersonGroupOperations.list'
      - '@azure/cognitiveservices-face.PersonGroupOperations.list_2'
      - '@azure/cognitiveservices-face.PersonGroupOperations.list_1'
      - '@azure/cognitiveservices-face.PersonGroupOperations.constructor'
      - '@azure/cognitiveservices-face.PersonGroupOperations.train'
      - '@azure/cognitiveservices-face.PersonGroupOperations.train_2'
      - '@azure/cognitiveservices-face.PersonGroupOperations.train_1'
      - '@azure/cognitiveservices-face.PersonGroupOperations.update'
      - '@azure/cognitiveservices-face.PersonGroupOperations.update_2'
      - '@azure/cognitiveservices-face.PersonGroupOperations.update_1'
    langs:
      - typeScript
    type: class
    summary: <span data-ttu-id="cda50-101">Classe que representa um PersonGroupOperations.</span><span class="sxs-lookup"><span data-stu-id="cda50-101">Class representing a PersonGroupOperations.</span></span>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.create'
    name: 'create(string, Models.PersonGroupCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="cda50-102">Crie um novo grupo de pessoas com personGroupId especificado, o nome, dados do usuário fornecido pelo usuário e recognitionModel.</span><span class="sxs-lookup"><span data-stu-id="cda50-102">Create a new person group with specified personGroupId, name, user-provided userData and recognitionModel.</span></span>
      <br /> <span data-ttu-id="cda50-103">Um grupo de pessoas é o contêiner dos dados carregados de pessoa, incluindo imagens de face e recursos de reconhecimento de face.</span><span class="sxs-lookup"><span data-stu-id="cda50-103">A person group is the container of the uploaded person data, including face images and face recognition features.</span></span>
      <br /> <span data-ttu-id="cda50-104">Após a criação, use [PersonGroup pessoa - criar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523c) para adicionar pessoas no grupo e, em seguida, chame [PersonGroup - Train](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395249) para preparar para esse grupo [enfrentam – identificar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239).</span><span class="sxs-lookup"><span data-stu-id="cda50-104">After creation, use [PersonGroup Person - Create](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523c) to add persons into the group, and then call [PersonGroup - Train](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395249) to get this group ready for [Face - Identify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239).</span></span>
      <br /> <span data-ttu-id="cda50-105">Face da pessoa, a imagem e userData serão armazenados no servidor até [PersonGroup pessoa</span><span class="sxs-lookup"><span data-stu-id="cda50-105">The person's face, image, and userData will be stored on server until [PersonGroup Person</span></span>
      - <span data-ttu-id="cda50-106">DELETE](/docs/Services/563879b61984550e40cbbe8d/Operations/563879b61984550f3039523d) ou [PersonGroup - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395245) é chamado.</span><span class="sxs-lookup"><span data-stu-id="cda50-106">Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523d) or [PersonGroup - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395245) is called.</span></span>
      <br />
      * <span data-ttu-id="cda50-107">Cota de assinatura de camada gratuita: 1.000 grupos de pessoas.</span><span class="sxs-lookup"><span data-stu-id="cda50-107">Free-tier subscription quota: 1,000 person groups.</span></span> <span data-ttu-id="cda50-108">Cada uma contém até 1.000 pessoas.</span><span class="sxs-lookup"><span data-stu-id="cda50-108">Each holds up to 1,000 persons.</span></span>
      * <span data-ttu-id="cda50-109">Cota de assinatura de camada S0: grupos de pessoas 1.000.000.</span><span class="sxs-lookup"><span data-stu-id="cda50-109">S0-tier subscription quota: 1,000,000 person groups.</span></span> <span data-ttu-id="cda50-110">Cada um contém as pessoas de até 10.000.</span><span class="sxs-lookup"><span data-stu-id="cda50-110">Each holds up to 10,000 persons.</span></span>
      * <span data-ttu-id="cda50-111">para tratar o problema de identificação de face de maior escala, considere o uso de [LargePersonGroup](/docs/services/563879b61984550e40cbbe8d/operations/599acdee6ac60f11b48b5a9d).</span><span class="sxs-lookup"><span data-stu-id="cda50-111">to handle larger scale face identification problem, please consider using [LargePersonGroup](/docs/services/563879b61984550e40cbbe8d/operations/599acdee6ac60f11b48b5a9d).</span></span>
      <br />
      <span data-ttu-id="cda50-112">'recognitionModel' deve ser especificado para associar a esse grupo de pessoas.</span><span class="sxs-lookup"><span data-stu-id="cda50-112">'recognitionModel' should be specified to associate with this person group.</span></span> <span data-ttu-id="cda50-113">O valor padrão para 'recognitionModel' é 'recognition_01', se o modelo mais recente necessário, especifique explicitamente o modelo que você precisa nesse parâmetro.</span><span class="sxs-lookup"><span data-stu-id="cda50-113">The default value for 'recognitionModel' is 'recognition_01', if the latest model needed, please explicitly specify the model you need in this parameter.</span></span> <span data-ttu-id="cda50-114">Novas faces que são adicionados a um grupo existente de pessoa usará o modelo de reconhecimento que já está associada com a coleção.</span><span class="sxs-lookup"><span data-stu-id="cda50-114">New faces that are added to an existing person group will use the recognition model that's already associated with the collection.</span></span> <span data-ttu-id="cda50-115">Recursos de detecção facial existentes em um grupo de pessoas não podem ser atualizados para recursos extraídos por outra versão do modelo de reconhecimento.</span><span class="sxs-lookup"><span data-stu-id="cda50-115">Existing face features in a person group can't be updated to features extracted by another version of recognition model.</span></span>
    syntax:
      content: 'function create(personGroupId: string, options?: Models.PersonGroupCreateOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="cda50-116">ID fazendo referência ao grupo de uma determinada pessoa.</span><span class="sxs-lookup"><span data-stu-id="cda50-116">Id referencing a particular person group.</span></span>
        - id: options
          type:
            - Models.PersonGroupCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.create_2'
    name: 'create(string, PersonGroupCreateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(personGroupId: string, options: PersonGroupCreateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="cda50-117">ID fazendo referência ao grupo de uma determinada pessoa.</span><span class="sxs-lookup"><span data-stu-id="cda50-117">Id referencing a particular person group.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupCreateOptionalParams'
          description: <span data-ttu-id="cda50-118">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="cda50-118">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="cda50-119">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="cda50-119">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.create_1'
    name: 'create(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(personGroupId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="cda50-120">ID fazendo referência ao grupo de uma determinada pessoa.</span><span class="sxs-lookup"><span data-stu-id="cda50-120">Id referencing a particular person group.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="cda50-121">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="cda50-121">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.deleteMethod'
    name: 'deleteMethod(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="cda50-122">Exclua um grupo de pessoa existente.</span><span class="sxs-lookup"><span data-stu-id="cda50-122">Delete an existing person group.</span></span> <span data-ttu-id="cda50-123">Persistentes face recursos de todas as pessoas no grupo de pessoa também serão excluídos.</span><span class="sxs-lookup"><span data-stu-id="cda50-123">Persisted face features of all people in the person group will also be deleted.</span></span>
    syntax:
      content: 'function deleteMethod(personGroupId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="cda50-124">ID fazendo referência ao grupo de uma determinada pessoa.</span><span class="sxs-lookup"><span data-stu-id="cda50-124">Id referencing a particular person group.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.deleteMethod_2'
    name: 'deleteMethod(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(personGroupId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="cda50-125">ID fazendo referência ao grupo de uma determinada pessoa.</span><span class="sxs-lookup"><span data-stu-id="cda50-125">Id referencing a particular person group.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="cda50-126">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="cda50-126">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="cda50-127">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="cda50-127">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.deleteMethod_1'
    name: 'deleteMethod(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(personGroupId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="cda50-128">ID fazendo referência ao grupo de uma determinada pessoa.</span><span class="sxs-lookup"><span data-stu-id="cda50-128">Id referencing a particular person group.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="cda50-129">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="cda50-129">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.get'
    name: 'get(string, Models.PersonGroupGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="cda50-130">Recupere recognitionModel, dados do usuário e nome do grupo de pessoa.</span><span class="sxs-lookup"><span data-stu-id="cda50-130">Retrieve person group name, userData and recognitionModel.</span></span> <span data-ttu-id="cda50-131">Para obter informações de pessoa sob este personGroup, use [PersonGroup pessoa - lista](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395241).</span><span class="sxs-lookup"><span data-stu-id="cda50-131">To get person information under this personGroup, use [PersonGroup Person - List](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395241).</span></span>'
    syntax:
      content: 'function get(personGroupId: string, options?: Models.PersonGroupGetOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="cda50-132">ID fazendo referência ao grupo de uma determinada pessoa.</span><span class="sxs-lookup"><span data-stu-id="cda50-132">Id referencing a particular person group.</span></span>
        - id: options
          type:
            - Models.PersonGroupGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.get_2'
    name: 'get(string, PersonGroupGetOptionalParams, ServiceCallback<PersonGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(personGroupId: string, options: PersonGroupGetOptionalParams, callback: ServiceCallback<PersonGroup>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="cda50-133">ID fazendo referência ao grupo de uma determinada pessoa.</span><span class="sxs-lookup"><span data-stu-id="cda50-133">Id referencing a particular person group.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupGetOptionalParams'
          description: <span data-ttu-id="cda50-134">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="cda50-134">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersonGroup>
          description: |
            <span data-ttu-id="cda50-135">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="cda50-135">The callback</span></span>
      return:
        type:
          - Promise<Models.PersonGroupGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.get_1'
    name: 'get(string, ServiceCallback<PersonGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(personGroupId: string, callback: ServiceCallback<PersonGroup>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="cda50-136">ID fazendo referência ao grupo de uma determinada pessoa.</span><span class="sxs-lookup"><span data-stu-id="cda50-136">Id referencing a particular person group.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersonGroup>
          description: |
            <span data-ttu-id="cda50-137">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="cda50-137">The callback</span></span>
      return:
        type:
          - Promise<Models.PersonGroupGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.getTrainingStatus'
    name: 'getTrainingStatus(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="cda50-138">Recupere o status de treinamento de um grupo de pessoas (em andamento ou concluído).</span><span class="sxs-lookup"><span data-stu-id="cda50-138">Retrieve the training status of a person group (completed or ongoing).</span></span>
    syntax:
      content: 'function getTrainingStatus(personGroupId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="cda50-139">ID fazendo referência ao grupo de uma determinada pessoa.</span><span class="sxs-lookup"><span data-stu-id="cda50-139">Id referencing a particular person group.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupGetTrainingStatusResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.getTrainingStatus_2'
    name: 'getTrainingStatus(string, RequestOptionsBase, ServiceCallback<TrainingStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTrainingStatus(personGroupId: string, options: RequestOptionsBase, callback: ServiceCallback<TrainingStatus>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="cda50-140">ID fazendo referência ao grupo de uma determinada pessoa.</span><span class="sxs-lookup"><span data-stu-id="cda50-140">Id referencing a particular person group.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="cda50-141">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="cda50-141">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.TrainingStatus>
          description: |
            <span data-ttu-id="cda50-142">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="cda50-142">The callback</span></span>
      return:
        type:
          - Promise<Models.PersonGroupGetTrainingStatusResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.getTrainingStatus_1'
    name: 'getTrainingStatus(string, ServiceCallback<TrainingStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTrainingStatus(personGroupId: string, callback: ServiceCallback<TrainingStatus>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="cda50-143">ID fazendo referência ao grupo de uma determinada pessoa.</span><span class="sxs-lookup"><span data-stu-id="cda50-143">Id referencing a particular person group.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.TrainingStatus>
          description: |
            <span data-ttu-id="cda50-144">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="cda50-144">The callback</span></span>
      return:
        type:
          - Promise<Models.PersonGroupGetTrainingStatusResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.list'
    name: list(Models.PersonGroupListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="cda50-145">Listar grupos de pessoas personGroupId, nome, userData e recognitionModel.</span><span class="sxs-lookup"><span data-stu-id="cda50-145">List person groups’ personGroupId, name, userData and recognitionModel.</span></span><br />
      * <span data-ttu-id="cda50-146">Grupos de pessoas são armazenados em ordem alfabética de personGroupId.</span><span class="sxs-lookup"><span data-stu-id="cda50-146">Person groups are stored in alphabetical order of personGroupId.</span></span>
      * <span data-ttu-id="cda50-147">parâmetro "start" (cadeia de caracteres, opcional) é um valor de personGroupId fornecido pelo usuário que retornou entradas tem ids maiores por comparação de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="cda50-147">"start" parameter (string, optional) is a user-provided personGroupId value that returned entries have larger ids by string comparison.</span></span> <span data-ttu-id="cda50-148">"start" definido como vazios para indicar o retorno do primeiro item.</span><span class="sxs-lookup"><span data-stu-id="cda50-148">"start" set to empty to indicate return from the first item.</span></span>
      * <span data-ttu-id="cda50-149">parâmetro "top" (int, opcional) Especifica o número de entradas a serem retornadas.</span><span class="sxs-lookup"><span data-stu-id="cda50-149">"top" parameter (int, optional) specifies the number of entries to return.</span></span> <span data-ttu-id="cda50-150">Um máximo de 1.000 entradas pode ser retornado em uma chamada.</span><span class="sxs-lookup"><span data-stu-id="cda50-150">A maximal of 1000 entries can be returned in one call.</span></span> <span data-ttu-id="cda50-151">Para buscar mais, você pode especificar "start" com a Id a última entrada retornado da chamada atual.</span><span class="sxs-lookup"><span data-stu-id="cda50-151">To fetch more, you can specify "start" with the last returned entry’s Id of the current call.</span></span>
      <br />
      <span data-ttu-id="cda50-152">Por exemplo, total de 5 grupos de pessoas: "group1",..., "grupo5".</span><span class="sxs-lookup"><span data-stu-id="cda50-152">For example, total 5 person groups: "group1", ..., "group5".</span></span>
      <br /> <span data-ttu-id="cda50-153">"iniciar o & início = =" retornará todos os grupos de 5.</span><span class="sxs-lookup"><span data-stu-id="cda50-153">"start=&top=" will return all 5 groups.</span></span>
      <br /> <span data-ttu-id="cda50-154">"iniciar o & início = = 2" retornará "group1", "group2".</span><span class="sxs-lookup"><span data-stu-id="cda50-154">"start=&top=2" will return "group1", "group2".</span></span>
      <br /> <span data-ttu-id="cda50-155">"Iniciar = grupo2 & superior = 3" retornará "grupo3", "group4", "grupo5".</span><span class="sxs-lookup"><span data-stu-id="cda50-155">"start=group2&top=3" will return "group3", "group4", "group5".</span></span>
    syntax:
      content: 'function list(options?: Models.PersonGroupListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.PersonGroupListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.list_2'
    name: 'list(PersonGroupListOptionalParams, ServiceCallback<PersonGroup[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options: PersonGroupListOptionalParams, callback: ServiceCallback<PersonGroup[]>)'
      parameters:
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupListOptionalParams'
          description: <span data-ttu-id="cda50-156">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="cda50-156">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.PersonGroup[]>'
          description: |
            <span data-ttu-id="cda50-157">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="cda50-157">The callback</span></span>
      return:
        type:
          - Promise<Models.PersonGroupListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.list_1'
    name: 'list(ServiceCallback<PersonGroup[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<PersonGroup[]>)'
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.PersonGroup[]>'
          description: |
            <span data-ttu-id="cda50-158">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="cda50-158">The callback</span></span>
      return:
        type:
          - Promise<Models.PersonGroupListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.constructor'
    name: PersonGroupOperations(FaceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="cda50-159">Crie um PersonGroupOperations.</span><span class="sxs-lookup"><span data-stu-id="cda50-159">Create a PersonGroupOperations.</span></span>
    syntax:
      content: 'new PersonGroupOperations(client: FaceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-face.FaceClientContext'
          description: |
            <span data-ttu-id="cda50-160">Referência para o cliente do serviço.</span><span class="sxs-lookup"><span data-stu-id="cda50-160">Reference to the service client.</span></span>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.train'
    name: 'train(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="cda50-161">Enfileirar uma tarefa de treinamento do grupo de pessoa, a tarefa de treinamento não pode ser iniciada imediatamente.</span><span class="sxs-lookup"><span data-stu-id="cda50-161">Queue a person group training task, the training task may not be started immediately.</span></span>'
    syntax:
      content: 'function train(personGroupId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="cda50-162">ID fazendo referência ao grupo de uma determinada pessoa.</span><span class="sxs-lookup"><span data-stu-id="cda50-162">Id referencing a particular person group.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.train_2'
    name: 'train(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function train(personGroupId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="cda50-163">ID fazendo referência ao grupo de uma determinada pessoa.</span><span class="sxs-lookup"><span data-stu-id="cda50-163">Id referencing a particular person group.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="cda50-164">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="cda50-164">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="cda50-165">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="cda50-165">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.train_1'
    name: 'train(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function train(personGroupId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="cda50-166">ID fazendo referência ao grupo de uma determinada pessoa.</span><span class="sxs-lookup"><span data-stu-id="cda50-166">Id referencing a particular person group.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="cda50-167">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="cda50-167">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.update'
    name: 'update(string, Models.PersonGroupUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="cda50-168">Atualize o nome de exibição do grupo de pessoa existente e userData.</span><span class="sxs-lookup"><span data-stu-id="cda50-168">Update an existing person group's display name and userData.</span></span> <span data-ttu-id="cda50-169">As propriedades que não aparece no corpo da solicitação não serão atualizadas.</span><span class="sxs-lookup"><span data-stu-id="cda50-169">The properties which does not appear in request body will not be updated.</span></span>
    syntax:
      content: 'function update(personGroupId: string, options?: Models.PersonGroupUpdateOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="cda50-170">ID fazendo referência ao grupo de uma determinada pessoa.</span><span class="sxs-lookup"><span data-stu-id="cda50-170">Id referencing a particular person group.</span></span>
        - id: options
          type:
            - Models.PersonGroupUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.update_2'
    name: 'update(string, PersonGroupUpdateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(personGroupId: string, options: PersonGroupUpdateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="cda50-171">ID fazendo referência ao grupo de uma determinada pessoa.</span><span class="sxs-lookup"><span data-stu-id="cda50-171">Id referencing a particular person group.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupUpdateOptionalParams'
          description: <span data-ttu-id="cda50-172">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="cda50-172">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="cda50-173">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="cda50-173">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.update_1'
    name: 'update(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(personGroupId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="cda50-174">ID fazendo referência ao grupo de uma determinada pessoa.</span><span class="sxs-lookup"><span data-stu-id="cda50-174">Id referencing a particular person group.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="cda50-175">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="cda50-175">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FaceClientContext'
    name: FaceClientContext
    spec.typeScript:
      - name: FaceClientContext
        fullName: FaceClientContext
        uid: '@azure/cognitiveservices-face.FaceClientContext'
  - uid: '@azure/cognitiveservices-face.PersonGroupCreateOptionalParams'
    name: PersonGroupCreateOptionalParams
    spec.typeScript:
      - name: PersonGroupCreateOptionalParams
        fullName: PersonGroupCreateOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupCreateOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.PersonGroup>
    name: PersonGroup>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PersonGroup
        fullName: PersonGroup
        uid: '@azure/cognitiveservices-face.PersonGroup'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.PersonGroupGetOptionalParams'
    name: PersonGroupGetOptionalParams
    spec.typeScript:
      - name: PersonGroupGetOptionalParams
        fullName: PersonGroupGetOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupGetOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.TrainingStatus>
    name: TrainingStatus>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TrainingStatus
        fullName: TrainingStatus
        uid: '@azure/cognitiveservices-face.TrainingStatus'
      - name: '>'
        fullName: '>'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.PersonGroup[]>'
    name: 'PersonGroup[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PersonGroup
        fullName: PersonGroup
        uid: '@azure/cognitiveservices-face.PersonGroup'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.PersonGroupListOptionalParams'
    name: PersonGroupListOptionalParams
    spec.typeScript:
      - name: PersonGroupListOptionalParams
        fullName: PersonGroupListOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupListOptionalParams'
  - uid: '@azure/cognitiveservices-face.PersonGroupUpdateOptionalParams'
    name: PersonGroupUpdateOptionalParams
    spec.typeScript:
      - name: PersonGroupUpdateOptionalParams
        fullName: PersonGroupUpdateOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupUpdateOptionalParams'