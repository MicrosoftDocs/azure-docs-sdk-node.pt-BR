### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.Face'
    name: Face
    fullName: Face
    children:
      - '@azure/cognitiveservices-face.Face.detectWithStream_2'
      - '@azure/cognitiveservices-face.Face.detectWithStream'
      - '@azure/cognitiveservices-face.Face.detectWithStream_1'
      - '@azure/cognitiveservices-face.Face.detectWithUrl_2'
      - '@azure/cognitiveservices-face.Face.detectWithUrl'
      - '@azure/cognitiveservices-face.Face.detectWithUrl_1'
      - '@azure/cognitiveservices-face.Face.constructor'
      - '@azure/cognitiveservices-face.Face.findSimilar_2'
      - '@azure/cognitiveservices-face.Face.findSimilar'
      - '@azure/cognitiveservices-face.Face.findSimilar_1'
      - '@azure/cognitiveservices-face.Face.group'
      - '@azure/cognitiveservices-face.Face.group_2'
      - '@azure/cognitiveservices-face.Face.group_1'
      - '@azure/cognitiveservices-face.Face.identify_2'
      - '@azure/cognitiveservices-face.Face.identify'
      - '@azure/cognitiveservices-face.Face.identify_1'
      - '@azure/cognitiveservices-face.Face.verifyFaceToFace'
      - '@azure/cognitiveservices-face.Face.verifyFaceToFace_2'
      - '@azure/cognitiveservices-face.Face.verifyFaceToFace_1'
      - '@azure/cognitiveservices-face.Face.verifyFaceToPerson_2'
      - '@azure/cognitiveservices-face.Face.verifyFaceToPerson'
      - '@azure/cognitiveservices-face.Face.verifyFaceToPerson_1'
    langs:
      - typeScript
    type: class
    summary: <span data-ttu-id="73d0d-101">Classe que representa uma Face.</span><span class="sxs-lookup"><span data-stu-id="73d0d-101">Class representing a Face.</span></span>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.detectWithStream_2'
    name: 'detectWithStream(msRest.HttpRequestBody, FaceDetectWithStreamOptionalParams, ServiceCallback<DetectedFace[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectWithStream(image: msRest.HttpRequestBody, options: FaceDetectWithStreamOptionalParams, callback: ServiceCallback<DetectedFace[]>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="73d0d-102">Um fluxo de imagem.</span><span class="sxs-lookup"><span data-stu-id="73d0d-102">An image stream.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceDetectWithStreamOptionalParams'
          description: <span data-ttu-id="73d0d-103">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="73d0d-103">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.DetectedFace[]>'
          description: |
            <span data-ttu-id="73d0d-104">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="73d0d-104">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceDetectWithStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.detectWithStream'
    name: 'detectWithStream(msRest.HttpRequestBody, Models.FaceDetectWithStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="73d0d-105">Detecte rostos humanos em locais de face uma imagem e retorna e, opcionalmente com faceIds, pontos de referência e atributos.</span><span class="sxs-lookup"><span data-stu-id="73d0d-105">Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</span></span>'
    syntax:
      content: 'function detectWithStream(image: msRest.HttpRequestBody, options?: Models.FaceDetectWithStreamOptionalParams)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="73d0d-106">Um fluxo de imagem.</span><span class="sxs-lookup"><span data-stu-id="73d0d-106">An image stream.</span></span>
        - id: options
          type:
            - Models.FaceDetectWithStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceDetectWithStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.detectWithStream_1'
    name: 'detectWithStream(msRest.HttpRequestBody, ServiceCallback<DetectedFace[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectWithStream(image: msRest.HttpRequestBody, callback: ServiceCallback<DetectedFace[]>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="73d0d-107">Um fluxo de imagem.</span><span class="sxs-lookup"><span data-stu-id="73d0d-107">An image stream.</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.DetectedFace[]>'
          description: |
            <span data-ttu-id="73d0d-108">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="73d0d-108">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceDetectWithStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.detectWithUrl_2'
    name: 'detectWithUrl(string, FaceDetectWithUrlOptionalParams, ServiceCallback<DetectedFace[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectWithUrl(url: string, options: FaceDetectWithUrlOptionalParams, callback: ServiceCallback<DetectedFace[]>)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="73d0d-109">URL publicamente acessível de uma imagem</span><span class="sxs-lookup"><span data-stu-id="73d0d-109">Publicly reachable URL of an image</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceDetectWithUrlOptionalParams'
          description: <span data-ttu-id="73d0d-110">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="73d0d-110">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.DetectedFace[]>'
          description: |
            <span data-ttu-id="73d0d-111">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="73d0d-111">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceDetectWithUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.detectWithUrl'
    name: 'detectWithUrl(string, Models.FaceDetectWithUrlOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="73d0d-112">Detecte rostos humanos em uma imagem, retângulos de face de retorno e, opcionalmente, com faceIds, pontos de referência e atributos.</span><span class="sxs-lookup"><span data-stu-id="73d0d-112">Detect human faces in an image, return face rectangles, and optionally with faceIds, landmarks, and attributes.</span></span><br />
      * <span data-ttu-id="73d0d-113">Parâmetros opcionais, incluindo faceId, pontos de referência e atributos.</span><span class="sxs-lookup"><span data-stu-id="73d0d-113">Optional parameters including faceId, landmarks, and attributes.</span></span> <span data-ttu-id="73d0d-114">Atributos incluem idade, sexo, headPose, Smiley, facialHair, óculos, emoções, cabelos, composição, oclusão, Acessórios, Desfoque, exposição e ruído.</span><span class="sxs-lookup"><span data-stu-id="73d0d-114">Attributes include age, gender, headPose, smile, facialHair, glasses, emotion, hair, makeup, occlusion, accessories, blur, exposure and noise.</span></span>
      * <span data-ttu-id="73d0d-115">O recurso de face extraído, em vez da imagem real, será armazenado no servidor.</span><span class="sxs-lookup"><span data-stu-id="73d0d-115">The extracted face feature, instead of the actual image, will be stored on server.</span></span> <span data-ttu-id="73d0d-116">O faceId é um identificador do recurso de detecção facial e será usado na [enfrentam – identificar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239), [enfrentam - verificar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523a)e [Face</span><span class="sxs-lookup"><span data-stu-id="73d0d-116">The faceId is an identifier of the face feature and will be used in [Face - Identify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239), [Face - Verify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523a), and [Face</span></span>
      - <span data-ttu-id="73d0d-117">Find Similar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237).</span><span class="sxs-lookup"><span data-stu-id="73d0d-117">Find Similar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237).</span></span> <span data-ttu-id="73d0d-118">Ela expirará 24 horas após a chamada de detecção.</span><span class="sxs-lookup"><span data-stu-id="73d0d-118">It will expire 24 hours after the detection call.</span></span>
      * <span data-ttu-id="73d0d-119">Qualidade de imagem de face superior significa melhor detecção e a precisão do reconhecimento.</span><span class="sxs-lookup"><span data-stu-id="73d0d-119">Higher face image quality means better detection and recognition precision.</span></span> <span data-ttu-id="73d0d-120">Considere as faces de alta qualidade: frontais, clear e face tamanho é de 200 x 200 pixels (100 pixels, entre os olhos) ou maior.</span><span class="sxs-lookup"><span data-stu-id="73d0d-120">Please consider high-quality faces: frontal, clear, and face size is 200x200 pixels (100 pixels between eyes) or bigger.</span></span>
      * <span data-ttu-id="73d0d-121">Há suporte para JPEG, PNG, GIF (o primeiro quadro) e formato BMP.</span><span class="sxs-lookup"><span data-stu-id="73d0d-121">JPEG, PNG, GIF (the first frame), and BMP format are supported.</span></span> <span data-ttu-id="73d0d-122">O tamanho do arquivo de imagem permitida é de 1KB a 6MB.</span><span class="sxs-lookup"><span data-stu-id="73d0d-122">The allowed image file size is from 1KB to 6MB.</span></span>
      * <span data-ttu-id="73d0d-123">Faces são detectáveis quando seu tamanho é de 36 x 36 para 4096x4096 pixels.</span><span class="sxs-lookup"><span data-stu-id="73d0d-123">Faces are detectable when its size is 36x36 to 4096x4096 pixels.</span></span> <span data-ttu-id="73d0d-124">Se precisa detectar faces muito pequenas, mas não criptografados, tente ampliar a imagem de entrada.</span><span class="sxs-lookup"><span data-stu-id="73d0d-124">If need to detect very small but clear faces, please try to enlarge the input image.</span></span>
      * <span data-ttu-id="73d0d-125">Até 64 faces podem ser retornados para uma imagem.</span><span class="sxs-lookup"><span data-stu-id="73d0d-125">Up to 64 faces can be returned for an image.</span></span> <span data-ttu-id="73d0d-126">Faces são classificadas pelo tamanho do retângulo de face de uma grande para o menor.</span><span class="sxs-lookup"><span data-stu-id="73d0d-126">Faces are ranked by face rectangle size from large to small.</span></span>
      * <span data-ttu-id="73d0d-127">Detector facial prefira as faces frontais e quase frontais.</span><span class="sxs-lookup"><span data-stu-id="73d0d-127">Face detector prefer frontal and near-frontal faces.</span></span> <span data-ttu-id="73d0d-128">Há casos em que faces podem não ser detectados, por exemplo, excepcionalmente grandes ângulos de face (head) ou que está sendo obstruídos ou orientação de imagem incorreto.</span><span class="sxs-lookup"><span data-stu-id="73d0d-128">There are cases that faces may not be detected, e.g. exceptionally large face angles (head-pose) or being occluded, or wrong image orientation.</span></span>
      * <span data-ttu-id="73d0d-129">Atributos (idade, sexo, headPose, Smiley, facialHair, óculos, emoções, cabelos, composição, oclusão, Acessórios, Desfoque, exposição e ruído) pode não ser perfeitamente precisos.</span><span class="sxs-lookup"><span data-stu-id="73d0d-129">Attributes (age, gender, headPose, smile, facialHair, glasses, emotion, hair, makeup, occlusion, accessories, blur, exposure and noise) may not be perfectly accurate.</span></span> <span data-ttu-id="73d0d-130">Valor de densidade do HeadPose é um campo reservado e sempre retornará 0.</span><span class="sxs-lookup"><span data-stu-id="73d0d-130">HeadPose's pitch value is a reserved field and will always return 0.</span></span>
      * <span data-ttu-id="73d0d-131">Valores diferentes de 'recognitionModel' são fornecidos.</span><span class="sxs-lookup"><span data-stu-id="73d0d-131">Different 'recognitionModel' values are provided.</span></span> <span data-ttu-id="73d0d-132">Se as operações de acompanhamento como verificar, identificar, localizar Similar são necessários, especifique o modelo de reconhecimento com o parâmetro 'recognitionModel'.</span><span class="sxs-lookup"><span data-stu-id="73d0d-132">If follow-up operations like Verify, Identify, Find Similar are needed, please specify the recognition model with 'recognitionModel' parameter.</span></span> <span data-ttu-id="73d0d-133">O valor padrão para 'recognitionModel' é 'recognition_01', se o modelo mais recente necessário, especifique explicitamente o modelo que você precisa nesse parâmetro.</span><span class="sxs-lookup"><span data-stu-id="73d0d-133">The default value for 'recognitionModel' is 'recognition_01', if latest model needed, please explicitly specify the model you need in this parameter.</span></span> <span data-ttu-id="73d0d-134">Depois que o especificado, o faceIds detectado será associado com o modelo de reconhecimento especificado.</span><span class="sxs-lookup"><span data-stu-id="73d0d-134">Once specified, the detected faceIds will be associated with the specified recognition model.</span></span> <span data-ttu-id="73d0d-135">Mais detalhes, consulte [como especificar um modelo de reconhecimento](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-recognition-model)</span><span class="sxs-lookup"><span data-stu-id="73d0d-135">More details, please refer to [How to specify a recognition model](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-recognition-model)</span></span>
    syntax:
      content: 'function detectWithUrl(url: string, options?: Models.FaceDetectWithUrlOptionalParams)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="73d0d-136">URL publicamente acessível de uma imagem</span><span class="sxs-lookup"><span data-stu-id="73d0d-136">Publicly reachable URL of an image</span></span>
        - id: options
          type:
            - Models.FaceDetectWithUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceDetectWithUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.detectWithUrl_1'
    name: 'detectWithUrl(string, ServiceCallback<DetectedFace[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectWithUrl(url: string, callback: ServiceCallback<DetectedFace[]>)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="73d0d-137">URL publicamente acessível de uma imagem</span><span class="sxs-lookup"><span data-stu-id="73d0d-137">Publicly reachable URL of an image</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.DetectedFace[]>'
          description: |
            <span data-ttu-id="73d0d-138">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="73d0d-138">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceDetectWithUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.constructor'
    name: Face(FaceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="73d0d-139">Crie uma Face.</span><span class="sxs-lookup"><span data-stu-id="73d0d-139">Create a Face.</span></span>
    syntax:
      content: 'new Face(client: FaceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-face.FaceClientContext'
          description: |
            <span data-ttu-id="73d0d-140">Referência para o cliente do serviço.</span><span class="sxs-lookup"><span data-stu-id="73d0d-140">Reference to the service client.</span></span>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.findSimilar_2'
    name: 'findSimilar(string, FaceFindSimilarOptionalParams, ServiceCallback<SimilarFace[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function findSimilar(faceId: string, options: FaceFindSimilarOptionalParams, callback: ServiceCallback<SimilarFace[]>)'
      parameters:
        - id: faceId
          type:
            - string
          description: <span data-ttu-id="73d0d-141">FaceId do mostrador da consulta.</span><span class="sxs-lookup"><span data-stu-id="73d0d-141">FaceId of the query face.</span></span> <span data-ttu-id="73d0d-142">Usuário precisa chamar Face - detectar primeiro para obter um faceId válido.</span><span class="sxs-lookup"><span data-stu-id="73d0d-142">User needs to call Face - Detect first to get a valid faceId.</span></span> <span data-ttu-id="73d0d-143">Observe que essa faceId não é persistente e expirarão após 24 horas após a chamada de detecção</span><span class="sxs-lookup"><span data-stu-id="73d0d-143">Note that this faceId is not persisted and will expire 24 hours after the detection call</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams'
          description: <span data-ttu-id="73d0d-144">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="73d0d-144">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.SimilarFace[]>'
          description: |
            <span data-ttu-id="73d0d-145">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="73d0d-145">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceFindSimilarResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.findSimilar'
    name: 'findSimilar(string, Models.FaceFindSimilarOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="73d0d-146">Considerando faceId da superfície de consulta, para pesquisar os rostos semelhantes de uma matriz de faceId, uma lista de face ou uma lista de face grandes.</span><span class="sxs-lookup"><span data-stu-id="73d0d-146">Given query face's faceId, to search the similar-looking faces from a faceId array, a face list or a large face list.</span></span> <span data-ttu-id="73d0d-147">faceId matriz contém as faces criadas pelo [enfrentam - detectar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), que vai expirar 24 horas após a criação.</span><span class="sxs-lookup"><span data-stu-id="73d0d-147">faceId array contains the faces created by [Face - Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), which will expire 24 hours after creation.</span></span> <span data-ttu-id="73d0d-148">"faceListId" é criado pelo [FaceList - criar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524b) contendo persistedFaceIds não expiram.</span><span class="sxs-lookup"><span data-stu-id="73d0d-148">A "faceListId" is created by [FaceList - Create](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524b) containing persistedFaceIds that will not expire.</span></span> <span data-ttu-id="73d0d-149">E "largeFaceListId" é criado pelo [LargeFaceList – criar](/docs/services/563879b61984550e40cbbe8d/operations/5a157b68d2de3616c086f2cc) contendo persistedFaceIds também não expiram.</span><span class="sxs-lookup"><span data-stu-id="73d0d-149">And a "largeFaceListId" is created by [LargeFaceList - Create](/docs/services/563879b61984550e40cbbe8d/operations/5a157b68d2de3616c086f2cc) containing persistedFaceIds that will also not expire.</span></span> <span data-ttu-id="73d0d-150">Dependendo da entrada a lista retornada de rostos semelhantes contém faceIds ou persistedFaceIds classificados por similaridade.</span><span class="sxs-lookup"><span data-stu-id="73d0d-150">Depending on the input the returned similar faces list contains faceIds or persistedFaceIds ranked by similarity.</span></span>
      <br/><span data-ttu-id="73d0d-151">Localizar similar tem dois modos de trabalho, "matchPerson" e "matchFace".</span><span class="sxs-lookup"><span data-stu-id="73d0d-151">Find similar has two working modes, "matchPerson" and "matchFace".</span></span> <span data-ttu-id="73d0d-152">"matchPerson" é o modo padrão que ele tenta encontrar rostos da mesma pessoa possível usando limites internos da mesma pessoa.</span><span class="sxs-lookup"><span data-stu-id="73d0d-152">"matchPerson" is the default mode that it tries to find faces of the same person as possible by using internal same-person thresholds.</span></span> <span data-ttu-id="73d0d-153">É útil localizar um conhecido outras fotos da pessoa.</span><span class="sxs-lookup"><span data-stu-id="73d0d-153">It is useful to find a known person's other photos.</span></span> <span data-ttu-id="73d0d-154">Observe que uma lista vazia será retornada se nenhuma face passar os limites internos.</span><span class="sxs-lookup"><span data-stu-id="73d0d-154">Note that an empty list will be returned if no faces pass the internal thresholds.</span></span> <span data-ttu-id="73d0d-155">modo de "matchFace" ignora os limites da mesma pessoa e retorna uma classificação de qualquer forma rostos parecidos, até mesmo a similaridade é baixa.</span><span class="sxs-lookup"><span data-stu-id="73d0d-155">"matchFace" mode ignores same-person thresholds and returns ranked similar faces anyway, even the similarity is low.</span></span> <span data-ttu-id="73d0d-156">Ele pode ser usado nos casos como pesquisar celebridade rostos.</span><span class="sxs-lookup"><span data-stu-id="73d0d-156">It can be used in the cases like searching celebrity-looking faces.</span></span>
      <br/><span data-ttu-id="73d0d-157">O 'recognitionModel' associado faceId da superfície de consulta deve ser igual a 'recognitionModel' usada pela matriz faceId de destino, lista de face ou lista de face grandes.</span><span class="sxs-lookup"><span data-stu-id="73d0d-157">The 'recognitionModel' associated with the query face's faceId should be the same as the 'recognitionModel' used by the target faceId array, face list or large face list.</span></span>
    syntax:
      content: 'function findSimilar(faceId: string, options?: Models.FaceFindSimilarOptionalParams)'
      parameters:
        - id: faceId
          type:
            - string
          description: <span data-ttu-id="73d0d-158">FaceId do mostrador da consulta.</span><span class="sxs-lookup"><span data-stu-id="73d0d-158">FaceId of the query face.</span></span> <span data-ttu-id="73d0d-159">Usuário precisa chamar Face - detectar primeiro para obter um faceId válido.</span><span class="sxs-lookup"><span data-stu-id="73d0d-159">User needs to call Face - Detect first to get a valid faceId.</span></span> <span data-ttu-id="73d0d-160">Observe que essa faceId não é persistente e expirarão após 24 horas após a chamada de detecção</span><span class="sxs-lookup"><span data-stu-id="73d0d-160">Note that this faceId is not persisted and will expire 24 hours after the detection call</span></span>
        - id: options
          type:
            - Models.FaceFindSimilarOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceFindSimilarResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.findSimilar_1'
    name: 'findSimilar(string, ServiceCallback<SimilarFace[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function findSimilar(faceId: string, callback: ServiceCallback<SimilarFace[]>)'
      parameters:
        - id: faceId
          type:
            - string
          description: <span data-ttu-id="73d0d-161">FaceId do mostrador da consulta.</span><span class="sxs-lookup"><span data-stu-id="73d0d-161">FaceId of the query face.</span></span> <span data-ttu-id="73d0d-162">Usuário precisa chamar Face - detectar primeiro para obter um faceId válido.</span><span class="sxs-lookup"><span data-stu-id="73d0d-162">User needs to call Face - Detect first to get a valid faceId.</span></span> <span data-ttu-id="73d0d-163">Observe que essa faceId não é persistente e expirarão após 24 horas após a chamada de detecção</span><span class="sxs-lookup"><span data-stu-id="73d0d-163">Note that this faceId is not persisted and will expire 24 hours after the detection call</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.SimilarFace[]>'
          description: |
            <span data-ttu-id="73d0d-164">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="73d0d-164">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceFindSimilarResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.group'
    name: 'group(string[], msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="73d0d-165">Divida candidato rostos em grupos com base na semelhança de face.</span><span class="sxs-lookup"><span data-stu-id="73d0d-165">Divide candidate faces into groups based on face similarity.</span></span><br />
      * <span data-ttu-id="73d0d-166">A saída é um ou mais grupos de face não contíguo e um messyGroup.</span><span class="sxs-lookup"><span data-stu-id="73d0d-166">The output is one or more disjointed face groups and a messyGroup.</span></span> <span data-ttu-id="73d0d-167">Um grupo de face contém as faces que possuem semelhante procurando, muitas vezes da mesma pessoa.</span><span class="sxs-lookup"><span data-stu-id="73d0d-167">A face group contains faces that have similar looking, often of the same person.</span></span> <span data-ttu-id="73d0d-168">Grupos de rostos são classificados por tamanho de grupo, ou seja, o número de faces.</span><span class="sxs-lookup"><span data-stu-id="73d0d-168">Face groups are ranked by group size, i.e. number of faces.</span></span> <span data-ttu-id="73d0d-169">Observe que as faces que pertencem a uma mesma pessoa podem ser divididos em vários grupos de resultados.</span><span class="sxs-lookup"><span data-stu-id="73d0d-169">Notice that faces belonging to a same person might be split into several groups in the result.</span></span>
      * <span data-ttu-id="73d0d-170">MessyGroup é um grupo de face especial que contém os rostos que não é possível localizar qualquer face equivalente semelhante de faces originais.</span><span class="sxs-lookup"><span data-stu-id="73d0d-170">MessyGroup is a special face group containing faces that cannot find any similar counterpart face from original faces.</span></span> <span data-ttu-id="73d0d-171">O messyGroup não aparecerão no resultado se todas as faces encontrado suas contrapartes.</span><span class="sxs-lookup"><span data-stu-id="73d0d-171">The messyGroup will not appear in the result if all faces found their counterparts.</span></span>
      * <span data-ttu-id="73d0d-172">API de grupo precisa faces de pelo menos 2 release candidate e 1000, no máximo.</span><span class="sxs-lookup"><span data-stu-id="73d0d-172">Group API needs at least 2 candidate faces and 1000 at most.</span></span> <span data-ttu-id="73d0d-173">Sugerimos para tentar [enfrentam - verificar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523a) quando você tem apenas 2 faces de candidato.</span><span class="sxs-lookup"><span data-stu-id="73d0d-173">We suggest to try [Face - Verify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523a) when you only have 2 candidate faces.</span></span>
      * <span data-ttu-id="73d0d-174">O 'recognitionModel' associado faceIds dos rostos de consulta deve ser o mesmo.</span><span class="sxs-lookup"><span data-stu-id="73d0d-174">The 'recognitionModel' associated with the query faces' faceIds should be the same.</span></span>
    syntax:
      content: 'function group(faceIds: string[], options?: msRest.RequestOptionsBase)'
      parameters:
        - id: faceIds
          type:
            - 'string[]'
          description: <span data-ttu-id="73d0d-175">Matriz de candidato faceId criada por meio de detecção facial - detectar.</span><span class="sxs-lookup"><span data-stu-id="73d0d-175">Array of candidate faceId created by Face - Detect.</span></span> <span data-ttu-id="73d0d-176">O máximo é 1.000 faces</span><span class="sxs-lookup"><span data-stu-id="73d0d-176">The maximum is 1000 faces</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceGroupResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.group_2'
    name: 'group(string[], RequestOptionsBase, ServiceCallback<GroupResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function group(faceIds: string[], options: RequestOptionsBase, callback: ServiceCallback<GroupResult>)'
      parameters:
        - id: faceIds
          type:
            - 'string[]'
          description: <span data-ttu-id="73d0d-177">Matriz de candidato faceId criada por meio de detecção facial - detectar.</span><span class="sxs-lookup"><span data-stu-id="73d0d-177">Array of candidate faceId created by Face - Detect.</span></span> <span data-ttu-id="73d0d-178">O máximo é 1.000 faces</span><span class="sxs-lookup"><span data-stu-id="73d0d-178">The maximum is 1000 faces</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="73d0d-179">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="73d0d-179">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.GroupResult>
          description: |
            <span data-ttu-id="73d0d-180">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="73d0d-180">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceGroupResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.group_1'
    name: 'group(string[], ServiceCallback<GroupResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function group(faceIds: string[], callback: ServiceCallback<GroupResult>)'
      parameters:
        - id: faceIds
          type:
            - 'string[]'
          description: <span data-ttu-id="73d0d-181">Matriz de candidato faceId criada por meio de detecção facial - detectar.</span><span class="sxs-lookup"><span data-stu-id="73d0d-181">Array of candidate faceId created by Face - Detect.</span></span> <span data-ttu-id="73d0d-182">O máximo é 1.000 faces</span><span class="sxs-lookup"><span data-stu-id="73d0d-182">The maximum is 1000 faces</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.GroupResult>
          description: |
            <span data-ttu-id="73d0d-183">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="73d0d-183">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceGroupResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.identify_2'
    name: 'identify(string[], FaceIdentifyOptionalParams, ServiceCallback<IdentifyResult[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function identify(faceIds: string[], options: FaceIdentifyOptionalParams, callback: ServiceCallback<IdentifyResult[]>)'
      parameters:
        - id: faceIds
          type:
            - 'string[]'
          description: '<span data-ttu-id="73d0d-184">Matriz de consulta faces faceIds, criado por Face - detectar.</span><span class="sxs-lookup"><span data-stu-id="73d0d-184">Array of query faces faceIds, created by the Face - Detect.</span></span> <span data-ttu-id="73d0d-185">Cada uma as faces são identificadas de maneira independente.</span><span class="sxs-lookup"><span data-stu-id="73d0d-185">Each of the faces are identified independently.</span></span> <span data-ttu-id="73d0d-186">O número de faceIds válido é entre [1, 10].</span><span class="sxs-lookup"><span data-stu-id="73d0d-186">The valid number of faceIds is between [1, 10].</span></span>'
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceIdentifyOptionalParams'
          description: <span data-ttu-id="73d0d-187">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="73d0d-187">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.IdentifyResult[]>'
          description: |
            <span data-ttu-id="73d0d-188">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="73d0d-188">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceIdentifyResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.identify'
    name: 'identify(string[], Models.FaceIdentifyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="73d0d-189">1-para-muitos identificação para encontrar as correspondências mais próximas da face pessoa consulta específica de um grupo de pessoas ou grupo de pessoas grandes.</span><span class="sxs-lookup"><span data-stu-id="73d0d-189">1-to-many identification to find the closest matches of the specific query person face from a person group or large person group.</span></span>
      <br/> <span data-ttu-id="73d0d-190">Para cada face na matriz faceIds, identificar Face irá calcular as semelhanças entre o mostrador da consulta e todas as faces no grupo de pessoa (fornecido pelo personGroupId) ou pessoa grande agrupar (determinada pelo largePersonGroupId) e retornar o candidato pessoa (s) para que enfrentam uma classificação por confiança de similaridade.</span><span class="sxs-lookup"><span data-stu-id="73d0d-190">For each face in the faceIds array, Face Identify will compute similarities between the query face and all the faces in the person group (given by personGroupId) or large person group (given by largePersonGroupId), and return candidate person(s) for that face ranked by similarity confidence.</span></span> <span data-ttu-id="73d0d-191">O grupo de pessoa grupo/grande de pessoa deve ser treinado para torná-lo pronto para identificação.</span><span class="sxs-lookup"><span data-stu-id="73d0d-191">The person group/large person group should be trained to make it ready for identification.</span></span> <span data-ttu-id="73d0d-192">Veja mais na [PersonGroup - Train](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395249) e [LargePersonGroup – Train](/docs/services/563879b61984550e40cbbe8d/operations/599ae2d16ac60f11b48b5aa4).</span><span class="sxs-lookup"><span data-stu-id="73d0d-192">See more in [PersonGroup - Train](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395249) and [LargePersonGroup - Train](/docs/services/563879b61984550e40cbbe8d/operations/599ae2d16ac60f11b48b5aa4).</span></span>
      <br/>
      <span data-ttu-id="73d0d-193">Comentários:</span><span class="sxs-lookup"><span data-stu-id="73d0d-193">Remarks:</span></span><br />
      * <span data-ttu-id="73d0d-194">O algoritmo permite mais de uma face seja identificada de forma independente na mesma solicitação, mas não mais de 10 faces.</span><span class="sxs-lookup"><span data-stu-id="73d0d-194">The algorithm allows more than one face to be identified independently at the same request, but no more than 10 faces.</span></span>
      * <span data-ttu-id="73d0d-195">Cada pessoa no grupo de grupo/grande pessoa pessoa poderia ter mais de um rosto, mas não mais do que 248 faces.</span><span class="sxs-lookup"><span data-stu-id="73d0d-195">Each person in the person group/large person group could have more than one face, but no more than 248 faces.</span></span>
      * <span data-ttu-id="73d0d-196">Qualidade de imagem de face superior significa maior precisão de identificação.</span><span class="sxs-lookup"><span data-stu-id="73d0d-196">Higher face image quality means better identification precision.</span></span> <span data-ttu-id="73d0d-197">Considere as faces de alta qualidade: frontais, clear e face tamanho é de 200 x 200 pixels (100 pixels, entre os olhos) ou maior.</span><span class="sxs-lookup"><span data-stu-id="73d0d-197">Please consider high-quality faces: frontal, clear, and face size is 200x200 pixels (100 pixels between eyes) or bigger.</span></span>
      * <span data-ttu-id="73d0d-198">Número de candidatos retornado é restrito por maxNumOfCandidatesReturned e confidenceThreshold.</span><span class="sxs-lookup"><span data-stu-id="73d0d-198">Number of candidates returned is restricted by maxNumOfCandidatesReturned and confidenceThreshold.</span></span> <span data-ttu-id="73d0d-199">Se nenhuma pessoa for identificada, os candidatos retornados será uma matriz vazia.</span><span class="sxs-lookup"><span data-stu-id="73d0d-199">If no person is identified, the returned candidates will be an empty array.</span></span>
      * <span data-ttu-id="73d0d-200">Tente [Face - localizar Similar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237) quando você precisa encontrar rostos semelhantes em uma lista de face lista/grande face em vez de um grupo de pessoa/grande de grupo da pessoa.</span><span class="sxs-lookup"><span data-stu-id="73d0d-200">Try [Face - Find Similar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237) when you need to find similar faces from a face list/large face list instead of a person group/large person group.</span></span>
      * <span data-ttu-id="73d0d-201">O 'recognitionModel' associado faceIds dos rostos de consulta deve ser o mesmo que o usado pelo grupo-alvo pessoa ou grupo de pessoas grande 'recognitionModel'.</span><span class="sxs-lookup"><span data-stu-id="73d0d-201">The 'recognitionModel' associated with the query faces' faceIds should be the same as the 'recognitionModel' used by the target person group or large person group.</span></span>
    syntax:
      content: 'function identify(faceIds: string[], options?: Models.FaceIdentifyOptionalParams)'
      parameters:
        - id: faceIds
          type:
            - 'string[]'
          description: '<span data-ttu-id="73d0d-202">Matriz de consulta faces faceIds, criado por Face - detectar.</span><span class="sxs-lookup"><span data-stu-id="73d0d-202">Array of query faces faceIds, created by the Face - Detect.</span></span> <span data-ttu-id="73d0d-203">Cada uma as faces são identificadas de maneira independente.</span><span class="sxs-lookup"><span data-stu-id="73d0d-203">Each of the faces are identified independently.</span></span> <span data-ttu-id="73d0d-204">O número de faceIds válido é entre [1, 10].</span><span class="sxs-lookup"><span data-stu-id="73d0d-204">The valid number of faceIds is between [1, 10].</span></span>'
        - id: options
          type:
            - Models.FaceIdentifyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceIdentifyResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.identify_1'
    name: 'identify(string[], ServiceCallback<IdentifyResult[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function identify(faceIds: string[], callback: ServiceCallback<IdentifyResult[]>)'
      parameters:
        - id: faceIds
          type:
            - 'string[]'
          description: '<span data-ttu-id="73d0d-205">Matriz de consulta faces faceIds, criado por Face - detectar.</span><span class="sxs-lookup"><span data-stu-id="73d0d-205">Array of query faces faceIds, created by the Face - Detect.</span></span> <span data-ttu-id="73d0d-206">Cada uma as faces são identificadas de maneira independente.</span><span class="sxs-lookup"><span data-stu-id="73d0d-206">Each of the faces are identified independently.</span></span> <span data-ttu-id="73d0d-207">O número de faceIds válido é entre [1, 10].</span><span class="sxs-lookup"><span data-stu-id="73d0d-207">The valid number of faceIds is between [1, 10].</span></span>'
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.IdentifyResult[]>'
          description: |
            <span data-ttu-id="73d0d-208">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="73d0d-208">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceIdentifyResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.verifyFaceToFace'
    name: 'verifyFaceToFace(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="73d0d-209">Verifique se os dois rostos pertencem a uma mesma pessoa ou se uma face pertence a uma pessoa.</span><span class="sxs-lookup"><span data-stu-id="73d0d-209">Verify whether two faces belong to a same person or whether one face belongs to a person.</span></span>
      <br/>
      <span data-ttu-id="73d0d-210">Comentários:</span><span class="sxs-lookup"><span data-stu-id="73d0d-210">Remarks:</span></span><br />
      * <span data-ttu-id="73d0d-211">Qualidade de imagem de face superior significa maior precisão de identificação.</span><span class="sxs-lookup"><span data-stu-id="73d0d-211">Higher face image quality means better identification precision.</span></span> <span data-ttu-id="73d0d-212">Considere as faces de alta qualidade: frontais, clear e face tamanho é de 200 x 200 pixels (100 pixels, entre os olhos) ou maior.</span><span class="sxs-lookup"><span data-stu-id="73d0d-212">Please consider high-quality faces: frontal, clear, and face size is 200x200 pixels (100 pixels between eyes) or bigger.</span></span>
      * <span data-ttu-id="73d0d-213">Para os cenários que são sensíveis a precisão, verifique o bom senso.</span><span class="sxs-lookup"><span data-stu-id="73d0d-213">For the scenarios that are sensitive to accuracy please make your own judgment.</span></span>
      * <span data-ttu-id="73d0d-214">O 'recognitionModel' associado faceIds dos rostos de consulta deve ser o mesmo que 'recognitionModel' usada pela face de destino, grupo de pessoas ou grupo de pessoas grandes.</span><span class="sxs-lookup"><span data-stu-id="73d0d-214">The 'recognitionModel' associated with the query faces' faceIds should be the same as the 'recognitionModel' used by the target face, person group or large person group.</span></span>
    syntax:
      content: 'function verifyFaceToFace(faceId1: string, faceId2: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: faceId1
          type:
            - string
          description: '<span data-ttu-id="73d0d-215">faceId da face primeiro, é proveniente de detecção facial - detectar</span><span class="sxs-lookup"><span data-stu-id="73d0d-215">FaceId of the first face, comes from Face - Detect</span></span>'
        - id: faceId2
          type:
            - string
          description: '<span data-ttu-id="73d0d-216">faceId da face segundo, provenientes de detecção facial - detectar</span><span class="sxs-lookup"><span data-stu-id="73d0d-216">FaceId of the second face, comes from Face - Detect</span></span>'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceVerifyFaceToFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.verifyFaceToFace_2'
    name: 'verifyFaceToFace(string, string, RequestOptionsBase, ServiceCallback<VerifyResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function verifyFaceToFace(faceId1: string, faceId2: string, options: RequestOptionsBase, callback: ServiceCallback<VerifyResult>)'
      parameters:
        - id: faceId1
          type:
            - string
          description: '<span data-ttu-id="73d0d-217">faceId da face primeiro, é proveniente de detecção facial - detectar</span><span class="sxs-lookup"><span data-stu-id="73d0d-217">FaceId of the first face, comes from Face - Detect</span></span>'
        - id: faceId2
          type:
            - string
          description: '<span data-ttu-id="73d0d-218">faceId da face segundo, provenientes de detecção facial - detectar</span><span class="sxs-lookup"><span data-stu-id="73d0d-218">FaceId of the second face, comes from Face - Detect</span></span>'
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="73d0d-219">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="73d0d-219">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.VerifyResult>
          description: |
            <span data-ttu-id="73d0d-220">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="73d0d-220">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceVerifyFaceToFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.verifyFaceToFace_1'
    name: 'verifyFaceToFace(string, string, ServiceCallback<VerifyResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function verifyFaceToFace(faceId1: string, faceId2: string, callback: ServiceCallback<VerifyResult>)'
      parameters:
        - id: faceId1
          type:
            - string
          description: '<span data-ttu-id="73d0d-221">faceId da face primeiro, é proveniente de detecção facial - detectar</span><span class="sxs-lookup"><span data-stu-id="73d0d-221">FaceId of the first face, comes from Face - Detect</span></span>'
        - id: faceId2
          type:
            - string
          description: '<span data-ttu-id="73d0d-222">faceId da face segundo, provenientes de detecção facial - detectar</span><span class="sxs-lookup"><span data-stu-id="73d0d-222">FaceId of the second face, comes from Face - Detect</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.VerifyResult>
          description: |
            <span data-ttu-id="73d0d-223">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="73d0d-223">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceVerifyFaceToFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.verifyFaceToPerson_2'
    name: 'verifyFaceToPerson(string, string, FaceVerifyFaceToPersonOptionalParams, ServiceCallback<VerifyResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function verifyFaceToPerson(faceId: string, personId: string, options: FaceVerifyFaceToPersonOptionalParams, callback: ServiceCallback<VerifyResult>)'
      parameters:
        - id: faceId
          type:
            - string
          description: '<span data-ttu-id="73d0d-224">FaceId da face, vem de detecção facial - detectar</span><span class="sxs-lookup"><span data-stu-id="73d0d-224">FaceId of the face, comes from Face - Detect</span></span>'
        - id: personId
          type:
            - string
          description: <span data-ttu-id="73d0d-225">Especifica uma determinada pessoa em um grupo de pessoa ou um grupo grande de pessoa.</span><span class="sxs-lookup"><span data-stu-id="73d0d-225">Specify a certain person in a person group or a large person group.</span></span> <span data-ttu-id="73d0d-226">personId é criado no PersonGroup pessoa - crie ou pessoa LargePersonGroup – criar.</span><span class="sxs-lookup"><span data-stu-id="73d0d-226">personId is created in PersonGroup Person - Create or LargePersonGroup Person - Create.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceVerifyFaceToPersonOptionalParams'
          description: <span data-ttu-id="73d0d-227">Os parâmetros opcionais</span><span class="sxs-lookup"><span data-stu-id="73d0d-227">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.VerifyResult>
          description: |
            <span data-ttu-id="73d0d-228">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="73d0d-228">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceVerifyFaceToPersonResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.verifyFaceToPerson'
    name: 'verifyFaceToPerson(string, string, Models.FaceVerifyFaceToPersonOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="73d0d-229">Verifique se os dois rostos pertencem a uma mesma pessoa.</span><span class="sxs-lookup"><span data-stu-id="73d0d-229">Verify whether two faces belong to a same person.</span></span> <span data-ttu-id="73d0d-230">Compara uma face Id com a Id de uma pessoa</span><span class="sxs-lookup"><span data-stu-id="73d0d-230">Compares a face Id with a Person Id</span></span>
    syntax:
      content: 'function verifyFaceToPerson(faceId: string, personId: string, options?: Models.FaceVerifyFaceToPersonOptionalParams)'
      parameters:
        - id: faceId
          type:
            - string
          description: '<span data-ttu-id="73d0d-231">FaceId da face, vem de detecção facial - detectar</span><span class="sxs-lookup"><span data-stu-id="73d0d-231">FaceId of the face, comes from Face - Detect</span></span>'
        - id: personId
          type:
            - string
          description: <span data-ttu-id="73d0d-232">Especifica uma determinada pessoa em um grupo de pessoa ou um grupo grande de pessoa.</span><span class="sxs-lookup"><span data-stu-id="73d0d-232">Specify a certain person in a person group or a large person group.</span></span> <span data-ttu-id="73d0d-233">personId é criado no PersonGroup pessoa - crie ou pessoa LargePersonGroup – criar.</span><span class="sxs-lookup"><span data-stu-id="73d0d-233">personId is created in PersonGroup Person - Create or LargePersonGroup Person - Create.</span></span>
        - id: options
          type:
            - Models.FaceVerifyFaceToPersonOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceVerifyFaceToPersonResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.verifyFaceToPerson_1'
    name: 'verifyFaceToPerson(string, string, ServiceCallback<VerifyResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function verifyFaceToPerson(faceId: string, personId: string, callback: ServiceCallback<VerifyResult>)'
      parameters:
        - id: faceId
          type:
            - string
          description: '<span data-ttu-id="73d0d-234">FaceId da face, vem de detecção facial - detectar</span><span class="sxs-lookup"><span data-stu-id="73d0d-234">FaceId of the face, comes from Face - Detect</span></span>'
        - id: personId
          type:
            - string
          description: <span data-ttu-id="73d0d-235">Especifica uma determinada pessoa em um grupo de pessoa ou um grupo grande de pessoa.</span><span class="sxs-lookup"><span data-stu-id="73d0d-235">Specify a certain person in a person group or a large person group.</span></span> <span data-ttu-id="73d0d-236">personId é criado no PersonGroup pessoa - crie ou pessoa LargePersonGroup – criar.</span><span class="sxs-lookup"><span data-stu-id="73d0d-236">personId is created in PersonGroup Person - Create or LargePersonGroup Person - Create.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.VerifyResult>
          description: |
            <span data-ttu-id="73d0d-237">O retorno de chamada</span><span class="sxs-lookup"><span data-stu-id="73d0d-237">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceVerifyFaceToPersonResponse>
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FaceClientContext'
    name: FaceClientContext
    spec.typeScript:
      - name: FaceClientContext
        fullName: FaceClientContext
        uid: '@azure/cognitiveservices-face.FaceClientContext'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.DetectedFace[]>'
    name: 'DetectedFace[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DetectedFace
        fullName: DetectedFace
        uid: '@azure/cognitiveservices-face.DetectedFace'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.FaceDetectWithStreamOptionalParams'
    name: FaceDetectWithStreamOptionalParams
    spec.typeScript:
      - name: FaceDetectWithStreamOptionalParams
        fullName: FaceDetectWithStreamOptionalParams
        uid: '@azure/cognitiveservices-face.FaceDetectWithStreamOptionalParams'
  - uid: '@azure/cognitiveservices-face.FaceDetectWithUrlOptionalParams'
    name: FaceDetectWithUrlOptionalParams
    spec.typeScript:
      - name: FaceDetectWithUrlOptionalParams
        fullName: FaceDetectWithUrlOptionalParams
        uid: '@azure/cognitiveservices-face.FaceDetectWithUrlOptionalParams'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.SimilarFace[]>'
    name: 'SimilarFace[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SimilarFace
        fullName: SimilarFace
        uid: '@azure/cognitiveservices-face.SimilarFace'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams'
    name: FaceFindSimilarOptionalParams
    spec.typeScript:
      - name: FaceFindSimilarOptionalParams
        fullName: FaceFindSimilarOptionalParams
        uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.GroupResult>
    name: GroupResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GroupResult
        fullName: GroupResult
        uid: '@azure/cognitiveservices-face.GroupResult'
      - name: '>'
        fullName: '>'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.IdentifyResult[]>'
    name: 'IdentifyResult[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: IdentifyResult
        fullName: IdentifyResult
        uid: '@azure/cognitiveservices-face.IdentifyResult'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.FaceIdentifyOptionalParams'
    name: FaceIdentifyOptionalParams
    spec.typeScript:
      - name: FaceIdentifyOptionalParams
        fullName: FaceIdentifyOptionalParams
        uid: '@azure/cognitiveservices-face.FaceIdentifyOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.VerifyResult>
    name: VerifyResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VerifyResult
        fullName: VerifyResult
        uid: '@azure/cognitiveservices-face.VerifyResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.FaceVerifyFaceToPersonOptionalParams'
    name: FaceVerifyFaceToPersonOptionalParams
    spec.typeScript:
      - name: FaceVerifyFaceToPersonOptionalParams
        fullName: FaceVerifyFaceToPersonOptionalParams
        uid: '@azure/cognitiveservices-face.FaceVerifyFaceToPersonOptionalParams'