### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams'
    name: FaceListAddFaceFromStreamOptionalParams
    fullName: FaceListAddFaceFromStreamOptionalParams
    children:
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.abortSignal'
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.customHeaders'
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.detectionModel'
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.onDownloadProgress'
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.onUploadProgress'
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.targetFace'
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.timeout'
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.userData'
    langs:
      - typeScript
    type: interface
    summary: <span data-ttu-id="e6e10-101">Parâmetros opcionais.</span><span class="sxs-lookup"><span data-stu-id="e6e10-101">Optional Parameters.</span></span>
    extends:
      name: RequestOptionsBase
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="e6e10-102">O sinal que pode ser usado para anular as solicitações.</span><span class="sxs-lookup"><span data-stu-id="e6e10-102">The signal which can be used to abort requests.</span></span>
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.customHeaders'
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="e6e10-103">{object} [customHeaders] Cabeçalhos de solicitação personalizado que serão aplicados antes que a solicitação é enviada definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="e6e10-103">{object} [customHeaders] User defined custom request headers that will be applied before the request is sent.</span></span>'
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.detectionModel'
    name: detectionModel
    fullName: detectionModel
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="e6e10-104">Nome do modelo de detecção.</span><span class="sxs-lookup"><span data-stu-id="e6e10-104">Name of detection model.</span></span> <span data-ttu-id="e6e10-105">Modelo de detecção é usado para detectar faces na imagem enviada.</span><span class="sxs-lookup"><span data-stu-id="e6e10-105">Detection model is used to detect faces in the submitted image.</span></span> <span data-ttu-id="e6e10-106">Um nome de modelo de detecção pode ser fornecido ao executar a detecção facial - detectar ou (grande) FaceList - adicionar Face ou PersonGroup (grande) - adicionar Face.</span><span class="sxs-lookup"><span data-stu-id="e6e10-106">A detection model name can be provided when performing Face - Detect or (Large)FaceList - Add Face or (Large)PersonGroup - Add Face.</span></span> <span data-ttu-id="e6e10-107">O valor padrão é ''detection_01'', se for necessário outro modelo, especifique-lo explicitamente.</span><span class="sxs-lookup"><span data-stu-id="e6e10-107">The default value is ''detection_01'', if another model is needed, please explicitly specify it.</span></span> <span data-ttu-id="e6e10-108">Os valores possíveis incluem: ''detection_01'', ''detection_02''.</span><span class="sxs-lookup"><span data-stu-id="e6e10-108">Possible values include: ''detection_01'', ''detection_02''.</span></span> <span data-ttu-id="e6e10-109">Valor padrão: ''detection_01''.</span><span class="sxs-lookup"><span data-stu-id="e6e10-109">Default value: ''detection_01''.</span></span>'
    optional: true
    syntax:
      content: 'detectionModel?: DetectionModel'
      return:
        type:
          - '@azure/cognitiveservices-face.DetectionModel'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.onDownloadProgress'
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="e6e10-110">Retorno de chamada que é acionada mediante o andamento do download.</span><span class="sxs-lookup"><span data-stu-id="e6e10-110">Callback which fires upon download progress.</span></span>
    optional: true
    syntax:
      content: 'onDownloadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.onUploadProgress'
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="e6e10-111">Retorno de chamada que é acionada mediante o progresso do carregamento.</span><span class="sxs-lookup"><span data-stu-id="e6e10-111">Callback which fires upon upload progress.</span></span>
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.targetFace'
    name: targetFace
    fullName: targetFace
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="e6e10-112">Um retângulo facial para especificar a face de destino a ser adicionado a uma pessoa no formato "targetFace = esquerda, superior, largura, altura".</span><span class="sxs-lookup"><span data-stu-id="e6e10-112">A face rectangle to specify the target face to be added to a person in the format of "targetFace=left,top,width,height".</span></span> <span data-ttu-id="e6e10-113">Por exemplo</span><span class="sxs-lookup"><span data-stu-id="e6e10-113">E.g.</span></span> <span data-ttu-id="e6e10-114">"targetFace = 10, 10, 100, 100".</span><span class="sxs-lookup"><span data-stu-id="e6e10-114">"targetFace=10,10,100,100".</span></span> <span data-ttu-id="e6e10-115">Se houver mais de um rosto na imagem, targetFace é necessária para especificar qual face para adicionar.</span><span class="sxs-lookup"><span data-stu-id="e6e10-115">If there is more than one face in the image, targetFace is required to specify which face to add.</span></span> <span data-ttu-id="e6e10-116">Nenhum targetFace significa que há apenas um rosto detectado em toda a imagem.</span><span class="sxs-lookup"><span data-stu-id="e6e10-116">No targetFace means there is only one face detected in the entire image.</span></span>'
    optional: true
    syntax:
      content: 'targetFace?: number[]'
      return:
        type:
          - 'number[]'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="e6e10-117">O número de milissegundos que uma solicitação pode levar antes encerrado automaticamente.</span><span class="sxs-lookup"><span data-stu-id="e6e10-117">The number of milliseconds a request can take before automatically being terminated.</span></span>
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.userData'
    name: userData
    fullName: userData
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="e6e10-118">Dados especificados pelo usuário sobre a face para qualquer finalidade.</span><span class="sxs-lookup"><span data-stu-id="e6e10-118">User-specified data about the face for any purpose.</span></span> <span data-ttu-id="e6e10-119">O comprimento máximo é de 1KB.</span><span class="sxs-lookup"><span data-stu-id="e6e10-119">The maximum length is 1KB.</span></span>
    optional: true
    syntax:
      content: 'userData?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.DetectionModel'
    name: DetectionModel
    spec.typeScript:
      - name: DetectionModel
        fullName: DetectionModel
        uid: '@azure/cognitiveservices-face.DetectionModel'