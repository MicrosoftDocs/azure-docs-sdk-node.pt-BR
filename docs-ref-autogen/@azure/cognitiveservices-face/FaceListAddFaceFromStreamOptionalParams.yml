### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams'
    name: FaceListAddFaceFromStreamOptionalParams
    fullName: FaceListAddFaceFromStreamOptionalParams
    children:
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.abortSignal'
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.customHeaders'
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.detectionModel'
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.onDownloadProgress'
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.onUploadProgress'
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.targetFace'
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.timeout'
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.userData'
    langs:
      - typeScript
    type: interface
    summary: Parâmetros opcionais.
    extends:
      name: RequestOptionsBase
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: O sinal que pode ser usado para anular as solicitações.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.customHeaders'
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: '{object} [customHeaders] Cabeçalhos de solicitação personalizado que serão aplicados antes que a solicitação é enviada definido pelo usuário.'
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.detectionModel'
    name: detectionModel
    fullName: detectionModel
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Nome do modelo de detecção. Modelo de detecção é usado para detectar faces na imagem enviada. Um nome de modelo de detecção pode ser fornecido ao executar a detecção facial - detectar ou (grande) FaceList - adicionar Face ou PersonGroup (grande) - adicionar Face. O valor padrão é ''detection_01'', se for necessário outro modelo, especifique-lo explicitamente. Os valores possíveis incluem: ''detection_01'', ''detection_02''. Valor padrão: ''detection_01''.'
    optional: true
    syntax:
      content: 'detectionModel?: DetectionModel'
      return:
        type:
          - '@azure/cognitiveservices-face.DetectionModel'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.onDownloadProgress'
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Retorno de chamada que é acionada mediante o andamento do download.
    optional: true
    syntax:
      content: 'onDownloadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.onUploadProgress'
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Retorno de chamada que é acionada mediante o progresso do carregamento.
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.targetFace'
    name: targetFace
    fullName: targetFace
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Um retângulo facial para especificar a face de destino a ser adicionado a uma pessoa no formato "targetFace = esquerda, superior, largura, altura". Por exemplo "targetFace = 10, 10, 100, 100". Se houver mais de um rosto na imagem, targetFace é necessária para especificar qual face para adicionar. Nenhum targetFace significa que há apenas um rosto detectado em toda a imagem.'
    optional: true
    syntax:
      content: 'targetFace?: number[]'
      return:
        type:
          - 'number[]'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: O número de milissegundos que uma solicitação pode levar antes encerrado automaticamente.
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.userData'
    name: userData
    fullName: userData
    children: []
    langs:
      - typeScript
    type: property
    summary: Dados especificados pelo usuário sobre a face para qualquer finalidade. O comprimento máximo é de 1KB.
    optional: true
    syntax:
      content: 'userData?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.DetectionModel'
    name: DetectionModel
    spec.typeScript:
      - name: DetectionModel
        fullName: DetectionModel
        uid: '@azure/cognitiveservices-face.DetectionModel'