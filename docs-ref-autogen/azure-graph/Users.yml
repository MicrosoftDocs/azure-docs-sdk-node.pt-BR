### YamlMime:UniversalReference
ms.openlocfilehash: e497150288ea401ec741bbc2446cd747883730e8
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 08/12/2018
ms.locfileid: "40048751"
items:
- uid: azure-graph.Users
  name: Users
  fullName: Users
  children:
  - azure-graph.Users.create
  - azure-graph.Users.create_1
  - azure-graph.Users.create_2
  - azure-graph.Users.createWithHttpOperationResponse
  - azure-graph.Users.deleteMethod
  - azure-graph.Users.deleteMethod_2
  - azure-graph.Users.deleteMethod_1
  - azure-graph.Users.deleteMethodWithHttpOperationResponse
  - azure-graph.Users.get
  - azure-graph.Users.get_2
  - azure-graph.Users.get_1
  - azure-graph.Users.getMemberGroups
  - azure-graph.Users.getMemberGroups_1
  - azure-graph.Users.getMemberGroups_2
  - azure-graph.Users.getMemberGroupsWithHttpOperationResponse
  - azure-graph.Users.getWithHttpOperationResponse
  - azure-graph.Users.list_1
  - azure-graph.Users.list_2
  - azure-graph.Users.list
  - azure-graph.Users.listNext
  - azure-graph.Users.listNext_1
  - azure-graph.Users.listNext_2
  - azure-graph.Users.listNextWithHttpOperationResponse
  - azure-graph.Users.listWithHttpOperationResponse
  - azure-graph.Users.update
  - azure-graph.Users.update_1
  - azure-graph.Users.update_2
  - azure-graph.Users.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-graph
- uid: azure-graph.Users.create
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9692d-101">Crie um novo usuário.</span><span class="sxs-lookup"><span data-stu-id="9692d-101">Create a new user.</span></span>
  syntax:
    content: 'function create(parameters: UserCreateParameters, options?: function)'
    parameters:
    - id: parameters
      type:
      - azure-graph.UserCreateParameters
      description: >
        <span data-ttu-id="9692d-102">Parâmetros para criar um usuário.</span><span class="sxs-lookup"><span data-stu-id="9692d-102">Parameters to create a user.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-graph.User>
  package: azure-graph
- uid: azure-graph.Users.create_1
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9692d-103">Crie um novo usuário.</span><span class="sxs-lookup"><span data-stu-id="9692d-103">Create a new user.</span></span>
  syntax:
    content: 'function create(parameters: UserCreateParameters, callback: ServiceCallback<User>)'
    parameters:
    - id: parameters
      type:
      - azure-graph.UserCreateParameters
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-graph.User>
      description: ''
    return:
      type:
      - Promise<azure-graph.User>
  package: azure-graph
- uid: azure-graph.Users.create_2
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9692d-104">Crie um novo usuário.</span><span class="sxs-lookup"><span data-stu-id="9692d-104">Create a new user.</span></span>
  syntax:
    content: 'function create(parameters: UserCreateParameters, options: function, callback: ServiceCallback<User>)'
    parameters:
    - id: parameters
      type:
      - azure-graph.UserCreateParameters
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-graph.User>
      description: ''
    return:
      type:
      - Promise<azure-graph.User>
  package: azure-graph
- uid: azure-graph.Users.createWithHttpOperationResponse
  name: createWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9692d-105">Crie um novo usuário.</span><span class="sxs-lookup"><span data-stu-id="9692d-105">Create a new user.</span></span>
  syntax:
    content: 'function createWithHttpOperationResponse(parameters: UserCreateParameters, options?: function)'
    parameters:
    - id: parameters
      type:
      - azure-graph.UserCreateParameters
      description: >
        <span data-ttu-id="9692d-106">Parâmetros para criar um usuário.</span><span class="sxs-lookup"><span data-stu-id="9692d-106">Parameters to create a user.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-graph.User>>
  package: azure-graph
- uid: azure-graph.Users.deleteMethod
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9692d-107">Exclua um usuário.</span><span class="sxs-lookup"><span data-stu-id="9692d-107">Delete a user.</span></span>
  syntax:
    content: 'function deleteMethod(upnOrObjectId: string, options?: function)'
    parameters:
    - id: upnOrObjectId
      type:
      - string
      description: >
        <span data-ttu-id="9692d-108">A ID de objeto ou nome da entidade do usuário para excluir.</span><span class="sxs-lookup"><span data-stu-id="9692d-108">The object ID or principal name of the user to delete.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-graph
- uid: azure-graph.Users.deleteMethod_2
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9692d-109">Exclua um usuário.</span><span class="sxs-lookup"><span data-stu-id="9692d-109">Delete a user.</span></span>
  syntax:
    content: 'function deleteMethod(upnOrObjectId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: upnOrObjectId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-graph
- uid: azure-graph.Users.deleteMethod_1
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9692d-110">Exclua um usuário.</span><span class="sxs-lookup"><span data-stu-id="9692d-110">Delete a user.</span></span>
  syntax:
    content: 'function deleteMethod(upnOrObjectId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: upnOrObjectId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-graph
- uid: azure-graph.Users.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9692d-111">Exclua um usuário.</span><span class="sxs-lookup"><span data-stu-id="9692d-111">Delete a user.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(upnOrObjectId: string, options?: function)'
    parameters:
    - id: upnOrObjectId
      type:
      - string
      description: >
        <span data-ttu-id="9692d-112">A ID de objeto ou nome da entidade do usuário para excluir.</span><span class="sxs-lookup"><span data-stu-id="9692d-112">The object ID or principal name of the user to delete.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-graph
- uid: azure-graph.Users.get
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9692d-113">Obtém informações de usuário do diretório.</span><span class="sxs-lookup"><span data-stu-id="9692d-113">Gets user information from the directory.</span></span>
  syntax:
    content: 'function get(upnOrObjectId: string, options?: function)'
    parameters:
    - id: upnOrObjectId
      type:
      - string
      description: >
        <span data-ttu-id="9692d-114">A ID de objeto ou o nome principal do usuário para o qual obter informações.</span><span class="sxs-lookup"><span data-stu-id="9692d-114">The object ID or principal name of the user for which to get information.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-graph.User>
  package: azure-graph
- uid: azure-graph.Users.get_2
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9692d-115">Obtém informações de usuário do diretório.</span><span class="sxs-lookup"><span data-stu-id="9692d-115">Gets user information from the directory.</span></span>
  syntax:
    content: 'function get(upnOrObjectId: string, options: function, callback: ServiceCallback<User>)'
    parameters:
    - id: upnOrObjectId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-graph.User>
      description: ''
    return:
      type:
      - Promise<azure-graph.User>
  package: azure-graph
- uid: azure-graph.Users.get_1
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9692d-116">Obtém informações de usuário do diretório.</span><span class="sxs-lookup"><span data-stu-id="9692d-116">Gets user information from the directory.</span></span>
  syntax:
    content: 'function get(upnOrObjectId: string, callback: ServiceCallback<User>)'
    parameters:
    - id: upnOrObjectId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-graph.User>
      description: ''
    return:
      type:
      - Promise<azure-graph.User>
  package: azure-graph
- uid: azure-graph.Users.getMemberGroups
  name: getMemberGroups
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9692d-117">Obtém uma coleção que contém as IDs de objeto dos grupos dos quais o usuário é membro.</span><span class="sxs-lookup"><span data-stu-id="9692d-117">Gets a collection that contains the object IDs of the groups of which the user is a member.</span></span>
  syntax:
    content: 'function getMemberGroups(objectId: string, parameters: UserGetMemberGroupsParameters, options?: function)'
    parameters:
    - id: objectId
      type:
      - string
      description: >
        <span data-ttu-id="9692d-118">A ID de objeto do usuário para o qual obter a associação de grupo.</span><span class="sxs-lookup"><span data-stu-id="9692d-118">The object ID of the user for which to get group membership.</span></span>
    - id: parameters
      type:
      - azure-graph.UserGetMemberGroupsParameters
      description: >
        <span data-ttu-id="9692d-119">Parâmetros de filtragem do usuário.</span><span class="sxs-lookup"><span data-stu-id="9692d-119">User filtering parameters.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-graph.UserGetMemberGroupsResult>
  package: azure-graph
- uid: azure-graph.Users.getMemberGroups_1
  name: getMemberGroups
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9692d-120">Obtém uma coleção que contém as IDs de objeto dos grupos dos quais o usuário é membro.</span><span class="sxs-lookup"><span data-stu-id="9692d-120">Gets a collection that contains the object IDs of the groups of which the user is a member.</span></span>
  syntax:
    content: 'function getMemberGroups(objectId: string, parameters: UserGetMemberGroupsParameters, callback: ServiceCallback<UserGetMemberGroupsResult>)'
    parameters:
    - id: objectId
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-graph.UserGetMemberGroupsParameters
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-graph.UserGetMemberGroupsResult>
      description: ''
    return:
      type:
      - Promise<azure-graph.UserGetMemberGroupsResult>
  package: azure-graph
- uid: azure-graph.Users.getMemberGroups_2
  name: getMemberGroups
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9692d-121">Obtém uma coleção que contém as IDs de objeto dos grupos dos quais o usuário é membro.</span><span class="sxs-lookup"><span data-stu-id="9692d-121">Gets a collection that contains the object IDs of the groups of which the user is a member.</span></span>
  syntax:
    content: 'function getMemberGroups(objectId: string, parameters: UserGetMemberGroupsParameters, options: function, callback: ServiceCallback<UserGetMemberGroupsResult>)'
    parameters:
    - id: objectId
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-graph.UserGetMemberGroupsParameters
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-graph.UserGetMemberGroupsResult>
      description: ''
    return:
      type:
      - Promise<azure-graph.UserGetMemberGroupsResult>
  package: azure-graph
- uid: azure-graph.Users.getMemberGroupsWithHttpOperationResponse
  name: getMemberGroupsWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9692d-122">Obtém uma coleção que contém as IDs de objeto dos grupos dos quais o usuário é membro.</span><span class="sxs-lookup"><span data-stu-id="9692d-122">Gets a collection that contains the object IDs of the groups of which the user is a member.</span></span>
  syntax:
    content: 'function getMemberGroupsWithHttpOperationResponse(objectId: string, parameters: UserGetMemberGroupsParameters, options?: function)'
    parameters:
    - id: objectId
      type:
      - string
      description: >
        <span data-ttu-id="9692d-123">A ID de objeto do usuário para o qual obter a associação de grupo.</span><span class="sxs-lookup"><span data-stu-id="9692d-123">The object ID of the user for which to get group membership.</span></span>
    - id: parameters
      type:
      - azure-graph.UserGetMemberGroupsParameters
      description: >
        <span data-ttu-id="9692d-124">Parâmetros de filtragem do usuário.</span><span class="sxs-lookup"><span data-stu-id="9692d-124">User filtering parameters.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-graph.UserGetMemberGroupsResult>>
  package: azure-graph
- uid: azure-graph.Users.getWithHttpOperationResponse
  name: getWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9692d-125">Obtém informações de usuário do diretório.</span><span class="sxs-lookup"><span data-stu-id="9692d-125">Gets user information from the directory.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(upnOrObjectId: string, options?: function)'
    parameters:
    - id: upnOrObjectId
      type:
      - string
      description: >
        <span data-ttu-id="9692d-126">A ID de objeto ou o nome principal do usuário para o qual obter informações.</span><span class="sxs-lookup"><span data-stu-id="9692d-126">The object ID or principal name of the user for which to get information.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-graph.User>>
  package: azure-graph
- uid: azure-graph.Users.list_1
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9692d-127">Obtém a lista de usuários para o locatário atual.</span><span class="sxs-lookup"><span data-stu-id="9692d-127">Gets list of users for the current tenant.</span></span>
  syntax:
    content: 'function list(callback: ServiceCallback<UserListResult>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-graph.UserListResult>
      description: ''
    return:
      type:
      - Promise<azure-graph.UserListResult>
  package: azure-graph
- uid: azure-graph.Users.list_2
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9692d-128">Obtém a lista de usuários para o locatário atual.</span><span class="sxs-lookup"><span data-stu-id="9692d-128">Gets list of users for the current tenant.</span></span>
  syntax:
    content: 'function list(options: function, callback: ServiceCallback<UserListResult>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-graph.UserListResult>
      description: ''
    return:
      type:
      - Promise<azure-graph.UserListResult>
  package: azure-graph
- uid: azure-graph.Users.list
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9692d-129">Obtém a lista de usuários para o locatário atual.</span><span class="sxs-lookup"><span data-stu-id="9692d-129">Gets list of users for the current tenant.</span></span>
  syntax:
    content: 'function list(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-graph.UserListResult>
  package: azure-graph
- uid: azure-graph.Users.listNext
  name: listNext
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9692d-130">Obtém uma lista de usuários para o locatário atual.</span><span class="sxs-lookup"><span data-stu-id="9692d-130">Gets a list of users for the current tenant.</span></span>
  syntax:
    content: 'function listNext(nextLink: string, options?: function)'
    parameters:
    - id: nextLink
      type:
      - string
      description: >
        <span data-ttu-id="9692d-131">Próximo link para a operação de lista.</span><span class="sxs-lookup"><span data-stu-id="9692d-131">Next link for the list operation.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-graph.UserListResult>
  package: azure-graph
- uid: azure-graph.Users.listNext_1
  name: listNext
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9692d-132">Obtém uma lista de usuários para o locatário atual.</span><span class="sxs-lookup"><span data-stu-id="9692d-132">Gets a list of users for the current tenant.</span></span>
  syntax:
    content: 'function listNext(nextLink: string, callback: ServiceCallback<UserListResult>)'
    parameters:
    - id: nextLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-graph.UserListResult>
      description: ''
    return:
      type:
      - Promise<azure-graph.UserListResult>
  package: azure-graph
- uid: azure-graph.Users.listNext_2
  name: listNext
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9692d-133">Obtém uma lista de usuários para o locatário atual.</span><span class="sxs-lookup"><span data-stu-id="9692d-133">Gets a list of users for the current tenant.</span></span>
  syntax:
    content: 'function listNext(nextLink: string, options: function, callback: ServiceCallback<UserListResult>)'
    parameters:
    - id: nextLink
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-graph.UserListResult>
      description: ''
    return:
      type:
      - Promise<azure-graph.UserListResult>
  package: azure-graph
- uid: azure-graph.Users.listNextWithHttpOperationResponse
  name: listNextWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9692d-134">Obtém uma lista de usuários para o locatário atual.</span><span class="sxs-lookup"><span data-stu-id="9692d-134">Gets a list of users for the current tenant.</span></span>
  syntax:
    content: 'function listNextWithHttpOperationResponse(nextLink: string, options?: function)'
    parameters:
    - id: nextLink
      type:
      - string
      description: >
        <span data-ttu-id="9692d-135">Próximo link para a operação de lista.</span><span class="sxs-lookup"><span data-stu-id="9692d-135">Next link for the list operation.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-graph.UserListResult>>
  package: azure-graph
- uid: azure-graph.Users.listWithHttpOperationResponse
  name: listWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9692d-136">Obtém a lista de usuários para o locatário atual.</span><span class="sxs-lookup"><span data-stu-id="9692d-136">Gets list of users for the current tenant.</span></span>
  syntax:
    content: 'function listWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-graph.UserListResult>>
  package: azure-graph
- uid: azure-graph.Users.update
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9692d-137">Atualiza um usuário.</span><span class="sxs-lookup"><span data-stu-id="9692d-137">Updates a user.</span></span>
  syntax:
    content: 'function update(upnOrObjectId: string, parameters: UserUpdateParameters, options?: function)'
    parameters:
    - id: upnOrObjectId
      type:
      - string
      description: >
        <span data-ttu-id="9692d-138">A ID de objeto ou nome da entidade do usuário para atualizar.</span><span class="sxs-lookup"><span data-stu-id="9692d-138">The object ID or principal name of the user to update.</span></span>
    - id: parameters
      type:
      - azure-graph.UserUpdateParameters
      description: >
        <span data-ttu-id="9692d-139">Parâmetros para atualizar um usuário existente.</span><span class="sxs-lookup"><span data-stu-id="9692d-139">Parameters to update an existing user.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-graph
- uid: azure-graph.Users.update_1
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9692d-140">Atualiza um usuário.</span><span class="sxs-lookup"><span data-stu-id="9692d-140">Updates a user.</span></span>
  syntax:
    content: 'function update(upnOrObjectId: string, parameters: UserUpdateParameters, callback: ServiceCallback<void>)'
    parameters:
    - id: upnOrObjectId
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-graph.UserUpdateParameters
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-graph
- uid: azure-graph.Users.update_2
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9692d-141">Atualiza um usuário.</span><span class="sxs-lookup"><span data-stu-id="9692d-141">Updates a user.</span></span>
  syntax:
    content: 'function update(upnOrObjectId: string, parameters: UserUpdateParameters, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: upnOrObjectId
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-graph.UserUpdateParameters
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-graph
- uid: azure-graph.Users.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9692d-142">Atualiza um usuário.</span><span class="sxs-lookup"><span data-stu-id="9692d-142">Updates a user.</span></span>
  syntax:
    content: 'function updateWithHttpOperationResponse(upnOrObjectId: string, parameters: UserUpdateParameters, options?: function)'
    parameters:
    - id: upnOrObjectId
      type:
      - string
      description: >
        <span data-ttu-id="9692d-143">A ID de objeto ou nome da entidade do usuário para atualizar.</span><span class="sxs-lookup"><span data-stu-id="9692d-143">The object ID or principal name of the user to update.</span></span>
    - id: parameters
      type:
      - azure-graph.UserUpdateParameters
      description: >
        <span data-ttu-id="9692d-144">Parâmetros para atualizar um usuário existente.</span><span class="sxs-lookup"><span data-stu-id="9692d-144">Parameters to update an existing user.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-graph
references:
- uid: azure-graph.UserCreateParameters
  spec.typeScript:
  - name: UserCreateParameters
    fullName: UserCreateParameters
    uid: azure-graph.UserCreateParameters
- uid: Promise<azure-graph.User>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: User
    fullName: User
    uid: azure-graph.User
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-graph.User>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: User
    fullName: User
    uid: azure-graph.User
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-graph.User>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: User
    fullName: User
    uid: azure-graph.User
  - name: '>>'
    fullName: '>>'
- uid: azure-graph.UserGetMemberGroupsParameters
  spec.typeScript:
  - name: UserGetMemberGroupsParameters
    fullName: UserGetMemberGroupsParameters
    uid: azure-graph.UserGetMemberGroupsParameters
- uid: Promise<azure-graph.UserGetMemberGroupsResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: UserGetMemberGroupsResult
    fullName: UserGetMemberGroupsResult
    uid: azure-graph.UserGetMemberGroupsResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-graph.UserGetMemberGroupsResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: UserGetMemberGroupsResult
    fullName: UserGetMemberGroupsResult
    uid: azure-graph.UserGetMemberGroupsResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-graph.UserGetMemberGroupsResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: UserGetMemberGroupsResult
    fullName: UserGetMemberGroupsResult
    uid: azure-graph.UserGetMemberGroupsResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-graph.UserListResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: UserListResult
    fullName: UserListResult
    uid: azure-graph.UserListResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-graph.UserListResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: UserListResult
    fullName: UserListResult
    uid: azure-graph.UserListResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-graph.UserListResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: UserListResult
    fullName: UserListResult
    uid: azure-graph.UserListResult
  - name: '>>'
    fullName: '>>'
- uid: azure-graph.UserUpdateParameters
  spec.typeScript:
  - name: UserUpdateParameters
    fullName: UserUpdateParameters
    uid: azure-graph.UserUpdateParameters
