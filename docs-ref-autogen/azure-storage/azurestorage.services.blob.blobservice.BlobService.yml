### YamlMime:UniversalReference
ms.openlocfilehash: 718ce7c1351d1952b91d1a7a8c653d73af809fea
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52093101"
items:
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService
  name: BlobService
  fullName: BlobService
  children:
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.abortCopyBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.abortCopyBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.acquireLease_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.acquireLease
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.AcquireLeaseRequestOptions
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.AppendBlobRequestOptions
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendBlockFromStream
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendBlockFromStream_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendBlockFromText
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendBlockFromText_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromBrowserFile
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromBrowserFile_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromLocalFile
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromLocalFile_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromStream
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromStream_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromText
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromText_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobDirectoryResult
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.constructor
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobToText
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.Block
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlockListResult
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.breakLease_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.breakLease
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.BreakLeaseRequestOptions
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.changeLease
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.changeLease_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.clearPageRange
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.clearPageRange_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.commitBlocks
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.commitBlocks_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.ConditionalRequestOption
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclOptions
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.CopyBlobRequestOptions
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromBrowserFile
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromBrowserFile_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromLocalFile
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromLocalFile_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromStream
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromStream_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromText
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromText_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlobSnapshot
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlobSnapshot_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromBrowserFile
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromBrowserFile_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromLocalFile
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromLocalFile_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromStream_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromStream
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromText
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromText_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromStream
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromStream_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromText
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromText_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromURL
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromURL_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockRequestOptions
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createContainer_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createContainer
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createContainerIfNotExists_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createContainerIfNotExists
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateContainerOptions
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createOrReplaceAppendBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createOrReplaceAppendBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromBrowserFile
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromBrowserFile_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromLocalFile
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromLocalFile_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromStream
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromStream_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createPagesFromStream
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createPagesFromStream_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createReadStream_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createReadStream
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToBlockBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToBlockBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToExistingAppendBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToExistingAppendBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToExistingPageBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToExistingPageBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToNewAppendBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToNewAppendBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToNewPageBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToNewPageBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.defaultEnableReuseSocket
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteBlobIfExists_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteBlobIfExists
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.DeleteBlobRequestOptions
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteContainer_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteContainer
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteContainerIfExists_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteContainerIfExists
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.doesBlobExist_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.doesBlobExist
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.doesContainerExist_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.doesContainerExist
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.generateBlockIdPrefix
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.generateSharedAccessSignature
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.generateSharedAccessSignatureWithVersion
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getAccountProperties_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getAccountProperties
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobMetadata
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobMetadata_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobProperties_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobProperties
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToLocalFile_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToLocalFile
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToStream
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToStream_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToText_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToText
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlockId
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerAcl_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerAcl
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerMetadata_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerMetadata
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerProperties_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerProperties
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getPageRangesDiff_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getPageRangesDiff
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getServiceProperties_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getServiceProperties
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getServiceStats_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getServiceStats
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getUrl
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobDirectoriesResult
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlobDirectoriesSegmented
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlobDirectoriesSegmented_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlobDirectoriesSegmentedWithPrefix
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlobDirectoriesSegmentedWithPrefix_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobPrefixesSegmentedRequestOptions
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlobsSegmented
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlobsSegmented_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsSegmentedRequestOptions
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlobsSegmentedWithPrefix
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlobsSegmentedWithPrefix_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlocks
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlocks_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerOptions
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listContainersSegmented_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listContainersSegmented
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listContainersSegmentedWithPrefix_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listContainersSegmentedWithPrefix
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listPageRanges_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listPageRanges
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.ListPageRangesRequestOptions
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.parallelOperationThreadCount
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.PutBlockListRequest
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.releaseLease
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.releaseLease_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.renewLease
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.renewLease_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.resizePageBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.resizePageBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobMetadata_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobMetadata
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobProperties
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobProperties_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.SetBlobPropertiesRequestOptions
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobTier_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobTier
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setContainerAcl
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setContainerAcl_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setContainerMetadata_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setContainerMetadata
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setPageBlobSequenceNumber
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setPageBlobSequenceNumber_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setServiceProperties_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setServiceProperties
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.singleBlobPutThresholdInBytes
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.SpeedSummary
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.startCopyBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.startCopyBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.undeleteBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.undeleteBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.withFilter
  langs:
  - typeScript
  type: class
  summary: ''
  extends:
    name: azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.abortCopyBlob
  name: abortCopyBlob(string, string, string, BlobRequestOptions, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: Anule uma operação de cópia de blob.
  syntax:
    content: 'function abortCopyBlob(container: string, blob: string, copyId: string, options: BlobRequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner de destino.
    - id: blob
      type:
      - string
      description: O nome do blob de destino.
    - id: copyId
      type:
      - string
      description: O identificador da operação de cópia.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` conterá informações.
                                                                              `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.abortCopyBlob_1
  name: abortCopyBlob(string, string, string, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: Anule uma operação de cópia de blob.
  syntax:
    content: 'function abortCopyBlob(container: string, blob: string, copyId: string, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: copyId
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.acquireLease_1
  name: acquireLease(string, string, AcquireLeaseRequestOptions, ErrorOrResult<LeaseResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Adquire uma nova concessão. Se o contêiner e blob forem especificados, adquire uma concessão de blob. Caso contrário, se apenas o contêiner for especificado e o blob é nulo, adquire uma concessão de contêiner.
  syntax:
    content: 'function acquireLease(container: string, blob: string, options: AcquireLeaseRequestOptions, callback: ErrorOrResult<LeaseResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.AcquireLeaseRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de concessão.
                                                                                `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.acquireLease
  name: acquireLease(string, string, ErrorOrResult<LeaseResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Adquire uma nova concessão. Se o contêiner e blob forem especificados, adquire uma concessão de blob. Caso contrário, se apenas o contêiner for especificado e o blob é nulo, adquire uma concessão de contêiner.
  syntax:
    content: 'function acquireLease(container: string, blob: string, callback: ErrorOrResult<LeaseResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de concessão.
                                                                                `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendBlockFromStream
  name: appendBlockFromStream(string, string, stream.Readable, number, AppendBlobRequestOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Cria um novo bloco de um fluxo de leitura a ser anexado a um blob de acréscimo.

    Essa API deve ser usada estritamente em um cenário de único gravador porque a API usa internamente o cabeçalho condicional de deslocamento de acréscimo para evitar blocos duplicados.

    Se você tem a garantia para ter um cenário de único gravador, por favor, examinar options.absorbConditionalErrorsOnRetry e ver se é aceitável para você definir esse sinalizador como true.
  syntax:
    content: 'function appendBlockFromStream(container: string, blob: string, readStream: stream.Readable, streamLength: number, options: AppendBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: readStream
      type:
      - stream.Readable
      description: O fluxo legível do Node. js.
    - id: streamLength
      type:
      - number
      description: O comprimento do fluxo.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.AppendBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá informações sobre o blob.
                                                                              `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendBlockFromStream_1
  name: appendBlockFromStream(string, string, stream.Readable, number, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Cria um novo bloco de um fluxo de leitura a ser anexado a um blob de acréscimo.

    Essa API deve ser usada estritamente em um cenário de único gravador porque a API usa internamente o cabeçalho condicional de deslocamento de acréscimo para evitar blocos duplicados.

    Se você tem a garantia para ter um cenário de único gravador, por favor, examinar options.absorbConditionalErrorsOnRetry e ver se é aceitável para você definir esse sinalizador como true.
  syntax:
    content: 'function appendBlockFromStream(container: string, blob: string, readStream: stream.Readable, streamLength: number, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: readStream
      type:
      - stream.Readable
      description: ''
    - id: streamLength
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendBlockFromText
  name: appendBlockFromText(string, string, string | Buffer, AppendBlobRequestOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Cria um novo bloco de um texto a ser anexado a um blob de acréscimo.

    Essa API deve ser usada estritamente em um cenário de único gravador porque a API usa internamente o cabeçalho condicional de deslocamento de acréscimo para evitar blocos duplicados.

    Se você tem a garantia para ter um cenário de único gravador, por favor, examinar options.absorbConditionalErrorsOnRetry e ver se é aceitável para você definir esse sinalizador como true.
  syntax:
    content: 'function appendBlockFromText(container: string, blob: string, content: string | Buffer, options: AppendBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: content
      type:
      - string | Buffer
      description: O bloco de texto, como uma cadeia de caracteres ou em um Buffer.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.AppendBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá informações sobre o blob.
                                                                              `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendBlockFromText_1
  name: appendBlockFromText(string, string, string | Buffer, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Cria um novo bloco de um texto a ser anexado a um blob de acréscimo.

    Essa API deve ser usada estritamente em um cenário de único gravador porque a API usa internamente o cabeçalho condicional de deslocamento de acréscimo para evitar blocos duplicados.

    Se você tem a garantia para ter um cenário de único gravador, por favor, examinar options.absorbConditionalErrorsOnRetry e ver se é aceitável para você definir esse sinalizador como true.
  syntax:
    content: 'function appendBlockFromText(container: string, blob: string, content: string | Buffer, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: content
      type:
      - string | Buffer
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromBrowserFile
  name: appendFromBrowserFile(string, string, Object, CreateBlobRequestOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Acrescenta a um blob de acréscimo de um objeto de arquivo HTML. Pressupõe que o blob já existe no serviço.

    Essa API deve ser usada estritamente em um cenário de único gravador porque a API usa internamente o cabeçalho condicional de deslocamento de acréscimo para evitar blocos duplicados.

    Se você tem a garantia para ter um cenário de único gravador, por favor, examinar options.absorbConditionalErrorsOnRetry e ver se é aceitável para você definir esse sinalizador como true.

    (Disponível somente na biblioteca de cliente JavaScript para navegadores)
  syntax:
    content: 'function appendFromBrowserFile(container: string, blob: string, browserFile: Object, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: browserFile
      type:
      - Object
      description: O objeto de arquivo a ser carregado criado pela API do arquivo HTML.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` conterá informações se ocorrer um erro; Caso contrário, `[result](xref:BlobResult)` conterá as informações de blob.
                                                                                  `response` contém informações relacionadas a essa operação.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromBrowserFile_1
  name: appendFromBrowserFile(string, string, Object, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Acrescenta a um blob de acréscimo de um objeto de arquivo HTML. Pressupõe que o blob já existe no serviço.

    Essa API deve ser usada estritamente em um cenário de único gravador porque a API usa internamente o cabeçalho condicional de deslocamento de acréscimo para evitar blocos duplicados.

    Se você tem a garantia para ter um cenário de único gravador, por favor, examinar options.absorbConditionalErrorsOnRetry e ver se é aceitável para você definir esse sinalizador como true.

    (Disponível somente na biblioteca de cliente JavaScript para navegadores)
  syntax:
    content: 'function appendFromBrowserFile(container: string, blob: string, browserFile: Object, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: browserFile
      type:
      - Object
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromLocalFile
  name: appendFromLocalFile(string, string, string, CreateBlobRequestOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Acrescenta a um blob de acréscimo de um arquivo local. Pressupõe que o blob já existe no serviço.

    Essa API deve ser usada estritamente em um cenário de único gravador porque a API usa internamente o cabeçalho condicional de deslocamento de acréscimo para evitar blocos duplicados.

    Se você tem a garantia para ter um cenário de único gravador, por favor, examinar options.absorbConditionalErrorsOnRetry e ver se é aceitável para você definir esse sinalizador como true.
  syntax:
    content: 'function appendFromLocalFile(container: string, blob: string, localFileName: string, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: localFileName
      type:
      - string
      description: O caminho local para o arquivo a ser carregado.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: A função de retorno de chamada.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromLocalFile_1
  name: appendFromLocalFile(string, string, string, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Acrescenta a um blob de acréscimo de um arquivo local. Pressupõe que o blob já existe no serviço.

    Essa API deve ser usada estritamente em um cenário de único gravador porque a API usa internamente o cabeçalho condicional de deslocamento de acréscimo para evitar blocos duplicados.

    Se você tem a garantia para ter um cenário de único gravador, por favor, examinar options.absorbConditionalErrorsOnRetry e ver se é aceitável para você definir esse sinalizador como true.
  syntax:
    content: 'function appendFromLocalFile(container: string, blob: string, localFileName: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: localFileName
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromStream
  name: appendFromStream(string, string, stream.Readable, number, CreateBlobRequestOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Acrescenta a um blob de acréscimo de um fluxo. Pressupõe que o blob já existe no serviço.

    Essa API deve ser usada estritamente em um cenário de único gravador porque a API usa internamente o cabeçalho condicional de deslocamento de acréscimo para evitar blocos duplicados.

    Se você tem a garantia para ter um cenário de único gravador, por favor, examinar options.absorbConditionalErrorsOnRetry e ver se é aceitável para você definir esse sinalizador como true.
  syntax:
    content: 'function appendFromStream(container: string, blob: string, stream: stream.Readable, streamLength: number, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: stream
      type:
      - stream.Readable
      description: ''
    - id: streamLength
      type:
      - number
      description: O comprimento do fluxo para carregar.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: A função de retorno de chamada.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromStream_1
  name: appendFromStream(string, string, stream.Readable, number, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Acrescenta a um blob de acréscimo de um fluxo. Pressupõe que o blob já existe no serviço.

    Essa API deve ser usada estritamente em um cenário de único gravador porque a API usa internamente o cabeçalho condicional de deslocamento de acréscimo para evitar blocos duplicados.

    Se você tem a garantia para ter um cenário de único gravador, por favor, examinar options.absorbConditionalErrorsOnRetry e ver se é aceitável para você definir esse sinalizador como true.
  syntax:
    content: 'function appendFromStream(container: string, blob: string, stream: stream.Readable, streamLength: number, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: stream
      type:
      - stream.Readable
      description: ''
    - id: streamLength
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromText
  name: appendFromText(string, string, string, CreateBlobRequestOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Acrescenta a um blob de acréscimo de uma cadeia de caracteres de texto. Pressupõe que o blob já existe no serviço.

    Essa API deve ser usada estritamente em um cenário de único gravador porque a API usa internamente o cabeçalho condicional de deslocamento de acréscimo para evitar blocos duplicados.

    Se você tem a garantia para ter um cenário de único gravador, por favor, examinar options.absorbConditionalErrorsOnRetry e ver se é aceitável para você definir esse sinalizador como true.
  syntax:
    content: 'function appendFromText(container: string, blob: string, text: string, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: text
      type:
      - string
      description: O texto de blob, como uma cadeia de caracteres ou em um Buffer.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá informações sobre o blob.
                                                                                  `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromText_1
  name: appendFromText(string, string, string, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Acrescenta a um blob de acréscimo de uma cadeia de caracteres de texto. Pressupõe que o blob já existe no serviço.

    Essa API deve ser usada estritamente em um cenário de único gravador porque a API usa internamente o cabeçalho condicional de deslocamento de acréscimo para evitar blocos duplicados.

    Se você tem a garantia para ter um cenário de único gravador, por favor, examinar options.absorbConditionalErrorsOnRetry e ver se é aceitável para você definir esse sinalizador como true.
  syntax:
    content: 'function appendFromText(container: string, blob: string, text: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: text
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.constructor
  name: BlobService(string, string, string | StorageHost, string, string)
  children: []
  type: constructor
  langs:
  - typeScript
  summary: >-
    Cria um novo objeto BlobService.

    Se nenhuma cadeia de caracteres de conexão ou storageaccount e storageaccesskey forem fornecidas, as variáveis de ambiente AZURE_STORAGE_CONNECTION_STRING ou AZURE_STORAGE_ACCOUNT e AZURE_STORAGE_ACCESS_KEY serão usadas.
  syntax:
    content: 'new BlobService(storageAccountOrConnectionString: string, storageAccessKey?: string, host?: string | StorageHost, sasToken?: string, endpointSuffix?: string)'
    parameters:
    - id: storageAccountOrConnectionString
      type:
      - string
      description: ''
    - id: storageAccessKey
      type:
      - string
      description: ''
      optional: true
    - id: host
      type:
      - string | azure-storage.azurestorage.StorageHost
      description: ''
      optional: true
    - id: sasToken
      type:
      - string
      description: ''
      optional: true
    - id: endpointSuffix
      type:
      - string
      description: ''
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.breakLease_1
  name: breakLease(string, string, BreakLeaseRequestOptions, ErrorOrResult<LeaseResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Quebra a concessão, mas garante que outro cliente não é possível adquirir uma nova concessão até que o período da concessão atual tiver expirado. Se o contêiner e blob forem especificados, quebra a concessão de blob.

    Caso contrário, se apenas o contêiner for especificado e o blob é nulo, quebra a concessão de contêiner.
  syntax:
    content: 'function breakLease(container: string, blob: string, options: BreakLeaseRequestOptions, callback: ErrorOrResult<LeaseResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BreakLeaseRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de concessão.
                                                                                `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.breakLease
  name: breakLease(string, string, ErrorOrResult<LeaseResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Quebra a concessão, mas garante que outro cliente não é possível adquirir uma nova concessão até que o período da concessão atual tiver expirado. Se o contêiner e blob forem especificados, quebra a concessão de blob.

    Caso contrário, se apenas o contêiner for especificado e o blob é nulo, quebra a concessão de contêiner.
  syntax:
    content: 'function breakLease(container: string, blob: string, callback: ErrorOrResult<LeaseResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de concessão.
                                                                                `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.changeLease
  name: changeLease(string, string, string, string, ErrorOrResult<LeaseResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Altera a ID de concessão de uma concessão ativa. Se o contêiner e blob for especificados, altera a concessão de blob. Caso contrário, se apenas o contêiner for especificado e o blob é nulo, altera a concessão do contêiner.
  syntax:
    content: 'function changeLease(container: string, blob: string, leaseId: string, proposedLeaseId: string, callback: ErrorOrResult<LeaseResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: leaseId
      type:
      - string
      description: O identificador de concessão atual.
    - id: proposedLeaseId
      type:
      - string
      description: O identificador de concessão proposta. Deve ser um GUID.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de concessão.
                                                                                `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.changeLease_1
  name: changeLease(string, string, string, string, LeaseRequestOptions, ErrorOrResult<LeaseResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Altera a ID de concessão de uma concessão ativa. Se o contêiner e blob for especificados, altera a concessão de blob. Caso contrário, se apenas o contêiner for especificado e o blob é nulo, altera a concessão do contêiner.
  syntax:
    content: 'function changeLease(container: string, blob: string, leaseId: string, proposedLeaseId: string, options: LeaseRequestOptions, callback: ErrorOrResult<LeaseResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: leaseId
      type:
      - string
      description: O identificador de concessão atual.
    - id: proposedLeaseId
      type:
      - string
      description: O identificador de concessão proposta. Deve ser um GUID.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de concessão.
                                                                                `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.clearPageRange
  name: clearPageRange(string, string, number, number, BlobRequestOptions, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: Limpa um intervalo de páginas.
  syntax:
    content: 'function clearPageRange(container: string, blob: string, rangeStart: number, rangeEnd: number, options: BlobRequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: rangeStart
      type:
      - number
      description: O início do intervalo.
    - id: rangeEnd
      type:
      - number
      description: O fim do intervalo.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `response` conterá informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.clearPageRange_1
  name: clearPageRange(string, string, number, number, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: Limpa um intervalo de páginas.
  syntax:
    content: 'function clearPageRange(container: string, blob: string, rangeStart: number, rangeEnd: number, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: rangeStart
      type:
      - number
      description: ''
    - id: rangeEnd
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.commitBlocks
  name: commitBlocks(string, string, PutBlockListRequest, CreateBlobRequestOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Grava um blob especificando a lista de IDs que compõem o blob de bloco.

    Para ser gravado como parte de um blob, um bloco deve ter foi gravado com êxito para o servidor em uma operação de createBlock anterior.

    Observação: Se nenhuma lista válida é especificada no parâmetro de lista de bloqueios, blob seria atualizado com conteúdo vazio, ou seja, existentes blocos no blob serão removidos, esse comportamento é mantido para consideração de compatibilidade com versões anteriores.
  syntax:
    content: 'function commitBlocks(container: string, blob: string, blockList: PutBlockListRequest, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: blockList
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.PutBlockListRequest
      description: >-
        O wrapper para a lista de ID de bloco contém IDs que compõem o blob de bloco.

        Três tipos de lista são fornecidos, escolha um de acordo com o requisito.

        Para obter mais dados de conhecimento em segundo plano, consulte https://docs.microsoft.com/en-us/rest/api/storageservices/put-block-list
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de lista de bloqueios.
                                                                                  `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.commitBlocks_1
  name: commitBlocks(string, string, PutBlockListRequest, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Grava um blob especificando a lista de IDs que compõem o blob de bloco.

    Para ser gravado como parte de um blob, um bloco deve ter foi gravado com êxito para o servidor em uma operação de createBlock anterior.

    Observação: Se nenhuma lista válida é especificada no parâmetro de lista de bloqueios, blob seria atualizado com conteúdo vazio, ou seja, existentes blocos no blob serão removidos, esse comportamento é mantido para consideração de compatibilidade com versões anteriores.
  syntax:
    content: 'function commitBlocks(container: string, blob: string, blockList: PutBlockListRequest, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: blockList
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.PutBlockListRequest
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromBrowserFile
  name: createAppendBlobFromBrowserFile(string, string, Object, CreateBlobRequestOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Cria um novo blob de acréscimo de um objeto de arquivo HTML. Se o blob já existir no serviço, ele será substituído.

    Para evitar a substituição e, em vez disso, lançar um erro se o blob existir, passe um parâmetro accessConditions no objeto de opções.

    Essa API deve ser usada estritamente em um cenário de único gravador porque a API usa internamente o cabeçalho condicional de deslocamento de acréscimo para evitar blocos duplicados.

    Se você tem a garantia para ter um cenário de único gravador, por favor, examinar options.absorbConditionalErrorsOnRetry e ver se é aceitável para você definir esse sinalizador como true.

    Se você quiser acrescentar dados a um blob já existente, examine appendFromBrowserFile.

    (Disponível somente na biblioteca de cliente JavaScript para navegadores)
  syntax:
    content: 'function createAppendBlobFromBrowserFile(container: string, blob: string, browserFile: Object, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: browserFile
      type:
      - Object
      description: O objeto de arquivo a ser carregado criado pela API do arquivo HTML.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` conterá informações se ocorrer um erro; Caso contrário, `[result](xref:BlobResult)` conterá as informações de blob.
                                                                                  `response` contém informações relacionadas a essa operação.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromBrowserFile_1
  name: createAppendBlobFromBrowserFile(string, string, Object, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Cria um novo blob de acréscimo de um objeto de arquivo HTML. Se o blob já existir no serviço, ele será substituído.

    Para evitar a substituição e, em vez disso, lançar um erro se o blob existir, passe um parâmetro accessConditions no objeto de opções.

    Essa API deve ser usada estritamente em um cenário de único gravador porque a API usa internamente o cabeçalho condicional de deslocamento de acréscimo para evitar blocos duplicados.

    Se você tem a garantia para ter um cenário de único gravador, por favor, examinar options.absorbConditionalErrorsOnRetry e ver se é aceitável para você definir esse sinalizador como true.

    Se você quiser acrescentar dados a um blob já existente, examine appendFromBrowserFile.

    (Disponível somente na biblioteca de cliente JavaScript para navegadores)
  syntax:
    content: 'function createAppendBlobFromBrowserFile(container: string, blob: string, browserFile: Object, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: browserFile
      type:
      - Object
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromLocalFile
  name: createAppendBlobFromLocalFile(string, string, string, CreateBlobRequestOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Cria um novo blob de acréscimo de um arquivo local. Se o blob já existir no serviço, ele será substituído.

    Para evitar a substituição e, em vez disso, lançar um erro se o blob existir, passe um parâmetro accessConditions no objeto de opções.

    Essa API deve ser usada estritamente em um cenário de único gravador porque a API usa internamente o cabeçalho condicional de deslocamento de acréscimo para evitar blocos duplicados.

    Se você tem a garantia para ter um cenário de único gravador, por favor, examinar options.absorbConditionalErrorsOnRetry e ver se é aceitável para você definir esse sinalizador como true.

    Se você quiser acrescentar dados a um blob já existente, examine appendFromLocalFile.
  syntax:
    content: 'function createAppendBlobFromLocalFile(container: string, blob: string, localFileName: string, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: localFileName
      type:
      - string
      description: O caminho local para o arquivo a ser carregado.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: A função de retorno de chamada.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromLocalFile_1
  name: createAppendBlobFromLocalFile(string, string, string, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Cria um novo blob de acréscimo de um arquivo local. Se o blob já existir no serviço, ele será substituído.

    Para evitar a substituição e, em vez disso, lançar um erro se o blob existir, passe um parâmetro accessConditions no objeto de opções.

    Essa API deve ser usada estritamente em um cenário de único gravador porque a API usa internamente o cabeçalho condicional de deslocamento de acréscimo para evitar blocos duplicados.

    Se você tem a garantia para ter um cenário de único gravador, por favor, examinar options.absorbConditionalErrorsOnRetry e ver se é aceitável para você definir esse sinalizador como true.

    Se você quiser acrescentar dados a um blob já existente, examine appendFromLocalFile.
  syntax:
    content: 'function createAppendBlobFromLocalFile(container: string, blob: string, localFileName: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: localFileName
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromStream
  name: createAppendBlobFromStream(string, string, stream.Readable, number, CreateBlobRequestOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Carrega um blob de acréscimo de um fluxo. Se o blob já existir no serviço, ele será substituído.

    Para evitar a substituição e, em vez disso, lançar um erro se o blob existir, passe um parâmetro accessConditions no objeto de opções.

    Essa API deve ser usada estritamente em um cenário de único gravador porque a API usa internamente o cabeçalho condicional de deslocamento de acréscimo para evitar blocos duplicados.

    Se você tem a garantia para ter um cenário de único gravador, por favor, examinar options.absorbConditionalErrorsOnRetry e ver se é aceitável para você definir esse sinalizador como true.

    Se você quiser acrescentar dados a um blob já existente, examine appendFromStream.
  syntax:
    content: 'function createAppendBlobFromStream(container: string, blob: string, stream: stream.Readable, streamLength: number, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: stream
      type:
      - stream.Readable
      description: ''
    - id: streamLength
      type:
      - number
      description: O comprimento do fluxo para carregar.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: A função de retorno de chamada.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromStream_1
  name: createAppendBlobFromStream(string, string, stream.Readable, number, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Carrega um blob de acréscimo de um fluxo. Se o blob já existir no serviço, ele será substituído.

    Para evitar a substituição e, em vez disso, lançar um erro se o blob existir, passe um parâmetro accessConditions no objeto de opções.

    Essa API deve ser usada estritamente em um cenário de único gravador porque a API usa internamente o cabeçalho condicional de deslocamento de acréscimo para evitar blocos duplicados.

    Se você tem a garantia para ter um cenário de único gravador, por favor, examinar options.absorbConditionalErrorsOnRetry e ver se é aceitável para você definir esse sinalizador como true.

    Se você quiser acrescentar dados a um blob já existente, examine appendFromStream.
  syntax:
    content: 'function createAppendBlobFromStream(container: string, blob: string, stream: stream.Readable, streamLength: number, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: stream
      type:
      - stream.Readable
      description: ''
    - id: streamLength
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromText
  name: createAppendBlobFromText(string, string, string | Buffer, CreateBlobRequestOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Carrega um blob de acréscimo de uma cadeia de caracteres de texto. Se o blob já existir no serviço, ele será substituído.

    Para evitar a substituição e, em vez disso, lançar um erro se o blob existir, passe um parâmetro accessConditions no objeto de opções.

    Essa API deve ser usada estritamente em um cenário de único gravador porque a API usa internamente o cabeçalho condicional de deslocamento de acréscimo para evitar blocos duplicados.

    Se você tem a garantia para ter um cenário de único gravador, por favor, examinar options.absorbConditionalErrorsOnRetry e ver se é aceitável para você definir esse sinalizador como true.

    Se você quiser acrescentar dados a um blob já existente, examine appendFromText.
  syntax:
    content: 'function createAppendBlobFromText(container: string, blob: string, text: string | Buffer, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: text
      type:
      - string | Buffer
      description: O texto de blob, como uma cadeia de caracteres ou em um Buffer.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá informações sobre o blob.
                                                                                  `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromText_1
  name: createAppendBlobFromText(string, string, string | Buffer, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Carrega um blob de acréscimo de uma cadeia de caracteres de texto. Se o blob já existir no serviço, ele será substituído.

    Para evitar a substituição e, em vez disso, lançar um erro se o blob existir, passe um parâmetro accessConditions no objeto de opções.

    Essa API deve ser usada estritamente em um cenário de único gravador porque a API usa internamente o cabeçalho condicional de deslocamento de acréscimo para evitar blocos duplicados.

    Se você tem a garantia para ter um cenário de único gravador, por favor, examinar options.absorbConditionalErrorsOnRetry e ver se é aceitável para você definir esse sinalizador como true.

    Se você quiser acrescentar dados a um blob já existente, examine appendFromText.
  syntax:
    content: 'function createAppendBlobFromText(container: string, blob: string, text: string | Buffer, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: text
      type:
      - string | Buffer
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlobSnapshot
  name: createBlobSnapshot(string, string, BlobRequestOptions, ErrorOrResult<string>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Cria um instantâneo somente leitura de um blob.
  syntax:
    content: 'function createBlobSnapshot(container: string, blob: string, options: BlobRequestOptions, callback: ErrorOrResult<string>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<string>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá a ID do instantâneo.
                                                                          `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlobSnapshot_1
  name: createBlobSnapshot(string, string, ErrorOrResult<string>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Cria um instantâneo somente leitura de um blob.
  syntax:
    content: 'function createBlobSnapshot(container: string, blob: string, callback: ErrorOrResult<string>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<string>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromBrowserFile
  name: createBlockBlobFromBrowserFile(string, string, Object, CreateBlockBlobRequestOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Cria um novo blob de bloco. Se o blob já existir no serviço, ele será substituído.

    Para evitar a substituição e, em vez disso, lançar um erro se o blob existir, passe um parâmetro accessConditions no objeto de opções.

    (Disponível somente na biblioteca de cliente JavaScript para navegadores)
  syntax:
    content: 'function createBlockBlobFromBrowserFile(container: string, blob: string, browserFile: Object, options: CreateBlockBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: browserFile
      type:
      - Object
      description: O objeto de arquivo a ser carregado criado pela API do arquivo HTML.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` conterá informações se ocorrer um erro; Caso contrário, `[result](xref:BlobResult)` conterá as informações de blob.
                                                                                  `response` contém informações relacionadas a essa operação.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromBrowserFile_1
  name: createBlockBlobFromBrowserFile(string, string, Object, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Cria um novo blob de bloco. Se o blob já existir no serviço, ele será substituído.

    Para evitar a substituição e, em vez disso, lançar um erro se o blob existir, passe um parâmetro accessConditions no objeto de opções.

    (Disponível somente na biblioteca de cliente JavaScript para navegadores)
  syntax:
    content: 'function createBlockBlobFromBrowserFile(container: string, blob: string, browserFile: Object, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: browserFile
      type:
      - Object
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromLocalFile
  name: createBlockBlobFromLocalFile(string, string, string, CreateBlockBlobRequestOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Cria um novo blob de blocos ou atualiza o conteúdo de um blob de bloco existente.

    Atualizar um blob de blocos existente substitui todos os metadados existentes no blob.

    Não há suporte para atualizações parciais com Put Blob; O conteúdo do blob existente será substituído com o conteúdo do novo blob.

    Para executar uma atualização parcial do conteúdo de um blob de blocos, use a operação Put Block List.

    Chamar Put Blob para criar um blob de páginas somente inicializa o blob. Para adicionar conteúdo a um blob de páginas, chame a operação Put Page.
  syntax:
    content: 'function createBlockBlobFromLocalFile(container: string, blob: string, localFileName: string, options: CreateBlockBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: localFileName
      type:
      - string
      description: O caminho local para o arquivo a ser carregado.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` conterá informações se ocorrer um erro; Caso contrário, `[result](xref:BlobResult)` conterá as informações de blob.
                                                                                    `response` contém informações relacionadas a essa operação.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromLocalFile_1
  name: createBlockBlobFromLocalFile(string, string, string, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Cria um novo blob de blocos ou atualiza o conteúdo de um blob de bloco existente.

    Atualizar um blob de blocos existente substitui todos os metadados existentes no blob.

    Não há suporte para atualizações parciais com Put Blob; O conteúdo do blob existente será substituído com o conteúdo do novo blob.

    Para executar uma atualização parcial do conteúdo de um blob de blocos, use a operação Put Block List.

    Chamar Put Blob para criar um blob de páginas somente inicializa o blob. Para adicionar conteúdo a um blob de páginas, chame a operação Put Page.
  syntax:
    content: 'function createBlockBlobFromLocalFile(container: string, blob: string, localFileName: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: localFileName
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromStream_1
  name: createBlockBlobFromStream(string, string, stream.Readable, number, CreateBlockBlobRequestOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Carrega um blob de bloco de um fluxo.
  syntax:
    content: 'function createBlockBlobFromStream(container: string, blob: string, stream: stream.Readable, streamLength: number, options: CreateBlockBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: stream
      type:
      - stream.Readable
      description: ''
    - id: streamLength
      type:
      - number
      description: O comprimento do fluxo para carregar.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: A função de retorno de chamada.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromStream
  name: createBlockBlobFromStream(string, string, stream.Readable, number, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Carrega um blob de bloco de um fluxo.
  syntax:
    content: 'function createBlockBlobFromStream(container: string, blob: string, stream: stream.Readable, streamLength: number, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: stream
      type:
      - stream.Readable
      description: ''
    - id: streamLength
      type:
      - number
      description: O comprimento do fluxo para carregar.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: A função de retorno de chamada.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromText
  name: createBlockBlobFromText(string, string, string | Buffer, CreateBlobRequestOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Carrega um blob de bloco de uma cadeia de caracteres de texto.
  syntax:
    content: 'function createBlockBlobFromText(container: string, blob: string, text: string | Buffer, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: text
      type:
      - string | Buffer
      description: O texto de blob, como uma cadeia de caracteres ou em um Buffer.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá informações sobre o blob.
                                                                                    `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromText_1
  name: createBlockBlobFromText(string, string, string | Buffer, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Carrega um blob de bloco de uma cadeia de caracteres de texto.
  syntax:
    content: 'function createBlockBlobFromText(container: string, blob: string, text: string | Buffer, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: text
      type:
      - string | Buffer
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromStream
  name: createBlockFromStream(string, string, string, stream.Readable, number, BlobRequestOptions, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: Cria um novo bloco a ser confirmado como parte de um blob.
  syntax:
    content: 'function createBlockFromStream(blockId: string, container: string, blob: string, readStream: stream.Readable, streamLength: number, options: BlobRequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: blockId
      type:
      - string
      description: O identificador do bloco.
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: readStream
      type:
      - stream.Readable
      description: O fluxo legível do Node. js.
    - id: streamLength
      type:
      - number
      description: O comprimento do fluxo.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `response` conterá informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromStream_1
  name: createBlockFromStream(string, string, string, stream.Readable, number, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: Cria um novo bloco a ser confirmado como parte de um blob.
  syntax:
    content: 'function createBlockFromStream(blockId: string, container: string, blob: string, readStream: stream.Readable, streamLength: number, callback: ErrorOrResponse)'
    parameters:
    - id: blockId
      type:
      - string
      description: ''
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: readStream
      type:
      - stream.Readable
      description: ''
    - id: streamLength
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromText
  name: createBlockFromText(string, string, string, string | Buffer, BlobRequestOptions, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: Cria um novo bloco a ser confirmado como parte de um blob.
  syntax:
    content: 'function createBlockFromText(blockId: string, container: string, blob: string, content: string | Buffer, options: BlobRequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: blockId
      type:
      - string
      description: O identificador do bloco.
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: content
      type:
      - string | Buffer
      description: O conteúdo do bloco.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `response` conterá informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromText_1
  name: createBlockFromText(string, string, string, string | Buffer, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: Cria um novo bloco a ser confirmado como parte de um blob.
  syntax:
    content: 'function createBlockFromText(blockId: string, container: string, blob: string, content: string | Buffer, callback: ErrorOrResponse)'
    parameters:
    - id: blockId
      type:
      - string
      description: ''
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: content
      type:
      - string | Buffer
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromURL
  name: createBlockFromURL(string, string, string, string, number, number, CreateBlockRequestOptions, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: Cria um novo bloco a ser confirmado como parte de um blob de uma URL de um arquivo ou de BLOBs do Azure.
  syntax:
    content: 'function createBlockFromURL(blockId: string, container: string, blob: string, sourceURL: string, sourceRangeStart: number, sourceRangeEnd: number, options: CreateBlockRequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: blockId
      type:
      - string
      description: O identificador do bloco.
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: sourceURL
      type:
      - string
      description: >-
        A URL da fonte de dados.

        Ele pode apontar para qualquer Blob do Azure ou o arquivo, que é pública ou tem uma assinatura de acesso compartilhado anexado.
    - id: sourceRangeStart
      type:
      - number
      description: O início do intervalo de bytes(inclusive) que deve ser obtida da fonte de cópia.
    - id: sourceRangeEnd
      type:
      - number
      description: O fim do intervalo de bytes(inclusive) que deve ser obtida da fonte de cópia.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `response` conterá informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromURL_1
  name: createBlockFromURL(string, string, string, string, number, number, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: Cria um novo bloco a ser confirmado como parte de um blob de uma URL de um arquivo ou de BLOBs do Azure.
  syntax:
    content: 'function createBlockFromURL(blockId: string, container: string, blob: string, sourceURL: string, sourceRangeStart: number, sourceRangeEnd: number, callback: ErrorOrResponse)'
    parameters:
    - id: blockId
      type:
      - string
      description: ''
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: sourceURL
      type:
      - string
      description: ''
    - id: sourceRangeStart
      type:
      - number
      description: ''
    - id: sourceRangeEnd
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createContainer_1
  name: createContainer(string, CreateContainerOptions, ErrorOrResult<ContainerResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Cria um novo contêiner na conta especificada.

    Se um contêiner com o mesmo nome já existir, a operação falhará.
  syntax:
    content: 'function createContainer(container: string, options: CreateContainerOptions, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateContainerOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de contêiner.
                                                                        `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createContainer
  name: createContainer(string, ErrorOrResult<ContainerResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Cria um novo contêiner na conta especificada.

    Se um contêiner com o mesmo nome já existir, a operação falhará.
  syntax:
    content: 'function createContainer(container: string, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de contêiner.
                                                                        `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createContainerIfNotExists_1
  name: createContainerIfNotExists(string, CreateContainerOptions, ErrorOrResult<ContainerResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Se o contêiner não existir, cria um novo contêiner na conta especificada.
  syntax:
    content: 'function createContainerIfNotExists(container: string, options: CreateContainerOptions, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateContainerOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` será true se o contêiner foi criado, ou false se o contêiner já existir.
                                                                              `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createContainerIfNotExists
  name: createContainerIfNotExists(string, ErrorOrResult<ContainerResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Se o contêiner não existir, cria um novo contêiner na conta especificada.
  syntax:
    content: 'function createContainerIfNotExists(container: string, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` será true se o contêiner foi criado, ou false se o contêiner já existir.
                                                                              `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createOrReplaceAppendBlob
  name: createOrReplaceAppendBlob(string, string, CreateBlobRequestOptions, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Cria um blob de acréscimo vazio. Se o blob já existir no serviço, ele será substituído.

    Para evitar a substituição e, em vez disso, lançar um erro se o blob existir, passe um parâmetro accessConditions no objeto de opções.
  syntax:
    content: 'function createOrReplaceAppendBlob(container: string, blob: string, options: CreateBlobRequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `response` conterá informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createOrReplaceAppendBlob_1
  name: createOrReplaceAppendBlob(string, string, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Cria um blob de acréscimo vazio. Se o blob já existir no serviço, ele será substituído.

    Para evitar a substituição e, em vez disso, lançar um erro se o blob existir, passe um parâmetro accessConditions no objeto de opções.
  syntax:
    content: 'function createOrReplaceAppendBlob(container: string, blob: string, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlob_1
  name: createPageBlob(string, string, number, CreatePageBlobOptions, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createPageBlob(container: string, blob: string, length: number, options: CreatePageBlobOptions, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: length
      type:
      - number
      description: ''
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlob
  name: createPageBlob(string, string, number, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createPageBlob(container: string, blob: string, length: number, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: length
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromBrowserFile
  name: createPageBlobFromBrowserFile(string, string, Object, CreatePageBlobOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Carrega um blob de página de um arquivo HTML. Se o blob já existir no serviço, ele será substituído.

    Para evitar a substituição e, em vez disso, lançar um erro se o blob existir, passe um parâmetro accessConditions no objeto de opções.

    (Disponível somente na biblioteca de cliente JavaScript para navegadores)
  syntax:
    content: 'function createPageBlobFromBrowserFile(container: string, blob: string, browserFile: Object, options: CreatePageBlobOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: browserFile
      type:
      - Object
      description: O objeto de arquivo a ser carregado criado pela API do arquivo HTML.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` conterá informações se ocorrer um erro; Caso contrário, `[result](xref:BlobResult)` conterá as informações de blob.
                                                                                        `response` contém informações relacionadas a essa operação.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromBrowserFile_1
  name: createPageBlobFromBrowserFile(string, string, Object, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Carrega um blob de página de um arquivo HTML. Se o blob já existir no serviço, ele será substituído.

    Para evitar a substituição e, em vez disso, lançar um erro se o blob existir, passe um parâmetro accessConditions no objeto de opções.

    (Disponível somente na biblioteca de cliente JavaScript para navegadores)
  syntax:
    content: 'function createPageBlobFromBrowserFile(container: string, blob: string, browserFile: Object, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: browserFile
      type:
      - Object
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromLocalFile
  name: createPageBlobFromLocalFile(string, string, string, CreatePageBlobOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Carrega um blob de página de arquivo.
  syntax:
    content: 'function createPageBlobFromLocalFile(container: string, blob: string, localFileName: string, options: CreatePageBlobOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: localFileName
      type:
      - string
      description: ''
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: A função de retorno de chamada.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromLocalFile_1
  name: createPageBlobFromLocalFile(string, string, string, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Carrega um blob de página de arquivo.
  syntax:
    content: 'function createPageBlobFromLocalFile(container: string, blob: string, localFileName: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: localFileName
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromStream
  name: createPageBlobFromStream(string, string, stream.Readable, number, CreatePageBlobOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Carrega um blob de página de um fluxo.
  syntax:
    content: 'function createPageBlobFromStream(container: string, blob: string, stream: stream.Readable, streamLength: number, options: CreatePageBlobOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: stream
      type:
      - stream.Readable
      description: ''
    - id: streamLength
      type:
      - number
      description: O comprimento do fluxo para carregar.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: A função de retorno de chamada.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromStream_1
  name: createPageBlobFromStream(string, string, stream.Readable, number, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Carrega um blob de página de um fluxo.
  syntax:
    content: 'function createPageBlobFromStream(container: string, blob: string, stream: stream.Readable, streamLength: number, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: stream
      type:
      - stream.Readable
      description: ''
    - id: streamLength
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createPagesFromStream
  name: createPagesFromStream(string, string, stream.Readable, number, number, BlobRequestOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Atualiza um blob de páginas de um fluxo.
  syntax:
    content: 'function createPagesFromStream(container: string, blob: string, readStream: stream.Readable, rangeStart: number, rangeEnd: number, options: BlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: readStream
      type:
      - stream.Readable
      description: O fluxo legível do Node. js.
    - id: rangeStart
      type:
      - number
      description: O início do intervalo.
    - id: rangeEnd
      type:
      - number
      description: O fim do intervalo.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de blob.
                                                                                `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createPagesFromStream_1
  name: createPagesFromStream(string, string, stream.Readable, number, number, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Atualiza um blob de páginas de um fluxo.
  syntax:
    content: 'function createPagesFromStream(container: string, blob: string, readStream: stream.Readable, rangeStart: number, rangeEnd: number, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: readStream
      type:
      - stream.Readable
      description: ''
    - id: rangeStart
      type:
      - number
      description: ''
    - id: rangeEnd
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createReadStream_1
  name: createReadStream(string, string, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Fornece um fluxo de leitura de um blob.
  syntax:
    content: 'function createReadStream(container: string, blob: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - stream.Readable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createReadStream
  name: createReadStream(string, string, GetBlobRequestOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Fornece um fluxo de leitura de um blob.
  syntax:
    content: 'function createReadStream(container: string, blob: string, options: GetBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de blob.
                                                                                `response` contém informações relacionadas a essa operação.
    return:
      type:
      - stream.Readable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToBlockBlob
  name: createWriteStreamToBlockBlob(string, string, CreateBlockBlobRequestOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Fornece um fluxo para gravar um blob de blocos.

    Observe o `Stream` retornados por essa API deve ser usada com a tubulação.
  syntax:
    content: 'function createWriteStreamToBlockBlob(container: string, blob: string, options: CreateBlockBlobRequestOptions, callback?: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá informações sobre o blob.
                                                                                    `response` contém informações relacionadas a essa operação.
      optional: true
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToBlockBlob_1
  name: createWriteStreamToBlockBlob(string, string, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Fornece um fluxo para gravar um blob de blocos.

    Observe o `Stream` retornados por essa API deve ser usada com a tubulação.
  syntax:
    content: 'function createWriteStreamToBlockBlob(container: string, blob: string, callback?: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
      optional: true
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToExistingAppendBlob
  name: createWriteStreamToExistingAppendBlob(string, string, CreateBlobRequestOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Fornece um fluxo para gravar um blob de acréscimo. Pressupõe-se de que o blob existe.

    Se não existir, crie o blob com createAppendBlob antes de chamar este método ou usar createWriteStreamToNewAppendBlob.

    Essa API deve ser usada estritamente em um cenário de único gravador porque a API usa internamente o cabeçalho condicional de deslocamento de acréscimo para evitar blocos duplicados.

    Se você tem a garantia para ter um cenário de único gravador, por favor, examinar options.absorbConditionalErrorsOnRetry e ver se é aceitável para você definir esse sinalizador como true.

    Observe o `Stream` retornados por essa API deve ser usada com a tubulação.
  syntax:
    content: 'function createWriteStreamToExistingAppendBlob(container: string, blob: string, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá informações sobre o blob.
                                                                                  `response` contém informações relacionadas a essa operação.
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToExistingAppendBlob_1
  name: createWriteStreamToExistingAppendBlob(string, string, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Fornece um fluxo para gravar um blob de acréscimo. Pressupõe-se de que o blob existe.

    Se não existir, crie o blob com createAppendBlob antes de chamar este método ou usar createWriteStreamToNewAppendBlob.

    Essa API deve ser usada estritamente em um cenário de único gravador porque a API usa internamente o cabeçalho condicional de deslocamento de acréscimo para evitar blocos duplicados.

    Se você tem a garantia para ter um cenário de único gravador, por favor, examinar options.absorbConditionalErrorsOnRetry e ver se é aceitável para você definir esse sinalizador como true.

    Observe o `Stream` retornados por essa API deve ser usada com a tubulação.
  syntax:
    content: 'function createWriteStreamToExistingAppendBlob(container: string, blob: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToExistingPageBlob
  name: createWriteStreamToExistingPageBlob(string, string, CreatePageBlobOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Fornece um fluxo para gravar um blob de páginas. Pressupõe-se de que o blob existe.

    Se não existir, crie o blob com createPageBlob antes de chamar este método ou usar createWriteStreamNewPageBlob.

    Observe o `Stream` retornados por essa API deve ser usada com a tubulação.
  syntax:
    content: 'function createWriteStreamToExistingPageBlob(container: string, blob: string, options: CreatePageBlobOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` conterá informações se ocorrer um erro; Caso contrário, `[result](xref:BlobResult)` conterá as informações de blob.
                                                                                    `response` contém informações relacionadas a essa operação.
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToExistingPageBlob_1
  name: createWriteStreamToExistingPageBlob(string, string, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Fornece um fluxo para gravar um blob de páginas. Pressupõe-se de que o blob existe.

    Se não existir, crie o blob com createPageBlob antes de chamar este método ou usar createWriteStreamNewPageBlob.

    Observe o `Stream` retornados por essa API deve ser usada com a tubulação.
  syntax:
    content: 'function createWriteStreamToExistingPageBlob(container: string, blob: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToNewAppendBlob
  name: createWriteStreamToNewAppendBlob(string, string, CreateBlobRequestOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Fornece um fluxo para gravar um novo blob de acréscimo. Se o blob já existir no serviço, ele será substituído.

    Para evitar a substituição e, em vez disso, lançar um erro se o blob existir, passe um parâmetro accessConditions no objeto de opções.

    Essa API deve ser usada estritamente em um cenário de único gravador porque a API usa internamente o cabeçalho condicional de deslocamento de acréscimo para evitar blocos duplicados.

    Se você tem a garantia para ter um cenário de único gravador, por favor, examinar options.absorbConditionalErrorsOnRetry e ver se é aceitável para você definir esse sinalizador como true.

    Observe o `Stream` retornados por essa API deve ser usada com a tubulação.
  syntax:
    content: 'function createWriteStreamToNewAppendBlob(container: string, blob: string, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá informações sobre o blob.
                                                                                  `response` contém informações relacionadas a essa operação.
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToNewAppendBlob_1
  name: createWriteStreamToNewAppendBlob(string, string, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Fornece um fluxo para gravar um novo blob de acréscimo. Se o blob já existir no serviço, ele será substituído.

    Para evitar a substituição e, em vez disso, lançar um erro se o blob existir, passe um parâmetro accessConditions no objeto de opções.

    Essa API deve ser usada estritamente em um cenário de único gravador porque a API usa internamente o cabeçalho condicional de deslocamento de acréscimo para evitar blocos duplicados.

    Se você tem a garantia para ter um cenário de único gravador, por favor, examinar options.absorbConditionalErrorsOnRetry e ver se é aceitável para você definir esse sinalizador como true.

    Observe o `Stream` retornados por essa API deve ser usada com a tubulação.
  syntax:
    content: 'function createWriteStreamToNewAppendBlob(container: string, blob: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToNewPageBlob
  name: createWriteStreamToNewPageBlob(string, string, number, CreatePageBlobOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Fornece um fluxo para gravar um blob de páginas. Cria o blob antes de gravar dados.

    Observe o `Stream` retornados por essa API deve ser usada com a tubulação.
  syntax:
    content: 'function createWriteStreamToNewPageBlob(container: string, blob: string, length: number, options: CreatePageBlobOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: length
      type:
      - number
      description: O comprimento do blob.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` conterá informações se ocorrer um erro; Caso contrário, `[result](xref:BlobResult)` conterá as informações de blob.
                                                                                    `response` contém informações relacionadas a essa operação.
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToNewPageBlob_1
  name: createWriteStreamToNewPageBlob(string, string, number, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Fornece um fluxo para gravar um blob de páginas. Cria o blob antes de gravar dados.

    Observe o `Stream` retornados por essa API deve ser usada com a tubulação.
  syntax:
    content: 'function createWriteStreamToNewPageBlob(container: string, blob: string, length: number, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: length
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.defaultEnableReuseSocket
  name: defaultEnableReuseSocket
  fullName: defaultEnableReuseSocket
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'defaultEnableReuseSocket: boolean'
    return:
      type:
      - boolean
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteBlob_1
  name: deleteBlob(string, string, DeleteBlobRequestOptions, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Marca o blob especificado ou o instantâneo para exclusão. O blob é excluído depois durante a coleta de lixo.

    Se um blob tiver instantâneos, você deve excluí-los ao excluir o blob. Usando a opção deleteSnapshots, é possível excluir o blob e seus instantâneos, ou excluir somente os instantâneos, mas não o próprio blob. Se o blob tiver instantâneos, você deve incluir a opção deleteSnapshots ou o serviço blob retornará um erro e nada serão excluídos.

    Se você estiver excluindo um instantâneo específico usando a opção snapshotId, a opção deleteSnapshots não deve ser incluída.
  syntax:
    content: 'function deleteBlob(container: string, blob: string, options: DeleteBlobRequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.DeleteBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` conterá informações se ocorrer um erro; `response` conterá informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteBlob
  name: deleteBlob(string, string, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Marca o blob especificado ou o instantâneo para exclusão. O blob é excluído depois durante a coleta de lixo.

    Se um blob tiver instantâneos, você deve excluí-los ao excluir o blob. Usando a opção deleteSnapshots, é possível excluir o blob e seus instantâneos, ou excluir somente os instantâneos, mas não o próprio blob. Se o blob tiver instantâneos, você deve incluir a opção deleteSnapshots ou o serviço blob retornará um erro e nada serão excluídos.

    Se você estiver excluindo um instantâneo específico usando a opção snapshotId, a opção deleteSnapshots não deve ser incluída.
  syntax:
    content: 'function deleteBlob(container: string, blob: string, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` conterá informações se ocorrer um erro; `response` conterá informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteBlobIfExists_1
  name: deleteBlobIfExists(string, string, DeleteBlobRequestOptions, ErrorOrResult<boolean>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Marca o blob especificado ou o instantâneo para exclusão se ele existir. O blob é excluído depois durante a coleta de lixo.

    Se um blob tiver instantâneos, você deve excluí-los ao excluir o blob. Usando a opção deleteSnapshots, é possível excluir o blob e seus instantâneos, ou excluir somente os instantâneos, mas não o próprio blob. Se o blob tiver instantâneos, você deve incluir a opção deleteSnapshots ou o serviço blob retornará um erro e nada serão excluídos.

    Se você estiver excluindo um instantâneo específico usando a opção snapshotId, a opção deleteSnapshots não deve ser incluída.
  syntax:
    content: 'function deleteBlobIfExists(container: string, blob: string, options: DeleteBlobRequestOptions, callback: ErrorOrResult<boolean>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.DeleteBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<boolean>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` será true se o blob foi excluído ou false se o blob não existe.
                                                                        `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteBlobIfExists
  name: deleteBlobIfExists(string, string, ErrorOrResult<boolean>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Marca o blob especificado ou o instantâneo para exclusão se ele existir. O blob é excluído depois durante a coleta de lixo.

    Se um blob tiver instantâneos, você deve excluí-los ao excluir o blob. Usando a opção deleteSnapshots, é possível excluir o blob e seus instantâneos, ou excluir somente os instantâneos, mas não o próprio blob. Se o blob tiver instantâneos, você deve incluir a opção deleteSnapshots ou o serviço blob retornará um erro e nada serão excluídos.

    Se você estiver excluindo um instantâneo específico usando a opção snapshotId, a opção deleteSnapshots não deve ser incluída.
  syntax:
    content: 'function deleteBlobIfExists(container: string, blob: string, callback: ErrorOrResult<boolean>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<boolean>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` será true se o blob foi excluído ou false se o blob não existe.
                                                                        `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteContainer_1
  name: deleteContainer(string, ContainerOptions, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Marca o contêiner especificado para exclusão.

    O contêiner e todos os blobs contidos nele são excluídos posteriormente, durante a coleta de lixo.
  syntax:
    content: 'function deleteContainer(container: string, options: ContainerOptions, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `response` conterá informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteContainer
  name: deleteContainer(string, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Marca o contêiner especificado para exclusão.

    O contêiner e todos os blobs contidos nele são excluídos posteriormente, durante a coleta de lixo.
  syntax:
    content: 'function deleteContainer(container: string, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `response` conterá informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteContainerIfExists_1
  name: deleteContainerIfExists(string, ContainerOptions, ErrorOrResult<boolean>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Marca o contêiner especificado para exclusão se ele existir.

    O contêiner e todos os blobs contidos nele são excluídos posteriormente, durante a coleta de lixo.
  syntax:
    content: 'function deleteContainerIfExists(container: string, options: ContainerOptions, callback: ErrorOrResult<boolean>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<boolean>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` será true se o contêiner existe e foi excluído ou false se o contêiner não existia.
                                                                        `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteContainerIfExists
  name: deleteContainerIfExists(string, ErrorOrResult<boolean>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Marca o contêiner especificado para exclusão se ele existir.

    O contêiner e todos os blobs contidos nele são excluídos posteriormente, durante a coleta de lixo.
  syntax:
    content: 'function deleteContainerIfExists(container: string, callback: ErrorOrResult<boolean>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<boolean>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` será true se o contêiner existe e foi excluído ou false se o contêiner não existia.
                                                                        `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.doesBlobExist_1
  name: doesBlobExist(string, string, BlobRequestOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Verifica se existe ou não um blob no serviço.
  syntax:
    content: 'function doesBlobExist(container: string, blob: string, options: BlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `errorOrResult` será true se o blob existe, ou false se o blob não existe.
                                                                            `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.doesBlobExist
  name: doesBlobExist(string, string, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Verifica se existe ou não um blob no serviço.
  syntax:
    content: 'function doesBlobExist(container: string, blob: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `errorOrResult` será true se o blob existe, ou false se o blob não existe.
                                                                            `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.doesContainerExist_1
  name: doesContainerExist(string, ErrorOrResult<ContainerResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Verifica se existe ou não um contêiner no serviço.
  syntax:
    content: 'function doesContainerExist(container: string, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` será true se o contêiner existir, ou false se o contêiner não existir.
                                                                            `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.doesContainerExist
  name: doesContainerExist(string, RequestOptions, ErrorOrResult<ContainerResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Verifica se existe ou não um contêiner no serviço.
  syntax:
    content: 'function doesContainerExist(container: string, options: RequestOptions, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` será true se o contêiner existir, ou false se o contêiner não existir.
                                                                            `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.generateBlockIdPrefix
  name: generateBlockIdPrefix()
  children: []
  type: method
  langs:
  - typeScript
  summary: Gerar um prefixo de id de bloco aleatório
  syntax:
    content: function generateBlockIdPrefix()
    parameters: []
    return:
      type:
      - string
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.generateSharedAccessSignature
  name: generateSharedAccessSignature(string, string, SharedAccessPolicy, ContentSettingsHeaders)
  children: []
  type: method
  langs:
  - typeScript
  summary: Recupera um token de assinatura de acesso compartilhado.
  syntax:
    content: 'function generateSharedAccessSignature(container: string, blob: string, sharedAccessPolicy: SharedAccessPolicy, headers?: ContentSettingsHeaders)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: ''
    - id: sharedAccessPolicy
      type:
      - azure-storage.azurestorage.common.SharedAccessPolicy
      description: A política de acesso compartilhado.
    - id: headers
      type:
      - azure-storage.azurestorage.common.ContentSettingsHeaders
      description: ''
      optional: true
    return:
      type:
      - string
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.generateSharedAccessSignatureWithVersion
  name: generateSharedAccessSignatureWithVersion(string, string, SharedAccessPolicy, string, ContentSettingsHeaders)
  children: []
  type: method
  langs:
  - typeScript
  summary: Recupera um token de assinatura de acesso compartilhado.
  syntax:
    content: 'function generateSharedAccessSignatureWithVersion(container: string, blob: string, sharedAccessPolicy: SharedAccessPolicy, sasVersion: string, headers?: ContentSettingsHeaders)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: ''
    - id: sharedAccessPolicy
      type:
      - azure-storage.azurestorage.common.SharedAccessPolicy
      description: A política de acesso compartilhado.
    - id: sasVersion
      type:
      - string
      description: ''
    - id: headers
      type:
      - azure-storage.azurestorage.common.ContentSettingsHeaders
      description: ''
      optional: true
    return:
      type:
      - string
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getAccountProperties_1
  name: getAccountProperties(string, string, ErrorOrResult<AccountProperties>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém as propriedades de uma conta de armazenamento.
  syntax:
    content: 'function getAccountProperties(container?: string, blob?: string, callback?: ErrorOrResult<AccountProperties>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
      optional: true
    - id: blob
      type:
      - string
      description: ''
      optional: true
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.AccountProperties>
      description: ''
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getAccountProperties
  name: getAccountProperties(string, string, RequestOptions, ErrorOrResult<AccountProperties>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém as propriedades de uma conta de armazenamento.
  syntax:
    content: 'function getAccountProperties(container?: string, blob?: string, options?: RequestOptions, callback?: ErrorOrResult<AccountProperties>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
      optional: true
    - id: blob
      type:
      - string
      description: ''
      optional: true
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
      optional: true
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.AccountProperties>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `[result](xref:AccountProperties)` conterá as propriedades e `response` conterá informações relacionadas a essa operação.
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobMetadata
  name: getBlobMetadata(string, string, BlobRequestOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Retorna metadados de todas as definidas pelo usuário para o blob especificado ou o instantâneo.

    Não modifique ou retornar o conteúdo do blob.
  syntax:
    content: 'function getBlobMetadata(container: string, blob: string, options: BlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá informações sobre o blob.
                                                                                `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobMetadata_1
  name: getBlobMetadata(string, string, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Retorna metadados de todas as definidas pelo usuário para o blob especificado ou o instantâneo.

    Não modifique ou retornar o conteúdo do blob.
  syntax:
    content: 'function getBlobMetadata(container: string, blob: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobProperties_1
  name: getBlobProperties(string, string, BlobRequestOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Retorna todos os metadados definidos pelo usuário, propriedades HTTP padrão e propriedades do sistema para o blob.

    Ele não retornar ou modificar o conteúdo do blob.
  syntax:
    content: 'function getBlobProperties(container: string, blob: string, optionsOrCallback: BlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: optionsOrCallback
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá informações sobre o blob.
                                                                                `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobProperties
  name: getBlobProperties(string, string, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Retorna todos os metadados definidos pelo usuário, propriedades HTTP padrão e propriedades do sistema para o blob.

    Ele não retornar ou modificar o conteúdo do blob.
  syntax:
    content: 'function getBlobProperties(container: string, blob: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá informações sobre o blob.
                                                                                `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToLocalFile_1
  name: getBlobToLocalFile(string, string, string, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Baixa um blob em um arquivo.
  syntax:
    content: 'function getBlobToLocalFile(container: string, blob: string, localFileName: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: localFileName
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToLocalFile
  name: getBlobToLocalFile(string, string, string, GetBlobRequestOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Baixa um blob em um arquivo.
  syntax:
    content: 'function getBlobToLocalFile(container: string, blob: string, localFileName: string, options: GetBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: localFileName
      type:
      - string
      description: O caminho local para o arquivo a ser baixado.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de blob.
                                                                                `response` contém informações relacionadas a essa operação.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToStream
  name: getBlobToStream(string, string, stream.Writable, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Baixa um blob em um fluxo.
  syntax:
    content: 'function getBlobToStream(container: string, blob: string, writeStream: stream.Writable, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: writeStream
      type:
      - stream.Writable
      description: O fluxo gravável do Node. js.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de blob.
                                                                                `response` contém informações relacionadas a essa operação.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToStream_1
  name: getBlobToStream(string, string, stream.Writable, GetBlobRequestOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Baixa um blob em um fluxo.
  syntax:
    content: 'function getBlobToStream(container: string, blob: string, writeStream: stream.Writable, options: GetBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: writeStream
      type:
      - stream.Writable
      description: O fluxo gravável do Node. js.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de blob.
                                                                                `response` contém informações relacionadas a essa operação.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToText_1
  name: getBlobToText(string, string, BlobToText)
  children: []
  type: method
  langs:
  - typeScript
  summary: Baixa um blob em uma cadeia de caracteres de texto.
  syntax:
    content: 'function getBlobToText(container: string, blob: string, callback: BlobToText)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobToText
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToText
  name: getBlobToText(string, string, GetBlobRequestOptions, BlobToText)
  children: []
  type: method
  langs:
  - typeScript
  summary: Baixa um blob em uma cadeia de caracteres de texto.
  syntax:
    content: 'function getBlobToText(container: string, blob: string, options: GetBlobRequestOptions, callback: BlobToText)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobToText
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `text` conterá o conteúdo do blob, e `blockBlob` conterá as informações de blob.
                                                                                `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlockId
  name: getBlockId(string, number | string)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obter uma id de bloco de acordo com o número de bloco e prefixo
  syntax:
    content: 'function getBlockId(prefix: string, number: number | string)'
    parameters:
    - id: prefix
      type:
      - string
      description: ''
    - id: number
      type:
      - number | string
      description: ''
    return:
      type:
      - string
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerAcl_1
  name: getContainerAcl(string, ContainerOptions, ErrorOrResult<ContainerAclResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém a ACL do contêiner.
  syntax:
    content: 'function getContainerAcl(container: string, options: ContainerOptions, callback: ErrorOrResult<ContainerAclResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá informações para o contêiner.
                                                                        `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerAcl
  name: getContainerAcl(string, ErrorOrResult<ContainerAclResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém a ACL do contêiner.
  syntax:
    content: 'function getContainerAcl(container: string, callback: ErrorOrResult<ContainerAclResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá informações para o contêiner.
                                                                        `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerMetadata_1
  name: getContainerMetadata(string, ContainerOptions, ErrorOrResult<ContainerResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Retorna metadados de todos os definidos pelo usuário para o contêiner.
  syntax:
    content: 'function getContainerMetadata(container: string, options: ContainerOptions, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá informações para o contêiner.
                                                                              `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerMetadata
  name: getContainerMetadata(string, ErrorOrResult<ContainerResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Retorna metadados de todos os definidos pelo usuário para o contêiner.
  syntax:
    content: 'function getContainerMetadata(container: string, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá informações para o contêiner.
                                                                              `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerProperties_1
  name: getContainerProperties(string, ContainerOptions, ErrorOrResult<ContainerResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Recupera um contêiner e suas propriedades de uma conta especificada.
  syntax:
    content: 'function getContainerProperties(container: string, options: ContainerOptions, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá informações para o contêiner.
                                                                        `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerProperties
  name: getContainerProperties(string, ErrorOrResult<ContainerResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Recupera um contêiner e suas propriedades de uma conta especificada.
  syntax:
    content: 'function getContainerProperties(container: string, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá informações para o contêiner.
                                                                        `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getPageRangesDiff_1
  name: getPageRangesDiff(string, string, string, ErrorOrResult<RangeDiff[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getPageRangesDiff(container: string, blob: string, previousSnapshotTime: string, callback: ErrorOrResult<RangeDiff[]>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: previousSnapshotTime
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.RangeDiff[]>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getPageRangesDiff
  name: getPageRangesDiff(string, string, string, GetBlobRequestOptions, ErrorOrResult<RangeDiff[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getPageRangesDiff(container: string, blob: string, previousSnapshotTime: string, options: GetBlobRequestOptions, callback: ErrorOrResult<RangeDiff[]>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: previousSnapshotTime
      type:
      - string
      description: ''
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.RangeDiff[]>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getServiceProperties_1
  name: getServiceProperties(ErrorOrResult<BlobServiceProperties>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém as propriedades do serviço de Blob de uma conta de armazenamento, incluindo a análise de armazenamento do Azure.
  syntax:
    content: 'function getServiceProperties(callback?: ErrorOrResult<BlobServiceProperties>)'
    parameters:
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties>
      description: ''
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getServiceProperties
  name: getServiceProperties(RequestOptions, ErrorOrResult<BlobServiceProperties>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém as propriedades do serviço de Blob de uma conta de armazenamento, incluindo a análise de armazenamento do Azure.
  syntax:
    content: 'function getServiceProperties(options: RequestOptions, callback?: ErrorOrResult<BlobServiceProperties>)'
    parameters:
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as propriedades e `response` conterá informações relacionadas a essa operação.
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getServiceStats_1
  name: getServiceStats(ErrorOrResult<ServiceStats>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém as estatísticas do serviço para serviço de Blob de uma conta de armazenamento.
  syntax:
    content: 'function getServiceStats(callback: ErrorOrResult<ServiceStats>)'
    parameters:
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServiceStats>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getServiceStats
  name: getServiceStats(RequestOptions, ErrorOrResult<ServiceStats>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém as estatísticas do serviço para serviço de Blob de uma conta de armazenamento.
  syntax:
    content: 'function getServiceStats(options: RequestOptions, callback: ErrorOrResult<ServiceStats>)'
    parameters:
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServiceStats>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as estatísticas e `response` conterá informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getUrl
  name: getUrl(string, string, string, boolean, string)
  children: []
  type: method
  langs:
  - typeScript
  summary: Recupera uma URL de blob ou contêiner.
  syntax:
    content: 'function getUrl(container: string, blob?: string, sasToken?: string, primary?: boolean, snapshotId?: string)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: ''
      optional: true
    - id: sasToken
      type:
      - string
      description: ''
      optional: true
    - id: primary
      type:
      - boolean
      description: ''
      optional: true
    - id: snapshotId
      type:
      - string
      description: ''
      optional: true
    return:
      type:
      - string
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlobDirectoriesSegmented
  name: listBlobDirectoriesSegmented(string, ContinuationToken, ErrorOrResult<ListBlobDirectoriesResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Lista um segmento que contém uma coleção de itens do diretório de blob no contêiner.
  syntax:
    content: 'function listBlobDirectoriesSegmented(container: string, currentToken: ContinuationToken, callback: ErrorOrResult<ListBlobDirectoriesResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: Um token de continuação retornado por uma operação de listagem anterior. Use 'null' ou 'indefinido' se esta for a primeira operação.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobDirectoriesResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá `entries` e `continuationToken`.
                                                                      `entries`  Fornece uma lista dos `[directories](xref:BlobDirectoryResult)` e o `continuationToken` é usado para a próxima operação de listagem.
                                                                      `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlobDirectoriesSegmented_1
  name: listBlobDirectoriesSegmented(string, ContinuationToken, ListBlobPrefixesSegmentedRequestOptions, ErrorOrResult<ListBlobDirectoriesResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Lista um segmento que contém uma coleção de itens do diretório de blob no contêiner.
  syntax:
    content: 'function listBlobDirectoriesSegmented(container: string, currentToken: ContinuationToken, options: ListBlobPrefixesSegmentedRequestOptions, callback: ErrorOrResult<ListBlobDirectoriesResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: Um token de continuação retornado por uma operação de listagem anterior. Use 'null' ou 'indefinido' se esta for a primeira operação.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobPrefixesSegmentedRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobDirectoriesResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá `entries` e `continuationToken`.
                                                                        `entries`  Fornece uma lista dos `[directories](xref:BlobDirectoryResult)` e o `continuationToken` é usado para a próxima operação de listagem.
                                                                        `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlobDirectoriesSegmentedWithPrefix
  name: listBlobDirectoriesSegmentedWithPrefix(string, string, ContinuationToken, ErrorOrResult<ListBlobDirectoriesResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Lista um segmento que contém uma coleção de itens do diretório de blob cujos nomes começam com o prefixo especificado no contêiner.
  syntax:
    content: 'function listBlobDirectoriesSegmentedWithPrefix(container: string, prefix: string, currentToken: ContinuationToken, callback: ErrorOrResult<ListBlobDirectoriesResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: prefix
      type:
      - string
      description: O prefixo do nome do blob.
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: Um token de continuação retornado por uma operação de listagem anterior. Use 'null' ou 'indefinido' se esta for a primeira operação.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobDirectoriesResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá `entries` e `continuationToken`.
                                                                      `entries`  Fornece uma lista dos `[directories](xref:BlobDirectoryResult)` e o `continuationToken` é usado para a próxima operação de listagem.
                                                                      `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlobDirectoriesSegmentedWithPrefix_1
  name: listBlobDirectoriesSegmentedWithPrefix(string, string, ContinuationToken, ListBlobPrefixesSegmentedRequestOptions, ErrorOrResult<ListBlobDirectoriesResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Lista um segmento que contém uma coleção de itens do diretório de blob cujos nomes começam com o prefixo especificado no contêiner.
  syntax:
    content: 'function listBlobDirectoriesSegmentedWithPrefix(container: string, prefix: string, currentToken: ContinuationToken, options: ListBlobPrefixesSegmentedRequestOptions, callback: ErrorOrResult<ListBlobDirectoriesResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: prefix
      type:
      - string
      description: O prefixo do diretório de blob.
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: Um token de continuação retornado por uma operação de listagem anterior. Use 'null' ou 'indefinido' se esta for a primeira operação.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobPrefixesSegmentedRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobDirectoriesResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá `entries` e `continuationToken`.
                                                                        `entries`  Fornece uma lista dos `[directories](xref:BlobDirectoryResult)` e o `continuationToken` é usado para a próxima operação de listagem.
                                                                        `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlobsSegmented
  name: listBlobsSegmented(string, ContinuationToken, ErrorOrResult<ListBlobsResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Lista um segmento que contém uma coleção de itens de blob no contêiner.
  syntax:
    content: 'function listBlobsSegmented(container: string, currentToken: ContinuationToken, callback: ErrorOrResult<ListBlobsResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: Um token de continuação retornado por uma operação de listagem anterior. Use 'null' ou 'indefinido' se esta for a primeira operação.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá `entries` e `continuationToken`.
                                                                      `entries`  Fornece uma lista de blobs e o `continuationToken` é usado para a próxima operação de listagem.
                                                                      `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlobsSegmented_1
  name: listBlobsSegmented(string, ContinuationToken, ListBlobsSegmentedRequestOptions, ErrorOrResult<ListBlobsResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Lista um segmento que contém uma coleção de itens de blob no contêiner.
  syntax:
    content: 'function listBlobsSegmented(container: string, currentToken: ContinuationToken, options: ListBlobsSegmentedRequestOptions, callback: ErrorOrResult<ListBlobsResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: Um token de continuação retornado por uma operação de listagem anterior. Use 'null' ou 'indefinido' se esta for a primeira operação.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsSegmentedRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá `entries` e `continuationToken`.
                                                                      `entries`  Fornece uma lista de blobs e o `continuationToken` é usado para a próxima operação de listagem.
                                                                      `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlobsSegmentedWithPrefix
  name: listBlobsSegmentedWithPrefix(string, string, ContinuationToken, ErrorOrResult<ListBlobsResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Lista um segmento que contém uma coleção de itens de blob cujos nomes começam com o prefixo especificado no contêiner.
  syntax:
    content: 'function listBlobsSegmentedWithPrefix(container: string, prefix: string, currentToken: ContinuationToken, callback: ErrorOrResult<ListBlobsResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: prefix
      type:
      - string
      description: O prefixo do nome do blob.
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: Um token de continuação retornado por uma operação de listagem anterior. Use 'null' ou 'indefinido' se esta for a primeira operação.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as entradas de blobs e o token de continuação para a próxima operação de listagem.
                                                                      `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlobsSegmentedWithPrefix_1
  name: listBlobsSegmentedWithPrefix(string, string, ContinuationToken, ListBlobsSegmentedRequestOptions, ErrorOrResult<ListBlobsResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Lista um segmento que contém uma coleção de itens de blob cujos nomes começam com o prefixo especificado no contêiner.
  syntax:
    content: 'function listBlobsSegmentedWithPrefix(container: string, prefix: string, currentToken: ContinuationToken, options: ListBlobsSegmentedRequestOptions, callback: ErrorOrResult<ListBlobsResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: prefix
      type:
      - string
      description: O prefixo do nome do blob.
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: Um token de continuação retornado por uma operação de listagem anterior. Use 'null' ou 'indefinido' se esta for a primeira operação.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsSegmentedRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as entradas de blobs e o token de continuação para a próxima operação de listagem.
                                                                      `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlocks
  name: listBlocks(string, string, string, BlobRequestOptions, ErrorOrResult<BlockListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Recupera a lista de blocos que foram carregados como parte de um blob de bloco.
  syntax:
    content: 'function listBlocks(container: string, blob: string, blocklisttype: string, options: BlobRequestOptions, callback: ErrorOrResult<BlockListResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: blocklisttype
      type:
      - string
      description: O tipo de lista de bloqueios para recuperar.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlockListResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de lista de bloqueios.
                                                                                `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlocks_1
  name: listBlocks(string, string, string, ErrorOrResult<BlockListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Recupera a lista de blocos que foram carregados como parte de um blob de bloco.
  syntax:
    content: 'function listBlocks(container: string, blob: string, blocklisttype: string, callback: ErrorOrResult<BlockListResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: blocklisttype
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlockListResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listContainersSegmented_1
  name: listContainersSegmented(ContinuationToken, ErrorOrResult<ListContainerResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Lista um segmento que contém uma coleção de itens de contêiner na conta especificada.
  syntax:
    content: 'function listContainersSegmented(currentToken: ContinuationToken, callback: ErrorOrResult<ListContainerResult>)'
    parameters:
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listContainersSegmented
  name: listContainersSegmented(ContinuationToken, ListContainerOptions, ErrorOrResult<ListContainerResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Lista um segmento que contém uma coleção de itens de contêiner na conta especificada.
  syntax:
    content: 'function listContainersSegmented(currentToken: ContinuationToken, options: ListContainerOptions, callback: ErrorOrResult<ListContainerResult>)'
    parameters:
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: Um token de continuação retornado por uma operação de listagem anterior. Use 'null' ou 'indefinido' se esta for a primeira operação.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá `entries` e `continuationToken`.
                                                                                `entries`  Fornece uma lista de contêineres e o `continuationToken` é usado para a próxima operação de listagem.
                                                                                `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listContainersSegmentedWithPrefix_1
  name: listContainersSegmentedWithPrefix(string, ContinuationToken, ErrorOrResult<ListContainerResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Lista um segmento que contém uma coleção de itens de contêiner cujos nomes começam com o prefixo especificado na conta especificada.
  syntax:
    content: 'function listContainersSegmentedWithPrefix(prefix: string, currentToken: ContinuationToken, callback: ErrorOrResult<ListContainerResult>)'
    parameters:
    - id: prefix
      type:
      - string
      description: ''
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listContainersSegmentedWithPrefix
  name: listContainersSegmentedWithPrefix(string, ContinuationToken, ListContainerOptions, ErrorOrResult<ListContainerResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Lista um segmento que contém uma coleção de itens de contêiner cujos nomes começam com o prefixo especificado na conta especificada.
  syntax:
    content: 'function listContainersSegmentedWithPrefix(prefix: string, currentToken: ContinuationToken, options: ListContainerOptions, callback: ErrorOrResult<ListContainerResult>)'
    parameters:
    - id: prefix
      type:
      - string
      description: O prefixo do nome do contêiner.
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: Um token de continuação retornado por uma operação de listagem anterior. Use 'null' ou 'indefinido' se esta for a primeira operação.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá `entries` e `continuationToken`.
                                                                                `entries`  Fornece uma lista de contêineres e o `continuationToken` é usado para a próxima operação de listagem.
                                                                                `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listPageRanges_1
  name: listPageRanges(string, string, ErrorOrResult<Range[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Lista os intervalos de página. Lista todos os intervalos de página por padrão, ou apenas os intervalos de página em um intervalo específico de bytes se rangeStart e rangeEnd forem especificados.
  syntax:
    content: 'function listPageRanges(container: string, blob: string, callback: ErrorOrResult<Range[]>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.Range[]>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listPageRanges
  name: listPageRanges(string, string, GetBlobRequestOptions, ErrorOrResult<Range[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Lista os intervalos de página. Lista todos os intervalos de página por padrão, ou apenas os intervalos de página em um intervalo específico de bytes se rangeStart e rangeEnd forem especificados.
  syntax:
    content: 'function listPageRanges(container: string, blob: string, options: GetBlobRequestOptions, callback: ErrorOrResult<Range[]>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.Range[]>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de intervalo de página.
                                                                                `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.parallelOperationThreadCount
  name: parallelOperationThreadCount
  fullName: parallelOperationThreadCount
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'parallelOperationThreadCount: number'
    return:
      type:
      - number
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.releaseLease
  name: releaseLease(string, string, string, ErrorOrResult<LeaseResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Libera a concessão. Se o contêiner e blob forem especificados, libera a concessão de blob. Caso contrário, se apenas o contêiner for especificado e o blob é nulo, libera a concessão do contêiner.
  syntax:
    content: 'function releaseLease(container: string, blob: string, leaseId: string, callback: ErrorOrResult<LeaseResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: leaseId
      type:
      - string
      description: O identificador de concessão.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de concessão.
                                                                                `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.releaseLease_1
  name: releaseLease(string, string, string, LeaseRequestOptions, ErrorOrResult<LeaseResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Libera a concessão. Se o contêiner e blob forem especificados, libera a concessão de blob. Caso contrário, se apenas o contêiner for especificado e o blob é nulo, libera a concessão do contêiner.
  syntax:
    content: 'function releaseLease(container: string, blob: string, leaseId: string, options: LeaseRequestOptions, callback: ErrorOrResult<LeaseResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: leaseId
      type:
      - string
      description: O identificador de concessão.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de concessão.
                                                                                `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.renewLease
  name: renewLease(string, string, string, ErrorOrResult<LeaseResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Renova uma concessão existente. Se o contêiner e blob for especificados, renova a concessão de blob. Caso contrário, se apenas o contêiner for especificado e o blob é nulo, renova a concessão do contêiner.
  syntax:
    content: 'function renewLease(container: string, blob: string, leaseId: string, callback: ErrorOrResult<LeaseResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: leaseId
      type:
      - string
      description: O identificador de concessão. Deve ser um GUID.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de concessão.
                                                                                `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.renewLease_1
  name: renewLease(string, string, string, LeaseRequestOptions, ErrorOrResult<LeaseResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Renova uma concessão existente. Se o contêiner e blob for especificados, renova a concessão de blob. Caso contrário, se apenas o contêiner for especificado e o blob é nulo, renova a concessão do contêiner.
  syntax:
    content: 'function renewLease(container: string, blob: string, leaseId: string, options: LeaseRequestOptions, callback: ErrorOrResult<LeaseResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: leaseId
      type:
      - string
      description: O identificador de concessão. Deve ser um GUID.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de concessão.
                                                                                `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.resizePageBlob
  name: resizePageBlob(string, string, number, BlobRequestOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Redimensiona um blob de páginas.
  syntax:
    content: 'function resizePageBlob(container: string, blob: string, size: number, options: BlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: size
      type:
      - number
      description: O tamanho do blob de página, em bytes.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá informações sobre o blob.
                                                                                  `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.resizePageBlob_1
  name: resizePageBlob(string, string, number, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Redimensiona um blob de páginas.
  syntax:
    content: 'function resizePageBlob(container: string, blob: string, size: number, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: size
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobMetadata_1
  name: setBlobMetadata(string, string, Map<string>, BlobRequestOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Define metadados definidos pelo usuário para o blob especificado ou um instantâneo como um ou mais pares de nome-valor, não modifique ou retornar o conteúdo do blob.
  syntax:
    content: 'function setBlobMetadata(container: string, blob: string, metadata: Map<string>, options: BlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: metadata
      type:
      - azure-storage.Map<string>
      description: Os pares de chave/valor de metadados.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá informações sobre o blob.
                                                                                `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobMetadata
  name: setBlobMetadata(string, string, Map<string>, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Define metadados definidos pelo usuário para o blob especificado ou um instantâneo como um ou mais pares de nome-valor, não modifique ou retornar o conteúdo do blob.
  syntax:
    content: 'function setBlobMetadata(container: string, blob: string, metadata: Map<string>, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: metadata
      type:
      - azure-storage.Map<string>
      description: Os pares de chave/valor de metadados.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá informações sobre o blob.
                                                                                `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobProperties
  name: setBlobProperties(string, string, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Propriedades definidas pelo usuário limpa para o blob especificado ou o instantâneo.

    Não modifique ou retornar o conteúdo do blob.
  syntax:
    content: 'function setBlobProperties(container: string, blob: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá informações sobre o blob.
                                                                                `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobProperties_1
  name: setBlobProperties(string, string, SetBlobPropertiesRequestOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Define propriedades definidas pelo usuário para o blob especificado ou o instantâneo.

    Não modifique ou retornar o conteúdo do blob.
  syntax:
    content: 'function setBlobProperties(container: string, blob: string, optionsOrCallback: SetBlobPropertiesRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: optionsOrCallback
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.SetBlobPropertiesRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá informações sobre o blob.
                                                                                `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobTier_1
  name: setBlobTier(string, string, string, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: Define o nível de um blockblob sob uma conta de LRS de armazenamento de blob, ou a camada de um pageblob sob uma conta de armazenamento premium.
  syntax:
    content: 'function setBlobTier(container: string, blob: string, blobTier: string, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: blobTier
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobTier
  name: setBlobTier(string, string, string, RequestOptions, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: Define o nível de um blockblob sob uma conta de LRS de armazenamento de blob, ou a camada de um pageblob sob uma conta de armazenamento premium.
  syntax:
    content: 'function setBlobTier(container: string, blob: string, blobTier: string, options: RequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: blobTier
      type:
      - string
      description: Consulte BlobUtilities.BlobTier.StandardBlobTier ou BlobUtilities.BlobTier.PremiumPageBlobTier para os valores possíveis.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `response` conterá informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setContainerAcl
  name: 'setContainerAcl(string, [key: string]: AccessPolicy, ContainerAclOptions, ErrorOrResult<ContainerAclResult>)'
  children: []
  type: method
  langs:
  - typeScript
  summary: Atualiza a ACL do contêiner.
  syntax:
    content: 'function setContainerAcl(container: string, signedIdentifiers: [key: string]: AccessPolicy, options: ContainerAclOptions, callback: ErrorOrResult<ContainerAclResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: signedIdentifiers
      type:
      - '[key: string]: azure-storage.azurestorage.common.AccessPolicy'
      description: As configurações de ACL do contêiner. Consulte `[AccessPolicy](xref:AccessPolicy)` para obter informações detalhadas.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá informações para o contêiner.
                                                                                    `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setContainerAcl_1
  name: 'setContainerAcl(string, [key: string]: AccessPolicy, ErrorOrResult<ContainerAclResult>)'
  children: []
  type: method
  langs:
  - typeScript
  summary: Atualiza a ACL do contêiner.
  syntax:
    content: 'function setContainerAcl(container: string, signedIdentifiers: [key: string]: AccessPolicy, callback: ErrorOrResult<ContainerAclResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: signedIdentifiers
      type:
      - '[key: string]: azure-storage.azurestorage.common.AccessPolicy'
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setContainerMetadata_1
  name: setContainerMetadata(string, Map<string>, ContainerOptions, ErrorOrResult<ContainerResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Define os metadados do contêiner.

    Chamar a operação definir metadados do contêiner substitui todos os metadados existentes que está associado com o contêiner.

    Não é possível alterar um par nome/valor individual.
  syntax:
    content: 'function setContainerMetadata(container: string, metadata: Map<string>, options: ContainerOptions, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: metadata
      type:
      - azure-storage.Map<string>
      description: Os pares de chave/valor de metadados.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `response` conterá informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setContainerMetadata
  name: setContainerMetadata(string, Map<string>, ErrorOrResult<ContainerResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Define os metadados do contêiner.

    Chamar a operação definir metadados do contêiner substitui todos os metadados existentes que está associado com o contêiner.

    Não é possível alterar um par nome/valor individual.
  syntax:
    content: 'function setContainerMetadata(container: string, metadata: Map<string>, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: metadata
      type:
      - azure-storage.Map<string>
      description: Os pares de chave/valor de metadados.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `response` conterá informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setPageBlobSequenceNumber
  name: setPageBlobSequenceNumber(string, string, string, number, BlobRequestOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Define o número de sequência do blob de página.
  syntax:
    content: 'function setPageBlobSequenceNumber(container: string, blob: string, sequenceNumberAction: string, sequenceNumber: number, options: BlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: sequenceNumberAction
      type:
      - string
      description: >-
        Um valor que indica a operação a ser executada no número de sequência.

        Os valores permitidos são definidos no azure. BlobUtilities.SequenceNumberAction.
    - id: sequenceNumber
      type:
      - number
      description: >-
        O número de sequência.  O valor do número de sequência deve ser entre 0 e 2 ^ 63-1.

        Defina esse parâmetro como null se essa operação é uma ação de incremento.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá informações sobre o blob.
                                                                                  `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setPageBlobSequenceNumber_1
  name: setPageBlobSequenceNumber(string, string, string, number, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Define o número de sequência do blob de página.
  syntax:
    content: 'function setPageBlobSequenceNumber(container: string, blob: string, sequenceNumberAction: string, sequenceNumber: number, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: sequenceNumberAction
      type:
      - string
      description: ''
    - id: sequenceNumber
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setServiceProperties_1
  name: setServiceProperties(BlobServiceProperties, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Define as propriedades do serviço de Blob de uma conta de armazenamento, incluindo a análise de armazenamento do Azure.

    Você também pode usar essa operação para definir a versão de solicitação padrão para todas as solicitações de entrada que não têm uma versão especificada.

    Quando você define as propriedades do serviço blob (por exemplo, habilitando exclusão reversível), ele pode levar até 30 segundos, entre em vigor.
  syntax:
    content: 'function setServiceProperties(serviceProperties: BlobServiceProperties, callback: ErrorOrResponse)'
    parameters:
    - id: serviceProperties
      type:
      - azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setServiceProperties
  name: setServiceProperties(BlobServiceProperties, RequestOptions, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Define as propriedades do serviço de Blob de uma conta de armazenamento, incluindo a análise de armazenamento do Azure.

    Você também pode usar essa operação para definir a versão de solicitação padrão para todas as solicitações de entrada que não têm uma versão especificada.

    Quando você define as propriedades do serviço blob (por exemplo, habilitando exclusão reversível), ele pode levar até 30 segundos, entre em vigor.
  syntax:
    content: 'function setServiceProperties(serviceProperties: BlobServiceProperties, options: RequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: serviceProperties
      type:
      - azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
      description: As propriedades do serviço.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `response` conterá informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.singleBlobPutThresholdInBytes
  name: singleBlobPutThresholdInBytes
  fullName: singleBlobPutThresholdInBytes
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'singleBlobPutThresholdInBytes: number'
    return:
      type:
      - number
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.SpeedSummary
  name: SpeedSummary
  fullName: SpeedSummary
  children: []
  langs:
  - typeScript
  type: property
  summary: O retorno de chamada para {BlobService ~ getBlobToText}.
  syntax:
    content: 'static SpeedSummary: SpeedSummary'
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.startCopyBlob
  name: startCopyBlob(string, string, string, CopyBlobRequestOptions, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Começa a copiar um blob ou um arquivo de armazenamento do Azure para um blob de destino.

    Para obter uma cópia assíncrona (por padrão), essa operação retorna um objeto, incluindo uma ID de cópia que você pode usar para verificar ou anular a operação de cópia. O serviço Blob copia blobs em uma base de melhor esforço.

    O blob de origem para uma operação de cópia assíncrona pode ser um blob de blocos, um blob de acréscimo, um blob de página ou um arquivo de armazenamento do Azure.


    Consulte https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob para obter mais detalhes.
  syntax:
    content: 'function startCopyBlob(sourceUri: string, targetcontainer: string, targetblob: string, options: CopyBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: sourceUri
      type:
      - string
      description: URI de blob do código-fonte.
    - id: targetcontainer
      type:
      - string
      description: ''
    - id: targetblob
      type:
      - string
      description: ''
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CopyBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de blob.
                                                                              `response` contém informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.startCopyBlob_1
  name: startCopyBlob(string, string, string, ErrorOrResult<BlobResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Começa a copiar um blob ou um arquivo de armazenamento do Azure para um blob de destino.

    Para obter uma cópia assíncrona (por padrão), essa operação retorna um objeto, incluindo uma ID de cópia que você pode usar para verificar ou anular a operação de cópia. O serviço Blob copia blobs em uma base de melhor esforço.

    O blob de origem para uma operação de cópia assíncrona pode ser um blob de blocos, um blob de acréscimo, um blob de página ou um arquivo de armazenamento do Azure.


    Consulte https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob para obter mais detalhes.
  syntax:
    content: 'function startCopyBlob(sourceUri: string, targetcontainer: string, targetblob: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: sourceUri
      type:
      - string
      description: ''
    - id: targetcontainer
      type:
      - string
      description: ''
    - id: targetblob
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.undeleteBlob_1
  name: undeleteBlob(string, string, ConditionalRequestOption, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    A operação de Blob undelete restaura o conteúdo e metadados de blob com exclusão reversível ou instantâneo.

    Tentando cancelar a exclusão de um blob ou instantâneo que não é excluído por software terá êxito sem quaisquer alterações.
  syntax:
    content: 'function undeleteBlob(container: string, blob: string, options: ConditionalRequestOption, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ConditionalRequestOption
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.undeleteBlob
  name: undeleteBlob(string, string, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    A operação de Blob undelete restaura o conteúdo e metadados de blob com exclusão reversível ou instantâneo.

    Tentando cancelar a exclusão de um blob ou instantâneo que não é excluído por software terá êxito sem quaisquer alterações.
  syntax:
    content: 'function undeleteBlob(container: string, blob: string, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: O nome do contêiner.
    - id: blob
      type:
      - string
      description: O nome do blob.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` conterá informações se ocorrer um erro; `response` conterá informações relacionadas a essa operação.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.withFilter
  name: withFilter(IFilter)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Associe uma operação de filtragem com este BlobService. As operações de filtragem podem incluir registro em log, repetição automática, etc. Operações do filtro são objetos que implementam um método com a assinatura: "identificador de função (requestOptions, ao lado)".


    Após fazer seu pré-processamento nas opções de solicitação, o método precisará chamar "next", passando um retorno de chamada com a seguinte assinatura: assinatura:

        "function (returnObject, finalCallback, next)"

    Nesse retorno de chamada, e após processar o returnObject (a resposta da solicitação ao servidor), o retorno de chamada precisará invocar avançar, se ele existir, para continuar processando outros filtros ou simplesmente invocar finalCallback para terminar a invocação de serviço.
  syntax:
    content: 'function withFilter(newFilter: IFilter)'
    parameters:
    - id: newFilter
      type:
      - azure-storage.azurestorage.common.filters.IFilter
      description: ''
    return:
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService
  package: azure-storage
references:
- uid: azure-storage.azurestorage.common.RequestOptions
  name: RequestOptions
  spec.typeScript:
  - name: RequestOptions
    fullName: RequestOptions
    uid: azure-storage.azurestorage.common.RequestOptions
- uid: azure-storage.azurestorage.common.filters.Next
  name: Next
  spec.typeScript:
  - name: Next
    fullName: Next
    uid: azure-storage.azurestorage.common.filters.Next
- uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryRequestOptions
  name: IRetryRequestOptions
  spec.typeScript:
  - name: IRetryRequestOptions
    fullName: IRetryRequestOptions
    uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryRequestOptions
- uid: azure-storage.azurestorage.common.filters.IFilter
  name: IFilter
  spec.typeScript:
  - name: IFilter
    fullName: IFilter
    uid: azure-storage.azurestorage.common.filters.IFilter
- uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryContext
  name: IRetryContext
  spec.typeScript:
  - name: IRetryContext
    fullName: IRetryContext
    uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryContext
- uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter
  name: RetryPolicyFilter
  spec.typeScript:
  - name: RetryPolicyFilter
    fullName: RetryPolicyFilter
    uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter
- uid: azure-storage.Map<any>
  name: Map<any>
  spec.typeScript:
  - name: Map
    fullName: Map
    uid: azure-storage.Map
  - name: <any>
    fullName: <any>
- uid: azure-storage.Map<string>
  name: Map<string>
  spec.typeScript:
  - name: Map
    fullName: Map
    uid: azure-storage.Map
  - name: <string>
    fullName: <string>
- uid: azure-storage.azurestorage.common.http.webresource.WebResource
  name: WebResource
  spec.typeScript:
  - name: WebResource
    fullName: WebResource
    uid: azure-storage.azurestorage.common.http.webresource.WebResource
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
  name: ServiceProperties
  spec.typeScript:
  - name: ServiceProperties
    fullName: ServiceProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.StaticWebsiteProperties
  name: StaticWebsiteProperties
  spec.typeScript:
  - name: StaticWebsiteProperties
    fullName: StaticWebsiteProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.StaticWebsiteProperties
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.RetentionPolicy
  name: RetentionPolicy
  spec.typeScript:
  - name: RetentionPolicy
    fullName: RetentionPolicy
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.RetentionPolicy
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.DeleteRetentionPolicyProperties
  name: DeleteRetentionPolicyProperties
  spec.typeScript:
  - name: DeleteRetentionPolicyProperties
    fullName: DeleteRetentionPolicyProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.DeleteRetentionPolicyProperties
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.MetricsProperties
  name: MetricsProperties
  spec.typeScript:
  - name: MetricsProperties
    fullName: MetricsProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.MetricsProperties
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.LoggingProperties
  name: LoggingProperties
  spec.typeScript:
  - name: LoggingProperties
    fullName: LoggingProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.LoggingProperties
- uid: azure-storage.azurestorage.StorageHost
  name: StorageHost
  spec.typeScript:
  - name: StorageHost
    fullName: StorageHost
    uid: azure-storage.azurestorage.StorageHost
- uid: azure-storage.azurestorage.common.util.storageutilities.LocationMode
  name: LocationMode
  spec.typeScript:
  - name: LocationMode
    fullName: LocationMode
    uid: azure-storage.azurestorage.common.util.storageutilities.LocationMode
- uid: azure-storage.azurestorage.common.diagnostics.logger.Logger
  name: Logger
  spec.typeScript:
  - name: Logger
    fullName: Logger
    uid: azure-storage.azurestorage.common.diagnostics.logger.Logger
- uid: azure-storage.azurestorage.common.services.storageserviceclient.Proxy
  name: Proxy
  spec.typeScript:
  - name: Proxy
    fullName: Proxy
    uid: azure-storage.azurestorage.common.services.storageserviceclient.Proxy
- uid: azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient
  name: StorageServiceClient
  spec.typeScript:
  - name: StorageServiceClient
    fullName: StorageServiceClient
    uid: azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient
- uid: azure-storage.azurestorage.AccessConditions
  name: AccessConditions
  spec.typeScript:
  - name: AccessConditions
    fullName: AccessConditions
    uid: azure-storage.azurestorage.AccessConditions
- uid: azure-storage.azurestorage.common.AccessPolicy
  name: AccessPolicy
  spec.typeScript:
  - name: AccessPolicy
    fullName: AccessPolicy
    uid: azure-storage.azurestorage.common.AccessPolicy
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
  name: LeaseRequestOptions
  spec.typeScript:
  - name: LeaseRequestOptions
    fullName: LeaseRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ConditionalRequestOption
  name: ConditionalRequestOption
  spec.typeScript:
  - name: ConditionalRequestOption
    fullName: ConditionalRequestOption
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ConditionalRequestOption
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.Block[]
  name: Block[]
  spec.typeScript:
  - name: Block
    fullName: Block
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.Block
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
  name: ContainerOptions
  spec.typeScript:
  - name: ContainerOptions
    fullName: ContainerOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
  name: ContainerResult
  spec.typeScript:
  - name: ContainerResult
    fullName: ContainerResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
- uid: '[key: string]: azure-storage.azurestorage.common.AccessPolicy'
  name: AccessPolicy
  spec.typeScript:
  - name: '[key: string]: '
    fullName: '[key: string]: '
  - name: AccessPolicy
    fullName: AccessPolicy
    uid: azure-storage.azurestorage.common.AccessPolicy
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
  name: BlobRequestOptions
  spec.typeScript:
  - name: BlobRequestOptions
    fullName: BlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
- uid: azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  name: SpeedSummary
  spec.typeScript:
  - name: SpeedSummary
    fullName: SpeedSummary
    uid: azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
  name: CreateBlobRequestOptions
  spec.typeScript:
  - name: CreateBlobRequestOptions
    fullName: CreateBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
- uid: azure-storage.azurestorage.common.ContinuationToken
  name: ContinuationToken
  spec.typeScript:
  - name: ContinuationToken
    fullName: ContinuationToken
    uid: azure-storage.azurestorage.common.ContinuationToken
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobDirectoryResult[]
  name: BlobDirectoryResult[]
  spec.typeScript:
  - name: BlobDirectoryResult
    fullName: BlobDirectoryResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobDirectoryResult
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsSegmentedRequestOptions
  name: ListBlobsSegmentedRequestOptions
  spec.typeScript:
  - name: ListBlobsSegmentedRequestOptions
    fullName: ListBlobsSegmentedRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsSegmentedRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult[]
  name: BlobResult[]
  spec.typeScript:
  - name: BlobResult
    fullName: BlobResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult[]
  name: ContainerResult[]
  spec.typeScript:
  - name: ContainerResult
    fullName: ContainerResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
  - name: '[]'
    fullName: '[]'
- uid: string | azure-storage.azurestorage.StorageHost
  name: StorageHost
  spec.typeScript:
  - name: 'string | '
    fullName: 'string | '
  - name: StorageHost
    fullName: StorageHost
    uid: azure-storage.azurestorage.StorageHost
- uid: azure-storage.azurestorage.ErrorOrResponse
  name: ErrorOrResponse
  spec.typeScript:
  - name: ErrorOrResponse
    fullName: ErrorOrResponse
    uid: azure-storage.azurestorage.ErrorOrResponse
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
  name: LeaseResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: LeaseResult
    fullName: LeaseResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AcquireLeaseRequestOptions
  name: AcquireLeaseRequestOptions
  spec.typeScript:
  - name: AcquireLeaseRequestOptions
    fullName: AcquireLeaseRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AcquireLeaseRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AppendBlobRequestOptions
  name: AppendBlobRequestOptions
  spec.typeScript:
  - name: AppendBlobRequestOptions
    fullName: AppendBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AppendBlobRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
  name: BlobResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: BlobResult
    fullName: BlobResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BreakLeaseRequestOptions
  name: BreakLeaseRequestOptions
  spec.typeScript:
  - name: BreakLeaseRequestOptions
    fullName: BreakLeaseRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BreakLeaseRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.PutBlockListRequest
  name: PutBlockListRequest
  spec.typeScript:
  - name: PutBlockListRequest
    fullName: PutBlockListRequest
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.PutBlockListRequest
- uid: azure-storage.azurestorage.ErrorOrResult<string>
  name: ErrorOrResult<string>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <string>
    fullName: <string>
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
  name: CreateBlockBlobRequestOptions
  spec.typeScript:
  - name: CreateBlockBlobRequestOptions
    fullName: CreateBlockBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockRequestOptions
  name: CreateBlockRequestOptions
  spec.typeScript:
  - name: CreateBlockRequestOptions
    fullName: CreateBlockRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
  name: ContainerResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ContainerResult
    fullName: ContainerResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateContainerOptions
  name: CreateContainerOptions
  spec.typeScript:
  - name: CreateContainerOptions
    fullName: CreateContainerOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateContainerOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
  name: CreatePageBlobOptions
  spec.typeScript:
  - name: CreatePageBlobOptions
    fullName: CreatePageBlobOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
  name: GetBlobRequestOptions
  spec.typeScript:
  - name: GetBlobRequestOptions
    fullName: GetBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.DeleteBlobRequestOptions
  name: DeleteBlobRequestOptions
  spec.typeScript:
  - name: DeleteBlobRequestOptions
    fullName: DeleteBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.DeleteBlobRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<boolean>
  name: ErrorOrResult<boolean>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <boolean>
    fullName: <boolean>
- uid: azure-storage.azurestorage.common.SharedAccessPolicy
  name: SharedAccessPolicy
  spec.typeScript:
  - name: SharedAccessPolicy
    fullName: SharedAccessPolicy
    uid: azure-storage.azurestorage.common.SharedAccessPolicy
- uid: azure-storage.azurestorage.common.ContentSettingsHeaders
  name: ContentSettingsHeaders
  spec.typeScript:
  - name: ContentSettingsHeaders
    fullName: ContentSettingsHeaders
    uid: azure-storage.azurestorage.common.ContentSettingsHeaders
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.AccountProperties>
  name: AccountProperties>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: AccountProperties
    fullName: AccountProperties
    uid: azure-storage.azurestorage.common.models.AccountProperties
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobToText
  name: BlobToText
  spec.typeScript:
  - name: BlobToText
    fullName: BlobToText
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobToText
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult>
  name: ContainerAclResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ContainerAclResult
    fullName: ContainerAclResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.RangeDiff[]>
  name: RangeDiff[]>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: RangeDiff
    fullName: RangeDiff
    uid: azure-storage.azurestorage.common.RangeDiff
  - name: '[]>'
    fullName: '[]>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties>
  name: BlobServiceProperties>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: BlobServiceProperties
    fullName: BlobServiceProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServiceStats>
  name: ServiceStats>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ServiceStats
    fullName: ServiceStats
    uid: azure-storage.azurestorage.common.models.ServiceStats
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobDirectoriesResult>
  name: ListBlobDirectoriesResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListBlobDirectoriesResult
    fullName: ListBlobDirectoriesResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobDirectoriesResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobPrefixesSegmentedRequestOptions
  name: ListBlobPrefixesSegmentedRequestOptions
  spec.typeScript:
  - name: ListBlobPrefixesSegmentedRequestOptions
    fullName: ListBlobPrefixesSegmentedRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobPrefixesSegmentedRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult>
  name: ListBlobsResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListBlobsResult
    fullName: ListBlobsResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlockListResult>
  name: BlockListResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: BlockListResult
    fullName: BlockListResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlockListResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerOptions
  name: ListContainerOptions
  spec.typeScript:
  - name: ListContainerOptions
    fullName: ListContainerOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult>
  name: ListContainerResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListContainerResult
    fullName: ListContainerResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.Range[]>
  name: Range[]>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: Range
    fullName: Range
    uid: azure-storage.azurestorage.common.Range
  - name: '[]>'
    fullName: '[]>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.SetBlobPropertiesRequestOptions
  name: SetBlobPropertiesRequestOptions
  spec.typeScript:
  - name: SetBlobPropertiesRequestOptions
    fullName: SetBlobPropertiesRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.SetBlobPropertiesRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclOptions
  name: ContainerAclOptions
  spec.typeScript:
  - name: ContainerAclOptions
    fullName: ContainerAclOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclOptions
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
  name: BlobServiceProperties
  spec.typeScript:
  - name: BlobServiceProperties
    fullName: BlobServiceProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CopyBlobRequestOptions
  name: CopyBlobRequestOptions
  spec.typeScript:
  - name: CopyBlobRequestOptions
    fullName: CopyBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CopyBlobRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService
  name: BlobService
  spec.typeScript:
  - name: BlobService
    fullName: BlobService
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService
- uid: azure-storage.azurestorage.services.file.FileService.FileServiceOptions
  name: FileServiceOptions
  spec.typeScript:
  - name: FileServiceOptions
    fullName: FileServiceOptions
    uid: azure-storage.azurestorage.services.file.FileService.FileServiceOptions
- uid: azure-storage.azurestorage.services.file.FileService.ShareResult[]
  name: ShareResult[]
  spec.typeScript:
  - name: ShareResult
    fullName: ShareResult
    uid: azure-storage.azurestorage.services.file.FileService.ShareResult
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.file.FileService.ShareResult
  name: ShareResult
  spec.typeScript:
  - name: ShareResult
    fullName: ShareResult
    uid: azure-storage.azurestorage.services.file.FileService.ShareResult
- uid: azure-storage.Map<azure-storage.azurestorage.common.AccessPolicy>
  name: AccessPolicy>
  spec.typeScript:
  - name: Map
    fullName: Map
    uid: azure-storage.Map
  - name: <
    fullName: <
  - name: AccessPolicy
    fullName: AccessPolicy
    uid: azure-storage.azurestorage.common.AccessPolicy
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
  name: FileResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: FileResult
    fullName: FileResult
    uid: azure-storage.azurestorage.services.file.FileService.FileResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.CreateDirectoryRequestOptions
  name: CreateDirectoryRequestOptions
  spec.typeScript:
  - name: CreateDirectoryRequestOptions
    fullName: CreateDirectoryRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CreateDirectoryRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
  name: DirectoryResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: DirectoryResult
    fullName: DirectoryResult
    uid: azure-storage.azurestorage.services.file.FileService.DirectoryResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
  name: CreateFileRequestOptions
  spec.typeScript:
  - name: CreateFileRequestOptions
    fullName: CreateFileRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.CreateRangeRequestOptions
  name: CreateRangeRequestOptions
  spec.typeScript:
  - name: CreateRangeRequestOptions
    fullName: CreateRangeRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CreateRangeRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.GetFileRequestOptions
  name: GetFileRequestOptions
  spec.typeScript:
  - name: GetFileRequestOptions
    fullName: GetFileRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.GetFileRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.CreateShareRequestOptions
  name: CreateShareRequestOptions
  spec.typeScript:
  - name: CreateShareRequestOptions
    fullName: CreateShareRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CreateShareRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
  name: ShareResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ShareResult
    fullName: ShareResult
    uid: azure-storage.azurestorage.services.file.FileService.ShareResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.DeleteShareOptions
  name: DeleteShareOptions
  spec.typeScript:
  - name: DeleteShareOptions
    fullName: DeleteShareOptions
    uid: azure-storage.azurestorage.services.file.FileService.DeleteShareOptions
- uid: azure-storage.azurestorage.services.file.FileService.FileToText
  name: FileToText
  spec.typeScript:
  - name: FileToText
    fullName: FileToText
    uid: azure-storage.azurestorage.services.file.FileService.FileToText
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties>
  name: ServiceProperties>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ServiceProperties
    fullName: ServiceProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareAclResult>
  name: ShareAclResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ShareAclResult
    fullName: ShareAclResult
    uid: azure-storage.azurestorage.services.file.FileService.ShareAclResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.ListRequestOptions
  name: ListRequestOptions
  spec.typeScript:
  - name: ListRequestOptions
    fullName: ListRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.ListRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListFilesAndDirectoriesResult>
  name: ListFilesAndDirectoriesResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListFilesAndDirectoriesResult
    fullName: ListFilesAndDirectoriesResult
    uid: azure-storage.azurestorage.services.file.FileService.ListFilesAndDirectoriesResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.ListRangeRequestOptions
  name: ListRangeRequestOptions
  spec.typeScript:
  - name: ListRangeRequestOptions
    fullName: ListRangeRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.ListRangeRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.ListShareRequestOptions
  name: ListShareRequestOptions
  spec.typeScript:
  - name: ListShareRequestOptions
    fullName: ListShareRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.ListShareRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListSharesResult>
  name: ListSharesResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListSharesResult
    fullName: ListSharesResult
    uid: azure-storage.azurestorage.services.file.FileService.ListSharesResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.SetFilePropertiesRequestOptions
  name: SetFilePropertiesRequestOptions
  spec.typeScript:
  - name: SetFilePropertiesRequestOptions
    fullName: SetFilePropertiesRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.SetFilePropertiesRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.ShareProperties
  name: ShareProperties
  spec.typeScript:
  - name: ShareProperties
    fullName: ShareProperties
    uid: azure-storage.azurestorage.services.file.FileService.ShareProperties
- uid: azure-storage.azurestorage.services.file.FileService.CopyFileRequestOptions
  name: CopyFileRequestOptions
  spec.typeScript:
  - name: CopyFileRequestOptions
    fullName: CopyFileRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CopyFileRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService
  name: FileService
  spec.typeScript:
  - name: FileService
    fullName: FileService
    uid: azure-storage.azurestorage.services.file.FileService
- uid: azure-storage.azurestorage.services.queue.QueueService.QueueResult[]
  name: QueueResult[]
  spec.typeScript:
  - name: QueueResult
    fullName: QueueResult
    uid: azure-storage.azurestorage.services.queue.QueueService.QueueResult
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.queue.QueueMessageEncoder
  name: QueueMessageEncoder
  spec.typeScript:
  - name: QueueMessageEncoder
    fullName: QueueMessageEncoder
    uid: azure-storage.azurestorage.services.queue.QueueMessageEncoder
- uid: azure-storage.azurestorage.services.queue.QueueService.CreateMessageRequestOptions
  name: CreateMessageRequestOptions
  spec.typeScript:
  - name: CreateMessageRequestOptions
    fullName: CreateMessageRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.CreateMessageRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult>
  name: QueueMessageResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: QueueMessageResult
    fullName: QueueMessageResult
    uid: azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.queue.QueueService.CreateQueueRequestOptions
  name: CreateQueueRequestOptions
  spec.typeScript:
  - name: CreateQueueRequestOptions
    fullName: CreateQueueRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.CreateQueueRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueResult>
  name: QueueResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: QueueResult
    fullName: QueueResult
    uid: azure-storage.azurestorage.services.queue.QueueService.QueueResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.queue.QueueService.GetMessageRequestOptions
  name: GetMessageRequestOptions
  spec.typeScript:
  - name: GetMessageRequestOptions
    fullName: GetMessageRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.GetMessageRequestOptions
- uid: azure-storage.azurestorage.services.queue.QueueService.GetMessagesRequestOptions
  name: GetMessagesRequestOptions
  spec.typeScript:
  - name: GetMessagesRequestOptions
    fullName: GetMessagesRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.GetMessagesRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult[]>
  name: QueueMessageResult[]>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: QueueMessageResult
    fullName: QueueMessageResult
    uid: azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult
  - name: '[]>'
    fullName: '[]>'
- uid: azure-storage.azurestorage.services.queue.QueueService.ListQueuesRequestOptions
  name: ListQueuesRequestOptions
  spec.typeScript:
  - name: ListQueuesRequestOptions
    fullName: ListQueuesRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.ListQueuesRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.ListQueueResult>
  name: ListQueueResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListQueueResult
    fullName: ListQueueResult
    uid: azure-storage.azurestorage.services.queue.QueueService.ListQueueResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.queue.QueueService.PeekMessagesRequestOptions
  name: PeekMessagesRequestOptions
  spec.typeScript:
  - name: PeekMessagesRequestOptions
    fullName: PeekMessagesRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.PeekMessagesRequestOptions
- uid: azure-storage.azurestorage.services.queue.QueueService.UpdateMessageRequestOptions
  name: UpdateMessageRequestOptions
  spec.typeScript:
  - name: UpdateMessageRequestOptions
    fullName: UpdateMessageRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.UpdateMessageRequestOptions
- uid: azure-storage.azurestorage.services.queue.QueueService
  name: QueueService
  spec.typeScript:
  - name: QueueService
    fullName: QueueService
    uid: azure-storage.azurestorage.services.queue.QueueService
- uid: azure-storage.azurestorage.services.table.TableService.BatchResponse
  name: BatchResponse
  spec.typeScript:
  - name: BatchResponse
    fullName: BatchResponse
    uid: azure-storage.azurestorage.services.table.TableService.BatchResponse
- uid: azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
  name: TableEntityRequestOptions
  spec.typeScript:
  - name: TableEntityRequestOptions
    fullName: TableEntityRequestOptions
    uid: azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
- uid: azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
  name: ListTablesContinuationToken
  spec.typeScript:
  - name: ListTablesContinuationToken
    fullName: ListTablesContinuationToken
    uid: azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
- uid: azure-storage.azurestorage.services.table.TableService.TableContinuationToken
  name: TableContinuationToken
  spec.typeScript:
  - name: TableContinuationToken
    fullName: TableContinuationToken
    uid: azure-storage.azurestorage.services.table.TableService.TableContinuationToken
- uid: azure-storage.azurestorage.services.table.TableService.PropertyResolver
  name: PropertyResolver
  spec.typeScript:
  - name: PropertyResolver
    fullName: PropertyResolver
    uid: azure-storage.azurestorage.services.table.TableService.PropertyResolver
- uid: azure-storage.azurestorage.services.table.TableService.TableAccessPolicy
  name: TableAccessPolicy
  spec.typeScript:
  - name: TableAccessPolicy
    fullName: TableAccessPolicy
    uid: azure-storage.azurestorage.services.table.TableService.TableAccessPolicy
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
  name: TableResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: TableResult
    fullName: TableResult
    uid: azure-storage.azurestorage.services.table.TableService.TableResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.table.TableBatch
  name: TableBatch
  spec.typeScript:
  - name: TableBatch
    fullName: TableBatch
    uid: azure-storage.azurestorage.services.table.TableBatch
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.BatchResult[]>
  name: BatchResult[]>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: BatchResult
    fullName: BatchResult
    uid: azure-storage.azurestorage.services.table.TableService.BatchResult
  - name: '[]>'
    fullName: '[]>'
- uid: azure-storage.azurestorage.services.table.TableService.TableSharedAccessPolicy
  name: TableSharedAccessPolicy
  spec.typeScript:
  - name: TableSharedAccessPolicy
    fullName: TableSharedAccessPolicy
    uid: azure-storage.azurestorage.services.table.TableService.TableSharedAccessPolicy
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.GetTableAclResult>
  name: GetTableAclResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: GetTableAclResult
    fullName: GetTableAclResult
    uid: azure-storage.azurestorage.services.table.TableService.GetTableAclResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.table.TableService.InsertEntityRequestOptions
  name: InsertEntityRequestOptions
  spec.typeScript:
  - name: InsertEntityRequestOptions
    fullName: InsertEntityRequestOptions
    uid: azure-storage.azurestorage.services.table.TableService.InsertEntityRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<T | azure-storage.azurestorage.services.table.TableService.EntityMetadata>
  name: EntityMetadata>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: '<T | '
    fullName: '<T | '
  - name: EntityMetadata
    fullName: EntityMetadata
    uid: azure-storage.azurestorage.services.table.TableService.EntityMetadata
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
  name: EntityMetadata>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: EntityMetadata
    fullName: EntityMetadata
    uid: azure-storage.azurestorage.services.table.TableService.EntityMetadata
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.table.TableService.ListTablesRequestOptions
  name: ListTablesRequestOptions
  spec.typeScript:
  - name: ListTablesRequestOptions
    fullName: ListTablesRequestOptions
    uid: azure-storage.azurestorage.services.table.TableService.ListTablesRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.ListTablesResponse>
  name: ListTablesResponse>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListTablesResponse
    fullName: ListTablesResponse
    uid: azure-storage.azurestorage.services.table.TableService.ListTablesResponse
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.table.TableQuery
  name: TableQuery
  spec.typeScript:
  - name: TableQuery
    fullName: TableQuery
    uid: azure-storage.azurestorage.services.table.TableQuery
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult<T>>
  name: QueryEntitiesResult<T>>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: QueryEntitiesResult
    fullName: QueryEntitiesResult
    uid: azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult
  - name: <T>>
    fullName: <T>>
- uid: azure-storage.azurestorage.ErrorOrResult<T>
  name: ErrorOrResult<T>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <T>
    fullName: <T>
- uid: azure-storage.azurestorage.ErrorOrResult<Object>
  name: ErrorOrResult<Object>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <Object>
    fullName: <Object>
- uid: azure-storage.azurestorage.services.table.TableService
  name: TableService
  spec.typeScript:
  - name: TableService
    fullName: TableService
    uid: azure-storage.azurestorage.services.table.TableService
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<Buffer>
  name: EntityProperty<Buffer>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <Buffer>
    fullName: <Buffer>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<boolean>
  name: EntityProperty<boolean>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <boolean>
    fullName: <boolean>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<Date>
  name: EntityProperty<Date>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <Date>
    fullName: <Date>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<number>
  name: EntityProperty<number>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <number>
    fullName: <number>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<any>
  name: EntityProperty<any>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <any>
    fullName: <any>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<string>
  name: EntityProperty<string>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <string>
    fullName: <string>
- uid: azure-storage.azurestorage.services.table.TableOperation[]
  name: TableOperation[]
  spec.typeScript:
  - name: TableOperation
    fullName: TableOperation
    uid: azure-storage.azurestorage.services.table.TableOperation
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.table.TableOperation
  name: TableOperation
  spec.typeScript:
  - name: TableOperation
    fullName: TableOperation
    uid: azure-storage.azurestorage.services.table.TableOperation
- uid: azure-storage.azurestorage.StorageError | Error
  name: StorageError | Error
  spec.typeScript:
  - name: StorageError
    fullName: StorageError
    uid: azure-storage.azurestorage.StorageError
  - name: " | Error"
    fullName: " | Error"
- uid: azure-storage.azurestorage.ServiceResponse
  name: ServiceResponse
  spec.typeScript:
  - name: ServiceResponse
    fullName: ServiceResponse
    uid: azure-storage.azurestorage.ServiceResponse
- uid: azure-storage.azurestorage.common.models.tokenCredential.TokenCredential
  name: TokenCredential
  spec.typeScript:
  - name: TokenCredential
    fullName: TokenCredential
    uid: azure-storage.azurestorage.common.models.tokenCredential.TokenCredential
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AcquireLeaseRequestOptions
  name: AcquireLeaseRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AppendBlobRequestOptions
  name: AppendBlobRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobDirectoryResult
  name: BlobDirectoryResult
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
  name: BlobRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult
  name: BlobResult
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobToText
  name: BlobToText
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.Block
  name: Block
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlockListResult
  name: BlockListResult
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BreakLeaseRequestOptions
  name: BreakLeaseRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ConditionalRequestOption
  name: ConditionalRequestOption
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclOptions
  name: ContainerAclOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult
  name: ContainerAclResult
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
  name: ContainerOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
  name: ContainerResult
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CopyBlobRequestOptions
  name: CopyBlobRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
  name: CreateBlobRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
  name: CreateBlockBlobRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockRequestOptions
  name: CreateBlockRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateContainerOptions
  name: CreateContainerOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
  name: CreatePageBlobOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.DeleteBlobRequestOptions
  name: DeleteBlobRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
  name: GetBlobRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
  name: LeaseRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult
  name: LeaseResult
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobDirectoriesResult
  name: ListBlobDirectoriesResult
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobPrefixesSegmentedRequestOptions
  name: ListBlobPrefixesSegmentedRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult
  name: ListBlobsResult
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsSegmentedRequestOptions
  name: ListBlobsSegmentedRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerOptions
  name: ListContainerOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult
  name: ListContainerResult
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListPageRangesRequestOptions
  name: ListPageRangesRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.PutBlockListRequest
  name: PutBlockListRequest
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.SetBlobPropertiesRequestOptions
  name: SetBlobPropertiesRequestOptions
