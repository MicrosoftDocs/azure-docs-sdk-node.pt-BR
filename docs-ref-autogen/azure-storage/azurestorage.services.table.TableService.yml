### YamlMime:UniversalReference
items:
  - uid: azure-storage.azurestorage.services.table.TableService
    name: TableService
    fullName: TableService
    children:
      - azure-storage.azurestorage.services.table.TableService.BatchResponse
      - azure-storage.azurestorage.services.table.TableService.BatchResult
      - azure-storage.azurestorage.services.table.TableService.createTable_1
      - azure-storage.azurestorage.services.table.TableService.createTable
      - azure-storage.azurestorage.services.table.TableService.createTableIfNotExists_1
      - azure-storage.azurestorage.services.table.TableService.createTableIfNotExists
      - azure-storage.azurestorage.services.table.TableService.defaultClientRequestTimeoutInMs
      - azure-storage.azurestorage.services.table.TableService.defaultLocationMode
      - azure-storage.azurestorage.services.table.TableService.defaultMaximumExecutionTimeInMs
      - azure-storage.azurestorage.services.table.TableService.defaultPayloadFormat
      - azure-storage.azurestorage.services.table.TableService.defaultTimeoutIntervalInMs
      - azure-storage.azurestorage.services.table.TableService.deleteEntity_1
      - azure-storage.azurestorage.services.table.TableService.deleteEntity
      - azure-storage.azurestorage.services.table.TableService.deleteTable_1
      - azure-storage.azurestorage.services.table.TableService.deleteTable
      - azure-storage.azurestorage.services.table.TableService.deleteTableIfExists_1
      - azure-storage.azurestorage.services.table.TableService.deleteTableIfExists
      - azure-storage.azurestorage.services.table.TableService.doesTableExist_1
      - azure-storage.azurestorage.services.table.TableService.doesTableExist
      - azure-storage.azurestorage.services.table.TableService.enableGlobalHttpAgent
      - azure-storage.azurestorage.services.table.TableService.EntityMetadata
      - azure-storage.azurestorage.services.table.TableService.EntityProperty
      - azure-storage.azurestorage.services.table.TableService.executeBatch_1
      - azure-storage.azurestorage.services.table.TableService.executeBatch
      - azure-storage.azurestorage.services.table.TableService.generateSharedAccessSignature
      - azure-storage.azurestorage.services.table.TableService.generateSharedAccessSignatureWithVersion
      - azure-storage.azurestorage.services.table.TableService.getServiceProperties_1
      - azure-storage.azurestorage.services.table.TableService.getServiceProperties
      - azure-storage.azurestorage.services.table.TableService.getServiceStats_1
      - azure-storage.azurestorage.services.table.TableService.getServiceStats
      - azure-storage.azurestorage.services.table.TableService.getTableAcl_1
      - azure-storage.azurestorage.services.table.TableService.getTableAcl
      - azure-storage.azurestorage.services.table.TableService.GetTableAclResult
      - azure-storage.azurestorage.services.table.TableService.getUrl
      - azure-storage.azurestorage.services.table.TableService.insertEntity_2
      - azure-storage.azurestorage.services.table.TableService.insertEntity
      - azure-storage.azurestorage.services.table.TableService.insertEntity_1
      - azure-storage.azurestorage.services.table.TableService.InsertEntityRequestOptions
      - azure-storage.azurestorage.services.table.TableService.insertOrMergeEntity_1
      - azure-storage.azurestorage.services.table.TableService.insertOrMergeEntity
      - azure-storage.azurestorage.services.table.TableService.insertOrReplaceEntity_1
      - azure-storage.azurestorage.services.table.TableService.insertOrReplaceEntity
      - azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
      - azure-storage.azurestorage.services.table.TableService.ListTablesRequestOptions
      - azure-storage.azurestorage.services.table.TableService.ListTablesResponse
      - azure-storage.azurestorage.services.table.TableService.listTablesSegmented_1
      - azure-storage.azurestorage.services.table.TableService.listTablesSegmented
      - azure-storage.azurestorage.services.table.TableService.listTablesSegmentedWithPrefix_1
      - azure-storage.azurestorage.services.table.TableService.listTablesSegmentedWithPrefix
      - azure-storage.azurestorage.services.table.TableService.logger
      - azure-storage.azurestorage.services.table.TableService.mergeEntity_1
      - azure-storage.azurestorage.services.table.TableService.mergeEntity
      - azure-storage.azurestorage.services.table.TableService.PropertyResolver
      - azure-storage.azurestorage.services.table.TableService.proxy
      - azure-storage.azurestorage.services.table.TableService.queryEntities_1
      - azure-storage.azurestorage.services.table.TableService.queryEntities
      - azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult
      - azure-storage.azurestorage.services.table.TableService.replaceEntity_1
      - azure-storage.azurestorage.services.table.TableService.replaceEntity
      - azure-storage.azurestorage.services.table.TableService.retrieveEntity_1
      - azure-storage.azurestorage.services.table.TableService.retrieveEntity
      - azure-storage.azurestorage.services.table.TableService.setProxy
      - azure-storage.azurestorage.services.table.TableService.setServiceProperties_1
      - azure-storage.azurestorage.services.table.TableService.setServiceProperties
      - azure-storage.azurestorage.services.table.TableService.setTableAcl_1
      - azure-storage.azurestorage.services.table.TableService.setTableAcl
      - azure-storage.azurestorage.services.table.TableService.TableAccessPolicy
      - azure-storage.azurestorage.services.table.TableService.TableContinuationToken
      - azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
      - azure-storage.azurestorage.services.table.TableService.TableResult
      - azure-storage.azurestorage.services.table.TableService.constructor
      - azure-storage.azurestorage.services.table.TableService.TableSharedAccessPolicy
      - azure-storage.azurestorage.services.table.TableService.useNagleAlgorithm
      - azure-storage.azurestorage.services.table.TableService.withFilter
    langs:
      - typeScript
    type: module
    summary: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.createTable_1
    name: 'createTable(string, ErrorOrResult<TableResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7e1d9-101">Cria uma nova tabela em uma conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-101">Creates a new table within a storage account.</span></span>
    syntax:
      content: 'function createTable(table: string, callback: ErrorOrResult<TableResult>)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-102">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-102">The table name.</span></span>
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
          description: |
            <span data-ttu-id="7e1d9-103">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as novas informações de tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-103">`error` will contain information if an error occurs; otherwise `result` will contain the new table information.</span></span>
                                                                                <span data-ttu-id="7e1d9-104">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-104">`response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.createTable
    name: 'createTable(string, RequestOptions, ErrorOrResult<TableResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7e1d9-105">Cria uma nova tabela em uma conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-105">Creates a new table within a storage account.</span></span>
    syntax:
      content: 'function createTable(table: string, options: RequestOptions, callback: ErrorOrResult<TableResult>)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-106">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-106">The table name.</span></span>
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
          description: |
            <span data-ttu-id="7e1d9-107">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as novas informações de tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-107">`error` will contain information if an error occurs; otherwise `result` will contain the new table information.</span></span>
                                                                                <span data-ttu-id="7e1d9-108">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-108">`response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.createTableIfNotExists_1
    name: 'createTableIfNotExists(string, ErrorOrResult<TableResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7e1d9-109">Cria uma nova tabela em uma conta de armazenamento, se ele não existir.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-109">Creates a new table within a storage account if it does not exists.</span></span>'
    syntax:
      content: 'function createTableIfNotExists(table: string, callback: ErrorOrResult<TableResult>)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-110">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-110">The table name.</span></span>
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
          description: |
            <span data-ttu-id="7e1d9-111">`error` conterá informações se ocorrer um erro; `result` estarão `true` se a tabela foi criada, false caso contrário, `response` conterá informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-111">`error` will contain information if an error occurs; `result` will be `true` if table was created, false otherwise `response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.createTableIfNotExists
    name: 'createTableIfNotExists(string, RequestOptions, ErrorOrResult<TableResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7e1d9-112">Cria uma nova tabela em uma conta de armazenamento, se ele não existir.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-112">Creates a new table within a storage account if it does not exists.</span></span>'
    syntax:
      content: 'function createTableIfNotExists(table: string, options: RequestOptions, callback: ErrorOrResult<TableResult>)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-113">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-113">The table name.</span></span>
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
          description: |
            <span data-ttu-id="7e1d9-114">`error` conterá informações se ocorrer um erro; `result` estarão `true` se a tabela foi criada, false caso contrário, `response` conterá informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-114">`error` will contain information if an error occurs; `result` will be `true` if table was created, false otherwise `response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.defaultClientRequestTimeoutInMs
    name: defaultClientRequestTimeoutInMs
    fullName: defaultClientRequestTimeoutInMs
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="7e1d9-115">O tempo limite padrão de solicitações de cliente, em milissegundos, para usar para a solicitação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-115">The default timeout of client requests, in milliseconds, to use for the request.</span></span>'
    syntax:
      content: 'defaultClientRequestTimeoutInMs: number'
      return:
        type:
          - number
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.defaultLocationMode
    name: defaultLocationMode
    fullName: defaultLocationMode
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="7e1d9-116">O modo do local padrão para solicitações feitas por meio do serviço.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-116">The default location mode for requests made via the service.</span></span>
    syntax:
      content: 'defaultLocationMode: LocationMode'
      return:
        type:
          - azure-storage.azurestorage.common.util.storageutilities.LocationMode
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.defaultMaximumExecutionTimeInMs
    name: defaultMaximumExecutionTimeInMs
    fullName: defaultMaximumExecutionTimeInMs
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="7e1d9-117">O padrão máximo tempo de execução em todas as tentativas possíveis, para solicitações feitas por meio do serviço.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-117">The default maximum execution time across all potential retries, for requests made via the service.</span></span>'
    syntax:
      content: 'defaultMaximumExecutionTimeInMs: number'
      return:
        type:
          - number
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.defaultPayloadFormat
    name: defaultPayloadFormat
    fullName: defaultPayloadFormat
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'defaultPayloadFormat: string'
      return:
        type:
          - string
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.defaultTimeoutIntervalInMs
    name: defaultTimeoutIntervalInMs
    fullName: defaultTimeoutIntervalInMs
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="7e1d9-118">O intervalo de tempo limite padrão, em milissegundos, a ser usado para solicitação feita por meio do serviço.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-118">The default timeout interval, in milliseconds, to use for request made via the service.</span></span>'
    syntax:
      content: 'defaultTimeoutIntervalInMs: number'
      return:
        type:
          - number
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.deleteEntity_1
    name: 'deleteEntity(string, T, ErrorOrResponse)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7e1d9-119">Exclui uma entidade dentro de uma tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-119">Deletes an entity within a table.</span></span> <span data-ttu-id="7e1d9-120">Para excluir condicionalmente com base em etag, conjunto de entidade [''.metadata''] [''etag''].</span><span class="sxs-lookup"><span data-stu-id="7e1d9-120">To delete conditionally based on etag, set entity[''.metadata''][''etag''].</span></span>'
    syntax:
      content: 'function deleteEntity<T>(table: string, entityDescriptor: T, callback: ErrorOrResponse)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-121">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-121">The table name.</span></span>
        - id: entityDescriptor
          type:
            - T
          description: <span data-ttu-id="7e1d9-122">O descritor de entidade.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-122">The entity descriptor.</span></span>
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResponse
          description: |
            <span data-ttu-id="7e1d9-123">`error` conterá informações se ocorrer um erro; `response` conterá informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-123">`error` will contain information if an error occurs; `response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.deleteEntity
    name: 'deleteEntity(string, T, RequestOptions, ErrorOrResponse)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7e1d9-124">Exclui uma entidade dentro de uma tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-124">Deletes an entity within a table.</span></span> <span data-ttu-id="7e1d9-125">Para excluir condicionalmente com base em etag, conjunto de entidade [''.metadata''] [''etag''].</span><span class="sxs-lookup"><span data-stu-id="7e1d9-125">To delete conditionally based on etag, set entity[''.metadata''][''etag''].</span></span>'
    syntax:
      content: 'function deleteEntity<T>(table: string, entityDescriptor: T, options: RequestOptions, callback: ErrorOrResponse)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-126">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-126">The table name.</span></span>
        - id: entityDescriptor
          type:
            - T
          description: <span data-ttu-id="7e1d9-127">O descritor de entidade.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-127">The entity descriptor.</span></span>
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResponse
          description: |
            <span data-ttu-id="7e1d9-128">`error` conterá informações se ocorrer um erro; `response` conterá informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-128">`error` will contain information if an error occurs; `response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.deleteTable_1
    name: 'deleteTable(string, ErrorOrResponse)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7e1d9-129">Exclui uma tabela de uma conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-129">Deletes a table from a storage account.</span></span>
    syntax:
      content: 'function deleteTable(table: string, callback: ErrorOrResponse)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-130">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-130">The table name.</span></span>
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResponse
          description: |
            <span data-ttu-id="7e1d9-131">`error` conterá informações se ocorrer um erro; `response` conterá informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-131">`error` will contain information if an error occurs; `response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.deleteTable
    name: 'deleteTable(string, RequestOptions, ErrorOrResponse)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7e1d9-132">Exclui uma tabela de uma conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-132">Deletes a table from a storage account.</span></span>
    syntax:
      content: 'function deleteTable(table: string, options: RequestOptions, callback: ErrorOrResponse)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-133">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-133">The table name.</span></span>
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResponse
          description: |
            <span data-ttu-id="7e1d9-134">`error` conterá informações se ocorrer um erro; `response` conterá informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-134">`error` will contain information if an error occurs; `response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.deleteTableIfExists_1
    name: 'deleteTableIfExists(string, ErrorOrResult<boolean>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7e1d9-135">Exclui uma tabela de uma conta de armazenamento, se ele existir.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-135">Deletes a table from a storage account, if it exists.</span></span>'
    syntax:
      content: 'function deleteTableIfExists(table: string, callback: ErrorOrResult<boolean>)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-136">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-136">The table name.</span></span>
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<boolean>
          description: |
            <span data-ttu-id="7e1d9-137">`error` conterá informações se ocorrer um erro; `result` estarão `true` se a tabela foi excluída, false caso contrário, `response` conterá informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-137">`error` will contain information if an error occurs; `result` will be `true` if table was deleted, false otherwise `response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.deleteTableIfExists
    name: 'deleteTableIfExists(string, RequestOptions, ErrorOrResult<boolean>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7e1d9-138">Exclui uma tabela de uma conta de armazenamento, se ele existir.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-138">Deletes a table from a storage account, if it exists.</span></span>'
    syntax:
      content: 'function deleteTableIfExists(table: string, options: RequestOptions, callback: ErrorOrResult<boolean>)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-139">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-139">The table name.</span></span>
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<boolean>
          description: |
            <span data-ttu-id="7e1d9-140">`error` conterá informações se ocorrer um erro; `result` estarão `true` se a tabela foi excluída, false caso contrário, `response` conterá informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-140">`error` will contain information if an error occurs; `result` will be `true` if table was deleted, false otherwise `response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.doesTableExist_1
    name: 'doesTableExist(string, ErrorOrResult<TableResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7e1d9-141">Verifica se há ou não existe uma tabela no serviço.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-141">Checks whether or not a table exists on the service.</span></span>
    syntax:
      content: 'function doesTableExist(table: string, callback: ErrorOrResult<TableResult>)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-142">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-142">The table name.</span></span>
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
          description: |
            <span data-ttu-id="7e1d9-143">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá true se a tabela existir, ou false se a tabela não existir.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-143">`error` will contain information if an error occurs; otherwise `result` will contain be true if the table exists, or false if the table does not exist.</span></span>
                                                                                <span data-ttu-id="7e1d9-144">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-144">`response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.doesTableExist
    name: 'doesTableExist(string, RequestOptions, ErrorOrResult<TableResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7e1d9-145">Verifica se há ou não existe uma tabela no serviço.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-145">Checks whether or not a table exists on the service.</span></span>
    syntax:
      content: 'function doesTableExist(table: string, options: RequestOptions, callback: ErrorOrResult<TableResult>)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-146">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-146">The table name.</span></span>
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
          description: |
            <span data-ttu-id="7e1d9-147">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá true se a tabela existir, ou false se a tabela não existir.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-147">`error` will contain information if an error occurs; otherwise `result` will contain be true if the table exists, or false if the table does not exist.</span></span>
                                                                                <span data-ttu-id="7e1d9-148">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-148">`response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.enableGlobalHttpAgent
    name: enableGlobalHttpAgent
    fullName: enableGlobalHttpAgent
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="7e1d9-149">Determina se o agente global de HTTP (s) está habilitado; True para usar o agente de HTTP (s) Global; Caso contrário, false para usar HTTP (s). Agent({keepAlive:True}).</span><span class="sxs-lookup"><span data-stu-id="7e1d9-149">Determines whether global HTTP(s) agent is enabled; true to use Global HTTP(s) agent; otherwise, false to use http(s).Agent({keepAlive:true}).</span></span>'
    syntax:
      content: 'enableGlobalHttpAgent: boolean'
      return:
        type:
          - boolean
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.executeBatch_1
    name: 'executeBatch(string, TableBatch, ErrorOrResult<BatchResult[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7e1d9-150">Executa as operações no lote.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-150">Executes the operations in the batch.</span></span>
    syntax:
      content: 'function executeBatch(table: string, batch: TableBatch, callback: ErrorOrResult<BatchResult[]>)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-151">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-151">The table name.</span></span>
        - id: batch
          type:
            - azure-storage.azurestorage.services.table.TableBatch
          description: <span data-ttu-id="7e1d9-152">O lote de tabela para executar.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-152">The table batch to execute.</span></span>
        - id: callback
          type:
            - 'azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.BatchResult[]>'
          description: |
            <span data-ttu-id="7e1d9-153">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as respostas para cada operação executada no lote; `result.entity` conterá as informações de entidade para cada operação executada.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-153">`error` will contain information if an error occurs; otherwise `result` will contain responses for each operation executed in the batch; `result.entity` will contain the entity information for each operation executed.</span></span>
                                                                                        <span data-ttu-id="7e1d9-154">`result.response` contém a resposta para cada operação executada.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-154">`result.response` will contain the response for each operations executed.</span></span>
                                                                                        <span data-ttu-id="7e1d9-155">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-155">`response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.executeBatch
    name: 'executeBatch(string, TableBatch, TableEntityRequestOptions, ErrorOrResult<BatchResult[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7e1d9-156">Executa as operações no lote.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-156">Executes the operations in the batch.</span></span>
    syntax:
      content: 'function executeBatch(table: string, batch: TableBatch, options: TableEntityRequestOptions, callback: ErrorOrResult<BatchResult[]>)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-157">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-157">The table name.</span></span>
        - id: batch
          type:
            - azure-storage.azurestorage.services.table.TableBatch
          description: <span data-ttu-id="7e1d9-158">O lote de tabela para executar.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-158">The table batch to execute.</span></span>
        - id: options
          type:
            - azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
          description: ''
        - id: callback
          type:
            - 'azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.BatchResult[]>'
          description: |
            <span data-ttu-id="7e1d9-159">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as respostas para cada operação executada no lote; `result.entity` conterá as informações de entidade para cada operação executada.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-159">`error` will contain information if an error occurs; otherwise `result` will contain responses for each operation executed in the batch; `result.entity` will contain the entity information for each operation executed.</span></span>
                                                                                        <span data-ttu-id="7e1d9-160">`result.response` contém a resposta para cada operação executada.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-160">`result.response` will contain the response for each operations executed.</span></span>
                                                                                        <span data-ttu-id="7e1d9-161">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-161">`response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.generateSharedAccessSignature
    name: 'generateSharedAccessSignature(string, TableSharedAccessPolicy)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7e1d9-162">Recupera um token de assinatura de acesso compartilhado.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-162">Retrieves a shared access signature token.</span></span>
    syntax:
      content: 'function generateSharedAccessSignature(table: string, sharedAccessPolicy: TableSharedAccessPolicy)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-163">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-163">The table name.</span></span>
        - id: sharedAccessPolicy
          type:
            - azure-storage.azurestorage.services.table.TableService.TableSharedAccessPolicy
          description: <span data-ttu-id="7e1d9-164">A política de acesso compartilhado.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-164">The shared access policy.</span></span>
      return:
        type:
          - string
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.generateSharedAccessSignatureWithVersion
    name: 'generateSharedAccessSignatureWithVersion(string, TableSharedAccessPolicy, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7e1d9-165">Recupera um token de assinatura de acesso compartilhado.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-165">Retrieves a shared access signature token.</span></span>
    syntax:
      content: 'function generateSharedAccessSignatureWithVersion(table: string, sharedAccessPolicy: TableSharedAccessPolicy, sasVersion: string)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-166">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-166">The table name.</span></span>
        - id: sharedAccessPolicy
          type:
            - azure-storage.azurestorage.services.table.TableService.TableSharedAccessPolicy
          description: <span data-ttu-id="7e1d9-167">A política de acesso compartilhado.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-167">The shared access policy.</span></span>
        - id: sasVersion
          type:
            - string
          description: ''
      return:
        type:
          - string
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.getServiceProperties_1
    name: getServiceProperties(ErrorOrResult<ServiceProperties>)
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7e1d9-168">Obtém as propriedades do serviço de tabela de uma conta de armazenamento, incluindo a análise de armazenamento do Azure.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-168">Gets the properties of a storage account’s Table service, including Azure Storage Analytics.</span></span>'
    syntax:
      content: 'function getServiceProperties(callback: ErrorOrResult<ServiceProperties>)'
      parameters:
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties>
          description: |
            <span data-ttu-id="7e1d9-169">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as propriedades.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-169">`error` will contain information if an error occurs; otherwise `result` will contain the properties.</span></span>
                                                                                    <span data-ttu-id="7e1d9-170">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-170">`response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.getServiceProperties
    name: 'getServiceProperties(RequestOptions, ErrorOrResult<ServiceProperties>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7e1d9-171">Obtém as propriedades do serviço de tabela de uma conta de armazenamento, incluindo a análise de armazenamento do Azure.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-171">Gets the properties of a storage account’s Table service, including Azure Storage Analytics.</span></span>'
    syntax:
      content: 'function getServiceProperties(options: RequestOptions, callback: ErrorOrResult<ServiceProperties>)'
      parameters:
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties>
          description: |
            <span data-ttu-id="7e1d9-172">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as propriedades.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-172">`error` will contain information if an error occurs; otherwise `result` will contain the properties.</span></span>
                                                                                    <span data-ttu-id="7e1d9-173">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-173">`response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.getServiceStats_1
    name: getServiceStats(ErrorOrResult<ServiceStats>)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7e1d9-174">Obtém as estatísticas do serviço para serviço de tabela de uma conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-174">Gets the service stats for a storage account’s Table service.</span></span>
    syntax:
      content: 'function getServiceStats(callback: ErrorOrResult<ServiceStats>)'
      parameters:
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServiceStats>
          description: |
            <span data-ttu-id="7e1d9-175">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as propriedades.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-175">`error` will contain information if an error occurs; otherwise `result` will contain the properties.</span></span>
                                                                                    <span data-ttu-id="7e1d9-176">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-176">`response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.getServiceStats
    name: 'getServiceStats(RequestOptions, ErrorOrResult<ServiceStats>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7e1d9-177">Obtém as estatísticas do serviço para serviço de tabela de uma conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-177">Gets the service stats for a storage account’s Table service.</span></span>
    syntax:
      content: 'function getServiceStats(options: RequestOptions, callback: ErrorOrResult<ServiceStats>)'
      parameters:
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServiceStats>
          description: |
            <span data-ttu-id="7e1d9-178">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as propriedades.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-178">`error` will contain information if an error occurs; otherwise `result` will contain the properties.</span></span>
                                                                                    <span data-ttu-id="7e1d9-179">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-179">`response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.getTableAcl_1
    name: 'getTableAcl(string, ErrorOrResult<GetTableAclResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7e1d9-180">Obtém a ACL da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-180">Gets the table's ACL.</span></span>
    syntax:
      content: 'function getTableAcl(table: string, callback: ErrorOrResult<GetTableAclResult>)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-181">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-181">The table name.</span></span>
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.GetTableAclResult>
          description: |
            <span data-ttu-id="7e1d9-182">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de ACL para a tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-182">`error` will contain information if an error occurs; otherwise `result` will contain the ACL information for the table.</span></span>
                                                                                     <span data-ttu-id="7e1d9-183">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-183">`response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.getTableAcl
    name: 'getTableAcl(string, RequestOptions, ErrorOrResult<GetTableAclResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7e1d9-184">Obtém a ACL da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-184">Gets the table's ACL.</span></span>
    syntax:
      content: 'function getTableAcl(table: string, options: RequestOptions, callback: ErrorOrResult<GetTableAclResult>)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-185">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-185">The table name.</span></span>
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.GetTableAclResult>
          description: |
            <span data-ttu-id="7e1d9-186">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de ACL para a tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-186">`error` will contain information if an error occurs; otherwise `result` will contain the ACL information for the table.</span></span>
                                                                                     <span data-ttu-id="7e1d9-187">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-187">`response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.getUrl
    name: 'getUrl(string, string, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getUrl(table: string, sasToken?: string, primary?: boolean)'
      parameters:
        - id: table
          type:
            - string
          description: ''
        - id: sasToken
          type:
            - string
          description: ''
          optional: true
        - id: primary
          type:
            - boolean
          description: ''
          optional: true
      return:
        type:
          - string
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.insertEntity_2
    name: 'insertEntity(string, T, ErrorOrResult<EntityMetadata>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7e1d9-188">Insere uma nova entidade em uma tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-188">Inserts a new entity into a table.</span></span>
    syntax:
      content: 'function insertEntity<T>(table: string, entityDescriptor: T, callback: ErrorOrResult<EntityMetadata>)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-189">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-189">The table name.</span></span>
        - id: entityDescriptor
          type:
            - T
          description: <span data-ttu-id="7e1d9-190">O descritor de entidade.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-190">The entity descriptor.</span></span>
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
          description: |
            <span data-ttu-id="7e1d9-191">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de entidade.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-191">`error` will contain information if an error occurs; otherwise `result` will contain the entity information.</span></span>
                                                                                        <span data-ttu-id="7e1d9-192">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-192">`response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.insertEntity
    name: 'insertEntity(string, T, InsertEntityRequestOptions, ErrorOrResult<T | EntityMetadata>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7e1d9-193">Insere uma nova entidade em uma tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-193">Inserts a new entity into a table.</span></span>
    syntax:
      content: 'function insertEntity<T>(table: string, entityDescriptor: T, options: InsertEntityRequestOptions, callback: ErrorOrResult<T | EntityMetadata>)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-194">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-194">The table name.</span></span>
        - id: entityDescriptor
          type:
            - T
          description: <span data-ttu-id="7e1d9-195">O descritor de entidade.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-195">The entity descriptor.</span></span>
        - id: options
          type:
            - azure-storage.azurestorage.services.table.TableService.InsertEntityRequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<T | azure-storage.azurestorage.services.table.TableService.EntityMetadata>
          description: |
            <span data-ttu-id="7e1d9-196">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de entidade.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-196">`error` will contain information if an error occurs; otherwise `result` will contain the entity information.</span></span>
                                                                                        <span data-ttu-id="7e1d9-197">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-197">`response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.insertEntity_1
    name: 'insertEntity(string, T, RequestOptions, ErrorOrResult<EntityMetadata>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7e1d9-198">Insere uma nova entidade em uma tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-198">Inserts a new entity into a table.</span></span>
    syntax:
      content: 'function insertEntity<T>(table: string, entityDescriptor: T, options: RequestOptions, callback: ErrorOrResult<EntityMetadata>)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-199">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-199">The table name.</span></span>
        - id: entityDescriptor
          type:
            - T
          description: <span data-ttu-id="7e1d9-200">O descritor de entidade.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-200">The entity descriptor.</span></span>
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
          description: |
            <span data-ttu-id="7e1d9-201">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de entidade.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-201">`error` will contain information if an error occurs; otherwise `result` will contain the entity information.</span></span>
                                                                                        <span data-ttu-id="7e1d9-202">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-202">`response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.insertOrMergeEntity_1
    name: 'insertOrMergeEntity(string, T, ErrorOrResult<EntityMetadata>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7e1d9-203">Insere ou atualiza uma entidade existente em uma tabela mesclando novos valores de propriedade na entidade.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-203">Inserts or updates an existing entity within a table by merging new property values into the entity.</span></span>
    syntax:
      content: 'function insertOrMergeEntity<T>(table: string, entityDescriptor: T, callback: ErrorOrResult<EntityMetadata>)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-204">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-204">The table name.</span></span>
        - id: entityDescriptor
          type:
            - T
          description: <span data-ttu-id="7e1d9-205">O descritor de entidade.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-205">The entity descriptor.</span></span>
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
          description: |
            <span data-ttu-id="7e1d9-206">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de entidade.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-206">`error` will contain information if an error occurs; otherwise `result` will contain the entity information.</span></span>
                                                                                <span data-ttu-id="7e1d9-207">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-207">`response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.insertOrMergeEntity
    name: 'insertOrMergeEntity(string, T, RequestOptions, ErrorOrResult<EntityMetadata>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7e1d9-208">Insere ou atualiza uma entidade existente em uma tabela mesclando novos valores de propriedade na entidade.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-208">Inserts or updates an existing entity within a table by merging new property values into the entity.</span></span>
    syntax:
      content: 'function insertOrMergeEntity<T>(table: string, entityDescriptor: T, options: RequestOptions, callback: ErrorOrResult<EntityMetadata>)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-209">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-209">The table name.</span></span>
        - id: entityDescriptor
          type:
            - T
          description: <span data-ttu-id="7e1d9-210">O descritor de entidade.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-210">The entity descriptor.</span></span>
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
          description: |
            <span data-ttu-id="7e1d9-211">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de entidade.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-211">`error` will contain information if an error occurs; otherwise `result` will contain the entity information.</span></span>
                                                                                <span data-ttu-id="7e1d9-212">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-212">`response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.insertOrReplaceEntity_1
    name: 'insertOrReplaceEntity(string, T, ErrorOrResult<EntityMetadata>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7e1d9-213">Insere ou atualiza uma nova entidade em uma tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-213">Inserts or updates a new entity into a table.</span></span>
    syntax:
      content: 'function insertOrReplaceEntity<T>(table: string, entityDescriptor: T, callback: ErrorOrResult<EntityMetadata>)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-214">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-214">The table name.</span></span>
        - id: entityDescriptor
          type:
            - T
          description: <span data-ttu-id="7e1d9-215">O descritor de entidade.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-215">The entity descriptor.</span></span>
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
          description: |
            <span data-ttu-id="7e1d9-216">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de entidade.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-216">`error` will contain information if an error occurs; otherwise `result` will contain the entity information.</span></span>
                                                                                <span data-ttu-id="7e1d9-217">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-217">`response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.insertOrReplaceEntity
    name: 'insertOrReplaceEntity(string, T, RequestOptions, ErrorOrResult<EntityMetadata>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7e1d9-218">Insere ou atualiza uma nova entidade em uma tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-218">Inserts or updates a new entity into a table.</span></span>
    syntax:
      content: 'function insertOrReplaceEntity<T>(table: string, entityDescriptor: T, options: RequestOptions, callback: ErrorOrResult<EntityMetadata>)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-219">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-219">The table name.</span></span>
        - id: entityDescriptor
          type:
            - T
          description: <span data-ttu-id="7e1d9-220">O descritor de entidade.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-220">The entity descriptor.</span></span>
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
          description: |
            <span data-ttu-id="7e1d9-221">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de entidade.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-221">`error` will contain information if an error occurs; otherwise `result` will contain the entity information.</span></span>
                                                                                <span data-ttu-id="7e1d9-222">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-222">`response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.listTablesSegmented_1
    name: 'listTablesSegmented(ListTablesContinuationToken, ErrorOrResult<ListTablesResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7e1d9-223">Lista um segmento que contém uma coleção de itens de tabela na conta especificada.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-223">Lists a segment containing a collection of table items under the specified account.</span></span>
    syntax:
      content: 'function listTablesSegmented(currentToken: ListTablesContinuationToken, callback: ErrorOrResult<ListTablesResponse>)'
      parameters:
        - id: currentToken
          type:
            - azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
          description: <span data-ttu-id="7e1d9-224">Um token de continuação retornado por uma operação de listagem anterior.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-224">A continuation token returned by a previous listing operation.</span></span> <span data-ttu-id="7e1d9-225">Use 'null' ou 'indefinido' se esta for a primeira operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-225">Please use 'null' or 'undefined' if this is the first operation.</span></span>
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.ListTablesResponse>
          description: |
            <span data-ttu-id="7e1d9-226">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá `entries` e `continuationToken`.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-226">`error` will contain information if an error occurs; otherwise `result` will contain `entries` and `continuationToken`.</span></span>
                                                                                          <span data-ttu-id="7e1d9-227">`entries`  Fornece uma lista de tabelas e o `continuationToken` é usado para a próxima operação de listagem.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-227">`entries`  gives a list of tables and the `continuationToken` is used for the next listing operation.</span></span>
                                                                                          <span data-ttu-id="7e1d9-228">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-228">`response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.listTablesSegmented
    name: 'listTablesSegmented(ListTablesContinuationToken, ListTablesRequestOptions, ErrorOrResult<ListTablesResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7e1d9-229">Lista um segmento que contém uma coleção de itens de tabela na conta especificada.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-229">Lists a segment containing a collection of table items under the specified account.</span></span>
    syntax:
      content: 'function listTablesSegmented(currentToken: ListTablesContinuationToken, options: ListTablesRequestOptions, callback: ErrorOrResult<ListTablesResponse>)'
      parameters:
        - id: currentToken
          type:
            - azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
          description: <span data-ttu-id="7e1d9-230">Um token de continuação retornado por uma operação de listagem anterior.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-230">A continuation token returned by a previous listing operation.</span></span> <span data-ttu-id="7e1d9-231">Use 'null' ou 'indefinido' se esta for a primeira operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-231">Please use 'null' or 'undefined' if this is the first operation.</span></span>
        - id: options
          type:
            - azure-storage.azurestorage.services.table.TableService.ListTablesRequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.ListTablesResponse>
          description: |
            <span data-ttu-id="7e1d9-232">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá `entries` e `continuationToken`.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-232">`error` will contain information if an error occurs; otherwise `result` will contain `entries` and `continuationToken`.</span></span>
                                                                                          <span data-ttu-id="7e1d9-233">`entries`  Fornece uma lista de tabelas e o `continuationToken` é usado para a próxima operação de listagem.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-233">`entries`  gives a list of tables and the `continuationToken` is used for the next listing operation.</span></span>
                                                                                          <span data-ttu-id="7e1d9-234">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-234">`response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.listTablesSegmentedWithPrefix_1
    name: 'listTablesSegmentedWithPrefix(string, ListTablesContinuationToken, ErrorOrResult<ListTablesResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7e1d9-235">Lista um segmento que contém uma coleção de itens de tabela na conta especificada.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-235">Lists a segment containing a collection of table items under the specified account.</span></span>
    syntax:
      content: 'function listTablesSegmentedWithPrefix(prefix: string, currentToken: ListTablesContinuationToken, callback: ErrorOrResult<ListTablesResponse>)'
      parameters:
        - id: prefix
          type:
            - string
          description: <span data-ttu-id="7e1d9-236">O prefixo do nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-236">The prefix of the table name.</span></span>
        - id: currentToken
          type:
            - azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
          description: <span data-ttu-id="7e1d9-237">Um token de continuação retornado por uma operação de listagem anterior.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-237">A continuation token returned by a previous listing operation.</span></span> <span data-ttu-id="7e1d9-238">Use 'null' ou 'indefinido' se esta for a primeira operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-238">Please use 'null' or 'undefined' if this is the first operation.</span></span>
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.ListTablesResponse>
          description: |
            <span data-ttu-id="7e1d9-239">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá `entries` e `continuationToken`.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-239">`error` will contain information if an error occurs; otherwise `result` will contain `entries` and `continuationToken`.</span></span>
                                                                                          <span data-ttu-id="7e1d9-240">`entries`  Fornece uma lista de tabelas e o `continuationToken` é usado para a próxima operação de listagem.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-240">`entries`  gives a list of tables and the `continuationToken` is used for the next listing operation.</span></span>
                                                                                          <span data-ttu-id="7e1d9-241">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-241">`response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.listTablesSegmentedWithPrefix
    name: 'listTablesSegmentedWithPrefix(string, ListTablesContinuationToken, ListTablesRequestOptions, ErrorOrResult<ListTablesResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7e1d9-242">Lista um segmento que contém uma coleção de itens de tabela na conta especificada.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-242">Lists a segment containing a collection of table items under the specified account.</span></span>
    syntax:
      content: 'function listTablesSegmentedWithPrefix(prefix: string, currentToken: ListTablesContinuationToken, options: ListTablesRequestOptions, callback: ErrorOrResult<ListTablesResponse>)'
      parameters:
        - id: prefix
          type:
            - string
          description: <span data-ttu-id="7e1d9-243">O prefixo do nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-243">The prefix of the table name.</span></span>
        - id: currentToken
          type:
            - azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
          description: <span data-ttu-id="7e1d9-244">Um token de continuação retornado por uma operação de listagem anterior.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-244">A continuation token returned by a previous listing operation.</span></span> <span data-ttu-id="7e1d9-245">Use 'null' ou 'indefinido' se esta for a primeira operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-245">Please use 'null' or 'undefined' if this is the first operation.</span></span>
        - id: options
          type:
            - azure-storage.azurestorage.services.table.TableService.ListTablesRequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.ListTablesResponse>
          description: |
            <span data-ttu-id="7e1d9-246">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá `entries` e `continuationToken`.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-246">`error` will contain information if an error occurs; otherwise `result` will contain `entries` and `continuationToken`.</span></span>
                                                                                          <span data-ttu-id="7e1d9-247">`entries`  Fornece uma lista de tabelas e o `continuationToken` é usado para a próxima operação de listagem.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-247">`entries`  gives a list of tables and the `continuationToken` is used for the next listing operation.</span></span>
                                                                                          <span data-ttu-id="7e1d9-248">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-248">`response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.logger
    name: logger
    fullName: logger
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="7e1d9-249">O objeto de configurações de registro em log.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-249">The logging settings object.</span></span>
    syntax:
      content: 'logger: Logger'
      return:
        type:
          - azure-storage.azurestorage.common.diagnostics.logger.Logger
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.mergeEntity_1
    name: 'mergeEntity(string, T, ErrorOrResult<EntityMetadata>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7e1d9-250">Atualiza uma entidade existente em uma tabela mesclando novos valores de propriedade na entidade.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-250">Updates an existing entity within a table by merging new property values into the entity.</span></span> <span data-ttu-id="7e1d9-251">Para mesclar condicionalmente com base em etag, conjunto de entidade [''.metadata''] [''etag''].</span><span class="sxs-lookup"><span data-stu-id="7e1d9-251">To merge conditionally based on etag, set entity[''.metadata''][''etag''].</span></span>'
    syntax:
      content: 'function mergeEntity<T>(table: string, entityDescriptor: T, callback: ErrorOrResult<EntityMetadata>)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-252">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-252">The table name.</span></span>
        - id: entityDescriptor
          type:
            - T
          description: <span data-ttu-id="7e1d9-253">O descritor de entidade.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-253">The entity descriptor.</span></span>
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
          description: |
            <span data-ttu-id="7e1d9-254">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de entidade.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-254">`error` will contain information if an error occurs; otherwise `result` will contain the entity information.</span></span>
            <span data-ttu-id="7e1d9-255">resposta ' conterá informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-255">response\` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.mergeEntity
    name: 'mergeEntity(string, T, RequestOptions, ErrorOrResult<EntityMetadata>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7e1d9-256">Atualiza uma entidade existente em uma tabela mesclando novos valores de propriedade na entidade.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-256">Updates an existing entity within a table by merging new property values into the entity.</span></span> <span data-ttu-id="7e1d9-257">Para mesclar condicionalmente com base em etag, conjunto de entidade [''.metadata''] [''etag''].</span><span class="sxs-lookup"><span data-stu-id="7e1d9-257">To merge conditionally based on etag, set entity[''.metadata''][''etag''].</span></span>'
    syntax:
      content: 'function mergeEntity<T>(table: string, entityDescriptor: T, options: RequestOptions, callback: ErrorOrResult<EntityMetadata>)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-258">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-258">The table name.</span></span>
        - id: entityDescriptor
          type:
            - T
          description: <span data-ttu-id="7e1d9-259">O descritor de entidade.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-259">The entity descriptor.</span></span>
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
          description: |
            <span data-ttu-id="7e1d9-260">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de entidade.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-260">`error` will contain information if an error occurs; otherwise `result` will contain the entity information.</span></span>
            <span data-ttu-id="7e1d9-261">resposta ' conterá informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-261">response\` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.proxy
    name: proxy
    fullName: proxy
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="7e1d9-262">O objeto de proxy especificado pelo chamador.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-262">The proxy object specified by caller.</span></span>
    syntax:
      content: 'proxy: Proxy'
      return:
        type:
          - azure-storage.azurestorage.common.services.storageserviceclient.Proxy
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.queryEntities_1
    name: 'queryEntities(string, TableQuery, TableContinuationToken, ErrorOrResult<QueryEntitiesResult<T>>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7e1d9-263">Consulta dados em uma tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-263">Queries data in a table.</span></span> <span data-ttu-id="7e1d9-264">Para recuperar uma única entidade por chave de partição e chave de linha, use recuperar a entidade.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-264">To retrieve a single entity by partition key and row key, use retrieve entity.</span></span>'
    syntax:
      content: 'function queryEntities<T>(table: string, tableQuery: TableQuery, currentToken: TableContinuationToken, callback: ErrorOrResult<QueryEntitiesResult<T>>)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-265">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-265">The table name.</span></span>
        - id: tableQuery
          type:
            - azure-storage.azurestorage.services.table.TableQuery
          description: '<span data-ttu-id="7e1d9-266">A consulta a executar.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-266">The query to perform.</span></span> <span data-ttu-id="7e1d9-267">Use TableQuery() novo, indefinido ou nulo para obter todas as entidades na tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-267">Use null, undefined, or new TableQuery() to get all of the entities in the table.</span></span>'
        - id: currentToken
          type:
            - azure-storage.azurestorage.services.table.TableService.TableContinuationToken
          description: |-
            <span data-ttu-id="7e1d9-268">Um token de continuação retornado por uma operação de listagem anterior.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-268">A continuation token returned by a previous listing operation.</span></span>
            <span data-ttu-id="7e1d9-269">Use 'null' ou 'indefinido' se esta for a primeira operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-269">Please use 'null' or 'undefined' if this is the first operation.</span></span>
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult<T>>
          description: |
            <span data-ttu-id="7e1d9-270">`error` conterá informações se ocorrer um erro; Caso contrário, `entities` conterá as entidades retornadas pela consulta.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-270">`error` will contain information if an error occurs; otherwise `entities` will contain the entities returned by the query.</span></span>
            <span data-ttu-id="7e1d9-271">Se existirem mais entidades correspondentes e não pode ser retornadas, `queryResultContinuation` conterá um token de continuação que pode ser usado para recuperar o próximo conjunto de resultados.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-271">If more matching entities exist, and could not be returned, `queryResultContinuation` will contain a continuation token that can be used to retrieve the next set of results.</span></span>
                                                                                             <span data-ttu-id="7e1d9-272">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-272">`response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.queryEntities
    name: 'queryEntities(string, TableQuery, TableContinuationToken, TableEntityRequestOptions, ErrorOrResult<QueryEntitiesResult<T>>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7e1d9-273">Consulta dados em uma tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-273">Queries data in a table.</span></span> <span data-ttu-id="7e1d9-274">Para recuperar uma única entidade por chave de partição e chave de linha, use recuperar a entidade.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-274">To retrieve a single entity by partition key and row key, use retrieve entity.</span></span>'
    syntax:
      content: 'function queryEntities<T>(table: string, tableQuery: TableQuery, currentToken: TableContinuationToken, options: TableEntityRequestOptions, callback: ErrorOrResult<QueryEntitiesResult<T>>)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-275">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-275">The table name.</span></span>
        - id: tableQuery
          type:
            - azure-storage.azurestorage.services.table.TableQuery
          description: '<span data-ttu-id="7e1d9-276">A consulta a executar.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-276">The query to perform.</span></span> <span data-ttu-id="7e1d9-277">Use TableQuery() novo, indefinido ou nulo para obter todas as entidades na tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-277">Use null, undefined, or new TableQuery() to get all of the entities in the table.</span></span>'
        - id: currentToken
          type:
            - azure-storage.azurestorage.services.table.TableService.TableContinuationToken
          description: |-
            <span data-ttu-id="7e1d9-278">Um token de continuação retornado por uma operação de listagem anterior.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-278">A continuation token returned by a previous listing operation.</span></span>
            <span data-ttu-id="7e1d9-279">Use 'null' ou 'indefinido' se esta for a primeira operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-279">Please use 'null' or 'undefined' if this is the first operation.</span></span>
        - id: options
          type:
            - azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult<T>>
          description: |
            <span data-ttu-id="7e1d9-280">`error` conterá informações se ocorrer um erro; Caso contrário, `entities` conterá as entidades retornadas pela consulta.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-280">`error` will contain information if an error occurs; otherwise `entities` will contain the entities returned by the query.</span></span>
            <span data-ttu-id="7e1d9-281">Se existirem mais entidades correspondentes e não pode ser retornadas, `queryResultContinuation` conterá um token de continuação que pode ser usado para recuperar o próximo conjunto de resultados.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-281">If more matching entities exist, and could not be returned, `queryResultContinuation` will contain a continuation token that can be used to retrieve the next set of results.</span></span>
                                                                                             <span data-ttu-id="7e1d9-282">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-282">`response` will contain information related to this operation.</span></span>

            <span data-ttu-id="7e1d9-283">A lógica para retornar tipos de entidade pode ficar complicada.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-283">The logic for returning entity types can get complicated.</span></span>  <span data-ttu-id="7e1d9-284">Aqui está o algoritmo usado:</span><span class="sxs-lookup"><span data-stu-id="7e1d9-284">Here is the algorithm used:</span></span>
            ```
            var propertyType;

            if (propertyResovler) {                      // If the caller provides a propertyResolver in the options, use it
              propertyType = propertyResolver(partitionKey, rowKey, propertyName, propertyValue, propertyTypeFromService);
            } else if (propertyTypeFromService) {        // If the service provides us a property type, use it.  See below for an explanation of when this will and won't occur.
              propertyType = propertyTypeFromService;
            } else if (autoResolveProperties) {          // If options.autoResolveProperties is set to true
              if (javascript type is string) {           // See below for an explanation of how and why autoResolveProperties works as it does.
                propertyType = 'Edm.String';
              } else if (javascript type is boolean) {
                propertyType = 'Edm.Boolean';
              }
            }

            if (propertyType) {
              // Set the property type on the property.
            } else {
              // Property gets no EdmType.
            }
            ```
            <span data-ttu-id="7e1d9-285">Observações:</span><span class="sxs-lookup"><span data-stu-id="7e1d9-285">Notes:</span></span>

            * <span data-ttu-id="7e1d9-286">O serviço fornece apenas um tipo se JsonFullMetadata ou JsonMinimalMetadata for usado, e se o tipo for DateTime, Guid, Binary ou Int64.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-286">The service only provides a type if JsonFullMetadata or JsonMinimalMetadata is used, and if the type is Int64, Guid, Binary, or DateTime.</span></span>
            * <span data-ttu-id="7e1d9-287">Explicação de autoResolveProperties:</span><span class="sxs-lookup"><span data-stu-id="7e1d9-287">Explanation of autoResolveProperties:</span></span>
                * <span data-ttu-id="7e1d9-288">Cadeia de caracteres é resolvida corretamente para 'EDM. String'.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-288">String gets correctly resolved to 'Edm.String'.</span></span>
                * <span data-ttu-id="7e1d9-289">Int64, Guid, Binary e DateTime se transformam em 'EDM. String'.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-289">Int64, Guid, Binary, and DateTime all get resolved to 'Edm.String.'</span></span>  <span data-ttu-id="7e1d9-290">Isso ocorre apenas se JsonNoMetadata for usado (caso contrário, o serviço fornecerá o propertyType em uma etapa anterior).</span><span class="sxs-lookup"><span data-stu-id="7e1d9-290">This only happens if JsonNoMetadata is used (otherwise the service will provide the propertyType in a prior step).</span></span>
                * <span data-ttu-id="7e1d9-291">Booliano é resolvido corretamente para 'EDM'.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-291">Boolean gets correctly resolved to 'Edm.Boolean'.</span></span>
                * <span data-ttu-id="7e1d9-292">Para Int32 e Double, nenhuma informação de tipo é retornado, mesmo no caso de autoResolveProperties = true.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-292">For both Int32 and Double, no type information is returned, even in the case of autoResolveProperties = true.</span></span>  <span data-ttu-id="7e1d9-293">Isso ocorre devido a uma incapacidade de distinguir entre os dois em determinados casos.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-293">This is due to an inability to distinguish between the two in certain cases.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.replaceEntity_1
    name: 'replaceEntity(string, T, ErrorOrResult<EntityMetadata>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7e1d9-294">Substitui uma entidade existente em uma tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-294">Replaces an existing entity within a table.</span></span> <span data-ttu-id="7e1d9-295">Para substituir condicionalmente com base em etag, defina a entidade [''.metadata''] [''etag''].</span><span class="sxs-lookup"><span data-stu-id="7e1d9-295">To replace conditionally based on etag, set entity[''.metadata''][''etag''].</span></span>'
    syntax:
      content: 'function replaceEntity<T>(table: string, entityDescriptor: T, callback: ErrorOrResult<EntityMetadata>)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-296">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-296">The table name.</span></span>
        - id: entityDescriptor
          type:
            - T
          description: <span data-ttu-id="7e1d9-297">O descritor de entidade.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-297">The entity descriptor.</span></span>
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
          description: |
            <span data-ttu-id="7e1d9-298">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de entidade.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-298">`error` will contain information if an error occurs; otherwise `result` will contain the entity information.</span></span>
                                                                                <span data-ttu-id="7e1d9-299">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-299">`response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.replaceEntity
    name: 'replaceEntity(string, T, RequestOptions, ErrorOrResult<EntityMetadata>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7e1d9-300">Substitui uma entidade existente em uma tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-300">Replaces an existing entity within a table.</span></span> <span data-ttu-id="7e1d9-301">Para substituir condicionalmente com base em etag, defina a entidade [''.metadata''] [''etag''].</span><span class="sxs-lookup"><span data-stu-id="7e1d9-301">To replace conditionally based on etag, set entity[''.metadata''][''etag''].</span></span>'
    syntax:
      content: 'function replaceEntity<T>(table: string, entityDescriptor: T, options: RequestOptions, callback: ErrorOrResult<EntityMetadata>)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-302">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-302">The table name.</span></span>
        - id: entityDescriptor
          type:
            - T
          description: <span data-ttu-id="7e1d9-303">O descritor de entidade.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-303">The entity descriptor.</span></span>
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
          description: |
            <span data-ttu-id="7e1d9-304">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de entidade.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-304">`error` will contain information if an error occurs; otherwise `result` will contain the entity information.</span></span>
                                                                                <span data-ttu-id="7e1d9-305">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-305">`response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.retrieveEntity_1
    name: 'retrieveEntity(string, string, string, ErrorOrResult<T>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7e1d9-306">Recupera uma entidade de uma tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-306">Retrieves an entity from a table.</span></span>
    syntax:
      content: 'function retrieveEntity<T>(table: string, partitionKey: string, rowKey: string, callback: ErrorOrResult<T>)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-307">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-307">The table name.</span></span>
        - id: partitionKey
          type:
            - string
          description: <span data-ttu-id="7e1d9-308">A chave de partição.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-308">The partition key.</span></span>
        - id: rowKey
          type:
            - string
          description: <span data-ttu-id="7e1d9-309">A chave de linha.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-309">The row key.</span></span>
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<T>
          description: |
            <span data-ttu-id="7e1d9-310">`error` conterá informações se ocorrer um erro; Caso contrário, `result` será a entidade correspondente.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-310">`error` will contain information if an error occurs; otherwise `result` will be the matching entity.</span></span>
                                                                                        <span data-ttu-id="7e1d9-311">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-311">`response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.retrieveEntity
    name: 'retrieveEntity(string, string, string, TableEntityRequestOptions, ErrorOrResult<T>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7e1d9-312">Recupera uma entidade de uma tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-312">Retrieves an entity from a table.</span></span>
    syntax:
      content: 'function retrieveEntity<T>(table: string, partitionKey: string, rowKey: string, options: TableEntityRequestOptions, callback: ErrorOrResult<T>)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-313">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-313">The table name.</span></span>
        - id: partitionKey
          type:
            - string
          description: <span data-ttu-id="7e1d9-314">A chave de partição.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-314">The partition key.</span></span>
        - id: rowKey
          type:
            - string
          description: <span data-ttu-id="7e1d9-315">A chave de linha.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-315">The row key.</span></span>
        - id: options
          type:
            - azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<T>
          description: |
            <span data-ttu-id="7e1d9-316">`error` conterá informações se ocorrer um erro; Caso contrário, `result` será a entidade correspondente.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-316">`error` will contain information if an error occurs; otherwise `result` will be the matching entity.</span></span>
                                                                                        <span data-ttu-id="7e1d9-317">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-317">`response` will contain information related to this operation.</span></span>

            <span data-ttu-id="7e1d9-318">A lógica para retornar tipos de entidade pode ficar complicada.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-318">The logic for returning entity types can get complicated.</span></span>  <span data-ttu-id="7e1d9-319">Aqui está o algoritmo usado:</span><span class="sxs-lookup"><span data-stu-id="7e1d9-319">Here is the algorithm used:</span></span>
            ```
            var propertyType;

            if (propertyResovler) {                      // If the caller provides a propertyResolver in the options, use it
              propertyType = propertyResolver(partitionKey, rowKey, propertyName, propertyValue, propertyTypeFromService);
            } else if (propertyTypeFromService) {        // If the service provides us a property type, use it.  See below for an explanation of when this will and won't occur.
              propertyType = propertyTypeFromService;
            } else if (autoResolveProperties) {          // If options.autoResolveProperties is set to true
              if (javascript type is string) {           // See below for an explanation of how and why autoResolveProperties works as it does.
                propertyType = 'Edm.String';
              } else if (javascript type is boolean) {
                propertyType = 'Edm.Boolean';
              }
            }

            if (propertyType) {
              // Set the property type on the property.
            } else {
              // Property gets no EdmType.
            }
            ```
            <span data-ttu-id="7e1d9-320">Observações:</span><span class="sxs-lookup"><span data-stu-id="7e1d9-320">Notes:</span></span>

            * <span data-ttu-id="7e1d9-321">O serviço fornece apenas um tipo se JsonFullMetadata ou JsonMinimalMetadata for usado, e se o tipo for DateTime, Guid, Binary ou Int64.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-321">The service only provides a type if JsonFullMetadata or JsonMinimalMetadata is used, and if the type is Int64, Guid, Binary, or DateTime.</span></span>
            * <span data-ttu-id="7e1d9-322">Explicação de autoResolveProperties:</span><span class="sxs-lookup"><span data-stu-id="7e1d9-322">Explanation of autoResolveProperties:</span></span>
                * <span data-ttu-id="7e1d9-323">Cadeia de caracteres é resolvida corretamente para 'EDM. String'.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-323">String gets correctly resolved to 'Edm.String'.</span></span>
                * <span data-ttu-id="7e1d9-324">Int64, Guid, Binary e DateTime se transformam em 'EDM. String'.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-324">Int64, Guid, Binary, and DateTime all get resolved to 'Edm.String.'</span></span>  <span data-ttu-id="7e1d9-325">Isso ocorre apenas se JsonNoMetadata for usado (caso contrário, o serviço fornecerá o propertyType em uma etapa anterior).</span><span class="sxs-lookup"><span data-stu-id="7e1d9-325">This only happens if JsonNoMetadata is used (otherwise the service will provide the propertyType in a prior step).</span></span>
                * <span data-ttu-id="7e1d9-326">Booliano é resolvido corretamente para 'EDM'.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-326">Boolean gets correctly resolved to 'Edm.Boolean'.</span></span>
                * <span data-ttu-id="7e1d9-327">Para Int32 e Double, nenhuma informação de tipo é retornado, mesmo no caso de autoResolveProperties = true.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-327">For both Int32 and Double, no type information is returned, even in the case of autoResolveProperties = true.</span></span>  <span data-ttu-id="7e1d9-328">Isso ocorre devido a uma incapacidade de distinguir entre os dois em determinados casos.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-328">This is due to an inability to distinguish between the two in certain cases.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.setProxy
    name: setProxy(Proxy)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7e1d9-329">Define o objeto de proxy especificado pelo chamador.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-329">Sets proxy object specified by caller.</span></span>
    syntax:
      content: 'function setProxy(proxy: Proxy)'
      parameters:
        - id: proxy
          type:
            - azure-storage.azurestorage.common.services.storageserviceclient.Proxy
          description: |
            <span data-ttu-id="7e1d9-330">proxy a ser usado para criar um túnel {host: porta do nome do host: proxyAuth número da porta: ': senha do usuário' para cabeçalhos de autenticação básica: {...}</span><span class="sxs-lookup"><span data-stu-id="7e1d9-330">proxy to use for tunneling { host: hostname port: port number proxyAuth: 'user:password' for basic auth headers: {...}</span></span> <span data-ttu-id="7e1d9-331">cabeçalhos para a chave do servidor proxy: chave de autoridade de certificação de servidor proxy: autoridade de certificação para o certificado do servidor proxy: certificado para o servidor proxy} se nulos ou indefinidos, limpa o proxy</span><span class="sxs-lookup"><span data-stu-id="7e1d9-331">headers for proxy server key: key for proxy server ca: ca for proxy server cert: cert for proxy server } if null or undefined, clears proxy</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.setServiceProperties_1
    name: 'setServiceProperties(ServiceProperties, ErrorOrResponse)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7e1d9-332">Define as propriedades do serviço de tabela de uma conta de armazenamento, incluindo a análise de armazenamento do Azure.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-332">Sets the properties of a storage account’s Table service, including Azure Storage Analytics.</span></span>
      <span data-ttu-id="7e1d9-333">Você também pode usar essa operação para definir a versão de solicitação padrão para todas as solicitações de entrada que não têm uma versão especificada.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-333">You can also use this operation to set the default request version for all incoming requests that do not have a version specified.</span></span>
    syntax:
      content: 'function setServiceProperties(serviceProperties: ServiceProperties, callback: ErrorOrResponse)'
      parameters:
        - id: serviceProperties
          type:
            - azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
          description: <span data-ttu-id="7e1d9-334">As propriedades do serviço.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-334">The service properties.</span></span>
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResponse
          description: |
            <span data-ttu-id="7e1d9-335">`error` conterá informações se ocorrer um erro; `response` conterá informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-335">`error` will contain information if an error occurs; `response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.setServiceProperties
    name: 'setServiceProperties(ServiceProperties, RequestOptions, ErrorOrResponse)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7e1d9-336">Define as propriedades do serviço de tabela de uma conta de armazenamento, incluindo a análise de armazenamento do Azure.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-336">Sets the properties of a storage account’s Table service, including Azure Storage Analytics.</span></span>
      <span data-ttu-id="7e1d9-337">Você também pode usar essa operação para definir a versão de solicitação padrão para todas as solicitações de entrada que não têm uma versão especificada.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-337">You can also use this operation to set the default request version for all incoming requests that do not have a version specified.</span></span>
    syntax:
      content: 'function setServiceProperties(serviceProperties: ServiceProperties, options: RequestOptions, callback: ErrorOrResponse)'
      parameters:
        - id: serviceProperties
          type:
            - azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
          description: <span data-ttu-id="7e1d9-338">As propriedades do serviço.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-338">The service properties.</span></span>
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResponse
          description: |
            <span data-ttu-id="7e1d9-339">`error` conterá informações se ocorrer um erro; `response` conterá informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-339">`error` will contain information if an error occurs; `response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.setTableAcl_1
    name: 'setTableAcl(string, [key: string]: AccessPolicy, ErrorOrResult<Object>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7e1d9-340">Atualiza a ACL da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-340">Updates the table's ACL.</span></span>
    syntax:
      content: 'function setTableAcl(table: string, signedIdentifiers: [key: string]: AccessPolicy, callback: ErrorOrResult<Object>)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-341">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-341">The table name.</span></span>
        - id: signedIdentifiers
          type:
            - '[key: string]: azure-storage.azurestorage.common.AccessPolicy'
          description: <span data-ttu-id="7e1d9-342">Os identificadores com sinal.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-342">The signed identifiers.</span></span> <span data-ttu-id="7e1d9-343">Identificadores assinados devem estar em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-343">Signed identifiers must be in an array.</span></span>
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<Object>
          description: |
            <span data-ttu-id="7e1d9-344">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá informações para a tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-344">`error` will contain information if an error occurs; otherwise `result` will contain information for the table.</span></span>
                                                                                     <span data-ttu-id="7e1d9-345">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-345">`response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.setTableAcl
    name: 'setTableAcl(string, [key: string]: AccessPolicy, RequestOptions, ErrorOrResult<Object>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7e1d9-346">Atualiza a ACL da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-346">Updates the table's ACL.</span></span>
    syntax:
      content: 'function setTableAcl(table: string, signedIdentifiers: [key: string]: AccessPolicy, options: RequestOptions, callback: ErrorOrResult<Object>)'
      parameters:
        - id: table
          type:
            - string
          description: <span data-ttu-id="7e1d9-347">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-347">The table name.</span></span>
        - id: signedIdentifiers
          type:
            - '[key: string]: azure-storage.azurestorage.common.AccessPolicy'
          description: <span data-ttu-id="7e1d9-348">Os identificadores com sinal.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-348">The signed identifiers.</span></span> <span data-ttu-id="7e1d9-349">Identificadores assinados devem estar em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-349">Signed identifiers must be in an array.</span></span>
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<Object>
          description: |
            <span data-ttu-id="7e1d9-350">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá informações para a tabela.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-350">`error` will contain information if an error occurs; otherwise `result` will contain information for the table.</span></span>
                                                                                     <span data-ttu-id="7e1d9-351">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-351">`response` will contain information related to this operation.</span></span>
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.constructor
    name: 'TableService(string, string, StorageHost, boolean, string)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="7e1d9-352">Cria um novo objeto StorageServiceClient.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-352">Creates a new StorageServiceClient object.</span></span>
    syntax:
      content: 'new TableService(storageAccount?: string, storageAccessKey?: string, host?: StorageHost, usePathStyleUri?: boolean, sasToken?: string)'
      parameters:
        - id: storageAccount
          type:
            - string
          description: <span data-ttu-id="7e1d9-353">A conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-353">The storage account.</span></span>
          optional: true
        - id: storageAccessKey
          type:
            - string
          description: <span data-ttu-id="7e1d9-354">A chave de acesso de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-354">The storage access key.</span></span>
          optional: true
        - id: host
          type:
            - azure-storage.azurestorage.StorageHost
          description: <span data-ttu-id="7e1d9-355">O host para o serviço.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-355">The host for the service.</span></span>
          optional: true
        - id: usePathStyleUri
          type:
            - boolean
          description: <span data-ttu-id="7e1d9-356">Se de valor booliano que indica que usar caminho de uris de estilo.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-356">Boolean value indicating wether to use path style uris.</span></span>
          optional: true
        - id: sasToken
          type:
            - string
          description: |
            <span data-ttu-id="7e1d9-357">O token de assinatura de acesso compartilhado.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-357">The Shared Access Signature token.</span></span>
          optional: true
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.useNagleAlgorithm
    name: useNagleAlgorithm
    fullName: useNagleAlgorithm
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="7e1d9-358">Determina se o algoritmo de Nagle é usado para solicitações feitas por meio do serviço de fila; True para usar o algoritmo de Nagle; Caso contrário, false.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-358">Determines whether the Nagle algorithm is used for requests made via the Queue service; true to use the Nagle algorithm; otherwise, false.</span></span> <span data-ttu-id="7e1d9-359">O valor padrão é falso.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-359">The default value is false.</span></span>'
    syntax:
      content: 'useNagleAlgorithm: boolean'
      return:
        type:
          - boolean
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.withFilter
    name: withFilter(IFilter)
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="7e1d9-360">Associe uma operação de filtragem com este TableService.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-360">Associate a filtering operation with this TableService.</span></span> <span data-ttu-id="7e1d9-361">As operações de filtragem podem incluir registro em log, repetição automática, etc. Operações do filtro são objetos que implementam um método com a assinatura: "identificador de função (requestOptions, ao lado)".</span><span class="sxs-lookup"><span data-stu-id="7e1d9-361">Filtering operations can include logging, automatically retrying, etc. Filter operations are objects that implement a method with the signature: "function handle (requestOptions, next)".</span></span>

      <span data-ttu-id="7e1d9-362">Após fazer seu pré-processamento nas opções de solicitação, o método precisará chamar "next", passando um retorno de chamada com a seguinte assinatura: assinatura:</span><span class="sxs-lookup"><span data-stu-id="7e1d9-362">After doing its preprocessing on the request options, the method needs to call "next" passing a callback with the following signature: signature:</span></span>

          "function (returnObject, finalCallback, next)"

      <span data-ttu-id="7e1d9-363">Nesse retorno de chamada, e após processar o returnObject (a resposta da solicitação ao servidor), o retorno de chamada precisará invocar avançar, se ele existir, para continuar processando outros filtros ou simplesmente invocar finalCallback para terminar a invocação de serviço.</span><span class="sxs-lookup"><span data-stu-id="7e1d9-363">In this callback, and after processing the returnObject (the response from the request to the server), the callback needs to either invoke next if it exists to continue processing other filters or simply invoke finalCallback otherwise to end up the service invocation.</span></span>
    syntax:
      content: 'function withFilter(newFilter: IFilter)'
      parameters:
        - id: newFilter
          type:
            - azure-storage.azurestorage.common.filters.IFilter
          description: ''
      return:
        type:
          - azure-storage.azurestorage.services.table.TableService
    package: azure-storage
references:
  - uid: azure-storage.azurestorage.common.RequestOptions
    name: RequestOptions
    spec.typeScript:
      - name: RequestOptions
        fullName: RequestOptions
        uid: azure-storage.azurestorage.common.RequestOptions
  - uid: azure-storage.azurestorage.common.filters.Next
    name: Next
    spec.typeScript:
      - name: Next
        fullName: Next
        uid: azure-storage.azurestorage.common.filters.Next
  - uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryRequestOptions
    name: IRetryRequestOptions
    spec.typeScript:
      - name: IRetryRequestOptions
        fullName: IRetryRequestOptions
        uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryRequestOptions
  - uid: azure-storage.azurestorage.common.filters.IFilter
    name: IFilter
    spec.typeScript:
      - name: IFilter
        fullName: IFilter
        uid: azure-storage.azurestorage.common.filters.IFilter
  - uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryContext
    name: IRetryContext
    spec.typeScript:
      - name: IRetryContext
        fullName: IRetryContext
        uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryContext
  - uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter
    name: RetryPolicyFilter
    spec.typeScript:
      - name: RetryPolicyFilter
        fullName: RetryPolicyFilter
        uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter
  - uid: azure-storage.Map<any>
    name: Map<any>
    spec.typeScript:
      - name: Map
        fullName: Map
        uid: azure-storage.Map
      - name: <any>
        fullName: <any>
  - uid: azure-storage.Map<string>
    name: Map<string>
    spec.typeScript:
      - name: Map
        fullName: Map
        uid: azure-storage.Map
      - name: <string>
        fullName: <string>
  - uid: azure-storage.azurestorage.common.http.webresource.WebResource
    name: WebResource
    spec.typeScript:
      - name: WebResource
        fullName: WebResource
        uid: azure-storage.azurestorage.common.http.webresource.WebResource
  - uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
    name: ServiceProperties
    spec.typeScript:
      - name: ServiceProperties
        fullName: ServiceProperties
        uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
  - uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.DeleteRetentionPolicyProperties
    name: DeleteRetentionPolicyProperties
    spec.typeScript:
      - name: DeleteRetentionPolicyProperties
        fullName: DeleteRetentionPolicyProperties
        uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.DeleteRetentionPolicyProperties
  - uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.MetricsProperties
    name: MetricsProperties
    spec.typeScript:
      - name: MetricsProperties
        fullName: MetricsProperties
        uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.MetricsProperties
  - uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.LoggingProperties
    name: LoggingProperties
    spec.typeScript:
      - name: LoggingProperties
        fullName: LoggingProperties
        uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.LoggingProperties
  - uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.StaticWebsiteProperties
    name: StaticWebsiteProperties
    spec.typeScript:
      - name: StaticWebsiteProperties
        fullName: StaticWebsiteProperties
        uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.StaticWebsiteProperties
  - uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.RetentionPolicy
    name: RetentionPolicy
    spec.typeScript:
      - name: RetentionPolicy
        fullName: RetentionPolicy
        uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.RetentionPolicy
  - uid: azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient
    name: StorageServiceClient
    spec.typeScript:
      - name: StorageServiceClient
        fullName: StorageServiceClient
        uid: azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient
  - uid: azure-storage.azurestorage.StorageHost
    name: StorageHost
    spec.typeScript:
      - name: StorageHost
        fullName: StorageHost
        uid: azure-storage.azurestorage.StorageHost
  - uid: azure-storage.azurestorage.common.util.storageutilities.LocationMode
    name: LocationMode
    spec.typeScript:
      - name: LocationMode
        fullName: LocationMode
        uid: azure-storage.azurestorage.common.util.storageutilities.LocationMode
  - uid: azure-storage.azurestorage.common.diagnostics.logger.Logger
    name: Logger
    spec.typeScript:
      - name: Logger
        fullName: Logger
        uid: azure-storage.azurestorage.common.diagnostics.logger.Logger
  - uid: azure-storage.azurestorage.common.services.storageserviceclient.Proxy
    name: Proxy
    spec.typeScript:
      - name: Proxy
        fullName: Proxy
        uid: azure-storage.azurestorage.common.services.storageserviceclient.Proxy
  - uid: azure-storage.azurestorage.AccessConditions
    name: AccessConditions
    spec.typeScript:
      - name: AccessConditions
        fullName: AccessConditions
        uid: azure-storage.azurestorage.AccessConditions
  - uid: azure-storage.azurestorage.common.AccessPolicy
    name: AccessPolicy
    spec.typeScript:
      - name: AccessPolicy
        fullName: AccessPolicy
        uid: azure-storage.azurestorage.common.AccessPolicy
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
    name: LeaseRequestOptions
    spec.typeScript:
      - name: LeaseRequestOptions
        fullName: LeaseRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ConditionalRequestOption
    name: ConditionalRequestOption
    spec.typeScript:
      - name: ConditionalRequestOption
        fullName: ConditionalRequestOption
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ConditionalRequestOption
  - uid: 'azure-storage.azurestorage.services.blob.blobservice.BlobService.Block[]'
    name: 'Block[]'
    spec.typeScript:
      - name: Block
        fullName: Block
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.Block
      - name: '[]'
        fullName: '[]'
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
    name: ContainerOptions
    spec.typeScript:
      - name: ContainerOptions
        fullName: ContainerOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
    name: ContainerResult
    spec.typeScript:
      - name: ContainerResult
        fullName: ContainerResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
  - uid: '[key: string]: azure-storage.azurestorage.common.AccessPolicy'
    name: AccessPolicy
    spec.typeScript:
      - name: '[key: string]: '
        fullName: '[key: string]: '
      - name: AccessPolicy
        fullName: AccessPolicy
        uid: azure-storage.azurestorage.common.AccessPolicy
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
    name: BlobRequestOptions
    spec.typeScript:
      - name: BlobRequestOptions
        fullName: BlobRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
  - uid: azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
    name: SpeedSummary
    spec.typeScript:
      - name: SpeedSummary
        fullName: SpeedSummary
        uid: azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
    name: CreateBlobRequestOptions
    spec.typeScript:
      - name: CreateBlobRequestOptions
        fullName: CreateBlobRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
  - uid: azure-storage.azurestorage.common.ContinuationToken
    name: ContinuationToken
    spec.typeScript:
      - name: ContinuationToken
        fullName: ContinuationToken
        uid: azure-storage.azurestorage.common.ContinuationToken
  - uid: 'azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobDirectoryResult[]'
    name: 'BlobDirectoryResult[]'
    spec.typeScript:
      - name: BlobDirectoryResult
        fullName: BlobDirectoryResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobDirectoryResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsSegmentedRequestOptions
    name: ListBlobsSegmentedRequestOptions
    spec.typeScript:
      - name: ListBlobsSegmentedRequestOptions
        fullName: ListBlobsSegmentedRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsSegmentedRequestOptions
  - uid: 'azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult[]'
    name: 'BlobResult[]'
    spec.typeScript:
      - name: BlobResult
        fullName: BlobResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult[]'
    name: 'ContainerResult[]'
    spec.typeScript:
      - name: ContainerResult
        fullName: ContainerResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
      - name: '[]'
        fullName: '[]'
  - uid: string | azure-storage.azurestorage.StorageHost
    name: StorageHost
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - name: StorageHost
        fullName: StorageHost
        uid: azure-storage.azurestorage.StorageHost
  - uid: azure-storage.azurestorage.ErrorOrResponse
    name: ErrorOrResponse
    spec.typeScript:
      - name: ErrorOrResponse
        fullName: ErrorOrResponse
        uid: azure-storage.azurestorage.ErrorOrResponse
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
    name: LeaseResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: LeaseResult
        fullName: LeaseResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AcquireLeaseRequestOptions
    name: AcquireLeaseRequestOptions
    spec.typeScript:
      - name: AcquireLeaseRequestOptions
        fullName: AcquireLeaseRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AcquireLeaseRequestOptions
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AppendBlobRequestOptions
    name: AppendBlobRequestOptions
    spec.typeScript:
      - name: AppendBlobRequestOptions
        fullName: AppendBlobRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AppendBlobRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
    name: BlobResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: BlobResult
        fullName: BlobResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BreakLeaseRequestOptions
    name: BreakLeaseRequestOptions
    spec.typeScript:
      - name: BreakLeaseRequestOptions
        fullName: BreakLeaseRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BreakLeaseRequestOptions
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.PutBlockListRequest
    name: PutBlockListRequest
    spec.typeScript:
      - name: PutBlockListRequest
        fullName: PutBlockListRequest
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.PutBlockListRequest
  - uid: azure-storage.azurestorage.ErrorOrResult<string>
    name: ErrorOrResult<string>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <string>
        fullName: <string>
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
    name: CreateBlockBlobRequestOptions
    spec.typeScript:
      - name: CreateBlockBlobRequestOptions
        fullName: CreateBlockBlobRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockRequestOptions
    name: CreateBlockRequestOptions
    spec.typeScript:
      - name: CreateBlockRequestOptions
        fullName: CreateBlockRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
    name: ContainerResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ContainerResult
        fullName: ContainerResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateContainerOptions
    name: CreateContainerOptions
    spec.typeScript:
      - name: CreateContainerOptions
        fullName: CreateContainerOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateContainerOptions
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
    name: CreatePageBlobOptions
    spec.typeScript:
      - name: CreatePageBlobOptions
        fullName: CreatePageBlobOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
    name: GetBlobRequestOptions
    spec.typeScript:
      - name: GetBlobRequestOptions
        fullName: GetBlobRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.DeleteBlobRequestOptions
    name: DeleteBlobRequestOptions
    spec.typeScript:
      - name: DeleteBlobRequestOptions
        fullName: DeleteBlobRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.DeleteBlobRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<boolean>
    name: ErrorOrResult<boolean>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <boolean>
        fullName: <boolean>
  - uid: azure-storage.azurestorage.common.SharedAccessPolicy
    name: SharedAccessPolicy
    spec.typeScript:
      - name: SharedAccessPolicy
        fullName: SharedAccessPolicy
        uid: azure-storage.azurestorage.common.SharedAccessPolicy
  - uid: azure-storage.azurestorage.common.ContentSettingsHeaders
    name: ContentSettingsHeaders
    spec.typeScript:
      - name: ContentSettingsHeaders
        fullName: ContentSettingsHeaders
        uid: azure-storage.azurestorage.common.ContentSettingsHeaders
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.AccountProperties>
    name: AccountProperties>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: AccountProperties
        fullName: AccountProperties
        uid: azure-storage.azurestorage.common.models.AccountProperties
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobToText
    name: BlobToText
    spec.typeScript:
      - name: BlobToText
        fullName: BlobToText
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobToText
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult>
    name: ContainerAclResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ContainerAclResult
        fullName: ContainerAclResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult
      - name: '>'
        fullName: '>'
  - uid: 'azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.RangeDiff[]>'
    name: 'RangeDiff[]>'
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: RangeDiff
        fullName: RangeDiff
        uid: azure-storage.azurestorage.common.RangeDiff
      - name: '[]>'
        fullName: '[]>'
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties>
    name: BlobServiceProperties>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: BlobServiceProperties
        fullName: BlobServiceProperties
        uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServiceStats>
    name: ServiceStats>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ServiceStats
        fullName: ServiceStats
        uid: azure-storage.azurestorage.common.models.ServiceStats
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobDirectoriesResult>
    name: ListBlobDirectoriesResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ListBlobDirectoriesResult
        fullName: ListBlobDirectoriesResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobDirectoriesResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobPrefixesSegmentedRequestOptions
    name: ListBlobPrefixesSegmentedRequestOptions
    spec.typeScript:
      - name: ListBlobPrefixesSegmentedRequestOptions
        fullName: ListBlobPrefixesSegmentedRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobPrefixesSegmentedRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult>
    name: ListBlobsResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ListBlobsResult
        fullName: ListBlobsResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlockListResult>
    name: BlockListResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: BlockListResult
        fullName: BlockListResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlockListResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerOptions
    name: ListContainerOptions
    spec.typeScript:
      - name: ListContainerOptions
        fullName: ListContainerOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult>
    name: ListContainerResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ListContainerResult
        fullName: ListContainerResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult
      - name: '>'
        fullName: '>'
  - uid: 'azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.Range[]>'
    name: 'Range[]>'
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: Range
        fullName: Range
        uid: azure-storage.azurestorage.common.Range
      - name: '[]>'
        fullName: '[]>'
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.SetBlobPropertiesRequestOptions
    name: SetBlobPropertiesRequestOptions
    spec.typeScript:
      - name: SetBlobPropertiesRequestOptions
        fullName: SetBlobPropertiesRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.SetBlobPropertiesRequestOptions
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclOptions
    name: ContainerAclOptions
    spec.typeScript:
      - name: ContainerAclOptions
        fullName: ContainerAclOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclOptions
  - uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
    name: BlobServiceProperties
    spec.typeScript:
      - name: BlobServiceProperties
        fullName: BlobServiceProperties
        uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CopyBlobRequestOptions
    name: CopyBlobRequestOptions
    spec.typeScript:
      - name: CopyBlobRequestOptions
        fullName: CopyBlobRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CopyBlobRequestOptions
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService
    name: BlobService
    spec.typeScript:
      - name: BlobService
        fullName: BlobService
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService
  - uid: azure-storage.azurestorage.services.file.FileService.FileServiceOptions
    name: FileServiceOptions
    spec.typeScript:
      - name: FileServiceOptions
        fullName: FileServiceOptions
        uid: azure-storage.azurestorage.services.file.FileService.FileServiceOptions
  - uid: 'azure-storage.azurestorage.services.file.FileService.ShareResult[]'
    name: 'ShareResult[]'
    spec.typeScript:
      - name: ShareResult
        fullName: ShareResult
        uid: azure-storage.azurestorage.services.file.FileService.ShareResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-storage.azurestorage.services.file.FileService.ShareResult
    name: ShareResult
    spec.typeScript:
      - name: ShareResult
        fullName: ShareResult
        uid: azure-storage.azurestorage.services.file.FileService.ShareResult
  - uid: azure-storage.Map<azure-storage.azurestorage.common.AccessPolicy>
    name: AccessPolicy>
    spec.typeScript:
      - name: Map
        fullName: Map
        uid: azure-storage.Map
      - name: <
        fullName: <
      - name: AccessPolicy
        fullName: AccessPolicy
        uid: azure-storage.azurestorage.common.AccessPolicy
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
    name: FileResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: FileResult
        fullName: FileResult
        uid: azure-storage.azurestorage.services.file.FileService.FileResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.file.FileService.CreateDirectoryRequestOptions
    name: CreateDirectoryRequestOptions
    spec.typeScript:
      - name: CreateDirectoryRequestOptions
        fullName: CreateDirectoryRequestOptions
        uid: azure-storage.azurestorage.services.file.FileService.CreateDirectoryRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
    name: DirectoryResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: DirectoryResult
        fullName: DirectoryResult
        uid: azure-storage.azurestorage.services.file.FileService.DirectoryResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
    name: CreateFileRequestOptions
    spec.typeScript:
      - name: CreateFileRequestOptions
        fullName: CreateFileRequestOptions
        uid: azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
  - uid: azure-storage.azurestorage.services.file.FileService.CreateRangeRequestOptions
    name: CreateRangeRequestOptions
    spec.typeScript:
      - name: CreateRangeRequestOptions
        fullName: CreateRangeRequestOptions
        uid: azure-storage.azurestorage.services.file.FileService.CreateRangeRequestOptions
  - uid: azure-storage.azurestorage.services.file.FileService.GetFileRequestOptions
    name: GetFileRequestOptions
    spec.typeScript:
      - name: GetFileRequestOptions
        fullName: GetFileRequestOptions
        uid: azure-storage.azurestorage.services.file.FileService.GetFileRequestOptions
  - uid: azure-storage.azurestorage.services.file.FileService.CreateShareRequestOptions
    name: CreateShareRequestOptions
    spec.typeScript:
      - name: CreateShareRequestOptions
        fullName: CreateShareRequestOptions
        uid: azure-storage.azurestorage.services.file.FileService.CreateShareRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
    name: ShareResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ShareResult
        fullName: ShareResult
        uid: azure-storage.azurestorage.services.file.FileService.ShareResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.file.FileService.DeleteShareOptions
    name: DeleteShareOptions
    spec.typeScript:
      - name: DeleteShareOptions
        fullName: DeleteShareOptions
        uid: azure-storage.azurestorage.services.file.FileService.DeleteShareOptions
  - uid: azure-storage.azurestorage.services.file.FileService.FileToText
    name: FileToText
    spec.typeScript:
      - name: FileToText
        fullName: FileToText
        uid: azure-storage.azurestorage.services.file.FileService.FileToText
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties>
    name: ServiceProperties>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ServiceProperties
        fullName: ServiceProperties
        uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareAclResult>
    name: ShareAclResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ShareAclResult
        fullName: ShareAclResult
        uid: azure-storage.azurestorage.services.file.FileService.ShareAclResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.file.FileService.ListRequestOptions
    name: ListRequestOptions
    spec.typeScript:
      - name: ListRequestOptions
        fullName: ListRequestOptions
        uid: azure-storage.azurestorage.services.file.FileService.ListRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListFilesAndDirectoriesResult>
    name: ListFilesAndDirectoriesResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ListFilesAndDirectoriesResult
        fullName: ListFilesAndDirectoriesResult
        uid: azure-storage.azurestorage.services.file.FileService.ListFilesAndDirectoriesResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.file.FileService.ListRangeRequestOptions
    name: ListRangeRequestOptions
    spec.typeScript:
      - name: ListRangeRequestOptions
        fullName: ListRangeRequestOptions
        uid: azure-storage.azurestorage.services.file.FileService.ListRangeRequestOptions
  - uid: azure-storage.azurestorage.services.file.FileService.ListShareRequestOptions
    name: ListShareRequestOptions
    spec.typeScript:
      - name: ListShareRequestOptions
        fullName: ListShareRequestOptions
        uid: azure-storage.azurestorage.services.file.FileService.ListShareRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListSharesResult>
    name: ListSharesResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ListSharesResult
        fullName: ListSharesResult
        uid: azure-storage.azurestorage.services.file.FileService.ListSharesResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.file.FileService.SetFilePropertiesRequestOptions
    name: SetFilePropertiesRequestOptions
    spec.typeScript:
      - name: SetFilePropertiesRequestOptions
        fullName: SetFilePropertiesRequestOptions
        uid: azure-storage.azurestorage.services.file.FileService.SetFilePropertiesRequestOptions
  - uid: azure-storage.azurestorage.services.file.FileService.ShareProperties
    name: ShareProperties
    spec.typeScript:
      - name: ShareProperties
        fullName: ShareProperties
        uid: azure-storage.azurestorage.services.file.FileService.ShareProperties
  - uid: azure-storage.azurestorage.services.file.FileService.CopyFileRequestOptions
    name: CopyFileRequestOptions
    spec.typeScript:
      - name: CopyFileRequestOptions
        fullName: CopyFileRequestOptions
        uid: azure-storage.azurestorage.services.file.FileService.CopyFileRequestOptions
  - uid: azure-storage.azurestorage.services.file.FileService
    name: FileService
    spec.typeScript:
      - name: FileService
        fullName: FileService
        uid: azure-storage.azurestorage.services.file.FileService
  - uid: 'azure-storage.azurestorage.services.queue.QueueService.QueueResult[]'
    name: 'QueueResult[]'
    spec.typeScript:
      - name: QueueResult
        fullName: QueueResult
        uid: azure-storage.azurestorage.services.queue.QueueService.QueueResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-storage.azurestorage.services.queue.QueueMessageEncoder
    name: QueueMessageEncoder
    spec.typeScript:
      - name: QueueMessageEncoder
        fullName: QueueMessageEncoder
        uid: azure-storage.azurestorage.services.queue.QueueMessageEncoder
  - uid: azure-storage.azurestorage.services.queue.QueueService.CreateMessageRequestOptions
    name: CreateMessageRequestOptions
    spec.typeScript:
      - name: CreateMessageRequestOptions
        fullName: CreateMessageRequestOptions
        uid: azure-storage.azurestorage.services.queue.QueueService.CreateMessageRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult>
    name: QueueMessageResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: QueueMessageResult
        fullName: QueueMessageResult
        uid: azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.queue.QueueService.CreateQueueRequestOptions
    name: CreateQueueRequestOptions
    spec.typeScript:
      - name: CreateQueueRequestOptions
        fullName: CreateQueueRequestOptions
        uid: azure-storage.azurestorage.services.queue.QueueService.CreateQueueRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueResult>
    name: QueueResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: QueueResult
        fullName: QueueResult
        uid: azure-storage.azurestorage.services.queue.QueueService.QueueResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.queue.QueueService.GetMessageRequestOptions
    name: GetMessageRequestOptions
    spec.typeScript:
      - name: GetMessageRequestOptions
        fullName: GetMessageRequestOptions
        uid: azure-storage.azurestorage.services.queue.QueueService.GetMessageRequestOptions
  - uid: azure-storage.azurestorage.services.queue.QueueService.GetMessagesRequestOptions
    name: GetMessagesRequestOptions
    spec.typeScript:
      - name: GetMessagesRequestOptions
        fullName: GetMessagesRequestOptions
        uid: azure-storage.azurestorage.services.queue.QueueService.GetMessagesRequestOptions
  - uid: 'azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult[]>'
    name: 'QueueMessageResult[]>'
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: QueueMessageResult
        fullName: QueueMessageResult
        uid: azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult
      - name: '[]>'
        fullName: '[]>'
  - uid: azure-storage.azurestorage.services.queue.QueueService.ListQueuesRequestOptions
    name: ListQueuesRequestOptions
    spec.typeScript:
      - name: ListQueuesRequestOptions
        fullName: ListQueuesRequestOptions
        uid: azure-storage.azurestorage.services.queue.QueueService.ListQueuesRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.ListQueueResult>
    name: ListQueueResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ListQueueResult
        fullName: ListQueueResult
        uid: azure-storage.azurestorage.services.queue.QueueService.ListQueueResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.queue.QueueService.PeekMessagesRequestOptions
    name: PeekMessagesRequestOptions
    spec.typeScript:
      - name: PeekMessagesRequestOptions
        fullName: PeekMessagesRequestOptions
        uid: azure-storage.azurestorage.services.queue.QueueService.PeekMessagesRequestOptions
  - uid: azure-storage.azurestorage.services.queue.QueueService.UpdateMessageRequestOptions
    name: UpdateMessageRequestOptions
    spec.typeScript:
      - name: UpdateMessageRequestOptions
        fullName: UpdateMessageRequestOptions
        uid: azure-storage.azurestorage.services.queue.QueueService.UpdateMessageRequestOptions
  - uid: azure-storage.azurestorage.services.queue.QueueService
    name: QueueService
    spec.typeScript:
      - name: QueueService
        fullName: QueueService
        uid: azure-storage.azurestorage.services.queue.QueueService
  - uid: azure-storage.azurestorage.services.table.TableService.BatchResponse
    name: BatchResponse
    spec.typeScript:
      - name: BatchResponse
        fullName: BatchResponse
        uid: azure-storage.azurestorage.services.table.TableService.BatchResponse
  - uid: azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
    name: TableEntityRequestOptions
    spec.typeScript:
      - name: TableEntityRequestOptions
        fullName: TableEntityRequestOptions
        uid: azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
  - uid: azure-storage.azurestorage.services.table.TableService.PropertyResolver
    name: PropertyResolver
    spec.typeScript:
      - name: PropertyResolver
        fullName: PropertyResolver
        uid: azure-storage.azurestorage.services.table.TableService.PropertyResolver
  - uid: azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
    name: ListTablesContinuationToken
    spec.typeScript:
      - name: ListTablesContinuationToken
        fullName: ListTablesContinuationToken
        uid: azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
  - uid: azure-storage.azurestorage.services.table.TableService.TableContinuationToken
    name: TableContinuationToken
    spec.typeScript:
      - name: TableContinuationToken
        fullName: TableContinuationToken
        uid: azure-storage.azurestorage.services.table.TableService.TableContinuationToken
  - uid: azure-storage.azurestorage.services.table.TableService.TableAccessPolicy
    name: TableAccessPolicy
    spec.typeScript:
      - name: TableAccessPolicy
        fullName: TableAccessPolicy
        uid: azure-storage.azurestorage.services.table.TableService.TableAccessPolicy
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
    name: TableResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: TableResult
        fullName: TableResult
        uid: azure-storage.azurestorage.services.table.TableService.TableResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.table.TableBatch
    name: TableBatch
    spec.typeScript:
      - name: TableBatch
        fullName: TableBatch
        uid: azure-storage.azurestorage.services.table.TableBatch
  - uid: 'azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.BatchResult[]>'
    name: 'BatchResult[]>'
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: BatchResult
        fullName: BatchResult
        uid: azure-storage.azurestorage.services.table.TableService.BatchResult
      - name: '[]>'
        fullName: '[]>'
  - uid: azure-storage.azurestorage.services.table.TableService.TableSharedAccessPolicy
    name: TableSharedAccessPolicy
    spec.typeScript:
      - name: TableSharedAccessPolicy
        fullName: TableSharedAccessPolicy
        uid: azure-storage.azurestorage.services.table.TableService.TableSharedAccessPolicy
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.GetTableAclResult>
    name: GetTableAclResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: GetTableAclResult
        fullName: GetTableAclResult
        uid: azure-storage.azurestorage.services.table.TableService.GetTableAclResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.table.TableService.InsertEntityRequestOptions
    name: InsertEntityRequestOptions
    spec.typeScript:
      - name: InsertEntityRequestOptions
        fullName: InsertEntityRequestOptions
        uid: azure-storage.azurestorage.services.table.TableService.InsertEntityRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<T | azure-storage.azurestorage.services.table.TableService.EntityMetadata>
    name: EntityMetadata>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: '<T | '
        fullName: '<T | '
      - name: EntityMetadata
        fullName: EntityMetadata
        uid: azure-storage.azurestorage.services.table.TableService.EntityMetadata
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
    name: EntityMetadata>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: EntityMetadata
        fullName: EntityMetadata
        uid: azure-storage.azurestorage.services.table.TableService.EntityMetadata
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.table.TableService.ListTablesRequestOptions
    name: ListTablesRequestOptions
    spec.typeScript:
      - name: ListTablesRequestOptions
        fullName: ListTablesRequestOptions
        uid: azure-storage.azurestorage.services.table.TableService.ListTablesRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.ListTablesResponse>
    name: ListTablesResponse>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ListTablesResponse
        fullName: ListTablesResponse
        uid: azure-storage.azurestorage.services.table.TableService.ListTablesResponse
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.table.TableQuery
    name: TableQuery
    spec.typeScript:
      - name: TableQuery
        fullName: TableQuery
        uid: azure-storage.azurestorage.services.table.TableQuery
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult<T>>
    name: QueryEntitiesResult<T>>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: QueryEntitiesResult
        fullName: QueryEntitiesResult
        uid: azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult
      - name: <T>>
        fullName: <T>>
  - uid: azure-storage.azurestorage.ErrorOrResult<T>
    name: ErrorOrResult<T>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <T>
        fullName: <T>
  - uid: azure-storage.azurestorage.ErrorOrResult<Object>
    name: ErrorOrResult<Object>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <Object>
        fullName: <Object>
  - uid: azure-storage.azurestorage.services.table.TableService
    name: TableService
    spec.typeScript:
      - name: TableService
        fullName: TableService
        uid: azure-storage.azurestorage.services.table.TableService
  - uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<Buffer>
    name: EntityProperty<Buffer>
    spec.typeScript:
      - name: EntityProperty
        fullName: EntityProperty
        uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
      - name: <Buffer>
        fullName: <Buffer>
  - uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<boolean>
    name: EntityProperty<boolean>
    spec.typeScript:
      - name: EntityProperty
        fullName: EntityProperty
        uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
      - name: <boolean>
        fullName: <boolean>
  - uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<Date>
    name: EntityProperty<Date>
    spec.typeScript:
      - name: EntityProperty
        fullName: EntityProperty
        uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
      - name: <Date>
        fullName: <Date>
  - uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<number>
    name: EntityProperty<number>
    spec.typeScript:
      - name: EntityProperty
        fullName: EntityProperty
        uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
      - name: <number>
        fullName: <number>
  - uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<any>
    name: EntityProperty<any>
    spec.typeScript:
      - name: EntityProperty
        fullName: EntityProperty
        uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
      - name: <any>
        fullName: <any>
  - uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<string>
    name: EntityProperty<string>
    spec.typeScript:
      - name: EntityProperty
        fullName: EntityProperty
        uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
      - name: <string>
        fullName: <string>
  - uid: 'azure-storage.azurestorage.services.table.TableOperation[]'
    name: 'TableOperation[]'
    spec.typeScript:
      - name: TableOperation
        fullName: TableOperation
        uid: azure-storage.azurestorage.services.table.TableOperation
      - name: '[]'
        fullName: '[]'
  - uid: azure-storage.azurestorage.services.table.TableOperation
    name: TableOperation
    spec.typeScript:
      - name: TableOperation
        fullName: TableOperation
        uid: azure-storage.azurestorage.services.table.TableOperation
  - uid: azure-storage.azurestorage.StorageError | Error
    name: StorageError | Error
    spec.typeScript:
      - name: StorageError
        fullName: StorageError
        uid: azure-storage.azurestorage.StorageError
      - name: ' | Error'
        fullName: ' | Error'
  - uid: azure-storage.azurestorage.ServiceResponse
    name: ServiceResponse
    spec.typeScript:
      - name: ServiceResponse
        fullName: ServiceResponse
        uid: azure-storage.azurestorage.ServiceResponse
  - uid: azure-storage.azurestorage.common.models.tokenCredential.TokenCredential
    name: TokenCredential
    spec.typeScript:
      - name: TokenCredential
        fullName: TokenCredential
        uid: azure-storage.azurestorage.common.models.tokenCredential.TokenCredential
  - uid: azure-storage.azurestorage.services.table.TableService.BatchResult
    name: BatchResult
  - uid: azure-storage.azurestorage.services.table.TableService.createTable_1
    name: createTable_1
  - uid: azure-storage.azurestorage.services.table.TableService.createTable
    name: createTable
  - uid: azure-storage.azurestorage.services.table.TableService.createTableIfNotExists_1
    name: createTableIfNotExists_1
  - uid: azure-storage.azurestorage.services.table.TableService.createTableIfNotExists
    name: createTableIfNotExists
  - uid: azure-storage.azurestorage.services.table.TableService.defaultClientRequestTimeoutInMs
    name: defaultClientRequestTimeoutInMs
  - uid: azure-storage.azurestorage.services.table.TableService.defaultLocationMode
    name: defaultLocationMode
  - uid: azure-storage.azurestorage.services.table.TableService.defaultMaximumExecutionTimeInMs
    name: defaultMaximumExecutionTimeInMs
  - uid: azure-storage.azurestorage.services.table.TableService.defaultPayloadFormat
    name: defaultPayloadFormat
  - uid: azure-storage.azurestorage.services.table.TableService.defaultTimeoutIntervalInMs
    name: defaultTimeoutIntervalInMs
  - uid: azure-storage.azurestorage.services.table.TableService.deleteEntity_1
    name: deleteEntity_1
  - uid: azure-storage.azurestorage.services.table.TableService.deleteEntity
    name: deleteEntity
  - uid: azure-storage.azurestorage.services.table.TableService.deleteTable_1
    name: deleteTable_1
  - uid: azure-storage.azurestorage.services.table.TableService.deleteTable
    name: deleteTable
  - uid: azure-storage.azurestorage.services.table.TableService.deleteTableIfExists_1
    name: deleteTableIfExists_1
  - uid: azure-storage.azurestorage.services.table.TableService.deleteTableIfExists
    name: deleteTableIfExists
  - uid: azure-storage.azurestorage.services.table.TableService.doesTableExist_1
    name: doesTableExist_1
  - uid: azure-storage.azurestorage.services.table.TableService.doesTableExist
    name: doesTableExist
  - uid: azure-storage.azurestorage.services.table.TableService.enableGlobalHttpAgent
    name: enableGlobalHttpAgent
  - uid: azure-storage.azurestorage.services.table.TableService.EntityMetadata
    name: EntityMetadata
  - uid: azure-storage.azurestorage.services.table.TableService.EntityProperty
    name: EntityProperty
  - uid: azure-storage.azurestorage.services.table.TableService.executeBatch_1
    name: executeBatch_1
  - uid: azure-storage.azurestorage.services.table.TableService.executeBatch
    name: executeBatch
  - uid: azure-storage.azurestorage.services.table.TableService.generateSharedAccessSignature
    name: generateSharedAccessSignature
  - uid: azure-storage.azurestorage.services.table.TableService.generateSharedAccessSignatureWithVersion
    name: generateSharedAccessSignatureWithVersion
  - uid: azure-storage.azurestorage.services.table.TableService.getServiceProperties_1
    name: getServiceProperties_1
  - uid: azure-storage.azurestorage.services.table.TableService.getServiceProperties
    name: getServiceProperties
  - uid: azure-storage.azurestorage.services.table.TableService.getServiceStats_1
    name: getServiceStats_1
  - uid: azure-storage.azurestorage.services.table.TableService.getServiceStats
    name: getServiceStats
  - uid: azure-storage.azurestorage.services.table.TableService.getTableAcl_1
    name: getTableAcl_1
  - uid: azure-storage.azurestorage.services.table.TableService.getTableAcl
    name: getTableAcl
  - uid: azure-storage.azurestorage.services.table.TableService.GetTableAclResult
    name: GetTableAclResult
  - uid: azure-storage.azurestorage.services.table.TableService.getUrl
    name: getUrl
  - uid: azure-storage.azurestorage.services.table.TableService.insertEntity_2
    name: insertEntity_2
  - uid: azure-storage.azurestorage.services.table.TableService.insertEntity
    name: insertEntity
  - uid: azure-storage.azurestorage.services.table.TableService.insertEntity_1
    name: insertEntity_1
  - uid: azure-storage.azurestorage.services.table.TableService.insertOrMergeEntity_1
    name: insertOrMergeEntity_1
  - uid: azure-storage.azurestorage.services.table.TableService.insertOrMergeEntity
    name: insertOrMergeEntity
  - uid: azure-storage.azurestorage.services.table.TableService.insertOrReplaceEntity_1
    name: insertOrReplaceEntity_1
  - uid: azure-storage.azurestorage.services.table.TableService.insertOrReplaceEntity
    name: insertOrReplaceEntity
  - uid: azure-storage.azurestorage.services.table.TableService.ListTablesResponse
    name: ListTablesResponse
  - uid: azure-storage.azurestorage.services.table.TableService.listTablesSegmented_1
    name: listTablesSegmented_1
  - uid: azure-storage.azurestorage.services.table.TableService.listTablesSegmented
    name: listTablesSegmented
  - uid: azure-storage.azurestorage.services.table.TableService.listTablesSegmentedWithPrefix_1
    name: listTablesSegmentedWithPrefix_1
  - uid: azure-storage.azurestorage.services.table.TableService.listTablesSegmentedWithPrefix
    name: listTablesSegmentedWithPrefix
  - uid: azure-storage.azurestorage.services.table.TableService.logger
    name: logger
  - uid: azure-storage.azurestorage.services.table.TableService.mergeEntity_1
    name: mergeEntity_1
  - uid: azure-storage.azurestorage.services.table.TableService.mergeEntity
    name: mergeEntity
  - uid: azure-storage.azurestorage.services.table.TableService.proxy
    name: proxy
  - uid: azure-storage.azurestorage.services.table.TableService.queryEntities_1
    name: queryEntities_1
  - uid: azure-storage.azurestorage.services.table.TableService.queryEntities
    name: queryEntities
  - uid: azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult
    name: QueryEntitiesResult
  - uid: azure-storage.azurestorage.services.table.TableService.replaceEntity_1
    name: replaceEntity_1
  - uid: azure-storage.azurestorage.services.table.TableService.replaceEntity
    name: replaceEntity
  - uid: azure-storage.azurestorage.services.table.TableService.retrieveEntity_1
    name: retrieveEntity_1
  - uid: azure-storage.azurestorage.services.table.TableService.retrieveEntity
    name: retrieveEntity
  - uid: azure-storage.azurestorage.services.table.TableService.setProxy
    name: setProxy
  - uid: azure-storage.azurestorage.services.table.TableService.setServiceProperties_1
    name: setServiceProperties_1
  - uid: azure-storage.azurestorage.services.table.TableService.setServiceProperties
    name: setServiceProperties
  - uid: azure-storage.azurestorage.services.table.TableService.setTableAcl_1
    name: setTableAcl_1
  - uid: azure-storage.azurestorage.services.table.TableService.setTableAcl
    name: setTableAcl
  - uid: azure-storage.azurestorage.services.table.TableService.TableResult
    name: TableResult
  - uid: azure-storage.azurestorage.services.table.TableService.constructor
    name: constructor
  - uid: azure-storage.azurestorage.services.table.TableService.useNagleAlgorithm
    name: useNagleAlgorithm
  - uid: azure-storage.azurestorage.services.table.TableService.withFilter
    name: withFilter