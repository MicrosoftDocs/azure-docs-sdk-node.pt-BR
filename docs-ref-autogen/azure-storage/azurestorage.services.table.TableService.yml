### YamlMime:UniversalReference
ms.openlocfilehash: 5c3f7bf48109c9baedb5767fbac224e9bfef4047
ms.sourcegitcommit: 0e294f7c4dcdfae9df18ff3e82b6563680ef2519
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 01/25/2019
ms.locfileid: "55050357"
items:
- uid: azure-storage.azurestorage.services.table.TableService
  name: TableService
  fullName: TableService
  children:
  - azure-storage.azurestorage.services.table.TableService.BatchResponse
  - azure-storage.azurestorage.services.table.TableService.BatchResult
  - azure-storage.azurestorage.services.table.TableService.createTable_1
  - azure-storage.azurestorage.services.table.TableService.createTable
  - azure-storage.azurestorage.services.table.TableService.createTableIfNotExists_1
  - azure-storage.azurestorage.services.table.TableService.createTableIfNotExists
  - azure-storage.azurestorage.services.table.TableService.defaultPayloadFormat
  - azure-storage.azurestorage.services.table.TableService.deleteEntity_1
  - azure-storage.azurestorage.services.table.TableService.deleteEntity
  - azure-storage.azurestorage.services.table.TableService.deleteTable_1
  - azure-storage.azurestorage.services.table.TableService.deleteTable
  - azure-storage.azurestorage.services.table.TableService.deleteTableIfExists_1
  - azure-storage.azurestorage.services.table.TableService.deleteTableIfExists
  - azure-storage.azurestorage.services.table.TableService.doesTableExist_1
  - azure-storage.azurestorage.services.table.TableService.doesTableExist
  - azure-storage.azurestorage.services.table.TableService.EntityMetadata
  - azure-storage.azurestorage.services.table.TableService.EntityProperty
  - azure-storage.azurestorage.services.table.TableService.executeBatch_1
  - azure-storage.azurestorage.services.table.TableService.executeBatch
  - azure-storage.azurestorage.services.table.TableService.generateSharedAccessSignature
  - azure-storage.azurestorage.services.table.TableService.generateSharedAccessSignatureWithVersion
  - azure-storage.azurestorage.services.table.TableService.getServiceProperties_1
  - azure-storage.azurestorage.services.table.TableService.getServiceProperties
  - azure-storage.azurestorage.services.table.TableService.getServiceStats_1
  - azure-storage.azurestorage.services.table.TableService.getServiceStats
  - azure-storage.azurestorage.services.table.TableService.getTableAcl_1
  - azure-storage.azurestorage.services.table.TableService.getTableAcl
  - azure-storage.azurestorage.services.table.TableService.GetTableAclResult
  - azure-storage.azurestorage.services.table.TableService.getUrl
  - azure-storage.azurestorage.services.table.TableService.insertEntity_2
  - azure-storage.azurestorage.services.table.TableService.insertEntity
  - azure-storage.azurestorage.services.table.TableService.insertEntity_1
  - azure-storage.azurestorage.services.table.TableService.InsertEntityRequestOptions
  - azure-storage.azurestorage.services.table.TableService.insertOrMergeEntity_1
  - azure-storage.azurestorage.services.table.TableService.insertOrMergeEntity
  - azure-storage.azurestorage.services.table.TableService.insertOrReplaceEntity_1
  - azure-storage.azurestorage.services.table.TableService.insertOrReplaceEntity
  - azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
  - azure-storage.azurestorage.services.table.TableService.ListTablesRequestOptions
  - azure-storage.azurestorage.services.table.TableService.ListTablesResponse
  - azure-storage.azurestorage.services.table.TableService.listTablesSegmented_1
  - azure-storage.azurestorage.services.table.TableService.listTablesSegmented
  - azure-storage.azurestorage.services.table.TableService.listTablesSegmentedWithPrefix_1
  - azure-storage.azurestorage.services.table.TableService.listTablesSegmentedWithPrefix
  - azure-storage.azurestorage.services.table.TableService.mergeEntity_1
  - azure-storage.azurestorage.services.table.TableService.mergeEntity
  - azure-storage.azurestorage.services.table.TableService.PropertyResolver
  - azure-storage.azurestorage.services.table.TableService.queryEntities_1
  - azure-storage.azurestorage.services.table.TableService.queryEntities
  - azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult
  - azure-storage.azurestorage.services.table.TableService.replaceEntity_1
  - azure-storage.azurestorage.services.table.TableService.replaceEntity
  - azure-storage.azurestorage.services.table.TableService.retrieveEntity_1
  - azure-storage.azurestorage.services.table.TableService.retrieveEntity
  - azure-storage.azurestorage.services.table.TableService.setServiceProperties_1
  - azure-storage.azurestorage.services.table.TableService.setServiceProperties
  - azure-storage.azurestorage.services.table.TableService.setTableAcl_1
  - azure-storage.azurestorage.services.table.TableService.setTableAcl
  - azure-storage.azurestorage.services.table.TableService.TableAccessPolicy
  - azure-storage.azurestorage.services.table.TableService.TableContinuationToken
  - azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
  - azure-storage.azurestorage.services.table.TableService.TableResult
  - azure-storage.azurestorage.services.table.TableService.TableSharedAccessPolicy
  - azure-storage.azurestorage.services.table.TableService.withFilter
  langs:
  - typeScript
  type: module
  summary: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.createTable_1
  name: createTable(string, ErrorOrResult<TableResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-101">Cria uma nova tabela em uma conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="f7bed-101">Creates a new table within a storage account.</span></span>
  syntax:
    content: 'function createTable(table: string, callback: ErrorOrResult<TableResult>)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-102">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-102">The table name.</span></span>
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
      description: >
        <span data-ttu-id="f7bed-103">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as novas informações de tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-103">`error` will contain information if an error occurs; otherwise `result` will contain the new table information.</span></span>
                                                                            <span data-ttu-id="f7bed-104">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-104">`response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.createTable
  name: createTable(string, RequestOptions, ErrorOrResult<TableResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-105">Cria uma nova tabela em uma conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="f7bed-105">Creates a new table within a storage account.</span></span>
  syntax:
    content: 'function createTable(table: string, options: RequestOptions, callback: ErrorOrResult<TableResult>)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-106">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-106">The table name.</span></span>
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
      description: >
        <span data-ttu-id="f7bed-107">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as novas informações de tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-107">`error` will contain information if an error occurs; otherwise `result` will contain the new table information.</span></span>
                                                                            <span data-ttu-id="f7bed-108">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-108">`response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.createTableIfNotExists_1
  name: createTableIfNotExists(string, ErrorOrResult<TableResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-109">Cria uma nova tabela em uma conta de armazenamento, se ele não existir.</span><span class="sxs-lookup"><span data-stu-id="f7bed-109">Creates a new table within a storage account if it does not exists.</span></span>
  syntax:
    content: 'function createTableIfNotExists(table: string, callback: ErrorOrResult<TableResult>)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-110">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-110">The table name.</span></span>
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
      description: >
        <span data-ttu-id="f7bed-111">`error` conterá informações se ocorrer um erro; `result` estarão `true` se a tabela foi criada, false caso contrário, `response` conterá informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-111">`error` will contain information if an error occurs; `result` will be `true` if table was created, false otherwise `response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.createTableIfNotExists
  name: createTableIfNotExists(string, RequestOptions, ErrorOrResult<TableResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-112">Cria uma nova tabela em uma conta de armazenamento, se ele não existir.</span><span class="sxs-lookup"><span data-stu-id="f7bed-112">Creates a new table within a storage account if it does not exists.</span></span>
  syntax:
    content: 'function createTableIfNotExists(table: string, options: RequestOptions, callback: ErrorOrResult<TableResult>)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-113">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-113">The table name.</span></span>
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
      description: >
        <span data-ttu-id="f7bed-114">`error` conterá informações se ocorrer um erro; `result` estarão `true` se a tabela foi criada, false caso contrário, `response` conterá informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-114">`error` will contain information if an error occurs; `result` will be `true` if table was created, false otherwise `response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.defaultPayloadFormat
  name: defaultPayloadFormat
  fullName: defaultPayloadFormat
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'defaultPayloadFormat: string'
    return:
      type:
      - string
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.deleteEntity_1
  name: deleteEntity(string, T, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-115">Exclui uma entidade dentro de uma tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-115">Deletes an entity within a table.</span></span> <span data-ttu-id="f7bed-116">Para excluir condicionalmente com base em etag, conjunto de entidade ['.metadata'] ['etag'].</span><span class="sxs-lookup"><span data-stu-id="f7bed-116">To delete conditionally based on etag, set entity['.metadata']['etag'].</span></span>
  syntax:
    content: 'function deleteEntity<T>(table: string, entityDescriptor: T, callback: ErrorOrResponse)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-117">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-117">The table name.</span></span>
    - id: entityDescriptor
      type:
      - T
      description: <span data-ttu-id="f7bed-118">O descritor de entidade.</span><span class="sxs-lookup"><span data-stu-id="f7bed-118">The entity descriptor.</span></span>
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        <span data-ttu-id="f7bed-119">`error` conterá informações se ocorrer um erro; `response` conterá informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-119">`error` will contain information if an error occurs; `response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.deleteEntity
  name: deleteEntity(string, T, RequestOptions, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-120">Exclui uma entidade dentro de uma tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-120">Deletes an entity within a table.</span></span> <span data-ttu-id="f7bed-121">Para excluir condicionalmente com base em etag, conjunto de entidade ['.metadata'] ['etag'].</span><span class="sxs-lookup"><span data-stu-id="f7bed-121">To delete conditionally based on etag, set entity['.metadata']['etag'].</span></span>
  syntax:
    content: 'function deleteEntity<T>(table: string, entityDescriptor: T, options: RequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-122">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-122">The table name.</span></span>
    - id: entityDescriptor
      type:
      - T
      description: <span data-ttu-id="f7bed-123">O descritor de entidade.</span><span class="sxs-lookup"><span data-stu-id="f7bed-123">The entity descriptor.</span></span>
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        <span data-ttu-id="f7bed-124">`error` conterá informações se ocorrer um erro; `response` conterá informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-124">`error` will contain information if an error occurs; `response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.deleteTable_1
  name: deleteTable(string, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-125">Exclui uma tabela de uma conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="f7bed-125">Deletes a table from a storage account.</span></span>
  syntax:
    content: 'function deleteTable(table: string, callback: ErrorOrResponse)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-126">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-126">The table name.</span></span>
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        <span data-ttu-id="f7bed-127">`error` conterá informações se ocorrer um erro; `response` conterá informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-127">`error` will contain information if an error occurs; `response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.deleteTable
  name: deleteTable(string, RequestOptions, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-128">Exclui uma tabela de uma conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="f7bed-128">Deletes a table from a storage account.</span></span>
  syntax:
    content: 'function deleteTable(table: string, options: RequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-129">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-129">The table name.</span></span>
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        <span data-ttu-id="f7bed-130">`error` conterá informações se ocorrer um erro; `response` conterá informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-130">`error` will contain information if an error occurs; `response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.deleteTableIfExists_1
  name: deleteTableIfExists(string, ErrorOrResult<boolean>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-131">Exclui uma tabela de uma conta de armazenamento, se ele existir.</span><span class="sxs-lookup"><span data-stu-id="f7bed-131">Deletes a table from a storage account, if it exists.</span></span>
  syntax:
    content: 'function deleteTableIfExists(table: string, callback: ErrorOrResult<boolean>)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-132">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-132">The table name.</span></span>
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<boolean>
      description: >
        <span data-ttu-id="f7bed-133">`error` conterá informações se ocorrer um erro; `result` estarão `true` se a tabela foi excluída, false caso contrário, `response` conterá informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-133">`error` will contain information if an error occurs; `result` will be `true` if table was deleted, false otherwise `response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.deleteTableIfExists
  name: deleteTableIfExists(string, RequestOptions, ErrorOrResult<boolean>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-134">Exclui uma tabela de uma conta de armazenamento, se ele existir.</span><span class="sxs-lookup"><span data-stu-id="f7bed-134">Deletes a table from a storage account, if it exists.</span></span>
  syntax:
    content: 'function deleteTableIfExists(table: string, options: RequestOptions, callback: ErrorOrResult<boolean>)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-135">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-135">The table name.</span></span>
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<boolean>
      description: >
        <span data-ttu-id="f7bed-136">`error` conterá informações se ocorrer um erro; `result` estarão `true` se a tabela foi excluída, false caso contrário, `response` conterá informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-136">`error` will contain information if an error occurs; `result` will be `true` if table was deleted, false otherwise `response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.doesTableExist_1
  name: doesTableExist(string, ErrorOrResult<TableResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-137">Verifica se há ou não existe uma tabela no serviço.</span><span class="sxs-lookup"><span data-stu-id="f7bed-137">Checks whether or not a table exists on the service.</span></span>
  syntax:
    content: 'function doesTableExist(table: string, callback: ErrorOrResult<TableResult>)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-138">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-138">The table name.</span></span>
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
      description: >
        <span data-ttu-id="f7bed-139">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá true se a tabela existir, ou false se a tabela não existir.</span><span class="sxs-lookup"><span data-stu-id="f7bed-139">`error` will contain information if an error occurs; otherwise `result` will contain be true if the table exists, or false if the table does not exist.</span></span>
                                                                            <span data-ttu-id="f7bed-140">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-140">`response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.doesTableExist
  name: doesTableExist(string, RequestOptions, ErrorOrResult<TableResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-141">Verifica se há ou não existe uma tabela no serviço.</span><span class="sxs-lookup"><span data-stu-id="f7bed-141">Checks whether or not a table exists on the service.</span></span>
  syntax:
    content: 'function doesTableExist(table: string, options: RequestOptions, callback: ErrorOrResult<TableResult>)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-142">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-142">The table name.</span></span>
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
      description: >
        <span data-ttu-id="f7bed-143">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá true se a tabela existir, ou false se a tabela não existir.</span><span class="sxs-lookup"><span data-stu-id="f7bed-143">`error` will contain information if an error occurs; otherwise `result` will contain be true if the table exists, or false if the table does not exist.</span></span>
                                                                            <span data-ttu-id="f7bed-144">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-144">`response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.executeBatch_1
  name: executeBatch(string, TableBatch, ErrorOrResult<BatchResult[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-145">Executa as operações no lote.</span><span class="sxs-lookup"><span data-stu-id="f7bed-145">Executes the operations in the batch.</span></span>
  syntax:
    content: 'function executeBatch(table: string, batch: TableBatch, callback: ErrorOrResult<BatchResult[]>)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-146">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-146">The table name.</span></span>
    - id: batch
      type:
      - azure-storage.azurestorage.services.table.TableBatch
      description: <span data-ttu-id="f7bed-147">O lote de tabela para executar.</span><span class="sxs-lookup"><span data-stu-id="f7bed-147">The table batch to execute.</span></span>
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.BatchResult[]>
      description: >
        <span data-ttu-id="f7bed-148">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as respostas para cada operação executada no lote; `result.entity` conterá as informações de entidade para cada operação executada.</span><span class="sxs-lookup"><span data-stu-id="f7bed-148">`error` will contain information if an error occurs; otherwise `result` will contain responses for each operation executed in the batch; `result.entity` will contain the entity information for each operation executed.</span></span>
                                                                                    <span data-ttu-id="f7bed-149">`result.response` contém a resposta para cada operação executada.</span><span class="sxs-lookup"><span data-stu-id="f7bed-149">`result.response` will contain the response for each operations executed.</span></span>
                                                                                    <span data-ttu-id="f7bed-150">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-150">`response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.executeBatch
  name: executeBatch(string, TableBatch, TableEntityRequestOptions, ErrorOrResult<BatchResult[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-151">Executa as operações no lote.</span><span class="sxs-lookup"><span data-stu-id="f7bed-151">Executes the operations in the batch.</span></span>
  syntax:
    content: 'function executeBatch(table: string, batch: TableBatch, options: TableEntityRequestOptions, callback: ErrorOrResult<BatchResult[]>)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-152">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-152">The table name.</span></span>
    - id: batch
      type:
      - azure-storage.azurestorage.services.table.TableBatch
      description: <span data-ttu-id="f7bed-153">O lote de tabela para executar.</span><span class="sxs-lookup"><span data-stu-id="f7bed-153">The table batch to execute.</span></span>
    - id: options
      type:
      - azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.BatchResult[]>
      description: >
        <span data-ttu-id="f7bed-154">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as respostas para cada operação executada no lote; `result.entity` conterá as informações de entidade para cada operação executada.</span><span class="sxs-lookup"><span data-stu-id="f7bed-154">`error` will contain information if an error occurs; otherwise `result` will contain responses for each operation executed in the batch; `result.entity` will contain the entity information for each operation executed.</span></span>
                                                                                    <span data-ttu-id="f7bed-155">`result.response` contém a resposta para cada operação executada.</span><span class="sxs-lookup"><span data-stu-id="f7bed-155">`result.response` will contain the response for each operations executed.</span></span>
                                                                                    <span data-ttu-id="f7bed-156">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-156">`response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.generateSharedAccessSignature
  name: generateSharedAccessSignature(string, TableSharedAccessPolicy)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-157">Recupera um token de assinatura de acesso compartilhado.</span><span class="sxs-lookup"><span data-stu-id="f7bed-157">Retrieves a shared access signature token.</span></span>
  syntax:
    content: 'function generateSharedAccessSignature(table: string, sharedAccessPolicy: TableSharedAccessPolicy)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-158">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-158">The table name.</span></span>
    - id: sharedAccessPolicy
      type:
      - azure-storage.azurestorage.services.table.TableService.TableSharedAccessPolicy
      description: <span data-ttu-id="f7bed-159">A política de acesso compartilhado.</span><span class="sxs-lookup"><span data-stu-id="f7bed-159">The shared access policy.</span></span>
    return:
      type:
      - string
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.generateSharedAccessSignatureWithVersion
  name: generateSharedAccessSignatureWithVersion(string, TableSharedAccessPolicy, string)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-160">Recupera um token de assinatura de acesso compartilhado.</span><span class="sxs-lookup"><span data-stu-id="f7bed-160">Retrieves a shared access signature token.</span></span>
  syntax:
    content: 'function generateSharedAccessSignatureWithVersion(table: string, sharedAccessPolicy: TableSharedAccessPolicy, sasVersion: string)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-161">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-161">The table name.</span></span>
    - id: sharedAccessPolicy
      type:
      - azure-storage.azurestorage.services.table.TableService.TableSharedAccessPolicy
      description: <span data-ttu-id="f7bed-162">A política de acesso compartilhado.</span><span class="sxs-lookup"><span data-stu-id="f7bed-162">The shared access policy.</span></span>
    - id: sasVersion
      type:
      - string
      description: ''
    return:
      type:
      - string
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.getServiceProperties_1
  name: getServiceProperties(ErrorOrResult<ServiceProperties>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-163">Obtém as propriedades do serviço de tabela de uma conta de armazenamento, incluindo a análise de armazenamento do Azure.</span><span class="sxs-lookup"><span data-stu-id="f7bed-163">Gets the properties of a storage account’s Table service, including Azure Storage Analytics.</span></span>
  syntax:
    content: 'function getServiceProperties(callback: ErrorOrResult<ServiceProperties>)'
    parameters:
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties>
      description: >
        <span data-ttu-id="f7bed-164">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as propriedades.</span><span class="sxs-lookup"><span data-stu-id="f7bed-164">`error` will contain information if an error occurs; otherwise `result` will contain the properties.</span></span>
                                                                                <span data-ttu-id="f7bed-165">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-165">`response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.getServiceProperties
  name: getServiceProperties(RequestOptions, ErrorOrResult<ServiceProperties>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-166">Obtém as propriedades do serviço de tabela de uma conta de armazenamento, incluindo a análise de armazenamento do Azure.</span><span class="sxs-lookup"><span data-stu-id="f7bed-166">Gets the properties of a storage account’s Table service, including Azure Storage Analytics.</span></span>
  syntax:
    content: 'function getServiceProperties(options: RequestOptions, callback: ErrorOrResult<ServiceProperties>)'
    parameters:
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties>
      description: >
        <span data-ttu-id="f7bed-167">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as propriedades.</span><span class="sxs-lookup"><span data-stu-id="f7bed-167">`error` will contain information if an error occurs; otherwise `result` will contain the properties.</span></span>
                                                                                <span data-ttu-id="f7bed-168">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-168">`response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.getServiceStats_1
  name: getServiceStats(ErrorOrResult<ServiceStats>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-169">Obtém as estatísticas do serviço para serviço de tabela de uma conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="f7bed-169">Gets the service stats for a storage account’s Table service.</span></span>
  syntax:
    content: 'function getServiceStats(callback: ErrorOrResult<ServiceStats>)'
    parameters:
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServiceStats>
      description: >
        <span data-ttu-id="f7bed-170">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as propriedades.</span><span class="sxs-lookup"><span data-stu-id="f7bed-170">`error` will contain information if an error occurs; otherwise `result` will contain the properties.</span></span>
                                                                                <span data-ttu-id="f7bed-171">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-171">`response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.getServiceStats
  name: getServiceStats(RequestOptions, ErrorOrResult<ServiceStats>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-172">Obtém as estatísticas do serviço para serviço de tabela de uma conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="f7bed-172">Gets the service stats for a storage account’s Table service.</span></span>
  syntax:
    content: 'function getServiceStats(options: RequestOptions, callback: ErrorOrResult<ServiceStats>)'
    parameters:
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServiceStats>
      description: >
        <span data-ttu-id="f7bed-173">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as propriedades.</span><span class="sxs-lookup"><span data-stu-id="f7bed-173">`error` will contain information if an error occurs; otherwise `result` will contain the properties.</span></span>
                                                                                <span data-ttu-id="f7bed-174">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-174">`response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.getTableAcl_1
  name: getTableAcl(string, ErrorOrResult<GetTableAclResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-175">Obtém a ACL da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-175">Gets the table's ACL.</span></span>
  syntax:
    content: 'function getTableAcl(table: string, callback: ErrorOrResult<GetTableAclResult>)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-176">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-176">The table name.</span></span>
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.GetTableAclResult>
      description: >
        <span data-ttu-id="f7bed-177">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de ACL para a tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-177">`error` will contain information if an error occurs; otherwise `result` will contain the ACL information for the table.</span></span>
                                                                                 <span data-ttu-id="f7bed-178">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-178">`response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.getTableAcl
  name: getTableAcl(string, RequestOptions, ErrorOrResult<GetTableAclResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-179">Obtém a ACL da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-179">Gets the table's ACL.</span></span>
  syntax:
    content: 'function getTableAcl(table: string, options: RequestOptions, callback: ErrorOrResult<GetTableAclResult>)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-180">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-180">The table name.</span></span>
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.GetTableAclResult>
      description: >
        <span data-ttu-id="f7bed-181">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de ACL para a tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-181">`error` will contain information if an error occurs; otherwise `result` will contain the ACL information for the table.</span></span>
                                                                                 <span data-ttu-id="f7bed-182">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-182">`response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.getUrl
  name: getUrl(string, string, boolean)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getUrl(table: string, sasToken?: string, primary?: boolean)'
    parameters:
    - id: table
      type:
      - string
      description: ''
    - id: sasToken
      type:
      - string
      description: ''
      optional: true
    - id: primary
      type:
      - boolean
      description: ''
      optional: true
    return:
      type:
      - string
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.insertEntity_2
  name: insertEntity(string, T, ErrorOrResult<EntityMetadata>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-183">Insere uma nova entidade em uma tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-183">Inserts a new entity into a table.</span></span>
  syntax:
    content: 'function insertEntity<T>(table: string, entityDescriptor: T, callback: ErrorOrResult<EntityMetadata>)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-184">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-184">The table name.</span></span>
    - id: entityDescriptor
      type:
      - T
      description: <span data-ttu-id="f7bed-185">O descritor de entidade.</span><span class="sxs-lookup"><span data-stu-id="f7bed-185">The entity descriptor.</span></span>
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
      description: >
        <span data-ttu-id="f7bed-186">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de entidade.</span><span class="sxs-lookup"><span data-stu-id="f7bed-186">`error` will contain information if an error occurs; otherwise `result` will contain the entity information.</span></span>
                                                                                    <span data-ttu-id="f7bed-187">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-187">`response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.insertEntity
  name: insertEntity(string, T, InsertEntityRequestOptions, ErrorOrResult<T | EntityMetadata>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-188">Insere uma nova entidade em uma tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-188">Inserts a new entity into a table.</span></span>
  syntax:
    content: 'function insertEntity<T>(table: string, entityDescriptor: T, options: InsertEntityRequestOptions, callback: ErrorOrResult<T | EntityMetadata>)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-189">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-189">The table name.</span></span>
    - id: entityDescriptor
      type:
      - T
      description: <span data-ttu-id="f7bed-190">O descritor de entidade.</span><span class="sxs-lookup"><span data-stu-id="f7bed-190">The entity descriptor.</span></span>
    - id: options
      type:
      - azure-storage.azurestorage.services.table.TableService.InsertEntityRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<T | azure-storage.azurestorage.services.table.TableService.EntityMetadata>
      description: >
        <span data-ttu-id="f7bed-191">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de entidade.</span><span class="sxs-lookup"><span data-stu-id="f7bed-191">`error` will contain information if an error occurs; otherwise `result` will contain the entity information.</span></span>
                                                                                    <span data-ttu-id="f7bed-192">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-192">`response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.insertEntity_1
  name: insertEntity(string, T, RequestOptions, ErrorOrResult<EntityMetadata>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-193">Insere uma nova entidade em uma tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-193">Inserts a new entity into a table.</span></span>
  syntax:
    content: 'function insertEntity<T>(table: string, entityDescriptor: T, options: RequestOptions, callback: ErrorOrResult<EntityMetadata>)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-194">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-194">The table name.</span></span>
    - id: entityDescriptor
      type:
      - T
      description: <span data-ttu-id="f7bed-195">O descritor de entidade.</span><span class="sxs-lookup"><span data-stu-id="f7bed-195">The entity descriptor.</span></span>
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
      description: >
        <span data-ttu-id="f7bed-196">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de entidade.</span><span class="sxs-lookup"><span data-stu-id="f7bed-196">`error` will contain information if an error occurs; otherwise `result` will contain the entity information.</span></span>
                                                                                    <span data-ttu-id="f7bed-197">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-197">`response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.insertOrMergeEntity_1
  name: insertOrMergeEntity(string, T, ErrorOrResult<EntityMetadata>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-198">Insere ou atualiza uma entidade existente em uma tabela mesclando novos valores de propriedade na entidade.</span><span class="sxs-lookup"><span data-stu-id="f7bed-198">Inserts or updates an existing entity within a table by merging new property values into the entity.</span></span>
  syntax:
    content: 'function insertOrMergeEntity<T>(table: string, entityDescriptor: T, callback: ErrorOrResult<EntityMetadata>)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-199">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-199">The table name.</span></span>
    - id: entityDescriptor
      type:
      - T
      description: <span data-ttu-id="f7bed-200">O descritor de entidade.</span><span class="sxs-lookup"><span data-stu-id="f7bed-200">The entity descriptor.</span></span>
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
      description: >
        <span data-ttu-id="f7bed-201">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de entidade.</span><span class="sxs-lookup"><span data-stu-id="f7bed-201">`error` will contain information if an error occurs; otherwise `result` will contain the entity information.</span></span>
                                                                            <span data-ttu-id="f7bed-202">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-202">`response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.insertOrMergeEntity
  name: insertOrMergeEntity(string, T, RequestOptions, ErrorOrResult<EntityMetadata>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-203">Insere ou atualiza uma entidade existente em uma tabela mesclando novos valores de propriedade na entidade.</span><span class="sxs-lookup"><span data-stu-id="f7bed-203">Inserts or updates an existing entity within a table by merging new property values into the entity.</span></span>
  syntax:
    content: 'function insertOrMergeEntity<T>(table: string, entityDescriptor: T, options: RequestOptions, callback: ErrorOrResult<EntityMetadata>)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-204">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-204">The table name.</span></span>
    - id: entityDescriptor
      type:
      - T
      description: <span data-ttu-id="f7bed-205">O descritor de entidade.</span><span class="sxs-lookup"><span data-stu-id="f7bed-205">The entity descriptor.</span></span>
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
      description: >
        <span data-ttu-id="f7bed-206">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de entidade.</span><span class="sxs-lookup"><span data-stu-id="f7bed-206">`error` will contain information if an error occurs; otherwise `result` will contain the entity information.</span></span>
                                                                            <span data-ttu-id="f7bed-207">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-207">`response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.insertOrReplaceEntity_1
  name: insertOrReplaceEntity(string, T, ErrorOrResult<EntityMetadata>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-208">Insere ou atualiza uma nova entidade em uma tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-208">Inserts or updates a new entity into a table.</span></span>
  syntax:
    content: 'function insertOrReplaceEntity<T>(table: string, entityDescriptor: T, callback: ErrorOrResult<EntityMetadata>)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-209">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-209">The table name.</span></span>
    - id: entityDescriptor
      type:
      - T
      description: <span data-ttu-id="f7bed-210">O descritor de entidade.</span><span class="sxs-lookup"><span data-stu-id="f7bed-210">The entity descriptor.</span></span>
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
      description: >
        <span data-ttu-id="f7bed-211">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de entidade.</span><span class="sxs-lookup"><span data-stu-id="f7bed-211">`error` will contain information if an error occurs; otherwise `result` will contain the entity information.</span></span>
                                                                            <span data-ttu-id="f7bed-212">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-212">`response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.insertOrReplaceEntity
  name: insertOrReplaceEntity(string, T, RequestOptions, ErrorOrResult<EntityMetadata>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-213">Insere ou atualiza uma nova entidade em uma tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-213">Inserts or updates a new entity into a table.</span></span>
  syntax:
    content: 'function insertOrReplaceEntity<T>(table: string, entityDescriptor: T, options: RequestOptions, callback: ErrorOrResult<EntityMetadata>)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-214">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-214">The table name.</span></span>
    - id: entityDescriptor
      type:
      - T
      description: <span data-ttu-id="f7bed-215">O descritor de entidade.</span><span class="sxs-lookup"><span data-stu-id="f7bed-215">The entity descriptor.</span></span>
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
      description: >
        <span data-ttu-id="f7bed-216">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de entidade.</span><span class="sxs-lookup"><span data-stu-id="f7bed-216">`error` will contain information if an error occurs; otherwise `result` will contain the entity information.</span></span>
                                                                            <span data-ttu-id="f7bed-217">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-217">`response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.listTablesSegmented_1
  name: listTablesSegmented(ListTablesContinuationToken, ErrorOrResult<ListTablesResponse>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-218">Lista um segmento que contém uma coleção de itens de tabela na conta especificada.</span><span class="sxs-lookup"><span data-stu-id="f7bed-218">Lists a segment containing a collection of table items under the specified account.</span></span>
  syntax:
    content: 'function listTablesSegmented(currentToken: ListTablesContinuationToken, callback: ErrorOrResult<ListTablesResponse>)'
    parameters:
    - id: currentToken
      type:
      - azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
      description: <span data-ttu-id="f7bed-219">Um token de continuação retornado por uma operação de listagem anterior.</span><span class="sxs-lookup"><span data-stu-id="f7bed-219">A continuation token returned by a previous listing operation.</span></span> <span data-ttu-id="f7bed-220">Use 'null' ou 'indefinido' se esta for a primeira operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-220">Please use 'null' or 'undefined' if this is the first operation.</span></span>
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.ListTablesResponse>
      description: >
        <span data-ttu-id="f7bed-221">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá `entries` e `continuationToken`.</span><span class="sxs-lookup"><span data-stu-id="f7bed-221">`error` will contain information if an error occurs; otherwise `result` will contain `entries` and `continuationToken`.</span></span>
                                                                                      <span data-ttu-id="f7bed-222">`entries`  Fornece uma lista de tabelas e o `continuationToken` é usado para a próxima operação de listagem.</span><span class="sxs-lookup"><span data-stu-id="f7bed-222">`entries`  gives a list of tables and the `continuationToken` is used for the next listing operation.</span></span>
                                                                                      <span data-ttu-id="f7bed-223">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-223">`response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.listTablesSegmented
  name: listTablesSegmented(ListTablesContinuationToken, ListTablesRequestOptions, ErrorOrResult<ListTablesResponse>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-224">Lista um segmento que contém uma coleção de itens de tabela na conta especificada.</span><span class="sxs-lookup"><span data-stu-id="f7bed-224">Lists a segment containing a collection of table items under the specified account.</span></span>
  syntax:
    content: 'function listTablesSegmented(currentToken: ListTablesContinuationToken, options: ListTablesRequestOptions, callback: ErrorOrResult<ListTablesResponse>)'
    parameters:
    - id: currentToken
      type:
      - azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
      description: <span data-ttu-id="f7bed-225">Um token de continuação retornado por uma operação de listagem anterior.</span><span class="sxs-lookup"><span data-stu-id="f7bed-225">A continuation token returned by a previous listing operation.</span></span> <span data-ttu-id="f7bed-226">Use 'null' ou 'indefinido' se esta for a primeira operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-226">Please use 'null' or 'undefined' if this is the first operation.</span></span>
    - id: options
      type:
      - azure-storage.azurestorage.services.table.TableService.ListTablesRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.ListTablesResponse>
      description: >
        <span data-ttu-id="f7bed-227">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá `entries` e `continuationToken`.</span><span class="sxs-lookup"><span data-stu-id="f7bed-227">`error` will contain information if an error occurs; otherwise `result` will contain `entries` and `continuationToken`.</span></span>
                                                                                      <span data-ttu-id="f7bed-228">`entries`  Fornece uma lista de tabelas e o `continuationToken` é usado para a próxima operação de listagem.</span><span class="sxs-lookup"><span data-stu-id="f7bed-228">`entries`  gives a list of tables and the `continuationToken` is used for the next listing operation.</span></span>
                                                                                      <span data-ttu-id="f7bed-229">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-229">`response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.listTablesSegmentedWithPrefix_1
  name: listTablesSegmentedWithPrefix(string, ListTablesContinuationToken, ErrorOrResult<ListTablesResponse>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-230">Lista um segmento que contém uma coleção de itens de tabela na conta especificada.</span><span class="sxs-lookup"><span data-stu-id="f7bed-230">Lists a segment containing a collection of table items under the specified account.</span></span>
  syntax:
    content: 'function listTablesSegmentedWithPrefix(prefix: string, currentToken: ListTablesContinuationToken, callback: ErrorOrResult<ListTablesResponse>)'
    parameters:
    - id: prefix
      type:
      - string
      description: <span data-ttu-id="f7bed-231">O prefixo do nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-231">The prefix of the table name.</span></span>
    - id: currentToken
      type:
      - azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
      description: <span data-ttu-id="f7bed-232">Um token de continuação retornado por uma operação de listagem anterior.</span><span class="sxs-lookup"><span data-stu-id="f7bed-232">A continuation token returned by a previous listing operation.</span></span> <span data-ttu-id="f7bed-233">Use 'null' ou 'indefinido' se esta for a primeira operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-233">Please use 'null' or 'undefined' if this is the first operation.</span></span>
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.ListTablesResponse>
      description: >
        <span data-ttu-id="f7bed-234">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá `entries` e `continuationToken`.</span><span class="sxs-lookup"><span data-stu-id="f7bed-234">`error` will contain information if an error occurs; otherwise `result` will contain `entries` and `continuationToken`.</span></span>
                                                                                      <span data-ttu-id="f7bed-235">`entries`  Fornece uma lista de tabelas e o `continuationToken` é usado para a próxima operação de listagem.</span><span class="sxs-lookup"><span data-stu-id="f7bed-235">`entries`  gives a list of tables and the `continuationToken` is used for the next listing operation.</span></span>
                                                                                      <span data-ttu-id="f7bed-236">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-236">`response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.listTablesSegmentedWithPrefix
  name: listTablesSegmentedWithPrefix(string, ListTablesContinuationToken, ListTablesRequestOptions, ErrorOrResult<ListTablesResponse>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-237">Lista um segmento que contém uma coleção de itens de tabela na conta especificada.</span><span class="sxs-lookup"><span data-stu-id="f7bed-237">Lists a segment containing a collection of table items under the specified account.</span></span>
  syntax:
    content: 'function listTablesSegmentedWithPrefix(prefix: string, currentToken: ListTablesContinuationToken, options: ListTablesRequestOptions, callback: ErrorOrResult<ListTablesResponse>)'
    parameters:
    - id: prefix
      type:
      - string
      description: <span data-ttu-id="f7bed-238">O prefixo do nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-238">The prefix of the table name.</span></span>
    - id: currentToken
      type:
      - azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
      description: <span data-ttu-id="f7bed-239">Um token de continuação retornado por uma operação de listagem anterior.</span><span class="sxs-lookup"><span data-stu-id="f7bed-239">A continuation token returned by a previous listing operation.</span></span> <span data-ttu-id="f7bed-240">Use 'null' ou 'indefinido' se esta for a primeira operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-240">Please use 'null' or 'undefined' if this is the first operation.</span></span>
    - id: options
      type:
      - azure-storage.azurestorage.services.table.TableService.ListTablesRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.ListTablesResponse>
      description: >
        <span data-ttu-id="f7bed-241">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá `entries` e `continuationToken`.</span><span class="sxs-lookup"><span data-stu-id="f7bed-241">`error` will contain information if an error occurs; otherwise `result` will contain `entries` and `continuationToken`.</span></span>
                                                                                      <span data-ttu-id="f7bed-242">`entries`  Fornece uma lista de tabelas e o `continuationToken` é usado para a próxima operação de listagem.</span><span class="sxs-lookup"><span data-stu-id="f7bed-242">`entries`  gives a list of tables and the `continuationToken` is used for the next listing operation.</span></span>
                                                                                      <span data-ttu-id="f7bed-243">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-243">`response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.mergeEntity_1
  name: mergeEntity(string, T, ErrorOrResult<EntityMetadata>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-244">Atualiza uma entidade existente em uma tabela mesclando novos valores de propriedade na entidade.</span><span class="sxs-lookup"><span data-stu-id="f7bed-244">Updates an existing entity within a table by merging new property values into the entity.</span></span> <span data-ttu-id="f7bed-245">Para mesclar condicionalmente com base em etag, conjunto de entidade ['.metadata'] ['etag'].</span><span class="sxs-lookup"><span data-stu-id="f7bed-245">To merge conditionally based on etag, set entity['.metadata']['etag'].</span></span>
  syntax:
    content: 'function mergeEntity<T>(table: string, entityDescriptor: T, callback: ErrorOrResult<EntityMetadata>)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-246">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-246">The table name.</span></span>
    - id: entityDescriptor
      type:
      - T
      description: <span data-ttu-id="f7bed-247">O descritor de entidade.</span><span class="sxs-lookup"><span data-stu-id="f7bed-247">The entity descriptor.</span></span>
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
      description: >
        <span data-ttu-id="f7bed-248">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de entidade.</span><span class="sxs-lookup"><span data-stu-id="f7bed-248">`error` will contain information if an error occurs; otherwise `result` will contain the entity information.</span></span>

        <span data-ttu-id="f7bed-249">resposta ' conterá informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-249">response\` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.mergeEntity
  name: mergeEntity(string, T, RequestOptions, ErrorOrResult<EntityMetadata>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-250">Atualiza uma entidade existente em uma tabela mesclando novos valores de propriedade na entidade.</span><span class="sxs-lookup"><span data-stu-id="f7bed-250">Updates an existing entity within a table by merging new property values into the entity.</span></span> <span data-ttu-id="f7bed-251">Para mesclar condicionalmente com base em etag, conjunto de entidade ['.metadata'] ['etag'].</span><span class="sxs-lookup"><span data-stu-id="f7bed-251">To merge conditionally based on etag, set entity['.metadata']['etag'].</span></span>
  syntax:
    content: 'function mergeEntity<T>(table: string, entityDescriptor: T, options: RequestOptions, callback: ErrorOrResult<EntityMetadata>)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-252">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-252">The table name.</span></span>
    - id: entityDescriptor
      type:
      - T
      description: <span data-ttu-id="f7bed-253">O descritor de entidade.</span><span class="sxs-lookup"><span data-stu-id="f7bed-253">The entity descriptor.</span></span>
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
      description: >
        <span data-ttu-id="f7bed-254">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de entidade.</span><span class="sxs-lookup"><span data-stu-id="f7bed-254">`error` will contain information if an error occurs; otherwise `result` will contain the entity information.</span></span>

        <span data-ttu-id="f7bed-255">resposta ' conterá informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-255">response\` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.queryEntities_1
  name: queryEntities(string, TableQuery, TableContinuationToken, ErrorOrResult<QueryEntitiesResult<T>>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-256">Consulta dados em uma tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-256">Queries data in a table.</span></span> <span data-ttu-id="f7bed-257">Para recuperar uma única entidade por chave de partição e chave de linha, use recuperar a entidade.</span><span class="sxs-lookup"><span data-stu-id="f7bed-257">To retrieve a single entity by partition key and row key, use retrieve entity.</span></span>
  syntax:
    content: 'function queryEntities<T>(table: string, tableQuery: TableQuery, currentToken: TableContinuationToken, callback: ErrorOrResult<QueryEntitiesResult<T>>)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-258">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-258">The table name.</span></span>
    - id: tableQuery
      type:
      - azure-storage.azurestorage.services.table.TableQuery
      description: <span data-ttu-id="f7bed-259">A consulta a executar.</span><span class="sxs-lookup"><span data-stu-id="f7bed-259">The query to perform.</span></span> <span data-ttu-id="f7bed-260">Use TableQuery() novo, indefinido ou nulo para obter todas as entidades na tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-260">Use null, undefined, or new TableQuery() to get all of the entities in the table.</span></span>
    - id: currentToken
      type:
      - azure-storage.azurestorage.services.table.TableService.TableContinuationToken
      description: >-
        <span data-ttu-id="f7bed-261">Um token de continuação retornado por uma operação de listagem anterior.</span><span class="sxs-lookup"><span data-stu-id="f7bed-261">A continuation token returned by a previous listing operation.</span></span>

        <span data-ttu-id="f7bed-262">Use 'null' ou 'indefinido' se esta for a primeira operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-262">Please use 'null' or 'undefined' if this is the first operation.</span></span>
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult<T>>
      description: >
        <span data-ttu-id="f7bed-263">`error` conterá informações se ocorrer um erro; Caso contrário, `entities` conterá as entidades retornadas pela consulta.</span><span class="sxs-lookup"><span data-stu-id="f7bed-263">`error` will contain information if an error occurs; otherwise `entities` will contain the entities returned by the query.</span></span>

        <span data-ttu-id="f7bed-264">Se existirem mais entidades correspondentes e não pode ser retornadas, `queryResultContinuation` conterá um token de continuação que pode ser usado para recuperar o próximo conjunto de resultados.</span><span class="sxs-lookup"><span data-stu-id="f7bed-264">If more matching entities exist, and could not be returned, `queryResultContinuation` will contain a continuation token that can be used to retrieve the next set of results.</span></span>
                                                                                         <span data-ttu-id="f7bed-265">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-265">`response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.queryEntities
  name: queryEntities(string, TableQuery, TableContinuationToken, TableEntityRequestOptions, ErrorOrResult<QueryEntitiesResult<T>>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-266">Consulta dados em uma tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-266">Queries data in a table.</span></span> <span data-ttu-id="f7bed-267">Para recuperar uma única entidade por chave de partição e chave de linha, use recuperar a entidade.</span><span class="sxs-lookup"><span data-stu-id="f7bed-267">To retrieve a single entity by partition key and row key, use retrieve entity.</span></span>
  syntax:
    content: 'function queryEntities<T>(table: string, tableQuery: TableQuery, currentToken: TableContinuationToken, options: TableEntityRequestOptions, callback: ErrorOrResult<QueryEntitiesResult<T>>)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-268">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-268">The table name.</span></span>
    - id: tableQuery
      type:
      - azure-storage.azurestorage.services.table.TableQuery
      description: <span data-ttu-id="f7bed-269">A consulta a executar.</span><span class="sxs-lookup"><span data-stu-id="f7bed-269">The query to perform.</span></span> <span data-ttu-id="f7bed-270">Use TableQuery() novo, indefinido ou nulo para obter todas as entidades na tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-270">Use null, undefined, or new TableQuery() to get all of the entities in the table.</span></span>
    - id: currentToken
      type:
      - azure-storage.azurestorage.services.table.TableService.TableContinuationToken
      description: >-
        <span data-ttu-id="f7bed-271">Um token de continuação retornado por uma operação de listagem anterior.</span><span class="sxs-lookup"><span data-stu-id="f7bed-271">A continuation token returned by a previous listing operation.</span></span>

        <span data-ttu-id="f7bed-272">Use 'null' ou 'indefinido' se esta for a primeira operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-272">Please use 'null' or 'undefined' if this is the first operation.</span></span>
    - id: options
      type:
      - azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult<T>>
      description: >
        <span data-ttu-id="f7bed-273">`error` conterá informações se ocorrer um erro; Caso contrário, `entities` conterá as entidades retornadas pela consulta.</span><span class="sxs-lookup"><span data-stu-id="f7bed-273">`error` will contain information if an error occurs; otherwise `entities` will contain the entities returned by the query.</span></span>

        <span data-ttu-id="f7bed-274">Se existirem mais entidades correspondentes e não pode ser retornadas, `queryResultContinuation` conterá um token de continuação que pode ser usado para recuperar o próximo conjunto de resultados.</span><span class="sxs-lookup"><span data-stu-id="f7bed-274">If more matching entities exist, and could not be returned, `queryResultContinuation` will contain a continuation token that can be used to retrieve the next set of results.</span></span>
                                                                                         <span data-ttu-id="f7bed-275">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-275">`response` will contain information related to this operation.</span></span>

        <span data-ttu-id="f7bed-276">A lógica para retornar tipos de entidade pode ficar complicada.</span><span class="sxs-lookup"><span data-stu-id="f7bed-276">The logic for returning entity types can get complicated.</span></span>  <span data-ttu-id="f7bed-277">Aqui está o algoritmo usado:</span><span class="sxs-lookup"><span data-stu-id="f7bed-277">Here is the algorithm used:</span></span>

        ```

        var propertyType;


        if (propertyResovler) {                      // If the caller provides a propertyResolver in the options, use it
          propertyType = propertyResolver(partitionKey, rowKey, propertyName, propertyValue, propertyTypeFromService);
        } else if (propertyTypeFromService) {        // If the service provides us a property type, use it.  See below for an explanation of when this will and won't occur.
          propertyType = propertyTypeFromService;
        } else if (autoResolveProperties) {          // If options.autoResolveProperties is set to true
          if (javascript type is string) {           // See below for an explanation of how and why autoResolveProperties works as it does.
            propertyType = 'Edm.String';
          } else if (javascript type is boolean) {
            propertyType = 'Edm.Boolean';
          }
        }


        if (propertyType) {
          // Set the property type on the property.
        } else {
          // Property gets no EdmType.
        }

        ```

        <span data-ttu-id="f7bed-278">Observações:</span><span class="sxs-lookup"><span data-stu-id="f7bed-278">Notes:</span></span>


        * <span data-ttu-id="f7bed-279">O serviço fornece apenas um tipo se JsonFullMetadata ou JsonMinimalMetadata for usado, e se o tipo for DateTime, Guid, Binary ou Int64.</span><span class="sxs-lookup"><span data-stu-id="f7bed-279">The service only provides a type if JsonFullMetadata or JsonMinimalMetadata is used, and if the type is Int64, Guid, Binary, or DateTime.</span></span>

        * <span data-ttu-id="f7bed-280">Explicação de autoResolveProperties:</span><span class="sxs-lookup"><span data-stu-id="f7bed-280">Explanation of autoResolveProperties:</span></span>
            * <span data-ttu-id="f7bed-281">Cadeia de caracteres é resolvida corretamente para 'EDM. String'.</span><span class="sxs-lookup"><span data-stu-id="f7bed-281">String gets correctly resolved to 'Edm.String'.</span></span>
            * <span data-ttu-id="f7bed-282">Int64, Guid, Binary e DateTime se transformam em 'EDM. String'.</span><span class="sxs-lookup"><span data-stu-id="f7bed-282">Int64, Guid, Binary, and DateTime all get resolved to 'Edm.String.'</span></span>  <span data-ttu-id="f7bed-283">Isso ocorre apenas se JsonNoMetadata for usado (caso contrário, o serviço fornecerá o propertyType em uma etapa anterior).</span><span class="sxs-lookup"><span data-stu-id="f7bed-283">This only happens if JsonNoMetadata is used (otherwise the service will provide the propertyType in a prior step).</span></span>
            * <span data-ttu-id="f7bed-284">Booliano é resolvido corretamente para 'EDM'.</span><span class="sxs-lookup"><span data-stu-id="f7bed-284">Boolean gets correctly resolved to 'Edm.Boolean'.</span></span>
            * <span data-ttu-id="f7bed-285">Para Int32 e Double, nenhuma informação de tipo é retornado, mesmo no caso de autoResolveProperties = true.</span><span class="sxs-lookup"><span data-stu-id="f7bed-285">For both Int32 and Double, no type information is returned, even in the case of autoResolveProperties = true.</span></span>  <span data-ttu-id="f7bed-286">Isso ocorre devido a uma incapacidade de distinguir entre os dois em determinados casos.</span><span class="sxs-lookup"><span data-stu-id="f7bed-286">This is due to an inability to distinguish between the two in certain cases.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.replaceEntity_1
  name: replaceEntity(string, T, ErrorOrResult<EntityMetadata>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-287">Substitui uma entidade existente em uma tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-287">Replaces an existing entity within a table.</span></span> <span data-ttu-id="f7bed-288">Para substituir condicionalmente com base em etag, defina a entidade ['.metadata'] ['etag'].</span><span class="sxs-lookup"><span data-stu-id="f7bed-288">To replace conditionally based on etag, set entity['.metadata']['etag'].</span></span>
  syntax:
    content: 'function replaceEntity<T>(table: string, entityDescriptor: T, callback: ErrorOrResult<EntityMetadata>)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-289">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-289">The table name.</span></span>
    - id: entityDescriptor
      type:
      - T
      description: <span data-ttu-id="f7bed-290">O descritor de entidade.</span><span class="sxs-lookup"><span data-stu-id="f7bed-290">The entity descriptor.</span></span>
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
      description: >
        <span data-ttu-id="f7bed-291">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de entidade.</span><span class="sxs-lookup"><span data-stu-id="f7bed-291">`error` will contain information if an error occurs; otherwise `result` will contain the entity information.</span></span>
                                                                            <span data-ttu-id="f7bed-292">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-292">`response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.replaceEntity
  name: replaceEntity(string, T, RequestOptions, ErrorOrResult<EntityMetadata>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-293">Substitui uma entidade existente em uma tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-293">Replaces an existing entity within a table.</span></span> <span data-ttu-id="f7bed-294">Para substituir condicionalmente com base em etag, defina a entidade ['.metadata'] ['etag'].</span><span class="sxs-lookup"><span data-stu-id="f7bed-294">To replace conditionally based on etag, set entity['.metadata']['etag'].</span></span>
  syntax:
    content: 'function replaceEntity<T>(table: string, entityDescriptor: T, options: RequestOptions, callback: ErrorOrResult<EntityMetadata>)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-295">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-295">The table name.</span></span>
    - id: entityDescriptor
      type:
      - T
      description: <span data-ttu-id="f7bed-296">O descritor de entidade.</span><span class="sxs-lookup"><span data-stu-id="f7bed-296">The entity descriptor.</span></span>
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
      description: >
        <span data-ttu-id="f7bed-297">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá as informações de entidade.</span><span class="sxs-lookup"><span data-stu-id="f7bed-297">`error` will contain information if an error occurs; otherwise `result` will contain the entity information.</span></span>
                                                                            <span data-ttu-id="f7bed-298">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-298">`response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.retrieveEntity_1
  name: retrieveEntity(string, string, string, ErrorOrResult<T>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-299">Recupera uma entidade de uma tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-299">Retrieves an entity from a table.</span></span>
  syntax:
    content: 'function retrieveEntity<T>(table: string, partitionKey: string, rowKey: string, callback: ErrorOrResult<T>)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-300">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-300">The table name.</span></span>
    - id: partitionKey
      type:
      - string
      description: <span data-ttu-id="f7bed-301">A chave de partição.</span><span class="sxs-lookup"><span data-stu-id="f7bed-301">The partition key.</span></span>
    - id: rowKey
      type:
      - string
      description: <span data-ttu-id="f7bed-302">A chave de linha.</span><span class="sxs-lookup"><span data-stu-id="f7bed-302">The row key.</span></span>
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<T>
      description: >
        <span data-ttu-id="f7bed-303">`error` conterá informações se ocorrer um erro; Caso contrário, `result` será a entidade correspondente.</span><span class="sxs-lookup"><span data-stu-id="f7bed-303">`error` will contain information if an error occurs; otherwise `result` will be the matching entity.</span></span>
                                                                                    <span data-ttu-id="f7bed-304">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-304">`response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.retrieveEntity
  name: retrieveEntity(string, string, string, TableEntityRequestOptions, ErrorOrResult<T>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-305">Recupera uma entidade de uma tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-305">Retrieves an entity from a table.</span></span>
  syntax:
    content: 'function retrieveEntity<T>(table: string, partitionKey: string, rowKey: string, options: TableEntityRequestOptions, callback: ErrorOrResult<T>)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-306">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-306">The table name.</span></span>
    - id: partitionKey
      type:
      - string
      description: <span data-ttu-id="f7bed-307">A chave de partição.</span><span class="sxs-lookup"><span data-stu-id="f7bed-307">The partition key.</span></span>
    - id: rowKey
      type:
      - string
      description: <span data-ttu-id="f7bed-308">A chave de linha.</span><span class="sxs-lookup"><span data-stu-id="f7bed-308">The row key.</span></span>
    - id: options
      type:
      - azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<T>
      description: >
        <span data-ttu-id="f7bed-309">`error` conterá informações se ocorrer um erro; Caso contrário, `result` será a entidade correspondente.</span><span class="sxs-lookup"><span data-stu-id="f7bed-309">`error` will contain information if an error occurs; otherwise `result` will be the matching entity.</span></span>
                                                                                    <span data-ttu-id="f7bed-310">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-310">`response` will contain information related to this operation.</span></span>

        <span data-ttu-id="f7bed-311">A lógica para retornar tipos de entidade pode ficar complicada.</span><span class="sxs-lookup"><span data-stu-id="f7bed-311">The logic for returning entity types can get complicated.</span></span>  <span data-ttu-id="f7bed-312">Aqui está o algoritmo usado:</span><span class="sxs-lookup"><span data-stu-id="f7bed-312">Here is the algorithm used:</span></span>

        ```

        var propertyType;


        if (propertyResovler) {                      // If the caller provides a propertyResolver in the options, use it
          propertyType = propertyResolver(partitionKey, rowKey, propertyName, propertyValue, propertyTypeFromService);
        } else if (propertyTypeFromService) {        // If the service provides us a property type, use it.  See below for an explanation of when this will and won't occur.
          propertyType = propertyTypeFromService;
        } else if (autoResolveProperties) {          // If options.autoResolveProperties is set to true
          if (javascript type is string) {           // See below for an explanation of how and why autoResolveProperties works as it does.
            propertyType = 'Edm.String';
          } else if (javascript type is boolean) {
            propertyType = 'Edm.Boolean';
          }
        }


        if (propertyType) {
          // Set the property type on the property.
        } else {
          // Property gets no EdmType.
        }

        ```

        <span data-ttu-id="f7bed-313">Observações:</span><span class="sxs-lookup"><span data-stu-id="f7bed-313">Notes:</span></span>


        * <span data-ttu-id="f7bed-314">O serviço fornece apenas um tipo se JsonFullMetadata ou JsonMinimalMetadata for usado, e se o tipo for DateTime, Guid, Binary ou Int64.</span><span class="sxs-lookup"><span data-stu-id="f7bed-314">The service only provides a type if JsonFullMetadata or JsonMinimalMetadata is used, and if the type is Int64, Guid, Binary, or DateTime.</span></span>

        * <span data-ttu-id="f7bed-315">Explicação de autoResolveProperties:</span><span class="sxs-lookup"><span data-stu-id="f7bed-315">Explanation of autoResolveProperties:</span></span>
            * <span data-ttu-id="f7bed-316">Cadeia de caracteres é resolvida corretamente para 'EDM. String'.</span><span class="sxs-lookup"><span data-stu-id="f7bed-316">String gets correctly resolved to 'Edm.String'.</span></span>
            * <span data-ttu-id="f7bed-317">Int64, Guid, Binary e DateTime se transformam em 'EDM. String'.</span><span class="sxs-lookup"><span data-stu-id="f7bed-317">Int64, Guid, Binary, and DateTime all get resolved to 'Edm.String.'</span></span>  <span data-ttu-id="f7bed-318">Isso ocorre apenas se JsonNoMetadata for usado (caso contrário, o serviço fornecerá o propertyType em uma etapa anterior).</span><span class="sxs-lookup"><span data-stu-id="f7bed-318">This only happens if JsonNoMetadata is used (otherwise the service will provide the propertyType in a prior step).</span></span>
            * <span data-ttu-id="f7bed-319">Booliano é resolvido corretamente para 'EDM'.</span><span class="sxs-lookup"><span data-stu-id="f7bed-319">Boolean gets correctly resolved to 'Edm.Boolean'.</span></span>
            * <span data-ttu-id="f7bed-320">Para Int32 e Double, nenhuma informação de tipo é retornado, mesmo no caso de autoResolveProperties = true.</span><span class="sxs-lookup"><span data-stu-id="f7bed-320">For both Int32 and Double, no type information is returned, even in the case of autoResolveProperties = true.</span></span>  <span data-ttu-id="f7bed-321">Isso ocorre devido a uma incapacidade de distinguir entre os dois em determinados casos.</span><span class="sxs-lookup"><span data-stu-id="f7bed-321">This is due to an inability to distinguish between the two in certain cases.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.setServiceProperties_1
  name: setServiceProperties(ServiceProperties, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="f7bed-322">Define as propriedades do serviço de tabela de uma conta de armazenamento, incluindo a análise de armazenamento do Azure.</span><span class="sxs-lookup"><span data-stu-id="f7bed-322">Sets the properties of a storage account’s Table service, including Azure Storage Analytics.</span></span>

    <span data-ttu-id="f7bed-323">Você também pode usar essa operação para definir a versão de solicitação padrão para todas as solicitações de entrada que não têm uma versão especificada.</span><span class="sxs-lookup"><span data-stu-id="f7bed-323">You can also use this operation to set the default request version for all incoming requests that do not have a version specified.</span></span>
  syntax:
    content: 'function setServiceProperties(serviceProperties: ServiceProperties, callback: ErrorOrResponse)'
    parameters:
    - id: serviceProperties
      type:
      - azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
      description: <span data-ttu-id="f7bed-324">As propriedades do serviço.</span><span class="sxs-lookup"><span data-stu-id="f7bed-324">The service properties.</span></span>
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        <span data-ttu-id="f7bed-325">`error` conterá informações se ocorrer um erro; `response` conterá informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-325">`error` will contain information if an error occurs; `response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.setServiceProperties
  name: setServiceProperties(ServiceProperties, RequestOptions, ErrorOrResponse)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="f7bed-326">Define as propriedades do serviço de tabela de uma conta de armazenamento, incluindo a análise de armazenamento do Azure.</span><span class="sxs-lookup"><span data-stu-id="f7bed-326">Sets the properties of a storage account’s Table service, including Azure Storage Analytics.</span></span>

    <span data-ttu-id="f7bed-327">Você também pode usar essa operação para definir a versão de solicitação padrão para todas as solicitações de entrada que não têm uma versão especificada.</span><span class="sxs-lookup"><span data-stu-id="f7bed-327">You can also use this operation to set the default request version for all incoming requests that do not have a version specified.</span></span>
  syntax:
    content: 'function setServiceProperties(serviceProperties: ServiceProperties, options: RequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: serviceProperties
      type:
      - azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
      description: <span data-ttu-id="f7bed-328">As propriedades do serviço.</span><span class="sxs-lookup"><span data-stu-id="f7bed-328">The service properties.</span></span>
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        <span data-ttu-id="f7bed-329">`error` conterá informações se ocorrer um erro; `response` conterá informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-329">`error` will contain information if an error occurs; `response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.setTableAcl_1
  name: 'setTableAcl(string, [key: string]: AccessPolicy, ErrorOrResult<Object>)'
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-330">Atualiza a ACL da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-330">Updates the table's ACL.</span></span>
  syntax:
    content: 'function setTableAcl(table: string, signedIdentifiers: [key: string]: AccessPolicy, callback: ErrorOrResult<Object>)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-331">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-331">The table name.</span></span>
    - id: signedIdentifiers
      type:
      - '[key: string]: azure-storage.azurestorage.common.AccessPolicy'
      description: <span data-ttu-id="f7bed-332">Os identificadores com sinal.</span><span class="sxs-lookup"><span data-stu-id="f7bed-332">The signed identifiers.</span></span> <span data-ttu-id="f7bed-333">Identificadores assinados devem estar em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="f7bed-333">Signed identifiers must be in an array.</span></span>
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<Object>
      description: >
        <span data-ttu-id="f7bed-334">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá informações para a tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-334">`error` will contain information if an error occurs; otherwise `result` will contain information for the table.</span></span>
                                                                                 <span data-ttu-id="f7bed-335">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-335">`response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.setTableAcl
  name: 'setTableAcl(string, [key: string]: AccessPolicy, RequestOptions, ErrorOrResult<Object>)'
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f7bed-336">Atualiza a ACL da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-336">Updates the table's ACL.</span></span>
  syntax:
    content: 'function setTableAcl(table: string, signedIdentifiers: [key: string]: AccessPolicy, options: RequestOptions, callback: ErrorOrResult<Object>)'
    parameters:
    - id: table
      type:
      - string
      description: <span data-ttu-id="f7bed-337">O nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-337">The table name.</span></span>
    - id: signedIdentifiers
      type:
      - '[key: string]: azure-storage.azurestorage.common.AccessPolicy'
      description: <span data-ttu-id="f7bed-338">Os identificadores com sinal.</span><span class="sxs-lookup"><span data-stu-id="f7bed-338">The signed identifiers.</span></span> <span data-ttu-id="f7bed-339">Identificadores assinados devem estar em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="f7bed-339">Signed identifiers must be in an array.</span></span>
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<Object>
      description: >
        <span data-ttu-id="f7bed-340">`error` conterá informações se ocorrer um erro; Caso contrário, `result` conterá informações para a tabela.</span><span class="sxs-lookup"><span data-stu-id="f7bed-340">`error` will contain information if an error occurs; otherwise `result` will contain information for the table.</span></span>
                                                                                 <span data-ttu-id="f7bed-341">`response` contém informações relacionadas a essa operação.</span><span class="sxs-lookup"><span data-stu-id="f7bed-341">`response` will contain information related to this operation.</span></span>
  package: azure-storage
- uid: azure-storage.azurestorage.services.table.TableService.withFilter
  name: withFilter(IFilter)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="f7bed-342">Associe uma operação de filtragem com este TableService.</span><span class="sxs-lookup"><span data-stu-id="f7bed-342">Associate a filtering operation with this TableService.</span></span> <span data-ttu-id="f7bed-343">As operações de filtragem podem incluir registro em log, repetição automática, etc. Operações do filtro são objetos que implementam um método com a assinatura: "identificador de função (requestOptions, ao lado)".</span><span class="sxs-lookup"><span data-stu-id="f7bed-343">Filtering operations can include logging, automatically retrying, etc. Filter operations are objects that implement a method with the signature: "function handle (requestOptions, next)".</span></span>


    <span data-ttu-id="f7bed-344">Após fazer seu pré-processamento nas opções de solicitação, o método precisará chamar "next", passando um retorno de chamada com a seguinte assinatura: assinatura:</span><span class="sxs-lookup"><span data-stu-id="f7bed-344">After doing its preprocessing on the request options, the method needs to call "next" passing a callback with the following signature: signature:</span></span>

        "function (returnObject, finalCallback, next)"

    <span data-ttu-id="f7bed-345">Nesse retorno de chamada, e após processar o returnObject (a resposta da solicitação ao servidor), o retorno de chamada precisará invocar avançar, se ele existir, para continuar processando outros filtros ou simplesmente invocar finalCallback para terminar a invocação de serviço.</span><span class="sxs-lookup"><span data-stu-id="f7bed-345">In this callback, and after processing the returnObject (the response from the request to the server), the callback needs to either invoke next if it exists to continue processing other filters or simply invoke finalCallback otherwise to end up the service invocation.</span></span>
  syntax:
    content: 'function withFilter(newFilter: IFilter)'
    parameters:
    - id: newFilter
      type:
      - azure-storage.azurestorage.common.filters.IFilter
      description: ''
    return:
      type:
      - azure-storage.azurestorage.services.table.TableService
  package: azure-storage
references:
- uid: azure-storage.azurestorage.common.RequestOptions
  name: RequestOptions
  spec.typeScript:
  - name: RequestOptions
    fullName: RequestOptions
    uid: azure-storage.azurestorage.common.RequestOptions
- uid: azure-storage.azurestorage.common.filters.Next
  name: Next
  spec.typeScript:
  - name: Next
    fullName: Next
    uid: azure-storage.azurestorage.common.filters.Next
- uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryRequestOptions
  name: IRetryRequestOptions
  spec.typeScript:
  - name: IRetryRequestOptions
    fullName: IRetryRequestOptions
    uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryRequestOptions
- uid: azure-storage.azurestorage.common.filters.IFilter
  name: IFilter
  spec.typeScript:
  - name: IFilter
    fullName: IFilter
    uid: azure-storage.azurestorage.common.filters.IFilter
- uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryContext
  name: IRetryContext
  spec.typeScript:
  - name: IRetryContext
    fullName: IRetryContext
    uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryContext
- uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter
  name: RetryPolicyFilter
  spec.typeScript:
  - name: RetryPolicyFilter
    fullName: RetryPolicyFilter
    uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter
- uid: azure-storage.Map<any>
  name: Map<any>
  spec.typeScript:
  - name: Map
    fullName: Map
    uid: azure-storage.Map
  - name: <any>
    fullName: <any>
- uid: azure-storage.Map<string>
  name: Map<string>
  spec.typeScript:
  - name: Map
    fullName: Map
    uid: azure-storage.Map
  - name: <string>
    fullName: <string>
- uid: azure-storage.azurestorage.common.http.webresource.WebResource
  name: WebResource
  spec.typeScript:
  - name: WebResource
    fullName: WebResource
    uid: azure-storage.azurestorage.common.http.webresource.WebResource
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
  name: ServiceProperties
  spec.typeScript:
  - name: ServiceProperties
    fullName: ServiceProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.StaticWebsiteProperties
  name: StaticWebsiteProperties
  spec.typeScript:
  - name: StaticWebsiteProperties
    fullName: StaticWebsiteProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.StaticWebsiteProperties
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.RetentionPolicy
  name: RetentionPolicy
  spec.typeScript:
  - name: RetentionPolicy
    fullName: RetentionPolicy
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.RetentionPolicy
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.DeleteRetentionPolicyProperties
  name: DeleteRetentionPolicyProperties
  spec.typeScript:
  - name: DeleteRetentionPolicyProperties
    fullName: DeleteRetentionPolicyProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.DeleteRetentionPolicyProperties
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.MetricsProperties
  name: MetricsProperties
  spec.typeScript:
  - name: MetricsProperties
    fullName: MetricsProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.MetricsProperties
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.LoggingProperties
  name: LoggingProperties
  spec.typeScript:
  - name: LoggingProperties
    fullName: LoggingProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.LoggingProperties
- uid: azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient
  name: StorageServiceClient
  spec.typeScript:
  - name: StorageServiceClient
    fullName: StorageServiceClient
    uid: azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient
- uid: azure-storage.azurestorage.StorageHost
  name: StorageHost
  spec.typeScript:
  - name: StorageHost
    fullName: StorageHost
    uid: azure-storage.azurestorage.StorageHost
- uid: azure-storage.azurestorage.common.util.storageutilities.LocationMode
  name: LocationMode
  spec.typeScript:
  - name: LocationMode
    fullName: LocationMode
    uid: azure-storage.azurestorage.common.util.storageutilities.LocationMode
- uid: azure-storage.azurestorage.common.diagnostics.logger.Logger
  name: Logger
  spec.typeScript:
  - name: Logger
    fullName: Logger
    uid: azure-storage.azurestorage.common.diagnostics.logger.Logger
- uid: azure-storage.azurestorage.common.services.storageserviceclient.Proxy
  name: Proxy
  spec.typeScript:
  - name: Proxy
    fullName: Proxy
    uid: azure-storage.azurestorage.common.services.storageserviceclient.Proxy
- uid: azure-storage.azurestorage.AccessConditions
  name: AccessConditions
  spec.typeScript:
  - name: AccessConditions
    fullName: AccessConditions
    uid: azure-storage.azurestorage.AccessConditions
- uid: azure-storage.azurestorage.common.AccessPolicy
  name: AccessPolicy
  spec.typeScript:
  - name: AccessPolicy
    fullName: AccessPolicy
    uid: azure-storage.azurestorage.common.AccessPolicy
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
  name: LeaseRequestOptions
  spec.typeScript:
  - name: LeaseRequestOptions
    fullName: LeaseRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ConditionalRequestOption
  name: ConditionalRequestOption
  spec.typeScript:
  - name: ConditionalRequestOption
    fullName: ConditionalRequestOption
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ConditionalRequestOption
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.Block[]
  name: Block[]
  spec.typeScript:
  - name: Block
    fullName: Block
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.Block
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
  name: ContainerOptions
  spec.typeScript:
  - name: ContainerOptions
    fullName: ContainerOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
  name: ContainerResult
  spec.typeScript:
  - name: ContainerResult
    fullName: ContainerResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
- uid: '[key: string]: azure-storage.azurestorage.common.AccessPolicy'
  name: AccessPolicy
  spec.typeScript:
  - name: '[key: string]: '
    fullName: '[key: string]: '
  - name: AccessPolicy
    fullName: AccessPolicy
    uid: azure-storage.azurestorage.common.AccessPolicy
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
  name: BlobRequestOptions
  spec.typeScript:
  - name: BlobRequestOptions
    fullName: BlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
- uid: azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  name: SpeedSummary
  spec.typeScript:
  - name: SpeedSummary
    fullName: SpeedSummary
    uid: azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
  name: CreateBlobRequestOptions
  spec.typeScript:
  - name: CreateBlobRequestOptions
    fullName: CreateBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
- uid: azure-storage.azurestorage.common.ContinuationToken
  name: ContinuationToken
  spec.typeScript:
  - name: ContinuationToken
    fullName: ContinuationToken
    uid: azure-storage.azurestorage.common.ContinuationToken
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobDirectoryResult[]
  name: BlobDirectoryResult[]
  spec.typeScript:
  - name: BlobDirectoryResult
    fullName: BlobDirectoryResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobDirectoryResult
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsSegmentedRequestOptions
  name: ListBlobsSegmentedRequestOptions
  spec.typeScript:
  - name: ListBlobsSegmentedRequestOptions
    fullName: ListBlobsSegmentedRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsSegmentedRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult[]
  name: BlobResult[]
  spec.typeScript:
  - name: BlobResult
    fullName: BlobResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult[]
  name: ContainerResult[]
  spec.typeScript:
  - name: ContainerResult
    fullName: ContainerResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
  - name: '[]'
    fullName: '[]'
- uid: string | azure-storage.azurestorage.StorageHost
  name: StorageHost
  spec.typeScript:
  - name: 'string | '
    fullName: 'string | '
  - name: StorageHost
    fullName: StorageHost
    uid: azure-storage.azurestorage.StorageHost
- uid: azure-storage.azurestorage.ErrorOrResponse
  name: ErrorOrResponse
  spec.typeScript:
  - name: ErrorOrResponse
    fullName: ErrorOrResponse
    uid: azure-storage.azurestorage.ErrorOrResponse
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
  name: LeaseResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: LeaseResult
    fullName: LeaseResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AcquireLeaseRequestOptions
  name: AcquireLeaseRequestOptions
  spec.typeScript:
  - name: AcquireLeaseRequestOptions
    fullName: AcquireLeaseRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AcquireLeaseRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AppendBlobRequestOptions
  name: AppendBlobRequestOptions
  spec.typeScript:
  - name: AppendBlobRequestOptions
    fullName: AppendBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AppendBlobRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
  name: BlobResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: BlobResult
    fullName: BlobResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BreakLeaseRequestOptions
  name: BreakLeaseRequestOptions
  spec.typeScript:
  - name: BreakLeaseRequestOptions
    fullName: BreakLeaseRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BreakLeaseRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.PutBlockListRequest
  name: PutBlockListRequest
  spec.typeScript:
  - name: PutBlockListRequest
    fullName: PutBlockListRequest
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.PutBlockListRequest
- uid: azure-storage.azurestorage.ErrorOrResult<string>
  name: ErrorOrResult<string>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <string>
    fullName: <string>
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
  name: CreateBlockBlobRequestOptions
  spec.typeScript:
  - name: CreateBlockBlobRequestOptions
    fullName: CreateBlockBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockRequestOptions
  name: CreateBlockRequestOptions
  spec.typeScript:
  - name: CreateBlockRequestOptions
    fullName: CreateBlockRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
  name: ContainerResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ContainerResult
    fullName: ContainerResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateContainerOptions
  name: CreateContainerOptions
  spec.typeScript:
  - name: CreateContainerOptions
    fullName: CreateContainerOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateContainerOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
  name: CreatePageBlobOptions
  spec.typeScript:
  - name: CreatePageBlobOptions
    fullName: CreatePageBlobOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
  name: GetBlobRequestOptions
  spec.typeScript:
  - name: GetBlobRequestOptions
    fullName: GetBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.DeleteBlobRequestOptions
  name: DeleteBlobRequestOptions
  spec.typeScript:
  - name: DeleteBlobRequestOptions
    fullName: DeleteBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.DeleteBlobRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<boolean>
  name: ErrorOrResult<boolean>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <boolean>
    fullName: <boolean>
- uid: azure-storage.azurestorage.common.SharedAccessPolicy
  name: SharedAccessPolicy
  spec.typeScript:
  - name: SharedAccessPolicy
    fullName: SharedAccessPolicy
    uid: azure-storage.azurestorage.common.SharedAccessPolicy
- uid: azure-storage.azurestorage.common.ContentSettingsHeaders
  name: ContentSettingsHeaders
  spec.typeScript:
  - name: ContentSettingsHeaders
    fullName: ContentSettingsHeaders
    uid: azure-storage.azurestorage.common.ContentSettingsHeaders
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.AccountProperties>
  name: AccountProperties>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: AccountProperties
    fullName: AccountProperties
    uid: azure-storage.azurestorage.common.models.AccountProperties
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobToText
  name: BlobToText
  spec.typeScript:
  - name: BlobToText
    fullName: BlobToText
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobToText
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult>
  name: ContainerAclResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ContainerAclResult
    fullName: ContainerAclResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.RangeDiff[]>
  name: RangeDiff[]>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: RangeDiff
    fullName: RangeDiff
    uid: azure-storage.azurestorage.common.RangeDiff
  - name: '[]>'
    fullName: '[]>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties>
  name: BlobServiceProperties>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: BlobServiceProperties
    fullName: BlobServiceProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServiceStats>
  name: ServiceStats>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ServiceStats
    fullName: ServiceStats
    uid: azure-storage.azurestorage.common.models.ServiceStats
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobDirectoriesResult>
  name: ListBlobDirectoriesResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListBlobDirectoriesResult
    fullName: ListBlobDirectoriesResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobDirectoriesResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobPrefixesSegmentedRequestOptions
  name: ListBlobPrefixesSegmentedRequestOptions
  spec.typeScript:
  - name: ListBlobPrefixesSegmentedRequestOptions
    fullName: ListBlobPrefixesSegmentedRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobPrefixesSegmentedRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult>
  name: ListBlobsResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListBlobsResult
    fullName: ListBlobsResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlockListResult>
  name: BlockListResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: BlockListResult
    fullName: BlockListResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlockListResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerOptions
  name: ListContainerOptions
  spec.typeScript:
  - name: ListContainerOptions
    fullName: ListContainerOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult>
  name: ListContainerResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListContainerResult
    fullName: ListContainerResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.Range[]>
  name: Range[]>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: Range
    fullName: Range
    uid: azure-storage.azurestorage.common.Range
  - name: '[]>'
    fullName: '[]>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.SetBlobPropertiesRequestOptions
  name: SetBlobPropertiesRequestOptions
  spec.typeScript:
  - name: SetBlobPropertiesRequestOptions
    fullName: SetBlobPropertiesRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.SetBlobPropertiesRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclOptions
  name: ContainerAclOptions
  spec.typeScript:
  - name: ContainerAclOptions
    fullName: ContainerAclOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclOptions
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
  name: BlobServiceProperties
  spec.typeScript:
  - name: BlobServiceProperties
    fullName: BlobServiceProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CopyBlobRequestOptions
  name: CopyBlobRequestOptions
  spec.typeScript:
  - name: CopyBlobRequestOptions
    fullName: CopyBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CopyBlobRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService
  name: BlobService
  spec.typeScript:
  - name: BlobService
    fullName: BlobService
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService
- uid: azure-storage.azurestorage.services.file.FileService.FileServiceOptions
  name: FileServiceOptions
  spec.typeScript:
  - name: FileServiceOptions
    fullName: FileServiceOptions
    uid: azure-storage.azurestorage.services.file.FileService.FileServiceOptions
- uid: azure-storage.azurestorage.services.file.FileService.ShareResult[]
  name: ShareResult[]
  spec.typeScript:
  - name: ShareResult
    fullName: ShareResult
    uid: azure-storage.azurestorage.services.file.FileService.ShareResult
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.file.FileService.ShareResult
  name: ShareResult
  spec.typeScript:
  - name: ShareResult
    fullName: ShareResult
    uid: azure-storage.azurestorage.services.file.FileService.ShareResult
- uid: azure-storage.Map<azure-storage.azurestorage.common.AccessPolicy>
  name: AccessPolicy>
  spec.typeScript:
  - name: Map
    fullName: Map
    uid: azure-storage.Map
  - name: <
    fullName: <
  - name: AccessPolicy
    fullName: AccessPolicy
    uid: azure-storage.azurestorage.common.AccessPolicy
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
  name: FileResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: FileResult
    fullName: FileResult
    uid: azure-storage.azurestorage.services.file.FileService.FileResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.CreateDirectoryRequestOptions
  name: CreateDirectoryRequestOptions
  spec.typeScript:
  - name: CreateDirectoryRequestOptions
    fullName: CreateDirectoryRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CreateDirectoryRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
  name: DirectoryResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: DirectoryResult
    fullName: DirectoryResult
    uid: azure-storage.azurestorage.services.file.FileService.DirectoryResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
  name: CreateFileRequestOptions
  spec.typeScript:
  - name: CreateFileRequestOptions
    fullName: CreateFileRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.CreateRangeRequestOptions
  name: CreateRangeRequestOptions
  spec.typeScript:
  - name: CreateRangeRequestOptions
    fullName: CreateRangeRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CreateRangeRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.GetFileRequestOptions
  name: GetFileRequestOptions
  spec.typeScript:
  - name: GetFileRequestOptions
    fullName: GetFileRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.GetFileRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.CreateShareRequestOptions
  name: CreateShareRequestOptions
  spec.typeScript:
  - name: CreateShareRequestOptions
    fullName: CreateShareRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CreateShareRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
  name: ShareResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ShareResult
    fullName: ShareResult
    uid: azure-storage.azurestorage.services.file.FileService.ShareResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.DeleteShareOptions
  name: DeleteShareOptions
  spec.typeScript:
  - name: DeleteShareOptions
    fullName: DeleteShareOptions
    uid: azure-storage.azurestorage.services.file.FileService.DeleteShareOptions
- uid: azure-storage.azurestorage.services.file.FileService.FileToText
  name: FileToText
  spec.typeScript:
  - name: FileToText
    fullName: FileToText
    uid: azure-storage.azurestorage.services.file.FileService.FileToText
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties>
  name: ServiceProperties>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ServiceProperties
    fullName: ServiceProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareAclResult>
  name: ShareAclResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ShareAclResult
    fullName: ShareAclResult
    uid: azure-storage.azurestorage.services.file.FileService.ShareAclResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.ListRequestOptions
  name: ListRequestOptions
  spec.typeScript:
  - name: ListRequestOptions
    fullName: ListRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.ListRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListFilesAndDirectoriesResult>
  name: ListFilesAndDirectoriesResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListFilesAndDirectoriesResult
    fullName: ListFilesAndDirectoriesResult
    uid: azure-storage.azurestorage.services.file.FileService.ListFilesAndDirectoriesResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.ListRangeRequestOptions
  name: ListRangeRequestOptions
  spec.typeScript:
  - name: ListRangeRequestOptions
    fullName: ListRangeRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.ListRangeRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.ListShareRequestOptions
  name: ListShareRequestOptions
  spec.typeScript:
  - name: ListShareRequestOptions
    fullName: ListShareRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.ListShareRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListSharesResult>
  name: ListSharesResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListSharesResult
    fullName: ListSharesResult
    uid: azure-storage.azurestorage.services.file.FileService.ListSharesResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.SetFilePropertiesRequestOptions
  name: SetFilePropertiesRequestOptions
  spec.typeScript:
  - name: SetFilePropertiesRequestOptions
    fullName: SetFilePropertiesRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.SetFilePropertiesRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.ShareProperties
  name: ShareProperties
  spec.typeScript:
  - name: ShareProperties
    fullName: ShareProperties
    uid: azure-storage.azurestorage.services.file.FileService.ShareProperties
- uid: azure-storage.azurestorage.services.file.FileService.CopyFileRequestOptions
  name: CopyFileRequestOptions
  spec.typeScript:
  - name: CopyFileRequestOptions
    fullName: CopyFileRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CopyFileRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService
  name: FileService
  spec.typeScript:
  - name: FileService
    fullName: FileService
    uid: azure-storage.azurestorage.services.file.FileService
- uid: azure-storage.azurestorage.services.queue.QueueService.QueueResult[]
  name: QueueResult[]
  spec.typeScript:
  - name: QueueResult
    fullName: QueueResult
    uid: azure-storage.azurestorage.services.queue.QueueService.QueueResult
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.queue.QueueMessageEncoder
  name: QueueMessageEncoder
  spec.typeScript:
  - name: QueueMessageEncoder
    fullName: QueueMessageEncoder
    uid: azure-storage.azurestorage.services.queue.QueueMessageEncoder
- uid: azure-storage.azurestorage.services.queue.QueueService.CreateMessageRequestOptions
  name: CreateMessageRequestOptions
  spec.typeScript:
  - name: CreateMessageRequestOptions
    fullName: CreateMessageRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.CreateMessageRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult>
  name: QueueMessageResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: QueueMessageResult
    fullName: QueueMessageResult
    uid: azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.queue.QueueService.CreateQueueRequestOptions
  name: CreateQueueRequestOptions
  spec.typeScript:
  - name: CreateQueueRequestOptions
    fullName: CreateQueueRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.CreateQueueRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueResult>
  name: QueueResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: QueueResult
    fullName: QueueResult
    uid: azure-storage.azurestorage.services.queue.QueueService.QueueResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.queue.QueueService.GetMessageRequestOptions
  name: GetMessageRequestOptions
  spec.typeScript:
  - name: GetMessageRequestOptions
    fullName: GetMessageRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.GetMessageRequestOptions
- uid: azure-storage.azurestorage.services.queue.QueueService.GetMessagesRequestOptions
  name: GetMessagesRequestOptions
  spec.typeScript:
  - name: GetMessagesRequestOptions
    fullName: GetMessagesRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.GetMessagesRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult[]>
  name: QueueMessageResult[]>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: QueueMessageResult
    fullName: QueueMessageResult
    uid: azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult
  - name: '[]>'
    fullName: '[]>'
- uid: azure-storage.azurestorage.services.queue.QueueService.ListQueuesRequestOptions
  name: ListQueuesRequestOptions
  spec.typeScript:
  - name: ListQueuesRequestOptions
    fullName: ListQueuesRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.ListQueuesRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.ListQueueResult>
  name: ListQueueResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListQueueResult
    fullName: ListQueueResult
    uid: azure-storage.azurestorage.services.queue.QueueService.ListQueueResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.queue.QueueService.PeekMessagesRequestOptions
  name: PeekMessagesRequestOptions
  spec.typeScript:
  - name: PeekMessagesRequestOptions
    fullName: PeekMessagesRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.PeekMessagesRequestOptions
- uid: azure-storage.azurestorage.services.queue.QueueService.UpdateMessageRequestOptions
  name: UpdateMessageRequestOptions
  spec.typeScript:
  - name: UpdateMessageRequestOptions
    fullName: UpdateMessageRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.UpdateMessageRequestOptions
- uid: azure-storage.azurestorage.services.queue.QueueService
  name: QueueService
  spec.typeScript:
  - name: QueueService
    fullName: QueueService
    uid: azure-storage.azurestorage.services.queue.QueueService
- uid: azure-storage.azurestorage.services.table.TableService.BatchResponse
  name: BatchResponse
  spec.typeScript:
  - name: BatchResponse
    fullName: BatchResponse
    uid: azure-storage.azurestorage.services.table.TableService.BatchResponse
- uid: azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
  name: TableEntityRequestOptions
  spec.typeScript:
  - name: TableEntityRequestOptions
    fullName: TableEntityRequestOptions
    uid: azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
- uid: azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
  name: ListTablesContinuationToken
  spec.typeScript:
  - name: ListTablesContinuationToken
    fullName: ListTablesContinuationToken
    uid: azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
- uid: azure-storage.azurestorage.services.table.TableService.TableContinuationToken
  name: TableContinuationToken
  spec.typeScript:
  - name: TableContinuationToken
    fullName: TableContinuationToken
    uid: azure-storage.azurestorage.services.table.TableService.TableContinuationToken
- uid: azure-storage.azurestorage.services.table.TableService.PropertyResolver
  name: PropertyResolver
  spec.typeScript:
  - name: PropertyResolver
    fullName: PropertyResolver
    uid: azure-storage.azurestorage.services.table.TableService.PropertyResolver
- uid: azure-storage.azurestorage.services.table.TableService.TableAccessPolicy
  name: TableAccessPolicy
  spec.typeScript:
  - name: TableAccessPolicy
    fullName: TableAccessPolicy
    uid: azure-storage.azurestorage.services.table.TableService.TableAccessPolicy
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
  name: TableResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: TableResult
    fullName: TableResult
    uid: azure-storage.azurestorage.services.table.TableService.TableResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.table.TableBatch
  name: TableBatch
  spec.typeScript:
  - name: TableBatch
    fullName: TableBatch
    uid: azure-storage.azurestorage.services.table.TableBatch
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.BatchResult[]>
  name: BatchResult[]>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: BatchResult
    fullName: BatchResult
    uid: azure-storage.azurestorage.services.table.TableService.BatchResult
  - name: '[]>'
    fullName: '[]>'
- uid: azure-storage.azurestorage.services.table.TableService.TableSharedAccessPolicy
  name: TableSharedAccessPolicy
  spec.typeScript:
  - name: TableSharedAccessPolicy
    fullName: TableSharedAccessPolicy
    uid: azure-storage.azurestorage.services.table.TableService.TableSharedAccessPolicy
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.GetTableAclResult>
  name: GetTableAclResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: GetTableAclResult
    fullName: GetTableAclResult
    uid: azure-storage.azurestorage.services.table.TableService.GetTableAclResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.table.TableService.InsertEntityRequestOptions
  name: InsertEntityRequestOptions
  spec.typeScript:
  - name: InsertEntityRequestOptions
    fullName: InsertEntityRequestOptions
    uid: azure-storage.azurestorage.services.table.TableService.InsertEntityRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<T | azure-storage.azurestorage.services.table.TableService.EntityMetadata>
  name: EntityMetadata>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: '<T | '
    fullName: '<T | '
  - name: EntityMetadata
    fullName: EntityMetadata
    uid: azure-storage.azurestorage.services.table.TableService.EntityMetadata
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
  name: EntityMetadata>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: EntityMetadata
    fullName: EntityMetadata
    uid: azure-storage.azurestorage.services.table.TableService.EntityMetadata
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.table.TableService.ListTablesRequestOptions
  name: ListTablesRequestOptions
  spec.typeScript:
  - name: ListTablesRequestOptions
    fullName: ListTablesRequestOptions
    uid: azure-storage.azurestorage.services.table.TableService.ListTablesRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.ListTablesResponse>
  name: ListTablesResponse>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListTablesResponse
    fullName: ListTablesResponse
    uid: azure-storage.azurestorage.services.table.TableService.ListTablesResponse
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.table.TableQuery
  name: TableQuery
  spec.typeScript:
  - name: TableQuery
    fullName: TableQuery
    uid: azure-storage.azurestorage.services.table.TableQuery
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult<T>>
  name: QueryEntitiesResult<T>>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: QueryEntitiesResult
    fullName: QueryEntitiesResult
    uid: azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult
  - name: <T>>
    fullName: <T>>
- uid: azure-storage.azurestorage.ErrorOrResult<T>
  name: ErrorOrResult<T>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <T>
    fullName: <T>
- uid: azure-storage.azurestorage.ErrorOrResult<Object>
  name: ErrorOrResult<Object>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <Object>
    fullName: <Object>
- uid: azure-storage.azurestorage.services.table.TableService
  name: TableService
  spec.typeScript:
  - name: TableService
    fullName: TableService
    uid: azure-storage.azurestorage.services.table.TableService
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<Buffer>
  name: EntityProperty<Buffer>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <Buffer>
    fullName: <Buffer>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<boolean>
  name: EntityProperty<boolean>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <boolean>
    fullName: <boolean>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<Date>
  name: EntityProperty<Date>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <Date>
    fullName: <Date>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<number>
  name: EntityProperty<number>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <number>
    fullName: <number>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<any>
  name: EntityProperty<any>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <any>
    fullName: <any>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<string>
  name: EntityProperty<string>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <string>
    fullName: <string>
- uid: azure-storage.azurestorage.services.table.TableOperation[]
  name: TableOperation[]
  spec.typeScript:
  - name: TableOperation
    fullName: TableOperation
    uid: azure-storage.azurestorage.services.table.TableOperation
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.table.TableOperation
  name: TableOperation
  spec.typeScript:
  - name: TableOperation
    fullName: TableOperation
    uid: azure-storage.azurestorage.services.table.TableOperation
- uid: azure-storage.azurestorage.StorageError | Error
  name: StorageError | Error
  spec.typeScript:
  - name: StorageError
    fullName: StorageError
    uid: azure-storage.azurestorage.StorageError
  - name: " | Error"
    fullName: " | Error"
- uid: azure-storage.azurestorage.ServiceResponse
  name: ServiceResponse
  spec.typeScript:
  - name: ServiceResponse
    fullName: ServiceResponse
    uid: azure-storage.azurestorage.ServiceResponse
- uid: azure-storage.azurestorage.common.models.tokenCredential.TokenCredential
  name: TokenCredential
  spec.typeScript:
  - name: TokenCredential
    fullName: TokenCredential
    uid: azure-storage.azurestorage.common.models.tokenCredential.TokenCredential
- uid: azure-storage.azurestorage.services.table.TableService.BatchResult
  name: BatchResult
- uid: azure-storage.azurestorage.services.table.TableService.createTable_1
  name: createTable_1
- uid: azure-storage.azurestorage.services.table.TableService.createTable
  name: createTable
- uid: azure-storage.azurestorage.services.table.TableService.createTableIfNotExists_1
  name: createTableIfNotExists_1
- uid: azure-storage.azurestorage.services.table.TableService.createTableIfNotExists
  name: createTableIfNotExists
- uid: azure-storage.azurestorage.services.table.TableService.defaultPayloadFormat
  name: defaultPayloadFormat
- uid: azure-storage.azurestorage.services.table.TableService.deleteEntity_1
  name: deleteEntity_1
- uid: azure-storage.azurestorage.services.table.TableService.deleteEntity
  name: deleteEntity
- uid: azure-storage.azurestorage.services.table.TableService.deleteTable_1
  name: deleteTable_1
- uid: azure-storage.azurestorage.services.table.TableService.deleteTable
  name: deleteTable
- uid: azure-storage.azurestorage.services.table.TableService.deleteTableIfExists_1
  name: deleteTableIfExists_1
- uid: azure-storage.azurestorage.services.table.TableService.deleteTableIfExists
  name: deleteTableIfExists
- uid: azure-storage.azurestorage.services.table.TableService.doesTableExist_1
  name: doesTableExist_1
- uid: azure-storage.azurestorage.services.table.TableService.doesTableExist
  name: doesTableExist
- uid: azure-storage.azurestorage.services.table.TableService.EntityMetadata
  name: EntityMetadata
- uid: azure-storage.azurestorage.services.table.TableService.EntityProperty
  name: EntityProperty
- uid: azure-storage.azurestorage.services.table.TableService.executeBatch_1
  name: executeBatch_1
- uid: azure-storage.azurestorage.services.table.TableService.executeBatch
  name: executeBatch
- uid: azure-storage.azurestorage.services.table.TableService.generateSharedAccessSignature
  name: generateSharedAccessSignature
- uid: azure-storage.azurestorage.services.table.TableService.generateSharedAccessSignatureWithVersion
  name: generateSharedAccessSignatureWithVersion
- uid: azure-storage.azurestorage.services.table.TableService.getServiceProperties_1
  name: getServiceProperties_1
- uid: azure-storage.azurestorage.services.table.TableService.getServiceProperties
  name: getServiceProperties
- uid: azure-storage.azurestorage.services.table.TableService.getServiceStats_1
  name: getServiceStats_1
- uid: azure-storage.azurestorage.services.table.TableService.getServiceStats
  name: getServiceStats
- uid: azure-storage.azurestorage.services.table.TableService.getTableAcl_1
  name: getTableAcl_1
- uid: azure-storage.azurestorage.services.table.TableService.getTableAcl
  name: getTableAcl
- uid: azure-storage.azurestorage.services.table.TableService.GetTableAclResult
  name: GetTableAclResult
- uid: azure-storage.azurestorage.services.table.TableService.getUrl
  name: getUrl
- uid: azure-storage.azurestorage.services.table.TableService.insertEntity_2
  name: insertEntity_2
- uid: azure-storage.azurestorage.services.table.TableService.insertEntity
  name: insertEntity
- uid: azure-storage.azurestorage.services.table.TableService.insertEntity_1
  name: insertEntity_1
- uid: azure-storage.azurestorage.services.table.TableService.insertOrMergeEntity_1
  name: insertOrMergeEntity_1
- uid: azure-storage.azurestorage.services.table.TableService.insertOrMergeEntity
  name: insertOrMergeEntity
- uid: azure-storage.azurestorage.services.table.TableService.insertOrReplaceEntity_1
  name: insertOrReplaceEntity_1
- uid: azure-storage.azurestorage.services.table.TableService.insertOrReplaceEntity
  name: insertOrReplaceEntity
- uid: azure-storage.azurestorage.services.table.TableService.ListTablesResponse
  name: ListTablesResponse
- uid: azure-storage.azurestorage.services.table.TableService.listTablesSegmented_1
  name: listTablesSegmented_1
- uid: azure-storage.azurestorage.services.table.TableService.listTablesSegmented
  name: listTablesSegmented
- uid: azure-storage.azurestorage.services.table.TableService.listTablesSegmentedWithPrefix_1
  name: listTablesSegmentedWithPrefix_1
- uid: azure-storage.azurestorage.services.table.TableService.listTablesSegmentedWithPrefix
  name: listTablesSegmentedWithPrefix
- uid: azure-storage.azurestorage.services.table.TableService.mergeEntity_1
  name: mergeEntity_1
- uid: azure-storage.azurestorage.services.table.TableService.mergeEntity
  name: mergeEntity
- uid: azure-storage.azurestorage.services.table.TableService.queryEntities_1
  name: queryEntities_1
- uid: azure-storage.azurestorage.services.table.TableService.queryEntities
  name: queryEntities
- uid: azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult
  name: QueryEntitiesResult
- uid: azure-storage.azurestorage.services.table.TableService.replaceEntity_1
  name: replaceEntity_1
- uid: azure-storage.azurestorage.services.table.TableService.replaceEntity
  name: replaceEntity
- uid: azure-storage.azurestorage.services.table.TableService.retrieveEntity_1
  name: retrieveEntity_1
- uid: azure-storage.azurestorage.services.table.TableService.retrieveEntity
  name: retrieveEntity
- uid: azure-storage.azurestorage.services.table.TableService.setServiceProperties_1
  name: setServiceProperties_1
- uid: azure-storage.azurestorage.services.table.TableService.setServiceProperties
  name: setServiceProperties
- uid: azure-storage.azurestorage.services.table.TableService.setTableAcl_1
  name: setTableAcl_1
- uid: azure-storage.azurestorage.services.table.TableService.setTableAcl
  name: setTableAcl
- uid: azure-storage.azurestorage.services.table.TableService.TableResult
  name: TableResult
- uid: azure-storage.azurestorage.services.table.TableService.withFilter
  name: withFilter
