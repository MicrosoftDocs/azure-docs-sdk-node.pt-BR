### YamlMime:UniversalReference
items:
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient
    name: SpellCheckClient
    fullName: SpellCheckClient
    children:
      - azure-cognitiveservices-spellcheck.SpellCheckClient.addUserAgentInfo
      - azure-cognitiveservices-spellcheck.SpellCheckClient.credentials
      - azure-cognitiveservices-spellcheck.SpellCheckClient.endpoint
      - azure-cognitiveservices-spellcheck.SpellCheckClient.getPackageJsonInfo
      - azure-cognitiveservices-spellcheck.SpellCheckClient.sendRequest_1
      - azure-cognitiveservices-spellcheck.SpellCheckClient.sendRequest
      - azure-cognitiveservices-spellcheck.SpellCheckClient.sendRequestWithHttpOperationResponse
      - azure-cognitiveservices-spellcheck.SpellCheckClient.constructor
      - azure-cognitiveservices-spellcheck.SpellCheckClient.spellChecker
      - azure-cognitiveservices-spellcheck.SpellCheckClient.spellChecker_2
      - azure-cognitiveservices-spellcheck.SpellCheckClient.spellChecker_1
      - azure-cognitiveservices-spellcheck.SpellCheckClient.spellCheckerWithHttpOperationResponse
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: ServiceClient
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.addUserAgentInfo
    name: addUserAgentInfo(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: Adiciona informações personalizadas ao cabeçalho de agente do usuário
    syntax:
      content: 'function addUserAgentInfo(additionalUserAgentInfo: any)'
      parameters:
        - id: additionalUserAgentInfo
          type:
            - any
          description: |
            informações a serem adicionadas ao cabeçalho de agente do usuário, como cadeia de caracteres.
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.credentials
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.endpoint
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'endpoint: string'
      return:
        type:
          - string
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.getPackageJsonInfo
    name: getPackageJsonInfo(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Tenta localizar o Package. JSON para o pacote de determinado nodejs do azure.
      Se encontrado, retorna o nome e versão do pacote, lendo o Package. JSON se Package. JSON não for encontrado, retorna um valor padrão.
    syntax:
      content: 'function getPackageJsonInfo(managementClientDir: string)'
      parameters:
        - id: managementClientDir
          type:
            - string
          description: Passe o diretório do cliente específicas de gerenciamento do azure.
      return:
        type:
          - Object
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.sendRequest_1
    name: sendRequest(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequest<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
      return:
        type:
          - Promise<TResult>
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.sendRequest
    name: 'sendRequest(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions, ServiceCallback<TResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequest<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions, callback: ServiceCallback<TResult>)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
        - id: callback
          type:
            - ServiceCallback<TResult>
          description: ''
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.sendRequestWithHttpOperationResponse
    name: sendRequestWithHttpOperationResponse(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequestWithHttpOperationResponse<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse<TResult>>
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.constructor
    name: 'SpellCheckClient(ServiceClientCredentials, SpellCheckClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new SpellCheckClient(credentials: ServiceClientCredentials, options?: SpellCheckClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: |
            Credenciais de assinatura que identificam exclusivamente a assinatura de cliente.
        - id: options
          type:
            - azure-cognitiveservices-spellcheck.SpellCheckClientOptions
          description: ''
          optional: true
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.spellChecker
    name: 'spellChecker(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function spellChecker(text: string, options?: Object)'
      parameters:
        - id: text
          type:
            - string
          description: |
            A cadeia de caracteres de texto para verificar se há erros de ortografia e gramática. O comprimento combinado da cadeia de caracteres de texto, preContextText de cadeia de caracteres e cadeia de caracteres postContextText não pode exceder 10.000 caracteres. Você pode especificar esse parâmetro na cadeia de caracteres de consulta de uma solicitação GET ou no corpo de uma solicitação POST. Por causa do limite de tamanho da cadeia de caracteres de consulta, você normalmente usará uma solicitação POST, a menos que você está verificando apenas cadeias de caracteres curtas.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-spellcheck.SpellCheck>
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.spellChecker_2
    name: 'spellChecker(string, Object, ServiceCallback<SpellCheck>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function spellChecker(text: string, options: Object, callback: ServiceCallback<SpellCheck>)'
      parameters:
        - id: text
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-spellcheck.SpellCheck>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-spellcheck.SpellCheck>
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.spellChecker_1
    name: 'spellChecker(string, ServiceCallback<SpellCheck>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function spellChecker(text: string, callback: ServiceCallback<SpellCheck>)'
      parameters:
        - id: text
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-spellcheck.SpellCheck>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-spellcheck.SpellCheck>
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.spellCheckerWithHttpOperationResponse
    name: 'spellCheckerWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function spellCheckerWithHttpOperationResponse(text: string, options?: Object)'
      parameters:
        - id: text
          type:
            - string
          description: |
            A cadeia de caracteres de texto para verificar se há erros de ortografia e gramática. O comprimento combinado da cadeia de caracteres de texto, preContextText de cadeia de caracteres e cadeia de caracteres postContextText não pode exceder 10.000 caracteres. Você pode especificar esse parâmetro na cadeia de caracteres de consulta de uma solicitação GET ou no corpo de uma solicitação POST. Por causa do limite de tamanho da cadeia de caracteres de consulta, você normalmente usará uma solicitação POST, a menos que você está verificando apenas cadeias de caracteres curtas.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-spellcheck.SpellCheck>>
    package: azure-cognitiveservices-spellcheck
references:
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClientOptions
    name: SpellCheckClientOptions
    spec.typeScript:
      - name: SpellCheckClientOptions
        fullName: SpellCheckClientOptions
        uid: azure-cognitiveservices-spellcheck.SpellCheckClientOptions
  - uid: Promise<azure-cognitiveservices-spellcheck.SpellCheck>
    name: SpellCheck>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SpellCheck
        fullName: SpellCheck
        uid: azure-cognitiveservices-spellcheck.SpellCheck
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-spellcheck.SpellCheck>
    name: SpellCheck>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SpellCheck
        fullName: SpellCheck
        uid: azure-cognitiveservices-spellcheck.SpellCheck
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-spellcheck.SpellCheck>>
    name: SpellCheck>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: SpellCheck
        fullName: SpellCheck
        uid: azure-cognitiveservices-spellcheck.SpellCheck
      - name: '>>'
        fullName: '>>'