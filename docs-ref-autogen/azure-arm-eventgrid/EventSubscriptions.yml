### YamlMime:UniversalReference
ms.openlocfilehash: 6036a14011ebc2f513f7e14155cc020cd9b77e52
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52096731"
items:
- uid: azure-arm-eventgrid.EventSubscriptions
  name: EventSubscriptions
  fullName: EventSubscriptions
  children:
  - azure-arm-eventgrid.EventSubscriptions.beginCreateOrUpdate
  - azure-arm-eventgrid.EventSubscriptions.beginCreateOrUpdate_2
  - azure-arm-eventgrid.EventSubscriptions.beginCreateOrUpdate_1
  - azure-arm-eventgrid.EventSubscriptions.beginCreateOrUpdateWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.beginDeleteMethod
  - azure-arm-eventgrid.EventSubscriptions.beginDeleteMethod_2
  - azure-arm-eventgrid.EventSubscriptions.beginDeleteMethod_1
  - azure-arm-eventgrid.EventSubscriptions.beginDeleteMethodWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.beginUpdate
  - azure-arm-eventgrid.EventSubscriptions.beginUpdate_2
  - azure-arm-eventgrid.EventSubscriptions.beginUpdate_1
  - azure-arm-eventgrid.EventSubscriptions.beginUpdateWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.createOrUpdate
  - azure-arm-eventgrid.EventSubscriptions.createOrUpdate_2
  - azure-arm-eventgrid.EventSubscriptions.createOrUpdate_1
  - azure-arm-eventgrid.EventSubscriptions.createOrUpdateWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.deleteMethod
  - azure-arm-eventgrid.EventSubscriptions.deleteMethod_2
  - azure-arm-eventgrid.EventSubscriptions.deleteMethod_1
  - azure-arm-eventgrid.EventSubscriptions.deleteMethodWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.get
  - azure-arm-eventgrid.EventSubscriptions.get_2
  - azure-arm-eventgrid.EventSubscriptions.get_1
  - azure-arm-eventgrid.EventSubscriptions.getFullUrl
  - azure-arm-eventgrid.EventSubscriptions.getFullUrl_2
  - azure-arm-eventgrid.EventSubscriptions.getFullUrl_1
  - azure-arm-eventgrid.EventSubscriptions.getFullUrlWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.getWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.listByDomainTopic
  - azure-arm-eventgrid.EventSubscriptions.listByDomainTopic_2
  - azure-arm-eventgrid.EventSubscriptions.listByDomainTopic_1
  - azure-arm-eventgrid.EventSubscriptions.listByDomainTopicWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.listByResource
  - azure-arm-eventgrid.EventSubscriptions.listByResource_2
  - azure-arm-eventgrid.EventSubscriptions.listByResource_1
  - azure-arm-eventgrid.EventSubscriptions.listByResourceWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup
  - azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup_2
  - azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup_1
  - azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType
  - azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType_2
  - azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType_1
  - azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicTypeWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscription
  - azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscription_2
  - azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscription_1
  - azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType
  - azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType_2
  - azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType_1
  - azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicTypeWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup
  - azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup_2
  - azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup_1
  - azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType
  - azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType_2
  - azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType_1
  - azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicTypeWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscription
  - azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscription_2
  - azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscription_1
  - azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType
  - azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType_2
  - azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType_1
  - azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicTypeWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.update
  - azure-arm-eventgrid.EventSubscriptions.update_2
  - azure-arm-eventgrid.EventSubscriptions.update_1
  - azure-arm-eventgrid.EventSubscriptions.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginCreateOrUpdate
  name: beginCreateOrUpdate(string, string, EventSubscription, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginCreateOrUpdate(scope: string, eventSubscriptionName: string, eventSubscriptionInfo: EventSubscription, options?: Object)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="944a9-101">O identificador do recurso ao qual a assinatura do evento precisa ser criado ou atualizado.</span><span class="sxs-lookup"><span data-stu-id="944a9-101">The identifier of the resource to which the event subscription needs to be created or updated.</span></span> <span data-ttu-id="944a9-102">O escopo pode ser uma assinatura, ou um grupo de recursos ou um recurso de nível superior que pertencem a um namespace do provedor de recursos ou um tópico EventGrid.</span><span class="sxs-lookup"><span data-stu-id="944a9-102">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="944a9-103">Por exemplo, use ' / assinaturas / {subscriptionId} /' para uma assinatura, '/ assinaturas / {subscriptionId} ResourceGroups {resourceGroupName}' para um grupo de recursos e ' / assinaturas / {subscriptionId} ResourceGroups {resourceGroupName} / provedores / {resourceProviderNamespace} / {resourceType} / {resourceName}' para um recurso, e ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' para um tópico EventGrid.</span><span class="sxs-lookup"><span data-stu-id="944a9-103">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-104">Nome da assinatura do evento.</span><span class="sxs-lookup"><span data-stu-id="944a9-104">Name of the event subscription.</span></span> <span data-ttu-id="944a9-105">Nomes de assinatura de evento devem ter entre 3 e 64 caracteres de comprimento e devem usar apenas letras alfanuméricas.</span><span class="sxs-lookup"><span data-stu-id="944a9-105">Event subscription names must be between 3 and 64 characters in length and should use alphanumeric letters only.</span></span>
    - id: eventSubscriptionInfo
      type:
      - azure-arm-eventgrid.EventSubscription
      description: >
        <span data-ttu-id="944a9-106">Propriedades de assinatura de evento que contém as informações de filtro e de destino</span><span class="sxs-lookup"><span data-stu-id="944a9-106">Event subscription properties containing the destination and filter information</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginCreateOrUpdate_2
  name: beginCreateOrUpdate(string, string, EventSubscription, Object, ServiceCallback<EventSubscription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginCreateOrUpdate(scope: string, eventSubscriptionName: string, eventSubscriptionInfo: EventSubscription, options: Object, callback: ServiceCallback<EventSubscription>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: eventSubscriptionInfo
      type:
      - azure-arm-eventgrid.EventSubscription
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscription>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginCreateOrUpdate_1
  name: beginCreateOrUpdate(string, string, EventSubscription, ServiceCallback<EventSubscription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginCreateOrUpdate(scope: string, eventSubscriptionName: string, eventSubscriptionInfo: EventSubscription, callback: ServiceCallback<EventSubscription>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: eventSubscriptionInfo
      type:
      - azure-arm-eventgrid.EventSubscription
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscription>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginCreateOrUpdateWithHttpOperationResponse
  name: beginCreateOrUpdateWithHttpOperationResponse(string, string, EventSubscription, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginCreateOrUpdateWithHttpOperationResponse(scope: string, eventSubscriptionName: string, eventSubscriptionInfo: EventSubscription, options?: Object)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="944a9-107">O identificador do recurso ao qual a assinatura do evento precisa ser criado ou atualizado.</span><span class="sxs-lookup"><span data-stu-id="944a9-107">The identifier of the resource to which the event subscription needs to be created or updated.</span></span> <span data-ttu-id="944a9-108">O escopo pode ser uma assinatura, ou um grupo de recursos ou um recurso de nível superior que pertencem a um namespace do provedor de recursos ou um tópico EventGrid.</span><span class="sxs-lookup"><span data-stu-id="944a9-108">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="944a9-109">Por exemplo, use ' / assinaturas / {subscriptionId} /' para uma assinatura, '/ assinaturas / {subscriptionId} ResourceGroups {resourceGroupName}' para um grupo de recursos e ' / assinaturas / {subscriptionId} ResourceGroups {resourceGroupName} / provedores / {resourceProviderNamespace} / {resourceType} / {resourceName}' para um recurso, e ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' para um tópico EventGrid.</span><span class="sxs-lookup"><span data-stu-id="944a9-109">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-110">Nome da assinatura do evento.</span><span class="sxs-lookup"><span data-stu-id="944a9-110">Name of the event subscription.</span></span> <span data-ttu-id="944a9-111">Nomes de assinatura de evento devem ter entre 3 e 64 caracteres de comprimento e devem usar apenas letras alfanuméricas.</span><span class="sxs-lookup"><span data-stu-id="944a9-111">Event subscription names must be between 3 and 64 characters in length and should use alphanumeric letters only.</span></span>
    - id: eventSubscriptionInfo
      type:
      - azure-arm-eventgrid.EventSubscription
      description: >
        <span data-ttu-id="944a9-112">Propriedades de assinatura de evento que contém as informações de filtro e de destino</span><span class="sxs-lookup"><span data-stu-id="944a9-112">Event subscription properties containing the destination and filter information</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscription>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginDeleteMethod
  name: beginDeleteMethod(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginDeleteMethod(scope: string, eventSubscriptionName: string, options?: Object)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="944a9-113">O escopo da assinatura do evento.</span><span class="sxs-lookup"><span data-stu-id="944a9-113">The scope of the event subscription.</span></span> <span data-ttu-id="944a9-114">O escopo pode ser uma assinatura, ou um grupo de recursos ou um recurso de nível superior que pertencem a um namespace do provedor de recursos ou um tópico EventGrid.</span><span class="sxs-lookup"><span data-stu-id="944a9-114">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="944a9-115">Por exemplo, use ' / assinaturas / {subscriptionId} /' para uma assinatura, '/ assinaturas / {subscriptionId} ResourceGroups {resourceGroupName}' para um grupo de recursos e ' / assinaturas / {subscriptionId} ResourceGroups {resourceGroupName} / provedores / {resourceProviderNamespace} / {resourceType} / {resourceName}' para um recurso, e ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' para um tópico EventGrid.</span><span class="sxs-lookup"><span data-stu-id="944a9-115">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-116">Nome da assinatura do evento</span><span class="sxs-lookup"><span data-stu-id="944a9-116">Name of the event subscription</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginDeleteMethod_2
  name: beginDeleteMethod(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginDeleteMethod(scope: string, eventSubscriptionName: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginDeleteMethod_1
  name: beginDeleteMethod(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginDeleteMethod(scope: string, eventSubscriptionName: string, callback: ServiceCallback<void>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginDeleteMethodWithHttpOperationResponse
  name: beginDeleteMethodWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginDeleteMethodWithHttpOperationResponse(scope: string, eventSubscriptionName: string, options?: Object)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="944a9-117">O escopo da assinatura do evento.</span><span class="sxs-lookup"><span data-stu-id="944a9-117">The scope of the event subscription.</span></span> <span data-ttu-id="944a9-118">O escopo pode ser uma assinatura, ou um grupo de recursos ou um recurso de nível superior que pertencem a um namespace do provedor de recursos ou um tópico EventGrid.</span><span class="sxs-lookup"><span data-stu-id="944a9-118">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="944a9-119">Por exemplo, use ' / assinaturas / {subscriptionId} /' para uma assinatura, '/ assinaturas / {subscriptionId} ResourceGroups {resourceGroupName}' para um grupo de recursos e ' / assinaturas / {subscriptionId} ResourceGroups {resourceGroupName} / provedores / {resourceProviderNamespace} / {resourceType} / {resourceName}' para um recurso, e ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' para um tópico EventGrid.</span><span class="sxs-lookup"><span data-stu-id="944a9-119">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-120">Nome da assinatura do evento</span><span class="sxs-lookup"><span data-stu-id="944a9-120">Name of the event subscription</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginUpdate
  name: beginUpdate(string, string, EventSubscriptionUpdateParameters, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginUpdate(scope: string, eventSubscriptionName: string, eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters, options?: Object)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="944a9-121">O escopo da assinatura de evento existente.</span><span class="sxs-lookup"><span data-stu-id="944a9-121">The scope of existing event subscription.</span></span> <span data-ttu-id="944a9-122">O escopo pode ser uma assinatura, ou um grupo de recursos ou um recurso de nível superior que pertencem a um namespace do provedor de recursos ou um tópico EventGrid.</span><span class="sxs-lookup"><span data-stu-id="944a9-122">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="944a9-123">Por exemplo, use ' / assinaturas / {subscriptionId} /' para uma assinatura, '/ assinaturas / {subscriptionId} ResourceGroups {resourceGroupName}' para um grupo de recursos e ' / assinaturas / {subscriptionId} ResourceGroups {resourceGroupName} / provedores / {resourceProviderNamespace} / {resourceType} / {resourceName}' para um recurso, e ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' para um tópico EventGrid.</span><span class="sxs-lookup"><span data-stu-id="944a9-123">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-124">Nome da assinatura do evento a ser atualizado</span><span class="sxs-lookup"><span data-stu-id="944a9-124">Name of the event subscription to be updated</span></span>
    - id: eventSubscriptionUpdateParameters
      type:
      - azure-arm-eventgrid.EventSubscriptionUpdateParameters
      description: >
        <span data-ttu-id="944a9-125">Informações de assinatura de evento atualizado</span><span class="sxs-lookup"><span data-stu-id="944a9-125">Updated event subscription information</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginUpdate_2
  name: beginUpdate(string, string, EventSubscriptionUpdateParameters, Object, ServiceCallback<EventSubscription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginUpdate(scope: string, eventSubscriptionName: string, eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters, options: Object, callback: ServiceCallback<EventSubscription>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: eventSubscriptionUpdateParameters
      type:
      - azure-arm-eventgrid.EventSubscriptionUpdateParameters
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscription>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginUpdate_1
  name: beginUpdate(string, string, EventSubscriptionUpdateParameters, ServiceCallback<EventSubscription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginUpdate(scope: string, eventSubscriptionName: string, eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters, callback: ServiceCallback<EventSubscription>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: eventSubscriptionUpdateParameters
      type:
      - azure-arm-eventgrid.EventSubscriptionUpdateParameters
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscription>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginUpdateWithHttpOperationResponse
  name: beginUpdateWithHttpOperationResponse(string, string, EventSubscriptionUpdateParameters, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginUpdateWithHttpOperationResponse(scope: string, eventSubscriptionName: string, eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters, options?: Object)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="944a9-126">O escopo da assinatura de evento existente.</span><span class="sxs-lookup"><span data-stu-id="944a9-126">The scope of existing event subscription.</span></span> <span data-ttu-id="944a9-127">O escopo pode ser uma assinatura, ou um grupo de recursos ou um recurso de nível superior que pertencem a um namespace do provedor de recursos ou um tópico EventGrid.</span><span class="sxs-lookup"><span data-stu-id="944a9-127">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="944a9-128">Por exemplo, use ' / assinaturas / {subscriptionId} /' para uma assinatura, '/ assinaturas / {subscriptionId} ResourceGroups {resourceGroupName}' para um grupo de recursos e ' / assinaturas / {subscriptionId} ResourceGroups {resourceGroupName} / provedores / {resourceProviderNamespace} / {resourceType} / {resourceName}' para um recurso, e ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' para um tópico EventGrid.</span><span class="sxs-lookup"><span data-stu-id="944a9-128">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-129">Nome da assinatura do evento a ser atualizado</span><span class="sxs-lookup"><span data-stu-id="944a9-129">Name of the event subscription to be updated</span></span>
    - id: eventSubscriptionUpdateParameters
      type:
      - azure-arm-eventgrid.EventSubscriptionUpdateParameters
      description: >
        <span data-ttu-id="944a9-130">Informações de assinatura de evento atualizado</span><span class="sxs-lookup"><span data-stu-id="944a9-130">Updated event subscription information</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscription>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.createOrUpdate
  name: createOrUpdate(string, string, EventSubscription, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createOrUpdate(scope: string, eventSubscriptionName: string, eventSubscriptionInfo: EventSubscription, options?: Object)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="944a9-131">O identificador do recurso ao qual a assinatura do evento precisa ser criado ou atualizado.</span><span class="sxs-lookup"><span data-stu-id="944a9-131">The identifier of the resource to which the event subscription needs to be created or updated.</span></span> <span data-ttu-id="944a9-132">O escopo pode ser uma assinatura, ou um grupo de recursos ou um recurso de nível superior que pertencem a um namespace do provedor de recursos ou um tópico EventGrid.</span><span class="sxs-lookup"><span data-stu-id="944a9-132">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="944a9-133">Por exemplo, use ' / assinaturas / {subscriptionId} /' para uma assinatura, '/ assinaturas / {subscriptionId} ResourceGroups {resourceGroupName}' para um grupo de recursos e ' / assinaturas / {subscriptionId} ResourceGroups {resourceGroupName} / provedores / {resourceProviderNamespace} / {resourceType} / {resourceName}' para um recurso, e ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' para um tópico EventGrid.</span><span class="sxs-lookup"><span data-stu-id="944a9-133">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-134">Nome da assinatura do evento.</span><span class="sxs-lookup"><span data-stu-id="944a9-134">Name of the event subscription.</span></span> <span data-ttu-id="944a9-135">Nomes de assinatura de evento devem ter entre 3 e 64 caracteres de comprimento e devem usar apenas letras alfanuméricas.</span><span class="sxs-lookup"><span data-stu-id="944a9-135">Event subscription names must be between 3 and 64 characters in length and should use alphanumeric letters only.</span></span>
    - id: eventSubscriptionInfo
      type:
      - azure-arm-eventgrid.EventSubscription
      description: >
        <span data-ttu-id="944a9-136">Propriedades de assinatura de evento que contém as informações de filtro e de destino</span><span class="sxs-lookup"><span data-stu-id="944a9-136">Event subscription properties containing the destination and filter information</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.createOrUpdate_2
  name: createOrUpdate(string, string, EventSubscription, Object, ServiceCallback<EventSubscription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createOrUpdate(scope: string, eventSubscriptionName: string, eventSubscriptionInfo: EventSubscription, options: Object, callback: ServiceCallback<EventSubscription>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: eventSubscriptionInfo
      type:
      - azure-arm-eventgrid.EventSubscription
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscription>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.createOrUpdate_1
  name: createOrUpdate(string, string, EventSubscription, ServiceCallback<EventSubscription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createOrUpdate(scope: string, eventSubscriptionName: string, eventSubscriptionInfo: EventSubscription, callback: ServiceCallback<EventSubscription>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: eventSubscriptionInfo
      type:
      - azure-arm-eventgrid.EventSubscription
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscription>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.createOrUpdateWithHttpOperationResponse
  name: createOrUpdateWithHttpOperationResponse(string, string, EventSubscription, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createOrUpdateWithHttpOperationResponse(scope: string, eventSubscriptionName: string, eventSubscriptionInfo: EventSubscription, options?: Object)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="944a9-137">O identificador do recurso ao qual a assinatura do evento precisa ser criado ou atualizado.</span><span class="sxs-lookup"><span data-stu-id="944a9-137">The identifier of the resource to which the event subscription needs to be created or updated.</span></span> <span data-ttu-id="944a9-138">O escopo pode ser uma assinatura, ou um grupo de recursos ou um recurso de nível superior que pertencem a um namespace do provedor de recursos ou um tópico EventGrid.</span><span class="sxs-lookup"><span data-stu-id="944a9-138">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="944a9-139">Por exemplo, use ' / assinaturas / {subscriptionId} /' para uma assinatura, '/ assinaturas / {subscriptionId} ResourceGroups {resourceGroupName}' para um grupo de recursos e ' / assinaturas / {subscriptionId} ResourceGroups {resourceGroupName} / provedores / {resourceProviderNamespace} / {resourceType} / {resourceName}' para um recurso, e ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' para um tópico EventGrid.</span><span class="sxs-lookup"><span data-stu-id="944a9-139">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-140">Nome da assinatura do evento.</span><span class="sxs-lookup"><span data-stu-id="944a9-140">Name of the event subscription.</span></span> <span data-ttu-id="944a9-141">Nomes de assinatura de evento devem ter entre 3 e 64 caracteres de comprimento e devem usar apenas letras alfanuméricas.</span><span class="sxs-lookup"><span data-stu-id="944a9-141">Event subscription names must be between 3 and 64 characters in length and should use alphanumeric letters only.</span></span>
    - id: eventSubscriptionInfo
      type:
      - azure-arm-eventgrid.EventSubscription
      description: >
        <span data-ttu-id="944a9-142">Propriedades de assinatura de evento que contém as informações de filtro e de destino</span><span class="sxs-lookup"><span data-stu-id="944a9-142">Event subscription properties containing the destination and filter information</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscription>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.deleteMethod
  name: deleteMethod(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteMethod(scope: string, eventSubscriptionName: string, options?: Object)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="944a9-143">O escopo da assinatura do evento.</span><span class="sxs-lookup"><span data-stu-id="944a9-143">The scope of the event subscription.</span></span> <span data-ttu-id="944a9-144">O escopo pode ser uma assinatura, ou um grupo de recursos ou um recurso de nível superior que pertencem a um namespace do provedor de recursos ou um tópico EventGrid.</span><span class="sxs-lookup"><span data-stu-id="944a9-144">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="944a9-145">Por exemplo, use ' / assinaturas / {subscriptionId} /' para uma assinatura, '/ assinaturas / {subscriptionId} ResourceGroups {resourceGroupName}' para um grupo de recursos e ' / assinaturas / {subscriptionId} ResourceGroups {resourceGroupName} / provedores / {resourceProviderNamespace} / {resourceType} / {resourceName}' para um recurso, e ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' para um tópico EventGrid.</span><span class="sxs-lookup"><span data-stu-id="944a9-145">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-146">Nome da assinatura do evento</span><span class="sxs-lookup"><span data-stu-id="944a9-146">Name of the event subscription</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.deleteMethod_2
  name: deleteMethod(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteMethod(scope: string, eventSubscriptionName: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.deleteMethod_1
  name: deleteMethod(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteMethod(scope: string, eventSubscriptionName: string, callback: ServiceCallback<void>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(scope: string, eventSubscriptionName: string, options?: Object)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="944a9-147">O escopo da assinatura do evento.</span><span class="sxs-lookup"><span data-stu-id="944a9-147">The scope of the event subscription.</span></span> <span data-ttu-id="944a9-148">O escopo pode ser uma assinatura, ou um grupo de recursos ou um recurso de nível superior que pertencem a um namespace do provedor de recursos ou um tópico EventGrid.</span><span class="sxs-lookup"><span data-stu-id="944a9-148">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="944a9-149">Por exemplo, use ' / assinaturas / {subscriptionId} /' para uma assinatura, '/ assinaturas / {subscriptionId} ResourceGroups {resourceGroupName}' para um grupo de recursos e ' / assinaturas / {subscriptionId} ResourceGroups {resourceGroupName} / provedores / {resourceProviderNamespace} / {resourceType} / {resourceName}' para um recurso, e ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' para um tópico EventGrid.</span><span class="sxs-lookup"><span data-stu-id="944a9-149">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-150">Nome da assinatura do evento</span><span class="sxs-lookup"><span data-stu-id="944a9-150">Name of the event subscription</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.get
  name: get(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function get(scope: string, eventSubscriptionName: string, options?: Object)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="944a9-151">O escopo da assinatura do evento.</span><span class="sxs-lookup"><span data-stu-id="944a9-151">The scope of the event subscription.</span></span> <span data-ttu-id="944a9-152">O escopo pode ser uma assinatura, ou um grupo de recursos ou um recurso de nível superior que pertencem a um namespace do provedor de recursos ou um tópico EventGrid.</span><span class="sxs-lookup"><span data-stu-id="944a9-152">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="944a9-153">Por exemplo, use ' / assinaturas / {subscriptionId} /' para uma assinatura, '/ assinaturas / {subscriptionId} ResourceGroups {resourceGroupName}' para um grupo de recursos e ' / assinaturas / {subscriptionId} ResourceGroups {resourceGroupName} / provedores / {resourceProviderNamespace} / {resourceType} / {resourceName}' para um recurso, e ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' para um tópico EventGrid.</span><span class="sxs-lookup"><span data-stu-id="944a9-153">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-154">Nome da assinatura do evento</span><span class="sxs-lookup"><span data-stu-id="944a9-154">Name of the event subscription</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.get_2
  name: get(string, string, Object, ServiceCallback<EventSubscription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function get(scope: string, eventSubscriptionName: string, options: Object, callback: ServiceCallback<EventSubscription>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscription>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.get_1
  name: get(string, string, ServiceCallback<EventSubscription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function get(scope: string, eventSubscriptionName: string, callback: ServiceCallback<EventSubscription>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscription>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.getFullUrl
  name: getFullUrl(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getFullUrl(scope: string, eventSubscriptionName: string, options?: Object)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="944a9-155">O escopo da assinatura do evento.</span><span class="sxs-lookup"><span data-stu-id="944a9-155">The scope of the event subscription.</span></span> <span data-ttu-id="944a9-156">O escopo pode ser uma assinatura, ou um grupo de recursos ou um recurso de nível superior que pertencem a um namespace do provedor de recursos ou um tópico EventGrid.</span><span class="sxs-lookup"><span data-stu-id="944a9-156">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="944a9-157">Por exemplo, use ' / assinaturas / {subscriptionId} /' para uma assinatura, '/ assinaturas / {subscriptionId} ResourceGroups {resourceGroupName}' para um grupo de recursos e ' / assinaturas / {subscriptionId} ResourceGroups {resourceGroupName} / provedores / {resourceProviderNamespace} / {resourceType} / {resourceName}' para um recurso, e ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' para um tópico EventGrid.</span><span class="sxs-lookup"><span data-stu-id="944a9-157">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-158">Nome da assinatura do evento</span><span class="sxs-lookup"><span data-stu-id="944a9-158">Name of the event subscription</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionFullUrl>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.getFullUrl_2
  name: getFullUrl(string, string, Object, ServiceCallback<EventSubscriptionFullUrl>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getFullUrl(scope: string, eventSubscriptionName: string, options: Object, callback: ServiceCallback<EventSubscriptionFullUrl>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionFullUrl>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionFullUrl>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.getFullUrl_1
  name: getFullUrl(string, string, ServiceCallback<EventSubscriptionFullUrl>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getFullUrl(scope: string, eventSubscriptionName: string, callback: ServiceCallback<EventSubscriptionFullUrl>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionFullUrl>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionFullUrl>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.getFullUrlWithHttpOperationResponse
  name: getFullUrlWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getFullUrlWithHttpOperationResponse(scope: string, eventSubscriptionName: string, options?: Object)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="944a9-159">O escopo da assinatura do evento.</span><span class="sxs-lookup"><span data-stu-id="944a9-159">The scope of the event subscription.</span></span> <span data-ttu-id="944a9-160">O escopo pode ser uma assinatura, ou um grupo de recursos ou um recurso de nível superior que pertencem a um namespace do provedor de recursos ou um tópico EventGrid.</span><span class="sxs-lookup"><span data-stu-id="944a9-160">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="944a9-161">Por exemplo, use ' / assinaturas / {subscriptionId} /' para uma assinatura, '/ assinaturas / {subscriptionId} ResourceGroups {resourceGroupName}' para um grupo de recursos e ' / assinaturas / {subscriptionId} ResourceGroups {resourceGroupName} / provedores / {resourceProviderNamespace} / {resourceType} / {resourceName}' para um recurso, e ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' para um tópico EventGrid.</span><span class="sxs-lookup"><span data-stu-id="944a9-161">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-162">Nome da assinatura do evento</span><span class="sxs-lookup"><span data-stu-id="944a9-162">Name of the event subscription</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionFullUrl>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.getWithHttpOperationResponse
  name: getWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getWithHttpOperationResponse(scope: string, eventSubscriptionName: string, options?: Object)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="944a9-163">O escopo da assinatura do evento.</span><span class="sxs-lookup"><span data-stu-id="944a9-163">The scope of the event subscription.</span></span> <span data-ttu-id="944a9-164">O escopo pode ser uma assinatura, ou um grupo de recursos ou um recurso de nível superior que pertencem a um namespace do provedor de recursos ou um tópico EventGrid.</span><span class="sxs-lookup"><span data-stu-id="944a9-164">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="944a9-165">Por exemplo, use ' / assinaturas / {subscriptionId} /' para uma assinatura, '/ assinaturas / {subscriptionId} ResourceGroups {resourceGroupName}' para um grupo de recursos e ' / assinaturas / {subscriptionId} ResourceGroups {resourceGroupName} / provedores / {resourceProviderNamespace} / {resourceType} / {resourceName}' para um recurso, e ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' para um tópico EventGrid.</span><span class="sxs-lookup"><span data-stu-id="944a9-165">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-166">Nome da assinatura do evento</span><span class="sxs-lookup"><span data-stu-id="944a9-166">Name of the event subscription</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscription>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listByDomainTopic
  name: listByDomainTopic(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listByDomainTopic(resourceGroupName: string, domainName: string, topicName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-167">O nome do grupo de recursos na assinatura do usuário.</span><span class="sxs-lookup"><span data-stu-id="944a9-167">The name of the resource group within the user's subscription.</span></span>
    - id: domainName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-168">Nome do domínio de nível superior</span><span class="sxs-lookup"><span data-stu-id="944a9-168">Name of the top level domain</span></span>
    - id: topicName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-169">Nome do tópico de domínio</span><span class="sxs-lookup"><span data-stu-id="944a9-169">Name of the domain topic</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listByDomainTopic_2
  name: listByDomainTopic(string, string, string, Object, ServiceCallback<EventSubscriptionsListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listByDomainTopic(resourceGroupName: string, domainName: string, topicName: string, options: Object, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: domainName
      type:
      - string
      description: ''
    - id: topicName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listByDomainTopic_1
  name: listByDomainTopic(string, string, string, ServiceCallback<EventSubscriptionsListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listByDomainTopic(resourceGroupName: string, domainName: string, topicName: string, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: domainName
      type:
      - string
      description: ''
    - id: topicName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listByDomainTopicWithHttpOperationResponse
  name: listByDomainTopicWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listByDomainTopicWithHttpOperationResponse(resourceGroupName: string, domainName: string, topicName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-170">O nome do grupo de recursos na assinatura do usuário.</span><span class="sxs-lookup"><span data-stu-id="944a9-170">The name of the resource group within the user's subscription.</span></span>
    - id: domainName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-171">Nome do domínio de nível superior</span><span class="sxs-lookup"><span data-stu-id="944a9-171">Name of the top level domain</span></span>
    - id: topicName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-172">Nome do tópico de domínio</span><span class="sxs-lookup"><span data-stu-id="944a9-172">Name of the domain topic</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listByResource
  name: listByResource(string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listByResource(resourceGroupName: string, providerNamespace: string, resourceTypeName: string, resourceName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-173">O nome do grupo de recursos na assinatura do usuário.</span><span class="sxs-lookup"><span data-stu-id="944a9-173">The name of the resource group within the user's subscription.</span></span>
    - id: providerNamespace
      type:
      - string
      description: >
        <span data-ttu-id="944a9-174">Namespace do provedor do tópico</span><span class="sxs-lookup"><span data-stu-id="944a9-174">Namespace of the provider of the topic</span></span>
    - id: resourceTypeName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-175">Nome do tipo de recurso</span><span class="sxs-lookup"><span data-stu-id="944a9-175">Name of the resource type</span></span>
    - id: resourceName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-176">Nome do recurso</span><span class="sxs-lookup"><span data-stu-id="944a9-176">Name of the resource</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listByResource_2
  name: listByResource(string, string, string, string, Object, ServiceCallback<EventSubscriptionsListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listByResource(resourceGroupName: string, providerNamespace: string, resourceTypeName: string, resourceName: string, options: Object, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: providerNamespace
      type:
      - string
      description: ''
    - id: resourceTypeName
      type:
      - string
      description: ''
    - id: resourceName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listByResource_1
  name: listByResource(string, string, string, string, ServiceCallback<EventSubscriptionsListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listByResource(resourceGroupName: string, providerNamespace: string, resourceTypeName: string, resourceName: string, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: providerNamespace
      type:
      - string
      description: ''
    - id: resourceTypeName
      type:
      - string
      description: ''
    - id: resourceName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listByResourceWithHttpOperationResponse
  name: listByResourceWithHttpOperationResponse(string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listByResourceWithHttpOperationResponse(resourceGroupName: string, providerNamespace: string, resourceTypeName: string, resourceName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-177">O nome do grupo de recursos na assinatura do usuário.</span><span class="sxs-lookup"><span data-stu-id="944a9-177">The name of the resource group within the user's subscription.</span></span>
    - id: providerNamespace
      type:
      - string
      description: >
        <span data-ttu-id="944a9-178">Namespace do provedor do tópico</span><span class="sxs-lookup"><span data-stu-id="944a9-178">Namespace of the provider of the topic</span></span>
    - id: resourceTypeName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-179">Nome do tipo de recurso</span><span class="sxs-lookup"><span data-stu-id="944a9-179">Name of the resource type</span></span>
    - id: resourceName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-180">Nome do recurso</span><span class="sxs-lookup"><span data-stu-id="944a9-180">Name of the resource</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup
  name: listGlobalByResourceGroup(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalByResourceGroup(resourceGroupName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-181">O nome do grupo de recursos na assinatura do usuário.</span><span class="sxs-lookup"><span data-stu-id="944a9-181">The name of the resource group within the user's subscription.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup_2
  name: listGlobalByResourceGroup(string, Object, ServiceCallback<EventSubscriptionsListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalByResourceGroup(resourceGroupName: string, options: Object, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup_1
  name: listGlobalByResourceGroup(string, ServiceCallback<EventSubscriptionsListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalByResourceGroup(resourceGroupName: string, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType
  name: listGlobalByResourceGroupForTopicType(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalByResourceGroupForTopicType(resourceGroupName: string, topicTypeName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-182">O nome do grupo de recursos na assinatura do usuário.</span><span class="sxs-lookup"><span data-stu-id="944a9-182">The name of the resource group within the user's subscription.</span></span>
    - id: topicTypeName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-183">Nome do tipo de tópico</span><span class="sxs-lookup"><span data-stu-id="944a9-183">Name of the topic type</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType_2
  name: listGlobalByResourceGroupForTopicType(string, string, Object, ServiceCallback<EventSubscriptionsListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalByResourceGroupForTopicType(resourceGroupName: string, topicTypeName: string, options: Object, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: topicTypeName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType_1
  name: listGlobalByResourceGroupForTopicType(string, string, ServiceCallback<EventSubscriptionsListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalByResourceGroupForTopicType(resourceGroupName: string, topicTypeName: string, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: topicTypeName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicTypeWithHttpOperationResponse
  name: listGlobalByResourceGroupForTopicTypeWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalByResourceGroupForTopicTypeWithHttpOperationResponse(resourceGroupName: string, topicTypeName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-184">O nome do grupo de recursos na assinatura do usuário.</span><span class="sxs-lookup"><span data-stu-id="944a9-184">The name of the resource group within the user's subscription.</span></span>
    - id: topicTypeName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-185">Nome do tipo de tópico</span><span class="sxs-lookup"><span data-stu-id="944a9-185">Name of the topic type</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupWithHttpOperationResponse
  name: listGlobalByResourceGroupWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalByResourceGroupWithHttpOperationResponse(resourceGroupName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-186">O nome do grupo de recursos na assinatura do usuário.</span><span class="sxs-lookup"><span data-stu-id="944a9-186">The name of the resource group within the user's subscription.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscription
  name: listGlobalBySubscription(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalBySubscription(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscription_2
  name: listGlobalBySubscription(Object, ServiceCallback<EventSubscriptionsListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalBySubscription(options: Object, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscription_1
  name: listGlobalBySubscription(ServiceCallback<EventSubscriptionsListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalBySubscription(callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType
  name: listGlobalBySubscriptionForTopicType(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalBySubscriptionForTopicType(topicTypeName: string, options?: Object)'
    parameters:
    - id: topicTypeName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-187">Nome do tipo de tópico</span><span class="sxs-lookup"><span data-stu-id="944a9-187">Name of the topic type</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType_2
  name: listGlobalBySubscriptionForTopicType(string, Object, ServiceCallback<EventSubscriptionsListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalBySubscriptionForTopicType(topicTypeName: string, options: Object, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: topicTypeName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType_1
  name: listGlobalBySubscriptionForTopicType(string, ServiceCallback<EventSubscriptionsListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalBySubscriptionForTopicType(topicTypeName: string, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: topicTypeName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicTypeWithHttpOperationResponse
  name: listGlobalBySubscriptionForTopicTypeWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalBySubscriptionForTopicTypeWithHttpOperationResponse(topicTypeName: string, options?: Object)'
    parameters:
    - id: topicTypeName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-188">Nome do tipo de tópico</span><span class="sxs-lookup"><span data-stu-id="944a9-188">Name of the topic type</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionWithHttpOperationResponse
  name: listGlobalBySubscriptionWithHttpOperationResponse(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalBySubscriptionWithHttpOperationResponse(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup
  name: listRegionalByResourceGroup(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalByResourceGroup(resourceGroupName: string, location: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-189">O nome do grupo de recursos na assinatura do usuário.</span><span class="sxs-lookup"><span data-stu-id="944a9-189">The name of the resource group within the user's subscription.</span></span>
    - id: location
      type:
      - string
      description: >
        <span data-ttu-id="944a9-190">Nome do local</span><span class="sxs-lookup"><span data-stu-id="944a9-190">Name of the location</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup_2
  name: listRegionalByResourceGroup(string, string, Object, ServiceCallback<EventSubscriptionsListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalByResourceGroup(resourceGroupName: string, location: string, options: Object, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: location
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup_1
  name: listRegionalByResourceGroup(string, string, ServiceCallback<EventSubscriptionsListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalByResourceGroup(resourceGroupName: string, location: string, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: location
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType
  name: listRegionalByResourceGroupForTopicType(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalByResourceGroupForTopicType(resourceGroupName: string, location: string, topicTypeName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-191">O nome do grupo de recursos na assinatura do usuário.</span><span class="sxs-lookup"><span data-stu-id="944a9-191">The name of the resource group within the user's subscription.</span></span>
    - id: location
      type:
      - string
      description: >
        <span data-ttu-id="944a9-192">Nome do local</span><span class="sxs-lookup"><span data-stu-id="944a9-192">Name of the location</span></span>
    - id: topicTypeName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-193">Nome do tipo de tópico</span><span class="sxs-lookup"><span data-stu-id="944a9-193">Name of the topic type</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType_2
  name: listRegionalByResourceGroupForTopicType(string, string, string, Object, ServiceCallback<EventSubscriptionsListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalByResourceGroupForTopicType(resourceGroupName: string, location: string, topicTypeName: string, options: Object, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: location
      type:
      - string
      description: ''
    - id: topicTypeName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType_1
  name: listRegionalByResourceGroupForTopicType(string, string, string, ServiceCallback<EventSubscriptionsListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalByResourceGroupForTopicType(resourceGroupName: string, location: string, topicTypeName: string, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: location
      type:
      - string
      description: ''
    - id: topicTypeName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicTypeWithHttpOperationResponse
  name: listRegionalByResourceGroupForTopicTypeWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalByResourceGroupForTopicTypeWithHttpOperationResponse(resourceGroupName: string, location: string, topicTypeName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-194">O nome do grupo de recursos na assinatura do usuário.</span><span class="sxs-lookup"><span data-stu-id="944a9-194">The name of the resource group within the user's subscription.</span></span>
    - id: location
      type:
      - string
      description: >
        <span data-ttu-id="944a9-195">Nome do local</span><span class="sxs-lookup"><span data-stu-id="944a9-195">Name of the location</span></span>
    - id: topicTypeName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-196">Nome do tipo de tópico</span><span class="sxs-lookup"><span data-stu-id="944a9-196">Name of the topic type</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupWithHttpOperationResponse
  name: listRegionalByResourceGroupWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalByResourceGroupWithHttpOperationResponse(resourceGroupName: string, location: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-197">O nome do grupo de recursos na assinatura do usuário.</span><span class="sxs-lookup"><span data-stu-id="944a9-197">The name of the resource group within the user's subscription.</span></span>
    - id: location
      type:
      - string
      description: >
        <span data-ttu-id="944a9-198">Nome do local</span><span class="sxs-lookup"><span data-stu-id="944a9-198">Name of the location</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscription
  name: listRegionalBySubscription(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalBySubscription(location: string, options?: Object)'
    parameters:
    - id: location
      type:
      - string
      description: >
        <span data-ttu-id="944a9-199">Nome do local</span><span class="sxs-lookup"><span data-stu-id="944a9-199">Name of the location</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscription_2
  name: listRegionalBySubscription(string, Object, ServiceCallback<EventSubscriptionsListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalBySubscription(location: string, options: Object, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: location
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscription_1
  name: listRegionalBySubscription(string, ServiceCallback<EventSubscriptionsListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalBySubscription(location: string, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: location
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType
  name: listRegionalBySubscriptionForTopicType(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalBySubscriptionForTopicType(location: string, topicTypeName: string, options?: Object)'
    parameters:
    - id: location
      type:
      - string
      description: >
        <span data-ttu-id="944a9-200">Nome do local</span><span class="sxs-lookup"><span data-stu-id="944a9-200">Name of the location</span></span>
    - id: topicTypeName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-201">Nome do tipo de tópico</span><span class="sxs-lookup"><span data-stu-id="944a9-201">Name of the topic type</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType_2
  name: listRegionalBySubscriptionForTopicType(string, string, Object, ServiceCallback<EventSubscriptionsListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalBySubscriptionForTopicType(location: string, topicTypeName: string, options: Object, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: location
      type:
      - string
      description: ''
    - id: topicTypeName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType_1
  name: listRegionalBySubscriptionForTopicType(string, string, ServiceCallback<EventSubscriptionsListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalBySubscriptionForTopicType(location: string, topicTypeName: string, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: location
      type:
      - string
      description: ''
    - id: topicTypeName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicTypeWithHttpOperationResponse
  name: listRegionalBySubscriptionForTopicTypeWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalBySubscriptionForTopicTypeWithHttpOperationResponse(location: string, topicTypeName: string, options?: Object)'
    parameters:
    - id: location
      type:
      - string
      description: >
        <span data-ttu-id="944a9-202">Nome do local</span><span class="sxs-lookup"><span data-stu-id="944a9-202">Name of the location</span></span>
    - id: topicTypeName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-203">Nome do tipo de tópico</span><span class="sxs-lookup"><span data-stu-id="944a9-203">Name of the topic type</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionWithHttpOperationResponse
  name: listRegionalBySubscriptionWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalBySubscriptionWithHttpOperationResponse(location: string, options?: Object)'
    parameters:
    - id: location
      type:
      - string
      description: >
        <span data-ttu-id="944a9-204">Nome do local</span><span class="sxs-lookup"><span data-stu-id="944a9-204">Name of the location</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.update
  name: update(string, string, EventSubscriptionUpdateParameters, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function update(scope: string, eventSubscriptionName: string, eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters, options?: Object)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="944a9-205">O escopo da assinatura de evento existente.</span><span class="sxs-lookup"><span data-stu-id="944a9-205">The scope of existing event subscription.</span></span> <span data-ttu-id="944a9-206">O escopo pode ser uma assinatura, ou um grupo de recursos ou um recurso de nível superior que pertencem a um namespace do provedor de recursos ou um tópico EventGrid.</span><span class="sxs-lookup"><span data-stu-id="944a9-206">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="944a9-207">Por exemplo, use ' / assinaturas / {subscriptionId} /' para uma assinatura, '/ assinaturas / {subscriptionId} ResourceGroups {resourceGroupName}' para um grupo de recursos e ' / assinaturas / {subscriptionId} ResourceGroups {resourceGroupName} / provedores / {resourceProviderNamespace} / {resourceType} / {resourceName}' para um recurso, e ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' para um tópico EventGrid.</span><span class="sxs-lookup"><span data-stu-id="944a9-207">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-208">Nome da assinatura do evento a ser atualizado</span><span class="sxs-lookup"><span data-stu-id="944a9-208">Name of the event subscription to be updated</span></span>
    - id: eventSubscriptionUpdateParameters
      type:
      - azure-arm-eventgrid.EventSubscriptionUpdateParameters
      description: >
        <span data-ttu-id="944a9-209">Informações de assinatura de evento atualizado</span><span class="sxs-lookup"><span data-stu-id="944a9-209">Updated event subscription information</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.update_2
  name: update(string, string, EventSubscriptionUpdateParameters, Object, ServiceCallback<EventSubscription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function update(scope: string, eventSubscriptionName: string, eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters, options: Object, callback: ServiceCallback<EventSubscription>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: eventSubscriptionUpdateParameters
      type:
      - azure-arm-eventgrid.EventSubscriptionUpdateParameters
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscription>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.update_1
  name: update(string, string, EventSubscriptionUpdateParameters, ServiceCallback<EventSubscription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function update(scope: string, eventSubscriptionName: string, eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters, callback: ServiceCallback<EventSubscription>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: eventSubscriptionUpdateParameters
      type:
      - azure-arm-eventgrid.EventSubscriptionUpdateParameters
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscription>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse(string, string, EventSubscriptionUpdateParameters, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateWithHttpOperationResponse(scope: string, eventSubscriptionName: string, eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters, options?: Object)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="944a9-210">O escopo da assinatura de evento existente.</span><span class="sxs-lookup"><span data-stu-id="944a9-210">The scope of existing event subscription.</span></span> <span data-ttu-id="944a9-211">O escopo pode ser uma assinatura, ou um grupo de recursos ou um recurso de nível superior que pertencem a um namespace do provedor de recursos ou um tópico EventGrid.</span><span class="sxs-lookup"><span data-stu-id="944a9-211">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="944a9-212">Por exemplo, use ' / assinaturas / {subscriptionId} /' para uma assinatura, '/ assinaturas / {subscriptionId} ResourceGroups {resourceGroupName}' para um grupo de recursos e ' / assinaturas / {subscriptionId} ResourceGroups {resourceGroupName} / provedores / {resourceProviderNamespace} / {resourceType} / {resourceName}' para um recurso, e ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' para um tópico EventGrid.</span><span class="sxs-lookup"><span data-stu-id="944a9-212">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="944a9-213">Nome da assinatura do evento a ser atualizado</span><span class="sxs-lookup"><span data-stu-id="944a9-213">Name of the event subscription to be updated</span></span>
    - id: eventSubscriptionUpdateParameters
      type:
      - azure-arm-eventgrid.EventSubscriptionUpdateParameters
      description: >
        <span data-ttu-id="944a9-214">Informações de assinatura de evento atualizado</span><span class="sxs-lookup"><span data-stu-id="944a9-214">Updated event subscription information</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscription>>
  package: azure-arm-eventgrid
references:
- uid: azure-arm-eventgrid.EventSubscription
  name: EventSubscription
  spec.typeScript:
  - name: EventSubscription
    fullName: EventSubscription
    uid: azure-arm-eventgrid.EventSubscription
- uid: Promise<azure-arm-eventgrid.EventSubscription>
  name: EventSubscription>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: EventSubscription
    fullName: EventSubscription
    uid: azure-arm-eventgrid.EventSubscription
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-eventgrid.EventSubscription>
  name: EventSubscription>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: EventSubscription
    fullName: EventSubscription
    uid: azure-arm-eventgrid.EventSubscription
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscription>>
  name: EventSubscription>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: EventSubscription
    fullName: EventSubscription
    uid: azure-arm-eventgrid.EventSubscription
  - name: '>>'
    fullName: '>>'
- uid: azure-arm-eventgrid.EventSubscriptionUpdateParameters
  name: EventSubscriptionUpdateParameters
  spec.typeScript:
  - name: EventSubscriptionUpdateParameters
    fullName: EventSubscriptionUpdateParameters
    uid: azure-arm-eventgrid.EventSubscriptionUpdateParameters
- uid: Promise<azure-arm-eventgrid.EventSubscriptionFullUrl>
  name: EventSubscriptionFullUrl>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: EventSubscriptionFullUrl
    fullName: EventSubscriptionFullUrl
    uid: azure-arm-eventgrid.EventSubscriptionFullUrl
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-eventgrid.EventSubscriptionFullUrl>
  name: EventSubscriptionFullUrl>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: EventSubscriptionFullUrl
    fullName: EventSubscriptionFullUrl
    uid: azure-arm-eventgrid.EventSubscriptionFullUrl
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionFullUrl>>
  name: EventSubscriptionFullUrl>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: EventSubscriptionFullUrl
    fullName: EventSubscriptionFullUrl
    uid: azure-arm-eventgrid.EventSubscriptionFullUrl
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  name: EventSubscriptionsListResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: EventSubscriptionsListResult
    fullName: EventSubscriptionsListResult
    uid: azure-arm-eventgrid.EventSubscriptionsListResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
  name: EventSubscriptionsListResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: EventSubscriptionsListResult
    fullName: EventSubscriptionsListResult
    uid: azure-arm-eventgrid.EventSubscriptionsListResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
  name: EventSubscriptionsListResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: EventSubscriptionsListResult
    fullName: EventSubscriptionsListResult
    uid: azure-arm-eventgrid.EventSubscriptionsListResult
  - name: '>>'
    fullName: '>>'
