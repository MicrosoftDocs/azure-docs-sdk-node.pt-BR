### YamlMime:UniversalReference
ms.openlocfilehash: 7c2dfbab1c576990af177af1ee0b291812f4960d
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 08/12/2018
ms.locfileid: "40050922"
items:
- uid: azure-arm-commerce.RateCard
  name: RateCard
  fullName: RateCard
  children:
  - azure-arm-commerce.RateCard.get
  - azure-arm-commerce.RateCard.get_1
  - azure-arm-commerce.RateCard.get_2
  - azure-arm-commerce.RateCard.getWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-commerce
- uid: azure-arm-commerce.RateCard.get
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: Permite que você para consultar os metadados de recurso/medidor e os preços relacionados usados em uma determinada assinatura por ID da oferta, moeda, localidade e região. Os metadados associados com os medidores de cobrança, incluindo, mas não limitado para nomes de serviço, tipos, recursos, unidades de medida e regiões, estão sujeitas a alterações a qualquer momento e sem aviso prévio. Se você pretende usar esses dados de cobrança de forma automática, use o GUID do medidor de faturamento para identificar exclusivamente cada item faturável. Se o GUID do medidor de faturamento é agendado para alterar devido a um novo modelo de cobrança, você será notificado com antecedência sobre a alteração.
  syntax:
    content: 'function get(filter: string, options?: function)'
    parameters:
    - id: filter
      type:
      - string
      description: >
        O filtro para aplicar a operação. Ele dá suporte apenas a 'eq' e 'e' operadores lógicos neste momento. Todos os 4 parâmetros de consulta 'OfferDurableId', 'Currency', 'Local', 'Region' deve ser uma parte do $filter.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-commerce.ResourceRateCardInfo>
  package: azure-arm-commerce
- uid: azure-arm-commerce.RateCard.get_1
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: Permite que você para consultar os metadados de recurso/medidor e os preços relacionados usados em uma determinada assinatura por ID da oferta, moeda, localidade e região. Os metadados associados com os medidores de cobrança, incluindo, mas não limitado para nomes de serviço, tipos, recursos, unidades de medida e regiões, estão sujeitas a alterações a qualquer momento e sem aviso prévio. Se você pretende usar esses dados de cobrança de forma automática, use o GUID do medidor de faturamento para identificar exclusivamente cada item faturável. Se o GUID do medidor de faturamento é agendado para alterar devido a um novo modelo de cobrança, você será notificado com antecedência sobre a alteração.
  syntax:
    content: 'function get(filter: string, callback: ServiceCallback<ResourceRateCardInfo>)'
    parameters:
    - id: filter
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-commerce.ResourceRateCardInfo>
      description: ''
    return:
      type:
      - Promise<azure-arm-commerce.ResourceRateCardInfo>
  package: azure-arm-commerce
- uid: azure-arm-commerce.RateCard.get_2
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: Permite que você para consultar os metadados de recurso/medidor e os preços relacionados usados em uma determinada assinatura por ID da oferta, moeda, localidade e região. Os metadados associados com os medidores de cobrança, incluindo, mas não limitado para nomes de serviço, tipos, recursos, unidades de medida e regiões, estão sujeitas a alterações a qualquer momento e sem aviso prévio. Se você pretende usar esses dados de cobrança de forma automática, use o GUID do medidor de faturamento para identificar exclusivamente cada item faturável. Se o GUID do medidor de faturamento é agendado para alterar devido a um novo modelo de cobrança, você será notificado com antecedência sobre a alteração.
  syntax:
    content: 'function get(filter: string, options: function, callback: ServiceCallback<ResourceRateCardInfo>)'
    parameters:
    - id: filter
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-commerce.ResourceRateCardInfo>
      description: ''
    return:
      type:
      - Promise<azure-arm-commerce.ResourceRateCardInfo>
  package: azure-arm-commerce
- uid: azure-arm-commerce.RateCard.getWithHttpOperationResponse
  name: getWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Permite que você para consultar os metadados de recurso/medidor e os preços relacionados usados em uma determinada assinatura por ID da oferta, moeda, localidade e região. Os metadados associados com os medidores de cobrança, incluindo, mas não limitado para nomes de serviço, tipos, recursos, unidades de medida e regiões, estão sujeitas a alterações a qualquer momento e sem aviso prévio. Se você pretende usar esses dados de cobrança de forma automática, use o GUID do medidor de faturamento para identificar exclusivamente cada item faturável. Se o GUID do medidor de faturamento é agendado para alterar devido a um novo modelo de cobrança, você será notificado com antecedência sobre a alteração.
  syntax:
    content: 'function getWithHttpOperationResponse(filter: string, options?: function)'
    parameters:
    - id: filter
      type:
      - string
      description: >
        O filtro para aplicar a operação. Ele dá suporte apenas a 'eq' e 'e' operadores lógicos neste momento. Todos os 4 parâmetros de consulta 'OfferDurableId', 'Currency', 'Local', 'Region' deve ser uma parte do $filter.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-commerce.ResourceRateCardInfo>>
  package: azure-arm-commerce
references:
- uid: Promise<azure-arm-commerce.ResourceRateCardInfo>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ResourceRateCardInfo
    fullName: ResourceRateCardInfo
    uid: azure-arm-commerce.ResourceRateCardInfo
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-commerce.ResourceRateCardInfo>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ResourceRateCardInfo
    fullName: ResourceRateCardInfo
    uid: azure-arm-commerce.ResourceRateCardInfo
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-commerce.ResourceRateCardInfo>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ResourceRateCardInfo
    fullName: ResourceRateCardInfo
    uid: azure-arm-commerce.ResourceRateCardInfo
  - name: '>>'
    fullName: '>>'
