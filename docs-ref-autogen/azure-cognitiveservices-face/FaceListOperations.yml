### YamlMime:UniversalReference
ms.openlocfilehash: e2d905a200190804df26d4317afebcd13d535944
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52168481"
items:
- uid: azure-cognitiveservices-face.FaceListOperations
  name: FaceListOperations
  fullName: FaceListOperations
  children:
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromStream
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromStream_2
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromStream_1
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromStreamWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromUrl
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromUrl_2
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromUrl_1
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromUrlWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.create
  - azure-cognitiveservices-face.FaceListOperations.create_2
  - azure-cognitiveservices-face.FaceListOperations.create_1
  - azure-cognitiveservices-face.FaceListOperations.createWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.deleteFace
  - azure-cognitiveservices-face.FaceListOperations.deleteFace_2
  - azure-cognitiveservices-face.FaceListOperations.deleteFace_1
  - azure-cognitiveservices-face.FaceListOperations.deleteFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.deleteMethod
  - azure-cognitiveservices-face.FaceListOperations.deleteMethod_2
  - azure-cognitiveservices-face.FaceListOperations.deleteMethod_1
  - azure-cognitiveservices-face.FaceListOperations.deleteMethodWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.get
  - azure-cognitiveservices-face.FaceListOperations.get_2
  - azure-cognitiveservices-face.FaceListOperations.get_1
  - azure-cognitiveservices-face.FaceListOperations.getWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.list
  - azure-cognitiveservices-face.FaceListOperations.list_2
  - azure-cognitiveservices-face.FaceListOperations.list_1
  - azure-cognitiveservices-face.FaceListOperations.listWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.update
  - azure-cognitiveservices-face.FaceListOperations.update_2
  - azure-cognitiveservices-face.FaceListOperations.update_1
  - azure-cognitiveservices-face.FaceListOperations.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromStream
  name: addFaceFromStream(string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4f962-101">Adicione uma face a uma lista de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-101">Add a face to a face list.</span></span> <span data-ttu-id="4f962-102">A face de entrada é especificada como uma imagem com um retângulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="4f962-102">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="4f962-103">Ele retorna um persistedFaceId que representa a face adicional e persistedFaceId não expiram.</span><span class="sxs-lookup"><span data-stu-id="4f962-103">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(faceListId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="4f962-104">ID fazendo referência a uma lista específica de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-104">Id referencing a particular face list.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="4f962-105">Um fluxo de imagem.</span><span class="sxs-lookup"><span data-stu-id="4f962-105">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromStream_2
  name: addFaceFromStream(string, stream.Readable, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4f962-106">Adicione uma face a uma lista de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-106">Add a face to a face list.</span></span> <span data-ttu-id="4f962-107">A face de entrada é especificada como uma imagem com um retângulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="4f962-107">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="4f962-108">Ele retorna um persistedFaceId que representa a face adicional e persistedFaceId não expiram.</span><span class="sxs-lookup"><span data-stu-id="4f962-108">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(faceListId: string, image: stream.Readable, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromStream_1
  name: addFaceFromStream(string, stream.Readable, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4f962-109">Adicione uma face a uma lista de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-109">Add a face to a face list.</span></span> <span data-ttu-id="4f962-110">A face de entrada é especificada como uma imagem com um retângulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="4f962-110">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="4f962-111">Ele retorna um persistedFaceId que representa a face adicional e persistedFaceId não expiram.</span><span class="sxs-lookup"><span data-stu-id="4f962-111">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(faceListId: string, image: stream.Readable, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromStreamWithHttpOperationResponse
  name: addFaceFromStreamWithHttpOperationResponse(string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4f962-112">Adicione uma face a uma lista de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-112">Add a face to a face list.</span></span> <span data-ttu-id="4f962-113">A face de entrada é especificada como uma imagem com um retângulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="4f962-113">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="4f962-114">Ele retorna um persistedFaceId que representa a face adicional e persistedFaceId não expiram.</span><span class="sxs-lookup"><span data-stu-id="4f962-114">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStreamWithHttpOperationResponse(faceListId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="4f962-115">ID fazendo referência a uma lista específica de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-115">Id referencing a particular face list.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="4f962-116">Um fluxo de imagem.</span><span class="sxs-lookup"><span data-stu-id="4f962-116">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromUrl
  name: addFaceFromUrl(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4f962-117">Adicione uma face a uma lista de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-117">Add a face to a face list.</span></span> <span data-ttu-id="4f962-118">A face de entrada é especificada como uma imagem com um retângulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="4f962-118">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="4f962-119">Ele retorna um persistedFaceId que representa a face adicional e persistedFaceId não expiram.</span><span class="sxs-lookup"><span data-stu-id="4f962-119">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrl(faceListId: string, url: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="4f962-120">ID fazendo referência a uma lista específica de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-120">Id referencing a particular face list.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="4f962-121">URL publicamente acessível de uma imagem</span><span class="sxs-lookup"><span data-stu-id="4f962-121">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromUrl_2
  name: addFaceFromUrl(string, string, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4f962-122">Adicione uma face a uma lista de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-122">Add a face to a face list.</span></span> <span data-ttu-id="4f962-123">A face de entrada é especificada como uma imagem com um retângulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="4f962-123">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="4f962-124">Ele retorna um persistedFaceId que representa a face adicional e persistedFaceId não expiram.</span><span class="sxs-lookup"><span data-stu-id="4f962-124">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrl(faceListId: string, url: string, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromUrl_1
  name: addFaceFromUrl(string, string, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4f962-125">Adicione uma face a uma lista de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-125">Add a face to a face list.</span></span> <span data-ttu-id="4f962-126">A face de entrada é especificada como uma imagem com um retângulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="4f962-126">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="4f962-127">Ele retorna um persistedFaceId que representa a face adicional e persistedFaceId não expiram.</span><span class="sxs-lookup"><span data-stu-id="4f962-127">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrl(faceListId: string, url: string, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromUrlWithHttpOperationResponse
  name: addFaceFromUrlWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4f962-128">Adicione uma face a uma lista de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-128">Add a face to a face list.</span></span> <span data-ttu-id="4f962-129">A face de entrada é especificada como uma imagem com um retângulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="4f962-129">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="4f962-130">Ele retorna um persistedFaceId que representa a face adicional e persistedFaceId não expiram.</span><span class="sxs-lookup"><span data-stu-id="4f962-130">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrlWithHttpOperationResponse(faceListId: string, url: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="4f962-131">ID fazendo referência a uma lista específica de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-131">Id referencing a particular face list.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="4f962-132">URL publicamente acessível de uma imagem</span><span class="sxs-lookup"><span data-stu-id="4f962-132">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.create
  name: create(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4f962-133">Crie uma lista vazia de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-133">Create an empty face list.</span></span> <span data-ttu-id="4f962-134">Até 64 face listas são permitidas para existir em uma assinatura.</span><span class="sxs-lookup"><span data-stu-id="4f962-134">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="4f962-135">ID fazendo referência a uma lista específica de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-135">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.create_2
  name: create(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4f962-136">Crie uma lista vazia de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-136">Create an empty face list.</span></span> <span data-ttu-id="4f962-137">Até 64 face listas são permitidas para existir em uma assinatura.</span><span class="sxs-lookup"><span data-stu-id="4f962-137">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(faceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.create_1
  name: create(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4f962-138">Crie uma lista vazia de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-138">Create an empty face list.</span></span> <span data-ttu-id="4f962-139">Até 64 face listas são permitidas para existir em uma assinatura.</span><span class="sxs-lookup"><span data-stu-id="4f962-139">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(faceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.createWithHttpOperationResponse
  name: createWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4f962-140">Crie uma lista vazia de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-140">Create an empty face list.</span></span> <span data-ttu-id="4f962-141">Até 64 face listas são permitidas para existir em uma assinatura.</span><span class="sxs-lookup"><span data-stu-id="4f962-141">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function createWithHttpOperationResponse(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="4f962-142">ID fazendo referência a uma lista específica de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-142">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteFace
  name: deleteFace(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4f962-143">Exclua uma face existente de uma lista de face (fornecida por um persisitedFaceId e um faceListId).</span><span class="sxs-lookup"><span data-stu-id="4f962-143">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="4f962-144">Imagem persistida relacionada à face também será excluída.</span><span class="sxs-lookup"><span data-stu-id="4f962-144">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(faceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="4f962-145">ID fazendo referência a uma lista específica de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-145">Id referencing a particular face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="4f962-146">ID referenciando um persistedFaceId específico de uma face existente.</span><span class="sxs-lookup"><span data-stu-id="4f962-146">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteFace_2
  name: deleteFace(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4f962-147">Exclua uma face existente de uma lista de face (fornecida por um persisitedFaceId e um faceListId).</span><span class="sxs-lookup"><span data-stu-id="4f962-147">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="4f962-148">Imagem persistida relacionada à face também será excluída.</span><span class="sxs-lookup"><span data-stu-id="4f962-148">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(faceListId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteFace_1
  name: deleteFace(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4f962-149">Exclua uma face existente de uma lista de face (fornecida por um persisitedFaceId e um faceListId).</span><span class="sxs-lookup"><span data-stu-id="4f962-149">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="4f962-150">Imagem persistida relacionada à face também será excluída.</span><span class="sxs-lookup"><span data-stu-id="4f962-150">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(faceListId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteFaceWithHttpOperationResponse
  name: deleteFaceWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4f962-151">Exclua uma face existente de uma lista de face (fornecida por um persisitedFaceId e um faceListId).</span><span class="sxs-lookup"><span data-stu-id="4f962-151">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="4f962-152">Imagem persistida relacionada à face também será excluída.</span><span class="sxs-lookup"><span data-stu-id="4f962-152">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFaceWithHttpOperationResponse(faceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="4f962-153">ID fazendo referência a uma lista específica de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-153">Id referencing a particular face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="4f962-154">ID referenciando um persistedFaceId específico de uma face existente.</span><span class="sxs-lookup"><span data-stu-id="4f962-154">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteMethod
  name: deleteMethod(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4f962-155">Exclua uma lista existente de face de acordo com a faceListId.</span><span class="sxs-lookup"><span data-stu-id="4f962-155">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="4f962-156">Persistentes face imagens na lista de face também serão excluídas.</span><span class="sxs-lookup"><span data-stu-id="4f962-156">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="4f962-157">ID fazendo referência a uma lista específica de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-157">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteMethod_2
  name: deleteMethod(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4f962-158">Exclua uma lista existente de face de acordo com a faceListId.</span><span class="sxs-lookup"><span data-stu-id="4f962-158">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="4f962-159">Persistentes face imagens na lista de face também serão excluídas.</span><span class="sxs-lookup"><span data-stu-id="4f962-159">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(faceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteMethod_1
  name: deleteMethod(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4f962-160">Exclua uma lista existente de face de acordo com a faceListId.</span><span class="sxs-lookup"><span data-stu-id="4f962-160">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="4f962-161">Persistentes face imagens na lista de face também serão excluídas.</span><span class="sxs-lookup"><span data-stu-id="4f962-161">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(faceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4f962-162">Exclua uma lista existente de face de acordo com a faceListId.</span><span class="sxs-lookup"><span data-stu-id="4f962-162">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="4f962-163">Persistentes face imagens na lista de face também serão excluídas.</span><span class="sxs-lookup"><span data-stu-id="4f962-163">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="4f962-164">ID fazendo referência a uma lista específica de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-164">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.get
  name: get(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4f962-165">Recupere as informações da lista uma face.</span><span class="sxs-lookup"><span data-stu-id="4f962-165">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function get(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="4f962-166">ID fazendo referência a uma lista específica de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-166">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.FaceList>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.get_2
  name: get(string, Object, ServiceCallback<FaceList>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4f962-167">Recupere as informações da lista uma face.</span><span class="sxs-lookup"><span data-stu-id="4f962-167">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function get(faceListId: string, options: Object, callback: ServiceCallback<FaceList>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.FaceList>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.FaceList>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.get_1
  name: get(string, ServiceCallback<FaceList>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4f962-168">Recupere as informações da lista uma face.</span><span class="sxs-lookup"><span data-stu-id="4f962-168">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function get(faceListId: string, callback: ServiceCallback<FaceList>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.FaceList>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.FaceList>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.getWithHttpOperationResponse
  name: getWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4f962-169">Recupere as informações da lista uma face.</span><span class="sxs-lookup"><span data-stu-id="4f962-169">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="4f962-170">ID fazendo referência a uma lista específica de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-170">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.FaceList>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.list
  name: list(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4f962-171">Recupere informações sobre todas as listas existentes de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-171">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="4f962-172">Somente faceListId, nome e userData serão retornados.</span><span class="sxs-lookup"><span data-stu-id="4f962-172">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.FaceList[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.list_2
  name: list(Object, ServiceCallback<FaceList[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4f962-173">Recupere informações sobre todas as listas existentes de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-173">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="4f962-174">Somente faceListId, nome e userData serão retornados.</span><span class="sxs-lookup"><span data-stu-id="4f962-174">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(options: Object, callback: ServiceCallback<FaceList[]>)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.FaceList[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.FaceList[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.list_1
  name: list(ServiceCallback<FaceList[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4f962-175">Recupere informações sobre todas as listas existentes de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-175">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="4f962-176">Somente faceListId, nome e userData serão retornados.</span><span class="sxs-lookup"><span data-stu-id="4f962-176">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(callback: ServiceCallback<FaceList[]>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.FaceList[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.FaceList[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.listWithHttpOperationResponse
  name: listWithHttpOperationResponse(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4f962-177">Recupere informações sobre todas as listas existentes de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-177">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="4f962-178">Somente faceListId, nome e userData serão retornados.</span><span class="sxs-lookup"><span data-stu-id="4f962-178">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function listWithHttpOperationResponse(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.FaceList[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.update
  name: update(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4f962-179">Atualize as informações de uma lista de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-179">Update information of a face list.</span></span>
  syntax:
    content: 'function update(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="4f962-180">ID fazendo referência a uma lista específica de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-180">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.update_2
  name: update(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4f962-181">Atualize as informações de uma lista de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-181">Update information of a face list.</span></span>
  syntax:
    content: 'function update(faceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.update_1
  name: update(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4f962-182">Atualize as informações de uma lista de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-182">Update information of a face list.</span></span>
  syntax:
    content: 'function update(faceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4f962-183">Atualize as informações de uma lista de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-183">Update information of a face list.</span></span>
  syntax:
    content: 'function updateWithHttpOperationResponse(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="4f962-184">ID fazendo referência a uma lista específica de face.</span><span class="sxs-lookup"><span data-stu-id="4f962-184">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  name: PersistedFace>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.FaceList>
  name: FaceList>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FaceList
    fullName: FaceList
    uid: azure-cognitiveservices-face.FaceList
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.FaceList>
  name: FaceList>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FaceList
    fullName: FaceList
    uid: azure-cognitiveservices-face.FaceList
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.FaceList>>
  name: FaceList>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FaceList
    fullName: FaceList
    uid: azure-cognitiveservices-face.FaceList
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.FaceList[]>
  name: FaceList[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FaceList
    fullName: FaceList
    uid: azure-cognitiveservices-face.FaceList
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.FaceList[]>
  name: FaceList[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FaceList
    fullName: FaceList
    uid: azure-cognitiveservices-face.FaceList
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.FaceList[]>>
  name: FaceList[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FaceList
    fullName: FaceList
    uid: azure-cognitiveservices-face.FaceList
  - name: '[]>>'
    fullName: '[]>>'
