### YamlMime:UniversalReference
ms.openlocfilehash: 2f68db2640bf5f18ec526b603a0c002bd8b3eb2f
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 08/12/2018
ms.locfileid: "40051091"
items:
- uid: azure-cognitiveservices-face.FaceList
  name: FaceList
  fullName: FaceList
  children:
  - azure-cognitiveservices-face.FaceList.addFace
  - azure-cognitiveservices-face.FaceList.addFace_1
  - azure-cognitiveservices-face.FaceList.addFace_2
  - azure-cognitiveservices-face.FaceList.addFaceFromStream_1
  - azure-cognitiveservices-face.FaceList.addFaceFromStream
  - azure-cognitiveservices-face.FaceList.addFaceFromStream_2
  - azure-cognitiveservices-face.FaceList.addFaceFromStreamWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.addFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.create_1
  - azure-cognitiveservices-face.FaceList.create
  - azure-cognitiveservices-face.FaceList.create_2
  - azure-cognitiveservices-face.FaceList.createWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.deleteFace
  - azure-cognitiveservices-face.FaceList.deleteFace_1
  - azure-cognitiveservices-face.FaceList.deleteFace_2
  - azure-cognitiveservices-face.FaceList.deleteFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.deleteMethod
  - azure-cognitiveservices-face.FaceList.deleteMethod_1
  - azure-cognitiveservices-face.FaceList.deleteMethod_2
  - azure-cognitiveservices-face.FaceList.deleteMethodWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.get_1
  - azure-cognitiveservices-face.FaceList.get_2
  - azure-cognitiveservices-face.FaceList.get
  - azure-cognitiveservices-face.FaceList.getWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.list
  - azure-cognitiveservices-face.FaceList.list_1
  - azure-cognitiveservices-face.FaceList.list_2
  - azure-cognitiveservices-face.FaceList.listWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.update
  - azure-cognitiveservices-face.FaceList.update_1
  - azure-cognitiveservices-face.FaceList.update_2
  - azure-cognitiveservices-face.FaceList.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFace
  name: addFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8a328-101">Adicione uma face a uma lista de face.</span><span class="sxs-lookup"><span data-stu-id="8a328-101">Add a face to a face list.</span></span> <span data-ttu-id="8a328-102">A face de entrada é especificada como uma imagem com um retângulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="8a328-102">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="8a328-103">Ele retorna um persistedFaceId que representa a face adicional e persistedFaceId não expiram.</span><span class="sxs-lookup"><span data-stu-id="8a328-103">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFace(faceListId: string, url: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="8a328-104">ID fazendo referência a uma lista de Face.</span><span class="sxs-lookup"><span data-stu-id="8a328-104">Id referencing a Face List.</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFace_1
  name: addFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8a328-105">Adicione uma face a uma lista de face.</span><span class="sxs-lookup"><span data-stu-id="8a328-105">Add a face to a face list.</span></span> <span data-ttu-id="8a328-106">A face de entrada é especificada como uma imagem com um retângulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="8a328-106">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="8a328-107">Ele retorna um persistedFaceId que representa a face adicional e persistedFaceId não expiram.</span><span class="sxs-lookup"><span data-stu-id="8a328-107">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFace(faceListId: string, url: string, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFace_2
  name: addFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8a328-108">Adicione uma face a uma lista de face.</span><span class="sxs-lookup"><span data-stu-id="8a328-108">Add a face to a face list.</span></span> <span data-ttu-id="8a328-109">A face de entrada é especificada como uma imagem com um retângulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="8a328-109">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="8a328-110">Ele retorna um persistedFaceId que representa a face adicional e persistedFaceId não expiram.</span><span class="sxs-lookup"><span data-stu-id="8a328-110">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFace(faceListId: string, url: string, options: function, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFaceFromStream_1
  name: addFaceFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8a328-111">Adicione uma face a uma lista de face.</span><span class="sxs-lookup"><span data-stu-id="8a328-111">Add a face to a face list.</span></span> <span data-ttu-id="8a328-112">A face de entrada é especificada como uma imagem com um retângulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="8a328-112">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="8a328-113">Ele retorna um persistedFaceId que representa a face adicional e persistedFaceId não expiram.</span><span class="sxs-lookup"><span data-stu-id="8a328-113">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(faceListId: string, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFaceFromStream
  name: addFaceFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8a328-114">Adicione uma face a uma lista de face.</span><span class="sxs-lookup"><span data-stu-id="8a328-114">Add a face to a face list.</span></span> <span data-ttu-id="8a328-115">A face de entrada é especificada como uma imagem com um retângulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="8a328-115">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="8a328-116">Ele retorna um persistedFaceId que representa a face adicional e persistedFaceId não expiram.</span><span class="sxs-lookup"><span data-stu-id="8a328-116">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="8a328-117">ID fazendo referência a uma lista de Face.</span><span class="sxs-lookup"><span data-stu-id="8a328-117">Id referencing a Face List.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFaceFromStream_2
  name: addFaceFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8a328-118">Adicione uma face a uma lista de face.</span><span class="sxs-lookup"><span data-stu-id="8a328-118">Add a face to a face list.</span></span> <span data-ttu-id="8a328-119">A face de entrada é especificada como uma imagem com um retângulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="8a328-119">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="8a328-120">Ele retorna um persistedFaceId que representa a face adicional e persistedFaceId não expiram.</span><span class="sxs-lookup"><span data-stu-id="8a328-120">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(faceListId: string, options: function, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFaceFromStreamWithHttpOperationResponse
  name: addFaceFromStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8a328-121">Adicione uma face a uma lista de face.</span><span class="sxs-lookup"><span data-stu-id="8a328-121">Add a face to a face list.</span></span> <span data-ttu-id="8a328-122">A face de entrada é especificada como uma imagem com um retângulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="8a328-122">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="8a328-123">Ele retorna um persistedFaceId que representa a face adicional e persistedFaceId não expiram.</span><span class="sxs-lookup"><span data-stu-id="8a328-123">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStreamWithHttpOperationResponse(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="8a328-124">ID fazendo referência a uma lista de Face.</span><span class="sxs-lookup"><span data-stu-id="8a328-124">Id referencing a Face List.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFaceWithHttpOperationResponse
  name: addFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8a328-125">Adicione uma face a uma lista de face.</span><span class="sxs-lookup"><span data-stu-id="8a328-125">Add a face to a face list.</span></span> <span data-ttu-id="8a328-126">A face de entrada é especificada como uma imagem com um retângulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="8a328-126">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="8a328-127">Ele retorna um persistedFaceId que representa a face adicional e persistedFaceId não expiram.</span><span class="sxs-lookup"><span data-stu-id="8a328-127">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceWithHttpOperationResponse(faceListId: string, url: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="8a328-128">ID fazendo referência a uma lista de Face.</span><span class="sxs-lookup"><span data-stu-id="8a328-128">Id referencing a Face List.</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.create_1
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8a328-129">Crie uma lista vazia de face.</span><span class="sxs-lookup"><span data-stu-id="8a328-129">Create an empty face list.</span></span> <span data-ttu-id="8a328-130">Até 64 face listas são permitidas para existir em uma assinatura.</span><span class="sxs-lookup"><span data-stu-id="8a328-130">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(faceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.create
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8a328-131">Crie uma lista vazia de face.</span><span class="sxs-lookup"><span data-stu-id="8a328-131">Create an empty face list.</span></span> <span data-ttu-id="8a328-132">Até 64 face listas são permitidas para existir em uma assinatura.</span><span class="sxs-lookup"><span data-stu-id="8a328-132">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="8a328-133">ID fazendo referência a uma lista específica de face.</span><span class="sxs-lookup"><span data-stu-id="8a328-133">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.create_2
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8a328-134">Crie uma lista vazia de face.</span><span class="sxs-lookup"><span data-stu-id="8a328-134">Create an empty face list.</span></span> <span data-ttu-id="8a328-135">Até 64 face listas são permitidas para existir em uma assinatura.</span><span class="sxs-lookup"><span data-stu-id="8a328-135">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(faceListId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.createWithHttpOperationResponse
  name: createWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8a328-136">Crie uma lista vazia de face.</span><span class="sxs-lookup"><span data-stu-id="8a328-136">Create an empty face list.</span></span> <span data-ttu-id="8a328-137">Até 64 face listas são permitidas para existir em uma assinatura.</span><span class="sxs-lookup"><span data-stu-id="8a328-137">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function createWithHttpOperationResponse(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="8a328-138">ID fazendo referência a uma lista específica de face.</span><span class="sxs-lookup"><span data-stu-id="8a328-138">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteFace
  name: deleteFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8a328-139">Exclua uma face existente de uma lista de face (fornecida por um persisitedFaceId e um faceListId).</span><span class="sxs-lookup"><span data-stu-id="8a328-139">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="8a328-140">Imagem persistida relacionada à face também será excluída.</span><span class="sxs-lookup"><span data-stu-id="8a328-140">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(faceListId: string, persistedFaceId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="8a328-141">faceListId de uma lista existente de face.</span><span class="sxs-lookup"><span data-stu-id="8a328-141">faceListId of an existing face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="8a328-142">persistedFaceId de uma face existente.</span><span class="sxs-lookup"><span data-stu-id="8a328-142">persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteFace_1
  name: deleteFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8a328-143">Exclua uma face existente de uma lista de face (fornecida por um persisitedFaceId e um faceListId).</span><span class="sxs-lookup"><span data-stu-id="8a328-143">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="8a328-144">Imagem persistida relacionada à face também será excluída.</span><span class="sxs-lookup"><span data-stu-id="8a328-144">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(faceListId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteFace_2
  name: deleteFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8a328-145">Exclua uma face existente de uma lista de face (fornecida por um persisitedFaceId e um faceListId).</span><span class="sxs-lookup"><span data-stu-id="8a328-145">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="8a328-146">Imagem persistida relacionada à face também será excluída.</span><span class="sxs-lookup"><span data-stu-id="8a328-146">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(faceListId: string, persistedFaceId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteFaceWithHttpOperationResponse
  name: deleteFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8a328-147">Exclua uma face existente de uma lista de face (fornecida por um persisitedFaceId e um faceListId).</span><span class="sxs-lookup"><span data-stu-id="8a328-147">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="8a328-148">Imagem persistida relacionada à face também será excluída.</span><span class="sxs-lookup"><span data-stu-id="8a328-148">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFaceWithHttpOperationResponse(faceListId: string, persistedFaceId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="8a328-149">faceListId de uma lista existente de face.</span><span class="sxs-lookup"><span data-stu-id="8a328-149">faceListId of an existing face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="8a328-150">persistedFaceId de uma face existente.</span><span class="sxs-lookup"><span data-stu-id="8a328-150">persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteMethod
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8a328-151">Exclua uma lista existente de face de acordo com a faceListId.</span><span class="sxs-lookup"><span data-stu-id="8a328-151">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="8a328-152">Persistentes face imagens na lista de face também serão excluídas.</span><span class="sxs-lookup"><span data-stu-id="8a328-152">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="8a328-153">ID fazendo referência a uma lista de Face.</span><span class="sxs-lookup"><span data-stu-id="8a328-153">Id referencing a Face List.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteMethod_1
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8a328-154">Exclua uma lista existente de face de acordo com a faceListId.</span><span class="sxs-lookup"><span data-stu-id="8a328-154">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="8a328-155">Persistentes face imagens na lista de face também serão excluídas.</span><span class="sxs-lookup"><span data-stu-id="8a328-155">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(faceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteMethod_2
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8a328-156">Exclua uma lista existente de face de acordo com a faceListId.</span><span class="sxs-lookup"><span data-stu-id="8a328-156">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="8a328-157">Persistentes face imagens na lista de face também serão excluídas.</span><span class="sxs-lookup"><span data-stu-id="8a328-157">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(faceListId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8a328-158">Exclua uma lista existente de face de acordo com a faceListId.</span><span class="sxs-lookup"><span data-stu-id="8a328-158">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="8a328-159">Persistentes face imagens na lista de face também serão excluídas.</span><span class="sxs-lookup"><span data-stu-id="8a328-159">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="8a328-160">ID fazendo referência a uma lista de Face.</span><span class="sxs-lookup"><span data-stu-id="8a328-160">Id referencing a Face List.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.get_1
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8a328-161">Recupere as informações da lista uma face.</span><span class="sxs-lookup"><span data-stu-id="8a328-161">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function get(faceListId: string, callback: ServiceCallback<GetFaceListResult>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.GetFaceListResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.GetFaceListResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.get_2
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8a328-162">Recupere as informações da lista uma face.</span><span class="sxs-lookup"><span data-stu-id="8a328-162">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function get(faceListId: string, options: function, callback: ServiceCallback<GetFaceListResult>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.GetFaceListResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.GetFaceListResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.get
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8a328-163">Recupere as informações da lista uma face.</span><span class="sxs-lookup"><span data-stu-id="8a328-163">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function get(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="8a328-164">ID fazendo referência a uma lista de Face.</span><span class="sxs-lookup"><span data-stu-id="8a328-164">Id referencing a Face List.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.GetFaceListResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.getWithHttpOperationResponse
  name: getWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8a328-165">Recupere as informações da lista uma face.</span><span class="sxs-lookup"><span data-stu-id="8a328-165">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="8a328-166">ID fazendo referência a uma lista de Face.</span><span class="sxs-lookup"><span data-stu-id="8a328-166">Id referencing a Face List.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.GetFaceListResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.list
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8a328-167">Recupere informações sobre todas as listas existentes de face.</span><span class="sxs-lookup"><span data-stu-id="8a328-167">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="8a328-168">Somente faceListId, nome e userData serão retornados.</span><span class="sxs-lookup"><span data-stu-id="8a328-168">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.GetFaceListResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.list_1
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8a328-169">Recupere informações sobre todas as listas existentes de face.</span><span class="sxs-lookup"><span data-stu-id="8a328-169">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="8a328-170">Somente faceListId, nome e userData serão retornados.</span><span class="sxs-lookup"><span data-stu-id="8a328-170">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(callback: ServiceCallback<GetFaceListResult[]>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.GetFaceListResult[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.GetFaceListResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.list_2
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8a328-171">Recupere informações sobre todas as listas existentes de face.</span><span class="sxs-lookup"><span data-stu-id="8a328-171">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="8a328-172">Somente faceListId, nome e userData serão retornados.</span><span class="sxs-lookup"><span data-stu-id="8a328-172">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(options: function, callback: ServiceCallback<GetFaceListResult[]>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.GetFaceListResult[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.GetFaceListResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.listWithHttpOperationResponse
  name: listWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8a328-173">Recupere informações sobre todas as listas existentes de face.</span><span class="sxs-lookup"><span data-stu-id="8a328-173">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="8a328-174">Somente faceListId, nome e userData serão retornados.</span><span class="sxs-lookup"><span data-stu-id="8a328-174">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function listWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.GetFaceListResult[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.update
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8a328-175">Atualize as informações de uma lista de face.</span><span class="sxs-lookup"><span data-stu-id="8a328-175">Update information of a face list.</span></span>
  syntax:
    content: 'function update(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="8a328-176">ID fazendo referência a uma lista de Face.</span><span class="sxs-lookup"><span data-stu-id="8a328-176">Id referencing a Face List.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.update_1
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8a328-177">Atualize as informações de uma lista de face.</span><span class="sxs-lookup"><span data-stu-id="8a328-177">Update information of a face list.</span></span>
  syntax:
    content: 'function update(faceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.update_2
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8a328-178">Atualize as informações de uma lista de face.</span><span class="sxs-lookup"><span data-stu-id="8a328-178">Update information of a face list.</span></span>
  syntax:
    content: 'function update(faceListId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8a328-179">Atualize as informações de uma lista de face.</span><span class="sxs-lookup"><span data-stu-id="8a328-179">Update information of a face list.</span></span>
  syntax:
    content: 'function updateWithHttpOperationResponse(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="8a328-180">ID fazendo referência a uma lista de Face.</span><span class="sxs-lookup"><span data-stu-id="8a328-180">Id referencing a Face List.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.PersistedFaceResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersistedFaceResult
    fullName: PersistedFaceResult
    uid: azure-cognitiveservices-face.PersistedFaceResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersistedFaceResult
    fullName: PersistedFaceResult
    uid: azure-cognitiveservices-face.PersistedFaceResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersistedFaceResult
    fullName: PersistedFaceResult
    uid: azure-cognitiveservices-face.PersistedFaceResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.GetFaceListResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: GetFaceListResult
    fullName: GetFaceListResult
    uid: azure-cognitiveservices-face.GetFaceListResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.GetFaceListResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: GetFaceListResult
    fullName: GetFaceListResult
    uid: azure-cognitiveservices-face.GetFaceListResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.GetFaceListResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: GetFaceListResult
    fullName: GetFaceListResult
    uid: azure-cognitiveservices-face.GetFaceListResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.GetFaceListResult[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: GetFaceListResult
    fullName: GetFaceListResult
    uid: azure-cognitiveservices-face.GetFaceListResult
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.GetFaceListResult[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: GetFaceListResult
    fullName: GetFaceListResult
    uid: azure-cognitiveservices-face.GetFaceListResult
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.GetFaceListResult[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: GetFaceListResult
    fullName: GetFaceListResult
    uid: azure-cognitiveservices-face.GetFaceListResult
  - name: '[]>>'
    fullName: '[]>>'
