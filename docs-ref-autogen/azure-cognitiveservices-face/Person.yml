### YamlMime:UniversalReference
ms.openlocfilehash: 2c5dc4613b6576877b90e42f2a0c2b54bfb52838
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 08/12/2018
ms.locfileid: "40047986"
items:
- uid: azure-cognitiveservices-face.Person
  name: Person
  fullName: Person
  children:
  - azure-cognitiveservices-face.Person.addPersonFace
  - azure-cognitiveservices-face.Person.addPersonFace_1
  - azure-cognitiveservices-face.Person.addPersonFace_2
  - azure-cognitiveservices-face.Person.addPersonFaceFromStream_1
  - azure-cognitiveservices-face.Person.addPersonFaceFromStream
  - azure-cognitiveservices-face.Person.addPersonFaceFromStream_2
  - azure-cognitiveservices-face.Person.addPersonFaceFromStreamWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.addPersonFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.create
  - azure-cognitiveservices-face.Person.create_1
  - azure-cognitiveservices-face.Person.create_2
  - azure-cognitiveservices-face.Person.createWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.deleteFace_1
  - azure-cognitiveservices-face.Person.deleteFace_2
  - azure-cognitiveservices-face.Person.deleteFace
  - azure-cognitiveservices-face.Person.deleteFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.deleteMethod
  - azure-cognitiveservices-face.Person.deleteMethod_1
  - azure-cognitiveservices-face.Person.deleteMethod_2
  - azure-cognitiveservices-face.Person.deleteMethodWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.get
  - azure-cognitiveservices-face.Person.get_1
  - azure-cognitiveservices-face.Person.get_2
  - azure-cognitiveservices-face.Person.getFace
  - azure-cognitiveservices-face.Person.getFace_2
  - azure-cognitiveservices-face.Person.getFace_1
  - azure-cognitiveservices-face.Person.getFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.getWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.list
  - azure-cognitiveservices-face.Person.list_1
  - azure-cognitiveservices-face.Person.list_2
  - azure-cognitiveservices-face.Person.listWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.update
  - azure-cognitiveservices-face.Person.update_1
  - azure-cognitiveservices-face.Person.update_2
  - azure-cognitiveservices-face.Person.updateFace
  - azure-cognitiveservices-face.Person.updateFace_1
  - azure-cognitiveservices-face.Person.updateFace_2
  - azure-cognitiveservices-face.Person.updateFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFace
  name: addPersonFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-101">Adicione uma face representativa para uma pessoa para identificação.</span><span class="sxs-lookup"><span data-stu-id="ba347-101">Add a representative face to a person for identification.</span></span> <span data-ttu-id="ba347-102">A face de entrada é especificada como uma imagem com um retângulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="ba347-102">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFace(personGroupId: string, personId: string, url: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-103">Especificando o grupo de pessoas que contém a pessoa de destino.</span><span class="sxs-lookup"><span data-stu-id="ba347-103">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-104">Pessoa de destino que a face é adicionada ao.</span><span class="sxs-lookup"><span data-stu-id="ba347-104">Target person that the face is added to.</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFace_1
  name: addPersonFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-105">Adicione uma face representativa para uma pessoa para identificação.</span><span class="sxs-lookup"><span data-stu-id="ba347-105">Add a representative face to a person for identification.</span></span> <span data-ttu-id="ba347-106">A face de entrada é especificada como uma imagem com um retângulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="ba347-106">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFace(personGroupId: string, personId: string, url: string, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFace_2
  name: addPersonFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-107">Adicione uma face representativa para uma pessoa para identificação.</span><span class="sxs-lookup"><span data-stu-id="ba347-107">Add a representative face to a person for identification.</span></span> <span data-ttu-id="ba347-108">A face de entrada é especificada como uma imagem com um retângulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="ba347-108">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFace(personGroupId: string, personId: string, url: string, options: function, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFaceFromStream_1
  name: addPersonFaceFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-109">Adicione uma face representativa para uma pessoa para identificação.</span><span class="sxs-lookup"><span data-stu-id="ba347-109">Add a representative face to a person for identification.</span></span> <span data-ttu-id="ba347-110">A face de entrada é especificada como uma imagem com um retângulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="ba347-110">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFaceFromStream(personGroupId: string, personId: string, image: stream.Readable, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFaceFromStream
  name: addPersonFaceFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-111">Adicione uma face representativa para uma pessoa para identificação.</span><span class="sxs-lookup"><span data-stu-id="ba347-111">Add a representative face to a person for identification.</span></span> <span data-ttu-id="ba347-112">A face de entrada é especificada como uma imagem com um retângulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="ba347-112">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFaceFromStream(personGroupId: string, personId: string, image: stream.Readable, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-113">Especificando o grupo de pessoas que contém a pessoa de destino.</span><span class="sxs-lookup"><span data-stu-id="ba347-113">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-114">Pessoa de destino que a face é adicionada ao.</span><span class="sxs-lookup"><span data-stu-id="ba347-114">Target person that the face is added to.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="ba347-115">Um fluxo de imagem.</span><span class="sxs-lookup"><span data-stu-id="ba347-115">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFaceFromStream_2
  name: addPersonFaceFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-116">Adicione uma face representativa para uma pessoa para identificação.</span><span class="sxs-lookup"><span data-stu-id="ba347-116">Add a representative face to a person for identification.</span></span> <span data-ttu-id="ba347-117">A face de entrada é especificada como uma imagem com um retângulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="ba347-117">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFaceFromStream(personGroupId: string, personId: string, image: stream.Readable, options: function, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFaceFromStreamWithHttpOperationResponse
  name: addPersonFaceFromStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-118">Adicione uma face representativa para uma pessoa para identificação.</span><span class="sxs-lookup"><span data-stu-id="ba347-118">Add a representative face to a person for identification.</span></span> <span data-ttu-id="ba347-119">A face de entrada é especificada como uma imagem com um retângulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="ba347-119">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFaceFromStreamWithHttpOperationResponse(personGroupId: string, personId: string, image: stream.Readable, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-120">Especificando o grupo de pessoas que contém a pessoa de destino.</span><span class="sxs-lookup"><span data-stu-id="ba347-120">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-121">Pessoa de destino que a face é adicionada ao.</span><span class="sxs-lookup"><span data-stu-id="ba347-121">Target person that the face is added to.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="ba347-122">Um fluxo de imagem.</span><span class="sxs-lookup"><span data-stu-id="ba347-122">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFaceWithHttpOperationResponse
  name: addPersonFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-123">Adicione uma face representativa para uma pessoa para identificação.</span><span class="sxs-lookup"><span data-stu-id="ba347-123">Add a representative face to a person for identification.</span></span> <span data-ttu-id="ba347-124">A face de entrada é especificada como uma imagem com um retângulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="ba347-124">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFaceWithHttpOperationResponse(personGroupId: string, personId: string, url: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-125">Especificando o grupo de pessoas que contém a pessoa de destino.</span><span class="sxs-lookup"><span data-stu-id="ba347-125">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-126">Pessoa de destino que a face é adicionada ao.</span><span class="sxs-lookup"><span data-stu-id="ba347-126">Target person that the face is added to.</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.create
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-127">Crie uma nova pessoa em um grupo de pessoa especificada.</span><span class="sxs-lookup"><span data-stu-id="ba347-127">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function create(personGroupId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-128">Especificando o grupo da pessoa de destino para criar a pessoa.</span><span class="sxs-lookup"><span data-stu-id="ba347-128">Specifying the target person group to create the person.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.CreatePersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.create_1
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-129">Crie uma nova pessoa em um grupo de pessoa especificada.</span><span class="sxs-lookup"><span data-stu-id="ba347-129">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function create(personGroupId: string, callback: ServiceCallback<CreatePersonResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.CreatePersonResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.CreatePersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.create_2
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-130">Crie uma nova pessoa em um grupo de pessoa especificada.</span><span class="sxs-lookup"><span data-stu-id="ba347-130">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function create(personGroupId: string, options: function, callback: ServiceCallback<CreatePersonResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.CreatePersonResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.CreatePersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.createWithHttpOperationResponse
  name: createWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-131">Crie uma nova pessoa em um grupo de pessoa especificada.</span><span class="sxs-lookup"><span data-stu-id="ba347-131">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function createWithHttpOperationResponse(personGroupId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-132">Especificando o grupo da pessoa de destino para criar a pessoa.</span><span class="sxs-lookup"><span data-stu-id="ba347-132">Specifying the target person group to create the person.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.CreatePersonResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteFace_1
  name: deleteFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-133">Exclua uma face de uma pessoa.</span><span class="sxs-lookup"><span data-stu-id="ba347-133">Delete a face from a person.</span></span> <span data-ttu-id="ba347-134">Imagens relativo para a face persistente também serão excluídas.</span><span class="sxs-lookup"><span data-stu-id="ba347-134">Relative image for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteFace_2
  name: deleteFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-135">Exclua uma face de uma pessoa.</span><span class="sxs-lookup"><span data-stu-id="ba347-135">Delete a face from a person.</span></span> <span data-ttu-id="ba347-136">Imagens relativo para a face persistente também serão excluídas.</span><span class="sxs-lookup"><span data-stu-id="ba347-136">Relative image for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteFace
  name: deleteFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-137">Exclua uma face de uma pessoa.</span><span class="sxs-lookup"><span data-stu-id="ba347-137">Delete a face from a person.</span></span> <span data-ttu-id="ba347-138">Imagens relativo para a face persistente também serão excluídas.</span><span class="sxs-lookup"><span data-stu-id="ba347-138">Relative image for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-139">Especificando o grupo de pessoas que contém a pessoa de destino.</span><span class="sxs-lookup"><span data-stu-id="ba347-139">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-140">Especificando a pessoa que o destino persistente face pertencem a.</span><span class="sxs-lookup"><span data-stu-id="ba347-140">Specifying the person that the target persisted face belong to.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-141">A face persistente para remover.</span><span class="sxs-lookup"><span data-stu-id="ba347-141">The persisted face to remove.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteFaceWithHttpOperationResponse
  name: deleteFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-142">Exclua uma face de uma pessoa.</span><span class="sxs-lookup"><span data-stu-id="ba347-142">Delete a face from a person.</span></span> <span data-ttu-id="ba347-143">Imagens relativo para a face persistente também serão excluídas.</span><span class="sxs-lookup"><span data-stu-id="ba347-143">Relative image for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFaceWithHttpOperationResponse(personGroupId: string, personId: string, persistedFaceId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-144">Especificando o grupo de pessoas que contém a pessoa de destino.</span><span class="sxs-lookup"><span data-stu-id="ba347-144">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-145">Especificando a pessoa que o destino persistente face pertencem a.</span><span class="sxs-lookup"><span data-stu-id="ba347-145">Specifying the person that the target persisted face belong to.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-146">A face persistente para remover.</span><span class="sxs-lookup"><span data-stu-id="ba347-146">The persisted face to remove.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteMethod
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-147">Exclua uma pessoa existente de um grupo de pessoas.</span><span class="sxs-lookup"><span data-stu-id="ba347-147">Delete an existing person from a person group.</span></span> <span data-ttu-id="ba347-148">Persistentes face imagens da pessoa também serão excluídas.</span><span class="sxs-lookup"><span data-stu-id="ba347-148">Persisted face images of the person will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, personId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-149">Especificando o grupo de pessoas que contém a pessoa.</span><span class="sxs-lookup"><span data-stu-id="ba347-149">Specifying the person group containing the person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-150">O destino personId para excluir.</span><span class="sxs-lookup"><span data-stu-id="ba347-150">The target personId to delete.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteMethod_1
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-151">Exclua uma pessoa existente de um grupo de pessoas.</span><span class="sxs-lookup"><span data-stu-id="ba347-151">Delete an existing person from a person group.</span></span> <span data-ttu-id="ba347-152">Persistentes face imagens da pessoa também serão excluídas.</span><span class="sxs-lookup"><span data-stu-id="ba347-152">Persisted face images of the person will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, personId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteMethod_2
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-153">Exclua uma pessoa existente de um grupo de pessoas.</span><span class="sxs-lookup"><span data-stu-id="ba347-153">Delete an existing person from a person group.</span></span> <span data-ttu-id="ba347-154">Persistentes face imagens da pessoa também serão excluídas.</span><span class="sxs-lookup"><span data-stu-id="ba347-154">Persisted face images of the person will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, personId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-155">Exclua uma pessoa existente de um grupo de pessoas.</span><span class="sxs-lookup"><span data-stu-id="ba347-155">Delete an existing person from a person group.</span></span> <span data-ttu-id="ba347-156">Persistentes face imagens da pessoa também serão excluídas.</span><span class="sxs-lookup"><span data-stu-id="ba347-156">Persisted face images of the person will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(personGroupId: string, personId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-157">Especificando o grupo de pessoas que contém a pessoa.</span><span class="sxs-lookup"><span data-stu-id="ba347-157">Specifying the person group containing the person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-158">O destino personId para excluir.</span><span class="sxs-lookup"><span data-stu-id="ba347-158">The target personId to delete.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.get
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-159">Recupere informações de uma pessoa, incluindo dados do usuário, nome e registrados faces persistentes.</span><span class="sxs-lookup"><span data-stu-id="ba347-159">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, personId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-160">Especificando o grupo de pessoas que contém a pessoa de destino.</span><span class="sxs-lookup"><span data-stu-id="ba347-160">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-161">Especificando a pessoa de destino.</span><span class="sxs-lookup"><span data-stu-id="ba347-161">Specifying the target person.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.get_1
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-162">Recupere informações de uma pessoa, incluindo dados do usuário, nome e registrados faces persistentes.</span><span class="sxs-lookup"><span data-stu-id="ba347-162">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, personId: string, callback: ServiceCallback<PersonResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.get_2
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-163">Recupere informações de uma pessoa, incluindo dados do usuário, nome e registrados faces persistentes.</span><span class="sxs-lookup"><span data-stu-id="ba347-163">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, personId: string, options: function, callback: ServiceCallback<PersonResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.getFace
  name: getFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-164">Recupere informações sobre uma face persistente (especificada pelo persistedFaceId, personId e seu personGroupId que pertence).</span><span class="sxs-lookup"><span data-stu-id="ba347-164">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-165">Especificando o grupo de pessoas que contém a pessoa de destino.</span><span class="sxs-lookup"><span data-stu-id="ba347-165">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-166">Especificando a pessoa de destino que pertence a face.</span><span class="sxs-lookup"><span data-stu-id="ba347-166">Specifying the target person that the face belongs to.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-167">O persistedFaceId do destino persistente face da pessoa.</span><span class="sxs-lookup"><span data-stu-id="ba347-167">The persistedFaceId of the target persisted face of the person.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.getFace_2
  name: getFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-168">Recupere informações sobre uma face persistente (especificada pelo persistedFaceId, personId e seu personGroupId que pertence).</span><span class="sxs-lookup"><span data-stu-id="ba347-168">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, options: function, callback: ServiceCallback<PersonFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.getFace_1
  name: getFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-169">Recupere informações sobre uma face persistente (especificada pelo persistedFaceId, personId e seu personGroupId que pertence).</span><span class="sxs-lookup"><span data-stu-id="ba347-169">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<PersonFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.getFaceWithHttpOperationResponse
  name: getFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-170">Recupere informações sobre uma face persistente (especificada pelo persistedFaceId, personId e seu personGroupId que pertence).</span><span class="sxs-lookup"><span data-stu-id="ba347-170">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFaceWithHttpOperationResponse(personGroupId: string, personId: string, persistedFaceId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-171">Especificando o grupo de pessoas que contém a pessoa de destino.</span><span class="sxs-lookup"><span data-stu-id="ba347-171">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-172">Especificando a pessoa de destino que pertence a face.</span><span class="sxs-lookup"><span data-stu-id="ba347-172">Specifying the target person that the face belongs to.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-173">O persistedFaceId do destino persistente face da pessoa.</span><span class="sxs-lookup"><span data-stu-id="ba347-173">The persistedFaceId of the target persisted face of the person.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonFaceResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.getWithHttpOperationResponse
  name: getWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-174">Recupere informações de uma pessoa, incluindo dados do usuário, nome e registrados faces persistentes.</span><span class="sxs-lookup"><span data-stu-id="ba347-174">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(personGroupId: string, personId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-175">Especificando o grupo de pessoas que contém a pessoa de destino.</span><span class="sxs-lookup"><span data-stu-id="ba347-175">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-176">Especificando a pessoa de destino.</span><span class="sxs-lookup"><span data-stu-id="ba347-176">Specifying the target person.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.list
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-177">Lista todas as pessoas em um grupo de pessoas e recuperar informações de pessoa (incluindo personId, nome, userData e persistedFaceIds de faces registrados da pessoa).</span><span class="sxs-lookup"><span data-stu-id="ba347-177">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(personGroupId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-178">personGroupId o pessoa do grupo de destino.</span><span class="sxs-lookup"><span data-stu-id="ba347-178">personGroupId of the target person group.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.list_1
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-179">Lista todas as pessoas em um grupo de pessoas e recuperar informações de pessoa (incluindo personId, nome, userData e persistedFaceIds de faces registrados da pessoa).</span><span class="sxs-lookup"><span data-stu-id="ba347-179">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(personGroupId: string, callback: ServiceCallback<PersonResult[]>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonResult[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.list_2
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-180">Lista todas as pessoas em um grupo de pessoas e recuperar informações de pessoa (incluindo personId, nome, userData e persistedFaceIds de faces registrados da pessoa).</span><span class="sxs-lookup"><span data-stu-id="ba347-180">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(personGroupId: string, options: function, callback: ServiceCallback<PersonResult[]>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonResult[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.listWithHttpOperationResponse
  name: listWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-181">Lista todas as pessoas em um grupo de pessoas e recuperar informações de pessoa (incluindo personId, nome, userData e persistedFaceIds de faces registrados da pessoa).</span><span class="sxs-lookup"><span data-stu-id="ba347-181">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function listWithHttpOperationResponse(personGroupId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-182">personGroupId o pessoa do grupo de destino.</span><span class="sxs-lookup"><span data-stu-id="ba347-182">personGroupId of the target person group.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonResult[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.update
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-183">Atualizar o nome ou a dados do usuário de uma pessoa.</span><span class="sxs-lookup"><span data-stu-id="ba347-183">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(personGroupId: string, personId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-184">Especificando o grupo de pessoas que contém a pessoa de destino.</span><span class="sxs-lookup"><span data-stu-id="ba347-184">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-185">personId da pessoa de destino.</span><span class="sxs-lookup"><span data-stu-id="ba347-185">personId of the target person.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.update_1
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-186">Atualizar o nome ou a dados do usuário de uma pessoa.</span><span class="sxs-lookup"><span data-stu-id="ba347-186">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(personGroupId: string, personId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.update_2
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-187">Atualizar o nome ou a dados do usuário de uma pessoa.</span><span class="sxs-lookup"><span data-stu-id="ba347-187">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(personGroupId: string, personId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.updateFace
  name: updateFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-188">Atualização de uma pessoa persistentes de campo de dados do usuário da superfície.</span><span class="sxs-lookup"><span data-stu-id="ba347-188">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-189">Especificando o grupo de pessoas que contém a pessoa de destino.</span><span class="sxs-lookup"><span data-stu-id="ba347-189">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-190">personId da pessoa de destino.</span><span class="sxs-lookup"><span data-stu-id="ba347-190">personId of the target person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-191">persistedFaceId da face de destino, que é persistente e não expiram.</span><span class="sxs-lookup"><span data-stu-id="ba347-191">persistedFaceId of target face, which is persisted and will not expire.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.updateFace_1
  name: updateFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-192">Atualização de uma pessoa persistentes de campo de dados do usuário da superfície.</span><span class="sxs-lookup"><span data-stu-id="ba347-192">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.updateFace_2
  name: updateFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-193">Atualização de uma pessoa persistentes de campo de dados do usuário da superfície.</span><span class="sxs-lookup"><span data-stu-id="ba347-193">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.updateFaceWithHttpOperationResponse
  name: updateFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-194">Atualização de uma pessoa persistentes de campo de dados do usuário da superfície.</span><span class="sxs-lookup"><span data-stu-id="ba347-194">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFaceWithHttpOperationResponse(personGroupId: string, personId: string, persistedFaceId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-195">Especificando o grupo de pessoas que contém a pessoa de destino.</span><span class="sxs-lookup"><span data-stu-id="ba347-195">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-196">personId da pessoa de destino.</span><span class="sxs-lookup"><span data-stu-id="ba347-196">personId of the target person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-197">persistedFaceId da face de destino, que é persistente e não expiram.</span><span class="sxs-lookup"><span data-stu-id="ba347-197">persistedFaceId of target face, which is persisted and will not expire.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ba347-198">Atualizar o nome ou a dados do usuário de uma pessoa.</span><span class="sxs-lookup"><span data-stu-id="ba347-198">Update name or userData of a person.</span></span>
  syntax:
    content: 'function updateWithHttpOperationResponse(personGroupId: string, personId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-199">Especificando o grupo de pessoas que contém a pessoa de destino.</span><span class="sxs-lookup"><span data-stu-id="ba347-199">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="ba347-200">personId da pessoa de destino.</span><span class="sxs-lookup"><span data-stu-id="ba347-200">personId of the target person.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.PersistedFaceResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersistedFaceResult
    fullName: PersistedFaceResult
    uid: azure-cognitiveservices-face.PersistedFaceResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersistedFaceResult
    fullName: PersistedFaceResult
    uid: azure-cognitiveservices-face.PersistedFaceResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersistedFaceResult
    fullName: PersistedFaceResult
    uid: azure-cognitiveservices-face.PersistedFaceResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.CreatePersonResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: CreatePersonResult
    fullName: CreatePersonResult
    uid: azure-cognitiveservices-face.CreatePersonResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.CreatePersonResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: CreatePersonResult
    fullName: CreatePersonResult
    uid: azure-cognitiveservices-face.CreatePersonResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.CreatePersonResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: CreatePersonResult
    fullName: CreatePersonResult
    uid: azure-cognitiveservices-face.CreatePersonResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.PersonResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersonResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '>'
    fullName: '>'
- uid: Promise<azure-cognitiveservices-face.PersonFaceResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersonFaceResult
    fullName: PersonFaceResult
    uid: azure-cognitiveservices-face.PersonFaceResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersonFaceResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersonFaceResult
    fullName: PersonFaceResult
    uid: azure-cognitiveservices-face.PersonFaceResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonFaceResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersonFaceResult
    fullName: PersonFaceResult
    uid: azure-cognitiveservices-face.PersonFaceResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.PersonResult[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersonResult[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonResult[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '[]>>'
    fullName: '[]>>'
