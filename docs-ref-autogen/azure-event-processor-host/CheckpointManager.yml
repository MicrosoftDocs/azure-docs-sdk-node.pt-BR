### YamlMime:UniversalReference
ms.openlocfilehash: a54a8d025a067a5a1f8e278ccbb96a5c55d02684
ms.sourcegitcommit: 094b6aa16c2ee9aa1418d36ce033f1d99151d913
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 09/18/2018
ms.locfileid: "45957220"
items:
- uid: azure-event-processor-host.CheckpointManager
  name: CheckpointManager
  fullName: CheckpointManager
  children:
  - azure-event-processor-host.CheckpointManager.checkpointStoreExists
  - azure-event-processor-host.CheckpointManager.createAllCheckpointsIfNotExists
  - azure-event-processor-host.CheckpointManager.createCheckpointStoreIfNotExists
  - azure-event-processor-host.CheckpointManager.deleteCheckpoint
  - azure-event-processor-host.CheckpointManager.deleteCheckpointStore
  - azure-event-processor-host.CheckpointManager.getCheckpoint
  - azure-event-processor-host.CheckpointManager.updateCheckpoint
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-event-processor-host
- uid: azure-event-processor-host.CheckpointManager.checkpointStoreExists
  name: checkpointStoreExists
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3ab55-101">O armazenamento de ponto de verificação existe?</span><span class="sxs-lookup"><span data-stu-id="3ab55-101">Does the checkpoint store exist?</span></span>
  syntax:
    content: function checkpointStoreExists()
    parameters: []
    return:
      type:
      - Promise<boolean>
  package: azure-event-processor-host
- uid: azure-event-processor-host.CheckpointManager.createAllCheckpointsIfNotExists
  name: createAllCheckpointsIfNotExists
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="3ab55-102">Cria o ponto de verificação reservados para as partições determinados.</span><span class="sxs-lookup"><span data-stu-id="3ab55-102">Creates the checkpoint HOLDERs for the given partitions.</span></span> <span data-ttu-id="3ab55-103">Não faz nada para qualquer ponto de verificação detentores que já existem.</span><span class="sxs-lookup"><span data-stu-id="3ab55-103">Does nothing for any checkpoint HOLDERs that already exist.</span></span>

    <span data-ttu-id="3ab55-104">A semântica isso é complicada porque é possível usar o mesmo repositório para concessões e pontos de verificação (a implementação do armazenamento do Azure faz isso) e é necessário ter uma concessão para cada partição, mas não é necessário ter um ponto de verificação para uma partição.</span><span class="sxs-lookup"><span data-stu-id="3ab55-104">The semantics of this are complicated because it is possible to use the same store for both leases and checkpoints (the Azure Storage implementation does so) and it is required to have a lease for every partition but it is not required to have a checkpoint for a partition.</span></span>

    <span data-ttu-id="3ab55-105">É um cenário válido nunca usar pontos de verificação, portanto, é importante para a loja distinguir entre a criação de structure(s) que irá conter um ponto de verificação e, na verdade, criando um ponto de verificação (armazenar um par de números de sequência/deslocamento na estrutura).</span><span class="sxs-lookup"><span data-stu-id="3ab55-105">It is a valid scenario to never use checkpoints at all, so it is important for the store to distinguish between creating the structure(s) that will hold a checkpoint and actually creating a checkpoint (storing an offset/sequence number pair in the structure).</span></span>
  syntax:
    content: 'function createAllCheckpointsIfNotExists(partitionIds: string[])'
    parameters:
    - id: partitionIds
      type:
      - string[]
      description: <span data-ttu-id="3ab55-106">Lista de partições para criar os detentores de ponto de verificação para.</span><span class="sxs-lookup"><span data-stu-id="3ab55-106">List of partitions to create checkpoint HOLDERs for.</span></span>
    return:
      type:
      - Promise<void>
  package: azure-event-processor-host
- uid: azure-event-processor-host.CheckpointManager.createCheckpointStoreIfNotExists
  name: createCheckpointStoreIfNotExists
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3ab55-107">Crie o repositório de ponto de verificação se ele não existir.</span><span class="sxs-lookup"><span data-stu-id="3ab55-107">Create the checkpoint store if it doesn't exist.</span></span> <span data-ttu-id="3ab55-108">Não faz nada se ele existir.</span><span class="sxs-lookup"><span data-stu-id="3ab55-108">Does nothing if it exists.</span></span>
  syntax:
    content: function createCheckpointStoreIfNotExists()
    parameters: []
    return:
      type:
      - Promise<void>
  package: azure-event-processor-host
- uid: azure-event-processor-host.CheckpointManager.deleteCheckpoint
  name: deleteCheckpoint
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3ab55-109">Exclua o ponto de verificação armazenado para determinada partição.</span><span class="sxs-lookup"><span data-stu-id="3ab55-109">Delete the stored checkpoint for the given partition.</span></span> <span data-ttu-id="3ab55-110">Se não houver nenhum ponto de verificação armazenado para determinada partição, que é tratado como sucesso.</span><span class="sxs-lookup"><span data-stu-id="3ab55-110">If there is no stored checkpoint for the given partition, that is treated as success.</span></span> <span data-ttu-id="3ab55-111">Excluir o ponto de verificação detentor da é permitido, mas não obrigatório; sua implementação é livre para fazer o que for mais conveniente.</span><span class="sxs-lookup"><span data-stu-id="3ab55-111">Deleting the checkpoint HOLDER is allowed but not required; your implementation is free to do whichever is more convenient.</span></span>
  syntax:
    content: 'function deleteCheckpoint(partitionId: string)'
    parameters:
    - id: partitionId
      type:
      - string
      description: <span data-ttu-id="3ab55-112">PartitionId para excluir o ponto de verificação do armazenamento.</span><span class="sxs-lookup"><span data-stu-id="3ab55-112">The partitionId to delete the checkpoint from the store.</span></span>
    return:
      type:
      - Promise<void>
  package: azure-event-processor-host
- uid: azure-event-processor-host.CheckpointManager.deleteCheckpointStore
  name: deleteCheckpointStore
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3ab55-113">Exclui o armazenamento de ponto de verificação.</span><span class="sxs-lookup"><span data-stu-id="3ab55-113">Deletes the checkpoint store.</span></span>
  syntax:
    content: function deleteCheckpointStore()
    parameters: []
    return:
      type:
      - Promise<void>
  package: azure-event-processor-host
- uid: azure-event-processor-host.CheckpointManager.getCheckpoint
  name: getCheckpoint
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3ab55-114">Obtém as informações de ponto de verificação associadas a determinada partição.</span><span class="sxs-lookup"><span data-stu-id="3ab55-114">Gets the checkpoint info associated with the given partition.</span></span> <span data-ttu-id="3ab55-115">Poderia retornar indefinido se nenhum ponto de verificação tiver sido criado para essa partição.</span><span class="sxs-lookup"><span data-stu-id="3ab55-115">Could return undefined if no checkpoint has been created for that partition.</span></span>
  syntax:
    content: 'function getCheckpoint(partitionId: string)'
    parameters:
    - id: partitionId
      type:
      - string
      description: <span data-ttu-id="3ab55-116">Para obter as informações de ponto de verificação para partitionId.</span><span class="sxs-lookup"><span data-stu-id="3ab55-116">The partitionId to get the checkpoint info for.</span></span>
    return:
      type:
      - Promise<azure-event-processor-host.CheckpointInfo | undefined>
  package: azure-event-processor-host
- uid: azure-event-processor-host.CheckpointManager.updateCheckpoint
  name: updateCheckpoint
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3ab55-117">Atualize o ponto de verificação no repositório com o deslocamento/sequenceNumber no ponto de verificação fornecido.</span><span class="sxs-lookup"><span data-stu-id="3ab55-117">Update the checkpoint in the store with the offset/sequenceNumber in the provided checkpoint.</span></span>
  syntax:
    content: 'function updateCheckpoint(lease: CompleteLease, checkpoint: CheckpointInfo)'
    parameters:
    - id: lease
      type:
      - azure-event-processor-host.CompleteLease
      description: <span data-ttu-id="3ab55-118">Informações de partição na qual executar um ponto de verificação.</span><span class="sxs-lookup"><span data-stu-id="3ab55-118">Partition information against which to perform a checkpoint.</span></span>
    - id: checkpoint
      type:
      - azure-event-processor-host.CheckpointInfo
      description: <span data-ttu-id="3ab55-119">deslocamento/sequeceNumber para atualizar o armazenamento com</span><span class="sxs-lookup"><span data-stu-id="3ab55-119">offset/sequeceNumber to update the store with</span></span>
    return:
      type:
      - Promise<void>
  package: azure-event-processor-host
references:
- uid: Promise<azure-event-processor-host.CheckpointInfo | undefined>
  name: CheckpointInfo | undefined>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: CheckpointInfo
    fullName: CheckpointInfo
    uid: azure-event-processor-host.CheckpointInfo
  - name: " | undefined>"
    fullName: " | undefined>"
- uid: azure-event-processor-host.CompleteLease
  name: CompleteLease
  spec.typeScript:
  - name: CompleteLease
    fullName: CompleteLease
    uid: azure-event-processor-host.CompleteLease
- uid: azure-event-processor-host.CheckpointInfo
  name: CheckpointInfo
  spec.typeScript:
  - name: CheckpointInfo
    fullName: CheckpointInfo
    uid: azure-event-processor-host.CheckpointInfo
