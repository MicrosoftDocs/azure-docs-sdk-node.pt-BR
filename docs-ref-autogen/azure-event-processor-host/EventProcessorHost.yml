### YamlMime:UniversalReference
ms.openlocfilehash: 4ebb32f87ada52fdc7366c00a14156400684884b
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 08/22/2018
ms.locfileid: "41686105"
items:
- uid: azure-event-processor-host.EventProcessorHost
  name: EventProcessorHost
  fullName: EventProcessorHost
  children:
  - azure-event-processor-host.EventProcessorHost.autoCheckpoint
  - azure-event-processor-host.EventProcessorHost.closed
  - azure-event-processor-host.EventProcessorHost.consumerGroup
  - azure-event-processor-host.EventProcessorHost.createFromAadTokenCredentials
  - azure-event-processor-host.EventProcessorHost.createFromConnectionString
  - azure-event-processor-host.EventProcessorHost.createHostName
  - azure-event-processor-host.EventProcessorHost.error
  - azure-event-processor-host.EventProcessorHost.constructor
  - azure-event-processor-host.EventProcessorHost.getHubRuntimeInformation
  - azure-event-processor-host.EventProcessorHost.getPartitionIds
  - azure-event-processor-host.EventProcessorHost.getPartitionInformation
  - azure-event-processor-host.EventProcessorHost.hostName
  - azure-event-processor-host.EventProcessorHost.message
  - azure-event-processor-host.EventProcessorHost.opened
  - azure-event-processor-host.EventProcessorHost.start
  - azure-event-processor-host.EventProcessorHost.stop
  langs:
  - typeScript
  type: class
  summary: Descreve o Host do processador de eventos para processar eventos de um hub de eventos.
  extends:
    name: EventEmitter
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.autoCheckpoint
  name: autoCheckpoint
  fullName: autoCheckpoint
  children: []
  langs:
  - typeScript
  type: property
  summary: '{boolean} autoCheckpoint checkpoint automaticamente o deslocamento em nome do cliente. Valor padrão: `true`.'
  syntax:
    content: 'autoCheckpoint: boolean'
    return:
      type:
      - boolean
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.closed
  name: closed
  fullName: closed
  children: []
  langs:
  - typeScript
  type: property
  summary: 'Fechado: Disparada sempre que uma partição perde sua concessão e deve parar de receber, ou quando o host está desligado. O PartitionContext e o motivo de fechamento é passado para o ouvinte de eventos.'
  syntax:
    content: 'static closed: string'
    return:
      type:
      - string
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.consumerGroup
  name: consumerGroup
  fullName: consumerGroup
  children: []
  langs:
  - typeScript
  type: property
  summary: Fornece o consumidor de nome de grupo para o host do processador de eventos.
  syntax:
    content: 'consumerGroup: string'
    return:
      type:
      - string
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.createFromAadTokenCredentials
  name: createFromAadTokenCredentials
  children: []
  type: method
  langs:
  - typeScript
  summary: Cria um novo host para processar eventos de um Hub de eventos.
  syntax:
    content: 'static function createFromAadTokenCredentials(hostName: string, storageConnectionString: string, namespace: string, eventHubPath: string, credentials: ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials, options?: EventProcessorOptions)'
    parameters:
    - id: hostName
      type:
      - string
      description: >-
        Nome do host do processador. DEVE SER EXCLUSIVO.

        Altamente recomendável incluindo um Guid ou um prefixo com um guid para garantir a exclusividade. Você pode usar `EventProcessorHost.createHostName("your-prefix")`; Padrão: `js-host-${uuid()}`.
    - id: storageConnectionString
      type:
      - string
      description: Cadeia de caracteres de Conexão usada para concessões e o ponto de verificação de conta de armazenamento do Azure. Exemplo DefaultEndpointsProtocol = https; AccountName = < nome da conta >; AccountKey = < chave da conta >; EndpointSuffix=core.windows.net
    - id: namespace
      type:
      - string
      description: >-
        Nome de domínio totalmente qualificado para os Hubs de eventos.

        Exemplo: "{your-sb-namespace}. servicebus.windows .net"
    - id: eventHubPath
      type:
      - string
      description: O nome do que o hub de eventos.
    - id: credentials
      type:
      - ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials
      description: 'As credenciais do Token do AAD. Ele pode ser uma das seguintes opções: ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials.'
    - id: options
      type:
      - azure-event-processor-host.EventProcessorOptions
      description: ''
      optional: true
    return:
      type:
      - azure-event-processor-host.EventProcessorHost
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.createFromConnectionString
  name: createFromConnectionString
  children: []
  type: method
  langs:
  - typeScript
  summary: Cria um novo host para processar eventos de um Hub de eventos.
  syntax:
    content: 'static function createFromConnectionString(hostName: string, storageConnectionString: string, eventHubConnectionString: string, options?: ConnectionStringBasedOptions)'
    parameters:
    - id: hostName
      type:
      - string
      description: >-
        Nome do host do processador. DEVE SER EXCLUSIVO.

        Altamente recomendável incluindo um Guid ou um prefixo com um guid para garantir a exclusividade. Você pode usar `EventProcessorHost.createHostName("your-prefix")`; Padrão: `js-host-${uuid()}`.
    - id: storageConnectionString
      type:
      - string
      description: Cadeia de caracteres de Conexão usada para concessões e o ponto de verificação de conta de armazenamento do Azure. Exemplo DefaultEndpointsProtocol = https; AccountName = < nome da conta >; AccountKey = < chave da conta >; EndpointSuffix=core.windows.net
    - id: eventHubConnectionString
      type:
      - string
      description: >-
        Cadeia de caracteres de Conexão para o Hub de eventos receber do.

        Exemplo: ' Endpoint=sb://my-servicebus-namespace.servicebus.windows.net/; SharedAccessKeyName = my-SA-name; SharedAccessKey = my-SA-key'
    - id: options
      type:
      - azure-event-processor-host.ConnectionStringBasedOptions
      description: ''
      optional: true
    return:
      type:
      - azure-event-processor-host.EventProcessorHost
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.createHostName
  name: createHostName
  children: []
  type: method
  langs:
  - typeScript
  summary: Método de conveniência para a geração de nome de host exclusivo.
  syntax:
    content: 'static function createHostName(prefix?: string)'
    parameters:
    - id: prefix
      type:
      - string
      description: ''
      optional: true
    return:
      type:
      - string
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.error
  name: error
  fullName: error
  children: []
  langs:
  - typeScript
  type: property
  summary: 'Erro: Disparado quando ocorre um erro em um destinatário específico. O EventHubsError ou um objeto de erro genérico é passado o ouvinte de eventos.'
  syntax:
    content: 'static error: string'
    return:
      type:
      - string
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.constructor
  name: EventProcessorHost
  children: []
  type: constructor
  langs:
  - typeScript
  summary: Cria um novo host para processar eventos de um Hub de eventos.
  syntax:
    content: 'new EventProcessorHost(hostName: string, storageConnectionString: string, eventHubClient: EventHubClient, options?: EventProcessorOptions)'
    parameters:
    - id: hostName
      type:
      - string
      description: >-
        Nome do host do processador. DEVE SER EXCLUSIVO.

        Altamente recomendável incluindo um Guid ou um prefixo com um guid para garantir a exclusividade. Você pode usar `EventProcessorHost.createHostName("your-prefix")`; Padrão: `js-host-${uuid()}`.
    - id: storageConnectionString
      type:
      - string
      description: Cadeia de caracteres de Conexão usada para concessões e o ponto de verificação de conta de armazenamento do Azure. Exemplo DefaultEndpointsProtocol = https; AccountName = < nome da conta >; AccountKey = < chave da conta >; EndpointSuffix=core.windows.net
    - id: eventHubClient
      type:
      - EventHubClient
      description: O cliente do hub de eventos
    - id: options
      type:
      - azure-event-processor-host.EventProcessorOptions
      description: ''
      optional: true
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.getHubRuntimeInformation
  name: getHubRuntimeInformation
  children: []
  type: method
  langs:
  - typeScript
  summary: Fornece as informações de tempo de execução do hub de eventos.
  syntax:
    content: function getHubRuntimeInformation()
    parameters: []
    return:
      type:
      - Promise<EventHubRuntimeInformation>
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.getPartitionIds
  name: getPartitionIds
  children: []
  type: method
  langs:
  - typeScript
  summary: Fornece uma matriz de partitionIds.
  syntax:
    content: function getPartitionIds()
    parameters: []
    return:
      type:
      - Promise<string[]>
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.getPartitionInformation
  name: getPartitionInformation
  children: []
  type: method
  langs:
  - typeScript
  summary: Fornece informações sobre a partição especificada.
  syntax:
    content: 'function getPartitionInformation(partitionId: string | number)'
    parameters:
    - id: partitionId
      type:
      - string | number
      description: >
        ID de partição para a qual partição informações são necessárias.
    return:
      type:
      - Promise<EventHubPartitionRuntimeInformation>
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.hostName
  name: hostName
  fullName: hostName
  children: []
  langs:
  - typeScript
  type: property
  summary: Fornece o nome de host para o host do processador de eventos.
  syntax:
    content: 'hostName: string'
    return:
      type:
      - string
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.message
  name: message
  fullName: message
  children: []
  langs:
  - typeScript
  type: property
  summary: 'Mensagem: Disparada sempre que uma mensagem é fornecido em uma determinada partição. O PartitionContext e EventData é passada para o ouvinte de eventos.'
  syntax:
    content: 'static message: string'
    return:
      type:
      - string
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.opened
  name: opened
  fullName: opened
  children: []
  langs:
  - typeScript
  type: property
  summary: 'Aberto: Disparada sempre que uma partição obtiver sua concessão. O PartitionContext é passado para o ouvinte de eventos.'
  syntax:
    content: 'static opened: string'
    return:
      type:
      - string
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.start
  name: start
  children: []
  type: method
  langs:
  - typeScript
  summary: Inicia o host do processador de eventos, buscando a lista de partições, filtrá-los (opcionalmente) e a tentativa de obter concessões no conjunto (filtrado). Para cada concessão com êxito, irá obter os detalhes do blob e iniciar um receptor no ponto onde ela parou anteriormente.
  syntax:
    content: 'function start(options?: StartEPHOptions)'
    parameters:
    - id: options
      type:
      - azure-event-processor-host.StartEPHOptions
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.stop
  name: stop
  children: []
  type: method
  langs:
  - typeScript
  summary: Interrompe o EventProcessorHost do processamento de mensagens.
  syntax:
    content: function stop()
    parameters: []
    return:
      type:
      - Promise<void>
  package: azure-event-processor-host
references:
- uid: azure-event-processor-host.EventProcessorOptions
  spec.typeScript:
  - name: EventProcessorOptions
    fullName: EventProcessorOptions
    uid: azure-event-processor-host.EventProcessorOptions
- uid: azure-event-processor-host.StartEPHOptions
  spec.typeScript:
  - name: StartEPHOptions
    fullName: StartEPHOptions
    uid: azure-event-processor-host.StartEPHOptions
- uid: azure-event-processor-host.EventProcessorHost
  spec.typeScript:
  - name: EventProcessorHost
    fullName: EventProcessorHost
    uid: azure-event-processor-host.EventProcessorHost
- uid: azure-event-processor-host.ConnectionStringBasedOptions
  spec.typeScript:
  - name: ConnectionStringBasedOptions
    fullName: ConnectionStringBasedOptions
    uid: azure-event-processor-host.ConnectionStringBasedOptions
