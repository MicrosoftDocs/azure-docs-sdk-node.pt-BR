### YamlMime:UniversalReference
ms.openlocfilehash: aa765d9debb3b6e1173b56b8ef882a692332fc29
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 08/12/2018
ms.locfileid: "40048211"
items:
- uid: azure-arm-authorization.RoleAssignments
  name: RoleAssignments
  fullName: RoleAssignments
  children:
  - azure-arm-authorization.RoleAssignments.create
  - azure-arm-authorization.RoleAssignments.create_1
  - azure-arm-authorization.RoleAssignments.create_2
  - azure-arm-authorization.RoleAssignments.createById_1
  - azure-arm-authorization.RoleAssignments.createById
  - azure-arm-authorization.RoleAssignments.createById_2
  - azure-arm-authorization.RoleAssignments.createByIdWithHttpOperationResponse
  - azure-arm-authorization.RoleAssignments.createWithHttpOperationResponse
  - azure-arm-authorization.RoleAssignments.deleteById
  - azure-arm-authorization.RoleAssignments.deleteById_1
  - azure-arm-authorization.RoleAssignments.deleteById_2
  - azure-arm-authorization.RoleAssignments.deleteByIdWithHttpOperationResponse
  - azure-arm-authorization.RoleAssignments.deleteMethod_1
  - azure-arm-authorization.RoleAssignments.deleteMethod_2
  - azure-arm-authorization.RoleAssignments.deleteMethod
  - azure-arm-authorization.RoleAssignments.deleteMethodWithHttpOperationResponse
  - azure-arm-authorization.RoleAssignments.get
  - azure-arm-authorization.RoleAssignments.get_2
  - azure-arm-authorization.RoleAssignments.get_1
  - azure-arm-authorization.RoleAssignments.getById_1
  - azure-arm-authorization.RoleAssignments.getById_2
  - azure-arm-authorization.RoleAssignments.getById
  - azure-arm-authorization.RoleAssignments.getByIdWithHttpOperationResponse
  - azure-arm-authorization.RoleAssignments.getWithHttpOperationResponse
  - azure-arm-authorization.RoleAssignments.list
  - azure-arm-authorization.RoleAssignments.list_1
  - azure-arm-authorization.RoleAssignments.list_2
  - azure-arm-authorization.RoleAssignments.listForResource
  - azure-arm-authorization.RoleAssignments.listForResource_1
  - azure-arm-authorization.RoleAssignments.listForResource_2
  - azure-arm-authorization.RoleAssignments.listForResourceGroup
  - azure-arm-authorization.RoleAssignments.listForResourceGroup_1
  - azure-arm-authorization.RoleAssignments.listForResourceGroup_2
  - azure-arm-authorization.RoleAssignments.listForResourceGroupNext_1
  - azure-arm-authorization.RoleAssignments.listForResourceGroupNext_2
  - azure-arm-authorization.RoleAssignments.listForResourceGroupNext
  - azure-arm-authorization.RoleAssignments.listForResourceGroupNextWithHttpOperationResponse
  - azure-arm-authorization.RoleAssignments.listForResourceGroupWithHttpOperationResponse
  - azure-arm-authorization.RoleAssignments.listForResourceNext
  - azure-arm-authorization.RoleAssignments.listForResourceNext_1
  - azure-arm-authorization.RoleAssignments.listForResourceNext_2
  - azure-arm-authorization.RoleAssignments.listForResourceNextWithHttpOperationResponse
  - azure-arm-authorization.RoleAssignments.listForResourceWithHttpOperationResponse
  - azure-arm-authorization.RoleAssignments.listForScope
  - azure-arm-authorization.RoleAssignments.listForScope_1
  - azure-arm-authorization.RoleAssignments.listForScope_2
  - azure-arm-authorization.RoleAssignments.listForScopeNext
  - azure-arm-authorization.RoleAssignments.listForScopeNext_1
  - azure-arm-authorization.RoleAssignments.listForScopeNext_2
  - azure-arm-authorization.RoleAssignments.listForScopeNextWithHttpOperationResponse
  - azure-arm-authorization.RoleAssignments.listForScopeWithHttpOperationResponse
  - azure-arm-authorization.RoleAssignments.listNext
  - azure-arm-authorization.RoleAssignments.listNext_1
  - azure-arm-authorization.RoleAssignments.listNext_2
  - azure-arm-authorization.RoleAssignments.listNextWithHttpOperationResponse
  - azure-arm-authorization.RoleAssignments.listWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.create
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: Cria uma atribuição de função.
  syntax:
    content: 'function create(scope: string, roleAssignmentName: string, parameters: RoleAssignmentCreateParameters, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        O escopo da atribuição de função para criar. O escopo pode ser qualquer instância do recurso REST. Por exemplo, use ' / assinaturas / {id da assinatura} /' para uma assinatura, '/ assinaturas / {subscription-id} ResourceGroups {resource-group-name}' para um grupo de recursos e ' / assinaturas / {id da assinatura} ResourceGroups { Resource-Group-name}/providers/{Resource-Provider}/{Resource-Type}/{Resource-Name}' para um recurso.
    - id: roleAssignmentName
      type:
      - string
      description: >
        O nome da atribuição de função para criar. Ele pode ser qualquer GUID válida.
    - id: parameters
      type:
      - azure-arm-authorization.RoleAssignmentCreateParameters
      description: >
        Parâmetros para a atribuição de função.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.create_1
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: Cria uma atribuição de função.
  syntax:
    content: 'function create(scope: string, roleAssignmentName: string, parameters: RoleAssignmentCreateParameters, callback: ServiceCallback<RoleAssignment>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: roleAssignmentName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-authorization.RoleAssignmentCreateParameters
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignment>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.create_2
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: Cria uma atribuição de função.
  syntax:
    content: 'function create(scope: string, roleAssignmentName: string, parameters: RoleAssignmentCreateParameters, options: function, callback: ServiceCallback<RoleAssignment>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: roleAssignmentName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-authorization.RoleAssignmentCreateParameters
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignment>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.createById_1
  name: createById
  children: []
  type: method
  langs:
  - typeScript
  summary: Cria uma atribuição de função por ID.
  syntax:
    content: 'function createById(roleId: string, parameters: RoleAssignmentCreateParameters, callback: ServiceCallback<RoleAssignment>)'
    parameters:
    - id: roleId
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-authorization.RoleAssignmentCreateParameters
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignment>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.createById
  name: createById
  children: []
  type: method
  langs:
  - typeScript
  summary: Cria uma atribuição de função por ID.
  syntax:
    content: 'function createById(roleId: string, parameters: RoleAssignmentCreateParameters, options?: function)'
    parameters:
    - id: roleId
      type:
      - string
      description: >
        A ID da atribuição de função para criar.
    - id: parameters
      type:
      - azure-arm-authorization.RoleAssignmentCreateParameters
      description: >
        Parâmetros para a atribuição de função.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.createById_2
  name: createById
  children: []
  type: method
  langs:
  - typeScript
  summary: Cria uma atribuição de função por ID.
  syntax:
    content: 'function createById(roleId: string, parameters: RoleAssignmentCreateParameters, options: function, callback: ServiceCallback<RoleAssignment>)'
    parameters:
    - id: roleId
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-authorization.RoleAssignmentCreateParameters
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignment>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.createByIdWithHttpOperationResponse
  name: createByIdWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Cria uma atribuição de função por ID.
  syntax:
    content: 'function createByIdWithHttpOperationResponse(roleId: string, parameters: RoleAssignmentCreateParameters, options?: function)'
    parameters:
    - id: roleId
      type:
      - string
      description: >
        A ID da atribuição de função para criar.
    - id: parameters
      type:
      - azure-arm-authorization.RoleAssignmentCreateParameters
      description: >
        Parâmetros para a atribuição de função.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-authorization.RoleAssignment>>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.createWithHttpOperationResponse
  name: createWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Cria uma atribuição de função.
  syntax:
    content: 'function createWithHttpOperationResponse(scope: string, roleAssignmentName: string, parameters: RoleAssignmentCreateParameters, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        O escopo da atribuição de função para criar. O escopo pode ser qualquer instância do recurso REST. Por exemplo, use ' / assinaturas / {id da assinatura} /' para uma assinatura, '/ assinaturas / {subscription-id} ResourceGroups {resource-group-name}' para um grupo de recursos e ' / assinaturas / {id da assinatura} ResourceGroups { Resource-Group-name}/providers/{Resource-Provider}/{Resource-Type}/{Resource-Name}' para um recurso.
    - id: roleAssignmentName
      type:
      - string
      description: >
        O nome da atribuição de função para criar. Ele pode ser qualquer GUID válida.
    - id: parameters
      type:
      - azure-arm-authorization.RoleAssignmentCreateParameters
      description: >
        Parâmetros para a atribuição de função.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-authorization.RoleAssignment>>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.deleteById
  name: deleteById
  children: []
  type: method
  langs:
  - typeScript
  summary: Exclui uma atribuição de função.
  syntax:
    content: 'function deleteById(roleId: string, options?: function)'
    parameters:
    - id: roleId
      type:
      - string
      description: >
        A ID da atribuição de função a ser excluído.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.deleteById_1
  name: deleteById
  children: []
  type: method
  langs:
  - typeScript
  summary: Exclui uma atribuição de função.
  syntax:
    content: 'function deleteById(roleId: string, callback: ServiceCallback<RoleAssignment>)'
    parameters:
    - id: roleId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignment>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.deleteById_2
  name: deleteById
  children: []
  type: method
  langs:
  - typeScript
  summary: Exclui uma atribuição de função.
  syntax:
    content: 'function deleteById(roleId: string, options: function, callback: ServiceCallback<RoleAssignment>)'
    parameters:
    - id: roleId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignment>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.deleteByIdWithHttpOperationResponse
  name: deleteByIdWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Exclui uma atribuição de função.
  syntax:
    content: 'function deleteByIdWithHttpOperationResponse(roleId: string, options?: function)'
    parameters:
    - id: roleId
      type:
      - string
      description: >
        A ID da atribuição de função a ser excluído.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-authorization.RoleAssignment>>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.deleteMethod_1
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Exclui uma atribuição de função.
  syntax:
    content: 'function deleteMethod(scope: string, roleAssignmentName: string, callback: ServiceCallback<RoleAssignment>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: roleAssignmentName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignment>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.deleteMethod_2
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Exclui uma atribuição de função.
  syntax:
    content: 'function deleteMethod(scope: string, roleAssignmentName: string, options: function, callback: ServiceCallback<RoleAssignment>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: roleAssignmentName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignment>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.deleteMethod
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Exclui uma atribuição de função.
  syntax:
    content: 'function deleteMethod(scope: string, roleAssignmentName: string, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        O escopo da atribuição de função para excluir.
    - id: roleAssignmentName
      type:
      - string
      description: >
        O nome da atribuição de função para excluir.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Exclui uma atribuição de função.
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(scope: string, roleAssignmentName: string, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        O escopo da atribuição de função para excluir.
    - id: roleAssignmentName
      type:
      - string
      description: >
        O nome da atribuição de função para excluir.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-authorization.RoleAssignment>>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.get
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: Obter a atribuição de função especificado.
  syntax:
    content: 'function get(scope: string, roleAssignmentName: string, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        O escopo da atribuição de função.
    - id: roleAssignmentName
      type:
      - string
      description: >
        O nome da atribuição de função para obter.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.get_2
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: Obter a atribuição de função especificado.
  syntax:
    content: 'function get(scope: string, roleAssignmentName: string, options: function, callback: ServiceCallback<RoleAssignment>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: roleAssignmentName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignment>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.get_1
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: Obter a atribuição de função especificado.
  syntax:
    content: 'function get(scope: string, roleAssignmentName: string, callback: ServiceCallback<RoleAssignment>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: roleAssignmentName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignment>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.getById_1
  name: getById
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém uma atribuição de função por ID.
  syntax:
    content: 'function getById(roleId: string, callback: ServiceCallback<RoleAssignment>)'
    parameters:
    - id: roleId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignment>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.getById_2
  name: getById
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém uma atribuição de função por ID.
  syntax:
    content: 'function getById(roleId: string, options: function, callback: ServiceCallback<RoleAssignment>)'
    parameters:
    - id: roleId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignment>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.getById
  name: getById
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém uma atribuição de função por ID.
  syntax:
    content: 'function getById(roleId: string, options?: function)'
    parameters:
    - id: roleId
      type:
      - string
      description: >
        A ID da atribuição de função para obter.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.getByIdWithHttpOperationResponse
  name: getByIdWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém uma atribuição de função por ID.
  syntax:
    content: 'function getByIdWithHttpOperationResponse(roleId: string, options?: function)'
    parameters:
    - id: roleId
      type:
      - string
      description: >
        A ID da atribuição de função para obter.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-authorization.RoleAssignment>>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.getWithHttpOperationResponse
  name: getWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Obter a atribuição de função especificado.
  syntax:
    content: 'function getWithHttpOperationResponse(scope: string, roleAssignmentName: string, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        O escopo da atribuição de função.
    - id: roleAssignmentName
      type:
      - string
      description: >
        O nome da atribuição de função para obter.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-authorization.RoleAssignment>>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.list
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém todas as atribuições de função para a assinatura.
  syntax:
    content: 'function list(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.list_1
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém todas as atribuições de função para a assinatura.
  syntax:
    content: 'function list(callback: ServiceCallback<RoleAssignmentListResult>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.list_2
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém todas as atribuições de função para a assinatura.
  syntax:
    content: 'function list(options: function, callback: ServiceCallback<RoleAssignmentListResult>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForResource
  name: listForResource
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém as atribuições de função para um recurso.
  syntax:
    content: 'function listForResource(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        O nome do grupo de recursos.
    - id: resourceProviderNamespace
      type:
      - string
      description: >
        O namespace do provedor de recursos.
    - id: parentResourcePath
      type:
      - string
      description: >
        Identidade do recurso pai.
    - id: resourceType
      type:
      - string
      description: >
        O tipo de recurso do recurso.
    - id: resourceName
      type:
      - string
      description: >
        O nome do recurso para obter atribuições de função.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForResource_1
  name: listForResource
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém as atribuições de função para um recurso.
  syntax:
    content: 'function listForResource(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, callback: ServiceCallback<RoleAssignmentListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: resourceProviderNamespace
      type:
      - string
      description: ''
    - id: parentResourcePath
      type:
      - string
      description: ''
    - id: resourceType
      type:
      - string
      description: ''
    - id: resourceName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForResource_2
  name: listForResource
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém as atribuições de função para um recurso.
  syntax:
    content: 'function listForResource(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, options: function, callback: ServiceCallback<RoleAssignmentListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: resourceProviderNamespace
      type:
      - string
      description: ''
    - id: parentResourcePath
      type:
      - string
      description: ''
    - id: resourceType
      type:
      - string
      description: ''
    - id: resourceName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForResourceGroup
  name: listForResourceGroup
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém as atribuições de função para um grupo de recursos.
  syntax:
    content: 'function listForResourceGroup(resourceGroupName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        O nome do grupo de recursos.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForResourceGroup_1
  name: listForResourceGroup
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém as atribuições de função para um grupo de recursos.
  syntax:
    content: 'function listForResourceGroup(resourceGroupName: string, callback: ServiceCallback<RoleAssignmentListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForResourceGroup_2
  name: listForResourceGroup
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém as atribuições de função para um grupo de recursos.
  syntax:
    content: 'function listForResourceGroup(resourceGroupName: string, options: function, callback: ServiceCallback<RoleAssignmentListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForResourceGroupNext_1
  name: listForResourceGroupNext
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém as atribuições de função para um grupo de recursos.
  syntax:
    content: 'function listForResourceGroupNext(nextPageLink: string, callback: ServiceCallback<RoleAssignmentListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForResourceGroupNext_2
  name: listForResourceGroupNext
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém as atribuições de função para um grupo de recursos.
  syntax:
    content: 'function listForResourceGroupNext(nextPageLink: string, options: function, callback: ServiceCallback<RoleAssignmentListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForResourceGroupNext
  name: listForResourceGroupNext
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém as atribuições de função para um grupo de recursos.
  syntax:
    content: 'function listForResourceGroupNext(nextPageLink: string, options?: function)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        NextLink da chamada bem-sucedida anterior à operação de lista.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForResourceGroupNextWithHttpOperationResponse
  name: listForResourceGroupNextWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém as atribuições de função para um grupo de recursos.
  syntax:
    content: 'function listForResourceGroupNextWithHttpOperationResponse(nextPageLink: string, options?: function)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        NextLink da chamada bem-sucedida anterior à operação de lista.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-authorization.RoleAssignmentListResult>>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForResourceGroupWithHttpOperationResponse
  name: listForResourceGroupWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém as atribuições de função para um grupo de recursos.
  syntax:
    content: 'function listForResourceGroupWithHttpOperationResponse(resourceGroupName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        O nome do grupo de recursos.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-authorization.RoleAssignmentListResult>>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForResourceNext
  name: listForResourceNext
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém as atribuições de função para um recurso.
  syntax:
    content: 'function listForResourceNext(nextPageLink: string, options?: function)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        NextLink da chamada bem-sucedida anterior à operação de lista.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForResourceNext_1
  name: listForResourceNext
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém as atribuições de função para um recurso.
  syntax:
    content: 'function listForResourceNext(nextPageLink: string, callback: ServiceCallback<RoleAssignmentListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForResourceNext_2
  name: listForResourceNext
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém as atribuições de função para um recurso.
  syntax:
    content: 'function listForResourceNext(nextPageLink: string, options: function, callback: ServiceCallback<RoleAssignmentListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForResourceNextWithHttpOperationResponse
  name: listForResourceNextWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém as atribuições de função para um recurso.
  syntax:
    content: 'function listForResourceNextWithHttpOperationResponse(nextPageLink: string, options?: function)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        NextLink da chamada bem-sucedida anterior à operação de lista.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-authorization.RoleAssignmentListResult>>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForResourceWithHttpOperationResponse
  name: listForResourceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém as atribuições de função para um recurso.
  syntax:
    content: 'function listForResourceWithHttpOperationResponse(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        O nome do grupo de recursos.
    - id: resourceProviderNamespace
      type:
      - string
      description: >
        O namespace do provedor de recursos.
    - id: parentResourcePath
      type:
      - string
      description: >
        Identidade do recurso pai.
    - id: resourceType
      type:
      - string
      description: >
        O tipo de recurso do recurso.
    - id: resourceName
      type:
      - string
      description: >
        O nome do recurso para obter atribuições de função.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-authorization.RoleAssignmentListResult>>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForScope
  name: listForScope
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém as atribuições de função para um escopo.
  syntax:
    content: 'function listForScope(scope: string, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        O escopo das atribuições de função.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForScope_1
  name: listForScope
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém as atribuições de função para um escopo.
  syntax:
    content: 'function listForScope(scope: string, callback: ServiceCallback<RoleAssignmentListResult>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForScope_2
  name: listForScope
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém as atribuições de função para um escopo.
  syntax:
    content: 'function listForScope(scope: string, options: function, callback: ServiceCallback<RoleAssignmentListResult>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForScopeNext
  name: listForScopeNext
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém as atribuições de função para um escopo.
  syntax:
    content: 'function listForScopeNext(nextPageLink: string, options?: function)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        NextLink da chamada bem-sucedida anterior à operação de lista.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForScopeNext_1
  name: listForScopeNext
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém as atribuições de função para um escopo.
  syntax:
    content: 'function listForScopeNext(nextPageLink: string, callback: ServiceCallback<RoleAssignmentListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForScopeNext_2
  name: listForScopeNext
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém as atribuições de função para um escopo.
  syntax:
    content: 'function listForScopeNext(nextPageLink: string, options: function, callback: ServiceCallback<RoleAssignmentListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForScopeNextWithHttpOperationResponse
  name: listForScopeNextWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém as atribuições de função para um escopo.
  syntax:
    content: 'function listForScopeNextWithHttpOperationResponse(nextPageLink: string, options?: function)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        NextLink da chamada bem-sucedida anterior à operação de lista.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-authorization.RoleAssignmentListResult>>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForScopeWithHttpOperationResponse
  name: listForScopeWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém as atribuições de função para um escopo.
  syntax:
    content: 'function listForScopeWithHttpOperationResponse(scope: string, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        O escopo das atribuições de função.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-authorization.RoleAssignmentListResult>>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listNext
  name: listNext
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém todas as atribuições de função para a assinatura.
  syntax:
    content: 'function listNext(nextPageLink: string, options?: function)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        NextLink da chamada bem-sucedida anterior à operação de lista.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listNext_1
  name: listNext
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém todas as atribuições de função para a assinatura.
  syntax:
    content: 'function listNext(nextPageLink: string, callback: ServiceCallback<RoleAssignmentListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listNext_2
  name: listNext
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém todas as atribuições de função para a assinatura.
  syntax:
    content: 'function listNext(nextPageLink: string, options: function, callback: ServiceCallback<RoleAssignmentListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listNextWithHttpOperationResponse
  name: listNextWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém todas as atribuições de função para a assinatura.
  syntax:
    content: 'function listNextWithHttpOperationResponse(nextPageLink: string, options?: function)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        NextLink da chamada bem-sucedida anterior à operação de lista.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-authorization.RoleAssignmentListResult>>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listWithHttpOperationResponse
  name: listWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém todas as atribuições de função para a assinatura.
  syntax:
    content: 'function listWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-authorization.RoleAssignmentListResult>>
  package: azure-arm-authorization
references:
- uid: azure-arm-authorization.RoleAssignmentCreateParameters
  spec.typeScript:
  - name: RoleAssignmentCreateParameters
    fullName: RoleAssignmentCreateParameters
    uid: azure-arm-authorization.RoleAssignmentCreateParameters
- uid: Promise<azure-arm-authorization.RoleAssignment>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: RoleAssignment
    fullName: RoleAssignment
    uid: azure-arm-authorization.RoleAssignment
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-authorization.RoleAssignment>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: RoleAssignment
    fullName: RoleAssignment
    uid: azure-arm-authorization.RoleAssignment
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-authorization.RoleAssignment>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: RoleAssignment
    fullName: RoleAssignment
    uid: azure-arm-authorization.RoleAssignment
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-authorization.RoleAssignmentListResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: RoleAssignmentListResult
    fullName: RoleAssignmentListResult
    uid: azure-arm-authorization.RoleAssignmentListResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: RoleAssignmentListResult
    fullName: RoleAssignmentListResult
    uid: azure-arm-authorization.RoleAssignmentListResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-authorization.RoleAssignmentListResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: RoleAssignmentListResult
    fullName: RoleAssignmentListResult
    uid: azure-arm-authorization.RoleAssignmentListResult
  - name: '>>'
    fullName: '>>'
