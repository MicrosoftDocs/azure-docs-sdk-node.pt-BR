### YamlMime:UniversalReference
ms.openlocfilehash: 62975cd56b2bf89e7158907fce365b3a6cebdf51
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 08/22/2018
ms.locfileid: "41683345"
items:
- uid: azure-iothub.Client
  name: Client
  fullName: Client
  children:
  - azure-iothub.Client.Callback
  - azure-iothub.Client.close
  - azure-iothub.Client.fromConnectionString
  - azure-iothub.Client.fromSharedAccessSignature
  - azure-iothub.Client.getFeedbackReceiver
  - azure-iothub.Client.getFileNotificationReceiver
  - azure-iothub.Client.invokeDeviceMethod
  - azure-iothub.Client.invokeDeviceMethod_1
  - azure-iothub.Client.open
  - azure-iothub.Client.send
  - azure-iothub.Client.setRetryPolicy
  - azure-iothub.Client.TransportCtor
  langs:
  - typeScript
  type: class
  summary: >
    O cliente do serviço IoT Hub é usado para se comunicar com dispositivos por meio de um hub IoT do Azure.

    Ele permite que o usuário do SDK:
      - Envie o dispositivo para nuvem (também conhecido como comandos) para dispositivos: comandos são enfileirados no IoT Hub e entregues de forma assíncrona apenas quando o dispositivo está conectado. Comandos de apenas 50 podem ser enfileirados por dispositivo.
      - invocar métodos diretos em dispositivos (que só funcionará se o dispositivo está conectado no momento: é uma maneira síncrona de se comunicar com o dispositivo)
      - escute mensagens de comentários enviadas por dispositivos para os comandos anteriores.
      - escute notificações de upload de arquivo dos dispositivos.
    Os usuários devem criar novo <xref:azure-iothub.Client> instâncias chamando um dos métodos de fábrica [fromConnectionString](xref:azure-iothub.Client.fromConnectionString) ou [fromSharedAccessSignature](xref:azure-iothub.Client.fromSharedAccessSignature), para criar um cliente de serviço do IoT Hub.
  extends:
    name: EventEmitter
  package: azure-iothub
- uid: azure-iothub.Client.Callback
  name: Callback
  fullName: Callback<T>
  children: []
  langs:
  - typeScript
  type: class
  summary: "\n"
  package: azure-iothub
- uid: azure-iothub.Client.close
  name: close
  children: []
  type: method
  langs:
  - typeScript
  summary: Fecha a conexão a um hub IoT.
  syntax:
    content: 'function close(done?: Callback<Disconnected>)'
    parameters:
    - id: done
      type:
      - azure-iothub.Client.Callback<Disconnected>
      description: >
        A função ser chamada quando a operação for concluída. `done` será passado um argumento de objeto do erro, será nulo se a operação foi concluída com êxito.
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.fromConnectionString
  name: fromConnectionString
  children: []
  type: method
  langs:
  - typeScript
  summary: Cria um cliente de serviço do IoT Hub da cadeia de conexão fornecido usando o transporte padrão (Amqp) ou o especificado no segundo argumento.
  syntax:
    content: 'static function fromConnectionString(connStr: string, transportCtor?: Client.TransportCtor)'
    parameters:
    - id: connStr
      type:
      - string
      description: Uma cadeia de caracteres de conexão que encapsula as permissões de "conexão de dispositivo" em um hub IoT.
    - id: transportCtor
      type:
      - azure-iothub.Client.TransportCtor
      description: ''
      optional: true
    return:
      type:
      - azure-iothub.Client
  package: azure-iothub
- uid: azure-iothub.Client.fromSharedAccessSignature
  name: fromSharedAccessSignature
  children: []
  type: method
  langs:
  - typeScript
  summary: Cria um cliente de serviço do IoT Hub da assinatura de acesso compartilhado usando o transporte padrão (Amqp) ou daquele especificado no segundo argumento.
  syntax:
    content: 'static function fromSharedAccessSignature(sharedAccessSignature: string, transportCtor?: Client.TransportCtor)'
    parameters:
    - id: sharedAccessSignature
      type:
      - string
      description: Uma assinatura de acesso compartilhado que encapsula as permissões de "conexão de serviço" em um hub IoT.
    - id: transportCtor
      type:
      - azure-iothub.Client.TransportCtor
      description: ''
      optional: true
    return:
      type:
      - azure-iothub.Client
  package: azure-iothub
- uid: azure-iothub.Client.getFeedbackReceiver
  name: getFeedbackReceiver
  children: []
  type: method
  langs:
  - typeScript
  summary: Retorna um objeto AmqpReceiver que emite eventos quando novas mensagens de comentários são recebidas pelo cliente.
  syntax:
    content: 'function getFeedbackReceiver(done: Callback<ServiceReceiver>)'
    parameters:
    - id: done
      type:
      - azure-iothub.Client.Callback<azure-iothub.Client.ServiceReceiver>
      description: >
        A função ser chamada quando a operação for concluída. `done` será chamado com dois argumentos: um objeto de erro (pode ser nulo) e um objeto AmqpReceiver.
  package: azure-iothub
- uid: azure-iothub.Client.getFileNotificationReceiver
  name: getFileNotificationReceiver
  children: []
  type: method
  langs:
  - typeScript
  summary: Retorna um objeto AmqpReceiver que emite eventos quando novas notificações de upload de arquivo são recebidas pelo cliente.
  syntax:
    content: 'function getFileNotificationReceiver(done: Callback<ServiceReceiver>)'
    parameters:
    - id: done
      type:
      - azure-iothub.Client.Callback<azure-iothub.Client.ServiceReceiver>
      description: >
        A função ser chamada quando a operação for concluída. `done` será chamado com dois argumentos: um objeto de erro (pode ser nulo) e um objeto AmqpReceiver.
  package: azure-iothub
- uid: azure-iothub.Client.invokeDeviceMethod
  name: invokeDeviceMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Invoca um método em um determinado dispositivo ou módulo.
  syntax:
    content: 'function invokeDeviceMethod(deviceId: string, methodParams: DeviceMethodParams, done?: Callback<any>)'
    parameters:
    - id: deviceId
      type:
      - string
      description: O identificador de uma identidade de dispositivo existente.
    - id: methodParams
      type:
      - azure-iothub.DeviceMethodParams
      description: ''
    - id: done
      type:
      - azure-iothub.Client.Callback<any>
      description: >
        O retorno de chamada para chamar com o resultado da execução do método.
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.invokeDeviceMethod_1
  name: invokeDeviceMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Invoca um método em um determinado dispositivo ou módulo.
  syntax:
    content: 'function invokeDeviceMethod(deviceId: string, moduleId: string, methodParams: DeviceMethodParams, done?: Callback<any>)'
    parameters:
    - id: deviceId
      type:
      - string
      description: ''
    - id: moduleId
      type:
      - string
      description: ''
    - id: methodParams
      type:
      - azure-iothub.DeviceMethodParams
      description: ''
    - id: done
      type:
      - azure-iothub.Client.Callback<any>
      description: ''
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.open
  name: open
  children: []
  type: method
  langs:
  - typeScript
  summary: Abre a conexão a um hub IoT.
  syntax:
    content: 'function open(done?: Callback<Connected>)'
    parameters:
    - id: done
      type:
      - azure-iothub.Client.Callback<Connected>
      description: >
        A função ser chamada quando a operação for concluída. `done` será passado um argumento de objeto do erro, será nulo se a operação foi concluída com êxito.
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.send
  name: send
  children: []
  type: method
  langs:
  - typeScript
  summary: Envia uma mensagem para um dispositivo.
  syntax:
    content: 'function send(deviceId: string, message: Message | Message.BufferConvertible, done?: Callback<MessageEnqueued>)'
    parameters:
    - id: deviceId
      type:
      - string
      description: O identificador de uma identidade de dispositivo existente.
    - id: message
      type:
      - Message | Message.BufferConvertible
      description: >-
        O corpo da mensagem a ser enviada para o dispositivo.

        Se `message` não é do tipo [mensagem](xref:azure-iot-common.Message), ele será convertido.
    - id: done
      type:
      - azure-iothub.Client.Callback<MessageEnqueued>
      description: >
        A função ser chamada quando a operação for concluída. `done` será chamado com dois argumentos: um objeto de erro (pode ser nulo) e um objeto de resposta específico de transporte útil para depuração ou registro em log.
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.setRetryPolicy
  name: setRetryPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Defina a política usada pelo cliente para tentar novamente as operações de rede.
  syntax:
    content: 'function setRetryPolicy(policy: RetryPolicy)'
    parameters:
    - id: policy
      type:
      - RetryPolicy
      description: >
        política usada para repetir operações (por exemplo. Abrir, enviar, etc.).

        O SDK vem com diretivas "internas" 2: ExponentialBackoffWithJitter (padrão) e NoRetry (para cancelar qualquer forma de repetição). O usuário também pode passar seu próprio objeto desde que ele implementa 2 métodos:-shouldRetry(err: Error): boolean: indica uma operação deve ser repetida com base no tipo de erro - nextRetryTimeout (retryCount: número, limitado: booleano): número: retorna o tempo de espera (em milissegundos) antes de tentar novamente com base em relativos ao número de tentativas (retryCount) e o fato de que o erro é um erro de limitação ou não.
  package: azure-iothub
- uid: azure-iothub.Client.TransportCtor
  name: TransportCtor
  fullName: TransportCtor
  children: []
  langs:
  - typeScript
  type: class
  summary: "\n"
  package: azure-iothub
references:
- uid: azure-iothub.Client.Callback<MessageAbandoned>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <MessageAbandoned>
    fullName: <MessageAbandoned>
- uid: azure-iothub.Client.Callback<MessageCompleted>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <MessageCompleted>
    fullName: <MessageCompleted>
- uid: azure-iothub.Client.Callback<MessageRejected>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <MessageRejected>
    fullName: <MessageRejected>
- uid: azure-iothub.Client.Callback<Connected>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <Connected>
    fullName: <Connected>
- uid: azure-iothub.Client.Callback<Disconnected>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <Disconnected>
    fullName: <Disconnected>
- uid: azure-iothub.Client.Callback<azure-iothub.Client.ServiceReceiver>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <
    fullName: <
  - name: ServiceReceiver
    fullName: ServiceReceiver
    uid: azure-iothub.Client.ServiceReceiver
  - name: '>'
    fullName: '>'
- uid: azure-iothub.Client.Callback<MessageEnqueued>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <MessageEnqueued>
    fullName: <MessageEnqueued>
- uid: azure-iothub.DeviceMethodParams
  spec.typeScript:
  - name: DeviceMethodParams
    fullName: DeviceMethodParams
    uid: azure-iothub.DeviceMethodParams
- uid: azure-iothub.Client.Callback<any>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <any>
    fullName: <any>
- uid: azure-iothub.Client.TransportCtor
  spec.typeScript:
  - name: TransportCtor
    fullName: TransportCtor
    uid: azure-iothub.Client.TransportCtor
- uid: azure-iothub.Client
  spec.typeScript:
  - name: Client
    fullName: Client
    uid: azure-iothub.Client
