### YamlMime:UniversalReference
ms.openlocfilehash: 62975cd56b2bf89e7158907fce365b3a6cebdf51
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 08/12/2018
ms.locfileid: "40048377"
items:
- uid: azure-iothub.Client
  name: Client
  fullName: Client
  children:
  - azure-iothub.Client.Callback
  - azure-iothub.Client.close
  - azure-iothub.Client.fromConnectionString
  - azure-iothub.Client.fromSharedAccessSignature
  - azure-iothub.Client.getFeedbackReceiver
  - azure-iothub.Client.getFileNotificationReceiver
  - azure-iothub.Client.invokeDeviceMethod
  - azure-iothub.Client.invokeDeviceMethod_1
  - azure-iothub.Client.open
  - azure-iothub.Client.send
  - azure-iothub.Client.setRetryPolicy
  - azure-iothub.Client.TransportCtor
  langs:
  - typeScript
  type: class
  summary: >
    <span data-ttu-id="e78c2-101">O cliente do serviço IoT Hub é usado para se comunicar com dispositivos por meio de um hub IoT do Azure.</span><span class="sxs-lookup"><span data-stu-id="e78c2-101">The IoT Hub service client is used to communicate with devices through an Azure IoT hub.</span></span>

    <span data-ttu-id="e78c2-102">Ele permite que o usuário do SDK:</span><span class="sxs-lookup"><span data-stu-id="e78c2-102">It lets the SDK user:</span></span>
      - <span data-ttu-id="e78c2-103">Envie o dispositivo para nuvem (também conhecido como comandos) para dispositivos: comandos são enfileirados no IoT Hub e entregues de forma assíncrona apenas quando o dispositivo está conectado.</span><span class="sxs-lookup"><span data-stu-id="e78c2-103">send device-to-cloud (also known as commands) to devices: commands are queued on IoT Hub and delivered asynchronously only when the device is connected.</span></span> <span data-ttu-id="e78c2-104">Comandos de apenas 50 podem ser enfileirados por dispositivo.</span><span class="sxs-lookup"><span data-stu-id="e78c2-104">Only 50 commands can be queued per device.</span></span>
      - <span data-ttu-id="e78c2-105">invocar métodos diretos em dispositivos (que só funcionará se o dispositivo está conectado no momento: é uma maneira síncrona de se comunicar com o dispositivo)</span><span class="sxs-lookup"><span data-stu-id="e78c2-105">invoke direct methods on devices (which will work only if the device is currently connected: it's a synchronous way of communicating with the device)</span></span>
      - <span data-ttu-id="e78c2-106">escute mensagens de comentários enviadas por dispositivos para os comandos anteriores.</span><span class="sxs-lookup"><span data-stu-id="e78c2-106">listen for feedback messages sent by devices for previous commands.</span></span>
      - <span data-ttu-id="e78c2-107">escute notificações de upload de arquivo dos dispositivos.</span><span class="sxs-lookup"><span data-stu-id="e78c2-107">listen for file upload notifications from devices.</span></span>
    <span data-ttu-id="e78c2-108">Os usuários devem criar novo <xref:azure-iothub.Client> instâncias chamando um dos métodos de fábrica [fromConnectionString](xref:azure-iothub.Client.fromConnectionString) ou [fromSharedAccessSignature](xref:azure-iothub.Client.fromSharedAccessSignature), para criar um cliente de serviço do IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="e78c2-108">Users should create new <xref:azure-iothub.Client> instances by calling one of the factory methods, [fromConnectionString](xref:azure-iothub.Client.fromConnectionString) or [fromSharedAccessSignature](xref:azure-iothub.Client.fromSharedAccessSignature), to create an IoT Hub service Client.</span></span>
  extends:
    name: EventEmitter
  package: azure-iothub
- uid: azure-iothub.Client.Callback
  name: Callback
  fullName: Callback<T>
  children: []
  langs:
  - typeScript
  type: class
  summary: "\n"
  package: azure-iothub
- uid: azure-iothub.Client.close
  name: close
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e78c2-109">Fecha a conexão a um hub IoT.</span><span class="sxs-lookup"><span data-stu-id="e78c2-109">Closes the connection to an IoT hub.</span></span>
  syntax:
    content: 'function close(done?: Callback<Disconnected>)'
    parameters:
    - id: done
      type:
      - azure-iothub.Client.Callback<Disconnected>
      description: >
        <span data-ttu-id="e78c2-110">A função ser chamada quando a operação for concluída.</span><span class="sxs-lookup"><span data-stu-id="e78c2-110">The function to call when the operation is complete.</span></span> <span data-ttu-id="e78c2-111">`done` será passado um argumento de objeto do erro, será nulo se a operação foi concluída com êxito.</span><span class="sxs-lookup"><span data-stu-id="e78c2-111">`done` will be passed an Error object argument, which will be null if the operation completed successfully.</span></span>
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.fromConnectionString
  name: fromConnectionString
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e78c2-112">Cria um cliente de serviço do IoT Hub da cadeia de conexão fornecido usando o transporte padrão (Amqp) ou o especificado no segundo argumento.</span><span class="sxs-lookup"><span data-stu-id="e78c2-112">Creates an IoT Hub service client from the given connection string using the default transport (Amqp) or the one specified in the second argument.</span></span>
  syntax:
    content: 'static function fromConnectionString(connStr: string, transportCtor?: Client.TransportCtor)'
    parameters:
    - id: connStr
      type:
      - string
      description: <span data-ttu-id="e78c2-113">Uma cadeia de caracteres de conexão que encapsula as permissões de "conexão de dispositivo" em um hub IoT.</span><span class="sxs-lookup"><span data-stu-id="e78c2-113">A connection string which encapsulates "device connect" permissions on an IoT hub.</span></span>
    - id: transportCtor
      type:
      - azure-iothub.Client.TransportCtor
      description: ''
      optional: true
    return:
      type:
      - azure-iothub.Client
  package: azure-iothub
- uid: azure-iothub.Client.fromSharedAccessSignature
  name: fromSharedAccessSignature
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e78c2-114">Cria um cliente de serviço do IoT Hub da assinatura de acesso compartilhado usando o transporte padrão (Amqp) ou daquele especificado no segundo argumento.</span><span class="sxs-lookup"><span data-stu-id="e78c2-114">Creates an IoT Hub service client from the given shared access signature using the default transport (Amqp) or the one specified in the second argument.</span></span>
  syntax:
    content: 'static function fromSharedAccessSignature(sharedAccessSignature: string, transportCtor?: Client.TransportCtor)'
    parameters:
    - id: sharedAccessSignature
      type:
      - string
      description: <span data-ttu-id="e78c2-115">Uma assinatura de acesso compartilhado que encapsula as permissões de "conexão de serviço" em um hub IoT.</span><span class="sxs-lookup"><span data-stu-id="e78c2-115">A shared access signature which encapsulates "service connect" permissions on an IoT hub.</span></span>
    - id: transportCtor
      type:
      - azure-iothub.Client.TransportCtor
      description: ''
      optional: true
    return:
      type:
      - azure-iothub.Client
  package: azure-iothub
- uid: azure-iothub.Client.getFeedbackReceiver
  name: getFeedbackReceiver
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e78c2-116">Retorna um objeto AmqpReceiver que emite eventos quando novas mensagens de comentários são recebidas pelo cliente.</span><span class="sxs-lookup"><span data-stu-id="e78c2-116">Returns a AmqpReceiver object which emits events when new feedback messages are received by the client.</span></span>
  syntax:
    content: 'function getFeedbackReceiver(done: Callback<ServiceReceiver>)'
    parameters:
    - id: done
      type:
      - azure-iothub.Client.Callback<azure-iothub.Client.ServiceReceiver>
      description: >
        <span data-ttu-id="e78c2-117">A função ser chamada quando a operação for concluída.</span><span class="sxs-lookup"><span data-stu-id="e78c2-117">The function to call when the operation is complete.</span></span> <span data-ttu-id="e78c2-118">`done` será chamado com dois argumentos: um objeto de erro (pode ser nulo) e um objeto AmqpReceiver.</span><span class="sxs-lookup"><span data-stu-id="e78c2-118">`done` will be called with two arguments: an Error object (can be null) and a AmqpReceiver object.</span></span>
  package: azure-iothub
- uid: azure-iothub.Client.getFileNotificationReceiver
  name: getFileNotificationReceiver
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e78c2-119">Retorna um objeto AmqpReceiver que emite eventos quando novas notificações de upload de arquivo são recebidas pelo cliente.</span><span class="sxs-lookup"><span data-stu-id="e78c2-119">Returns a AmqpReceiver object which emits events when new file upload notifications are received by the client.</span></span>
  syntax:
    content: 'function getFileNotificationReceiver(done: Callback<ServiceReceiver>)'
    parameters:
    - id: done
      type:
      - azure-iothub.Client.Callback<azure-iothub.Client.ServiceReceiver>
      description: >
        <span data-ttu-id="e78c2-120">A função ser chamada quando a operação for concluída.</span><span class="sxs-lookup"><span data-stu-id="e78c2-120">The function to call when the operation is complete.</span></span> <span data-ttu-id="e78c2-121">`done` será chamado com dois argumentos: um objeto de erro (pode ser nulo) e um objeto AmqpReceiver.</span><span class="sxs-lookup"><span data-stu-id="e78c2-121">`done` will be called with two arguments: an Error object (can be null) and a AmqpReceiver object.</span></span>
  package: azure-iothub
- uid: azure-iothub.Client.invokeDeviceMethod
  name: invokeDeviceMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e78c2-122">Invoca um método em um determinado dispositivo ou módulo.</span><span class="sxs-lookup"><span data-stu-id="e78c2-122">Invokes a method on a particular device or module.</span></span>
  syntax:
    content: 'function invokeDeviceMethod(deviceId: string, methodParams: DeviceMethodParams, done?: Callback<any>)'
    parameters:
    - id: deviceId
      type:
      - string
      description: <span data-ttu-id="e78c2-123">O identificador de uma identidade de dispositivo existente.</span><span class="sxs-lookup"><span data-stu-id="e78c2-123">The identifier of an existing device identity.</span></span>
    - id: methodParams
      type:
      - azure-iothub.DeviceMethodParams
      description: ''
    - id: done
      type:
      - azure-iothub.Client.Callback<any>
      description: >
        <span data-ttu-id="e78c2-124">O retorno de chamada para chamar com o resultado da execução do método.</span><span class="sxs-lookup"><span data-stu-id="e78c2-124">The callback to call with the result of the method execution.</span></span>
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.invokeDeviceMethod_1
  name: invokeDeviceMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e78c2-125">Invoca um método em um determinado dispositivo ou módulo.</span><span class="sxs-lookup"><span data-stu-id="e78c2-125">Invokes a method on a particular device or module.</span></span>
  syntax:
    content: 'function invokeDeviceMethod(deviceId: string, moduleId: string, methodParams: DeviceMethodParams, done?: Callback<any>)'
    parameters:
    - id: deviceId
      type:
      - string
      description: ''
    - id: moduleId
      type:
      - string
      description: ''
    - id: methodParams
      type:
      - azure-iothub.DeviceMethodParams
      description: ''
    - id: done
      type:
      - azure-iothub.Client.Callback<any>
      description: ''
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.open
  name: open
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e78c2-126">Abre a conexão a um hub IoT.</span><span class="sxs-lookup"><span data-stu-id="e78c2-126">Opens the connection to an IoT hub.</span></span>
  syntax:
    content: 'function open(done?: Callback<Connected>)'
    parameters:
    - id: done
      type:
      - azure-iothub.Client.Callback<Connected>
      description: >
        <span data-ttu-id="e78c2-127">A função ser chamada quando a operação for concluída.</span><span class="sxs-lookup"><span data-stu-id="e78c2-127">The function to call when the operation is complete.</span></span> <span data-ttu-id="e78c2-128">`done` será passado um argumento de objeto do erro, será nulo se a operação foi concluída com êxito.</span><span class="sxs-lookup"><span data-stu-id="e78c2-128">`done` will be passed an Error object argument, which will be null if the operation completed successfully.</span></span>
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.send
  name: send
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e78c2-129">Envia uma mensagem para um dispositivo.</span><span class="sxs-lookup"><span data-stu-id="e78c2-129">Sends a message to a device.</span></span>
  syntax:
    content: 'function send(deviceId: string, message: Message | Message.BufferConvertible, done?: Callback<MessageEnqueued>)'
    parameters:
    - id: deviceId
      type:
      - string
      description: <span data-ttu-id="e78c2-130">O identificador de uma identidade de dispositivo existente.</span><span class="sxs-lookup"><span data-stu-id="e78c2-130">The identifier of an existing device identity.</span></span>
    - id: message
      type:
      - Message | Message.BufferConvertible
      description: >-
        <span data-ttu-id="e78c2-131">O corpo da mensagem a ser enviada para o dispositivo.</span><span class="sxs-lookup"><span data-stu-id="e78c2-131">The body of the message to send to the device.</span></span>

        <span data-ttu-id="e78c2-132">Se `message` não é do tipo [mensagem](xref:azure-iot-common.Message), ele será convertido.</span><span class="sxs-lookup"><span data-stu-id="e78c2-132">If `message` is not of type [Message](xref:azure-iot-common.Message), it will be converted.</span></span>
    - id: done
      type:
      - azure-iothub.Client.Callback<MessageEnqueued>
      description: >
        <span data-ttu-id="e78c2-133">A função ser chamada quando a operação for concluída.</span><span class="sxs-lookup"><span data-stu-id="e78c2-133">The function to call when the operation is complete.</span></span> <span data-ttu-id="e78c2-134">`done` será chamado com dois argumentos: um objeto de erro (pode ser nulo) e um objeto de resposta específico de transporte útil para depuração ou registro em log.</span><span class="sxs-lookup"><span data-stu-id="e78c2-134">`done` will be called with two arguments: an Error object (can be null) and a transport-specific response object useful for logging or debugging.</span></span>
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.setRetryPolicy
  name: setRetryPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e78c2-135">Defina a política usada pelo cliente para tentar novamente as operações de rede.</span><span class="sxs-lookup"><span data-stu-id="e78c2-135">Set the policy used by the client to retry network operations.</span></span>
  syntax:
    content: 'function setRetryPolicy(policy: RetryPolicy)'
    parameters:
    - id: policy
      type:
      - RetryPolicy
      description: >
        <span data-ttu-id="e78c2-136">política usada para repetir operações (por exemplo.</span><span class="sxs-lookup"><span data-stu-id="e78c2-136">policy used to retry operations (eg.</span></span> <span data-ttu-id="e78c2-137">Abrir, enviar, etc.).</span><span class="sxs-lookup"><span data-stu-id="e78c2-137">open, send, etc.).</span></span>

        <span data-ttu-id="e78c2-138">O SDK vem com diretivas "internas" 2: ExponentialBackoffWithJitter (padrão) e NoRetry (para cancelar qualquer forma de repetição).</span><span class="sxs-lookup"><span data-stu-id="e78c2-138">The SDK comes with 2 "built-in" policies: ExponentialBackoffWithJitter (default) and NoRetry (to cancel any form of retry).</span></span> <span data-ttu-id="e78c2-139">O usuário também pode passar seu próprio objeto desde que ele implementa 2 métodos:-shouldRetry(err: Error): boolean: indica uma operação deve ser repetida com base no tipo de erro - nextRetryTimeout (retryCount: número, limitado: booleano): número: retorna o tempo de espera (em milissegundos) antes de tentar novamente com base em relativos ao número de tentativas (retryCount) e o fato de que o erro é um erro de limitação ou não.</span><span class="sxs-lookup"><span data-stu-id="e78c2-139">The user can also pass its own object as long as it implements 2 methods: - shouldRetry(err: Error): boolean : indicates whether an operation should be retried based on the error type - nextRetryTimeout(retryCount: number, throttled: boolean): number : returns the time to wait (in milliseconds) before retrying based on the past number of attempts (retryCount) and the fact that the error is a throttling error or not.</span></span>
  package: azure-iothub
- uid: azure-iothub.Client.TransportCtor
  name: TransportCtor
  fullName: TransportCtor
  children: []
  langs:
  - typeScript
  type: class
  summary: "\n"
  package: azure-iothub
references:
- uid: azure-iothub.Client.Callback<MessageAbandoned>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <MessageAbandoned>
    fullName: <MessageAbandoned>
- uid: azure-iothub.Client.Callback<MessageCompleted>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <MessageCompleted>
    fullName: <MessageCompleted>
- uid: azure-iothub.Client.Callback<MessageRejected>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <MessageRejected>
    fullName: <MessageRejected>
- uid: azure-iothub.Client.Callback<Connected>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <Connected>
    fullName: <Connected>
- uid: azure-iothub.Client.Callback<Disconnected>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <Disconnected>
    fullName: <Disconnected>
- uid: azure-iothub.Client.Callback<azure-iothub.Client.ServiceReceiver>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <
    fullName: <
  - name: ServiceReceiver
    fullName: ServiceReceiver
    uid: azure-iothub.Client.ServiceReceiver
  - name: '>'
    fullName: '>'
- uid: azure-iothub.Client.Callback<MessageEnqueued>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <MessageEnqueued>
    fullName: <MessageEnqueued>
- uid: azure-iothub.DeviceMethodParams
  spec.typeScript:
  - name: DeviceMethodParams
    fullName: DeviceMethodParams
    uid: azure-iothub.DeviceMethodParams
- uid: azure-iothub.Client.Callback<any>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <any>
    fullName: <any>
- uid: azure-iothub.Client.TransportCtor
  spec.typeScript:
  - name: TransportCtor
    fullName: TransportCtor
    uid: azure-iothub.Client.TransportCtor
- uid: azure-iothub.Client
  spec.typeScript:
  - name: Client
    fullName: Client
    uid: azure-iothub.Client
