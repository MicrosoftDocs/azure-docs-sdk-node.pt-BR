### YamlMime:UniversalReference
items:
  - uid: azure-keyvault.KeyVaultClient
    name: KeyVaultClient
    fullName: KeyVaultClient
    children:
      - azure-keyvault.KeyVaultClient.acceptLanguage
      - azure-keyvault.KeyVaultClient.addUserAgentInfo
      - azure-keyvault.KeyVaultClient.apiVersion
      - azure-keyvault.KeyVaultClient.backupCertificate
      - azure-keyvault.KeyVaultClient.backupCertificate_2
      - azure-keyvault.KeyVaultClient.backupCertificate_1
      - azure-keyvault.KeyVaultClient.backupCertificateWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.backupKey
      - azure-keyvault.KeyVaultClient.backupKey_2
      - azure-keyvault.KeyVaultClient.backupKey_1
      - azure-keyvault.KeyVaultClient.backupKeyWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.backupSecret
      - azure-keyvault.KeyVaultClient.backupSecret_2
      - azure-keyvault.KeyVaultClient.backupSecret_1
      - azure-keyvault.KeyVaultClient.backupSecretWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.backupStorageAccount
      - azure-keyvault.KeyVaultClient.backupStorageAccount_2
      - azure-keyvault.KeyVaultClient.backupStorageAccount_1
      - azure-keyvault.KeyVaultClient.backupStorageAccountWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.createCertificate
      - azure-keyvault.KeyVaultClient.createCertificate_2
      - azure-keyvault.KeyVaultClient.createCertificate_1
      - azure-keyvault.KeyVaultClient.createCertificateWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.createKey
      - azure-keyvault.KeyVaultClient.createKey_2
      - azure-keyvault.KeyVaultClient.createKey_1
      - azure-keyvault.KeyVaultClient.createKeyWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.credentials
      - azure-keyvault.KeyVaultClient.decrypt
      - azure-keyvault.KeyVaultClient.decrypt_2
      - azure-keyvault.KeyVaultClient.decrypt_1
      - azure-keyvault.KeyVaultClient.decryptWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.deleteCertificate
      - azure-keyvault.KeyVaultClient.deleteCertificate_2
      - azure-keyvault.KeyVaultClient.deleteCertificate_1
      - azure-keyvault.KeyVaultClient.deleteCertificateContacts
      - azure-keyvault.KeyVaultClient.deleteCertificateContacts_2
      - azure-keyvault.KeyVaultClient.deleteCertificateContacts_1
      - azure-keyvault.KeyVaultClient.deleteCertificateContactsWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.deleteCertificateIssuer
      - azure-keyvault.KeyVaultClient.deleteCertificateIssuer_2
      - azure-keyvault.KeyVaultClient.deleteCertificateIssuer_1
      - azure-keyvault.KeyVaultClient.deleteCertificateIssuerWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.deleteCertificateOperation
      - azure-keyvault.KeyVaultClient.deleteCertificateOperation_2
      - azure-keyvault.KeyVaultClient.deleteCertificateOperation_1
      - azure-keyvault.KeyVaultClient.deleteCertificateOperationWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.deleteCertificateWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.deleteKey
      - azure-keyvault.KeyVaultClient.deleteKey_2
      - azure-keyvault.KeyVaultClient.deleteKey_1
      - azure-keyvault.KeyVaultClient.deleteKeyWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.deleteSasDefinition
      - azure-keyvault.KeyVaultClient.deleteSasDefinition_2
      - azure-keyvault.KeyVaultClient.deleteSasDefinition_1
      - azure-keyvault.KeyVaultClient.deleteSasDefinitionWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.deleteSecret
      - azure-keyvault.KeyVaultClient.deleteSecret_2
      - azure-keyvault.KeyVaultClient.deleteSecret_1
      - azure-keyvault.KeyVaultClient.deleteSecretWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.deleteStorageAccount
      - azure-keyvault.KeyVaultClient.deleteStorageAccount_2
      - azure-keyvault.KeyVaultClient.deleteStorageAccount_1
      - azure-keyvault.KeyVaultClient.deleteStorageAccountWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.encrypt
      - azure-keyvault.KeyVaultClient.encrypt_2
      - azure-keyvault.KeyVaultClient.encrypt_1
      - azure-keyvault.KeyVaultClient.encryptWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.generateClientRequestId
      - azure-keyvault.KeyVaultClient.getCertificate
      - azure-keyvault.KeyVaultClient.getCertificate_2
      - azure-keyvault.KeyVaultClient.getCertificate_1
      - azure-keyvault.KeyVaultClient.getCertificateContacts
      - azure-keyvault.KeyVaultClient.getCertificateContacts_2
      - azure-keyvault.KeyVaultClient.getCertificateContacts_1
      - azure-keyvault.KeyVaultClient.getCertificateContactsWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getCertificateIssuer
      - azure-keyvault.KeyVaultClient.getCertificateIssuer_2
      - azure-keyvault.KeyVaultClient.getCertificateIssuer_1
      - azure-keyvault.KeyVaultClient.getCertificateIssuers
      - azure-keyvault.KeyVaultClient.getCertificateIssuers_2
      - azure-keyvault.KeyVaultClient.getCertificateIssuers_1
      - azure-keyvault.KeyVaultClient.getCertificateIssuersNext
      - azure-keyvault.KeyVaultClient.getCertificateIssuersNext_2
      - azure-keyvault.KeyVaultClient.getCertificateIssuersNext_1
      - azure-keyvault.KeyVaultClient.getCertificateIssuersNextWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getCertificateIssuersWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getCertificateIssuerWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getCertificateOperation
      - azure-keyvault.KeyVaultClient.getCertificateOperation_2
      - azure-keyvault.KeyVaultClient.getCertificateOperation_1
      - azure-keyvault.KeyVaultClient.getCertificateOperationWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getCertificatePolicy
      - azure-keyvault.KeyVaultClient.getCertificatePolicy_2
      - azure-keyvault.KeyVaultClient.getCertificatePolicy_1
      - azure-keyvault.KeyVaultClient.getCertificatePolicyWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getCertificates
      - azure-keyvault.KeyVaultClient.getCertificates_2
      - azure-keyvault.KeyVaultClient.getCertificates_1
      - azure-keyvault.KeyVaultClient.getCertificatesNext
      - azure-keyvault.KeyVaultClient.getCertificatesNext_2
      - azure-keyvault.KeyVaultClient.getCertificatesNext_1
      - azure-keyvault.KeyVaultClient.getCertificatesNextWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getCertificatesWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getCertificateVersions
      - azure-keyvault.KeyVaultClient.getCertificateVersions_2
      - azure-keyvault.KeyVaultClient.getCertificateVersions_1
      - azure-keyvault.KeyVaultClient.getCertificateVersionsNext
      - azure-keyvault.KeyVaultClient.getCertificateVersionsNext_2
      - azure-keyvault.KeyVaultClient.getCertificateVersionsNext_1
      - azure-keyvault.KeyVaultClient.getCertificateVersionsNextWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getCertificateVersionsWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getCertificateWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getDeletedCertificate
      - azure-keyvault.KeyVaultClient.getDeletedCertificate_2
      - azure-keyvault.KeyVaultClient.getDeletedCertificate_1
      - azure-keyvault.KeyVaultClient.getDeletedCertificates
      - azure-keyvault.KeyVaultClient.getDeletedCertificates_2
      - azure-keyvault.KeyVaultClient.getDeletedCertificates_1
      - azure-keyvault.KeyVaultClient.getDeletedCertificatesNext
      - azure-keyvault.KeyVaultClient.getDeletedCertificatesNext_2
      - azure-keyvault.KeyVaultClient.getDeletedCertificatesNext_1
      - azure-keyvault.KeyVaultClient.getDeletedCertificatesNextWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getDeletedCertificatesWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getDeletedCertificateWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getDeletedKey
      - azure-keyvault.KeyVaultClient.getDeletedKey_2
      - azure-keyvault.KeyVaultClient.getDeletedKey_1
      - azure-keyvault.KeyVaultClient.getDeletedKeys
      - azure-keyvault.KeyVaultClient.getDeletedKeys_2
      - azure-keyvault.KeyVaultClient.getDeletedKeys_1
      - azure-keyvault.KeyVaultClient.getDeletedKeysNext
      - azure-keyvault.KeyVaultClient.getDeletedKeysNext_2
      - azure-keyvault.KeyVaultClient.getDeletedKeysNext_1
      - azure-keyvault.KeyVaultClient.getDeletedKeysNextWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getDeletedKeysWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getDeletedKeyWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getDeletedSasDefinition
      - azure-keyvault.KeyVaultClient.getDeletedSasDefinition_2
      - azure-keyvault.KeyVaultClient.getDeletedSasDefinition_1
      - azure-keyvault.KeyVaultClient.getDeletedSasDefinitions
      - azure-keyvault.KeyVaultClient.getDeletedSasDefinitions_2
      - azure-keyvault.KeyVaultClient.getDeletedSasDefinitions_1
      - azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsNext
      - azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsNext_2
      - azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsNext_1
      - azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsNextWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getDeletedSasDefinitionWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getDeletedSecret
      - azure-keyvault.KeyVaultClient.getDeletedSecret_2
      - azure-keyvault.KeyVaultClient.getDeletedSecret_1
      - azure-keyvault.KeyVaultClient.getDeletedSecrets
      - azure-keyvault.KeyVaultClient.getDeletedSecrets_2
      - azure-keyvault.KeyVaultClient.getDeletedSecrets_1
      - azure-keyvault.KeyVaultClient.getDeletedSecretsNext
      - azure-keyvault.KeyVaultClient.getDeletedSecretsNext_2
      - azure-keyvault.KeyVaultClient.getDeletedSecretsNext_1
      - azure-keyvault.KeyVaultClient.getDeletedSecretsNextWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getDeletedSecretsWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getDeletedSecretWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getDeletedStorageAccount
      - azure-keyvault.KeyVaultClient.getDeletedStorageAccount_2
      - azure-keyvault.KeyVaultClient.getDeletedStorageAccount_1
      - azure-keyvault.KeyVaultClient.getDeletedStorageAccounts
      - azure-keyvault.KeyVaultClient.getDeletedStorageAccounts_2
      - azure-keyvault.KeyVaultClient.getDeletedStorageAccounts_1
      - azure-keyvault.KeyVaultClient.getDeletedStorageAccountsNext
      - azure-keyvault.KeyVaultClient.getDeletedStorageAccountsNext_2
      - azure-keyvault.KeyVaultClient.getDeletedStorageAccountsNext_1
      - azure-keyvault.KeyVaultClient.getDeletedStorageAccountsNextWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getDeletedStorageAccountsWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getDeletedStorageAccountWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getKey
      - azure-keyvault.KeyVaultClient.getKey_2
      - azure-keyvault.KeyVaultClient.getKey_1
      - azure-keyvault.KeyVaultClient.getKeys
      - azure-keyvault.KeyVaultClient.getKeys_2
      - azure-keyvault.KeyVaultClient.getKeys_1
      - azure-keyvault.KeyVaultClient.getKeysNext
      - azure-keyvault.KeyVaultClient.getKeysNext_2
      - azure-keyvault.KeyVaultClient.getKeysNext_1
      - azure-keyvault.KeyVaultClient.getKeysNextWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getKeysWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getKeyVersions
      - azure-keyvault.KeyVaultClient.getKeyVersions_2
      - azure-keyvault.KeyVaultClient.getKeyVersions_1
      - azure-keyvault.KeyVaultClient.getKeyVersionsNext
      - azure-keyvault.KeyVaultClient.getKeyVersionsNext_2
      - azure-keyvault.KeyVaultClient.getKeyVersionsNext_1
      - azure-keyvault.KeyVaultClient.getKeyVersionsNextWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getKeyVersionsWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getKeyWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getLongRunningOperationResult_2
      - azure-keyvault.KeyVaultClient.getLongRunningOperationResult
      - azure-keyvault.KeyVaultClient.getLongRunningOperationResult_1
      - azure-keyvault.KeyVaultClient.getPackageJsonInfo
      - azure-keyvault.KeyVaultClient.getSasDefinition
      - azure-keyvault.KeyVaultClient.getSasDefinition_2
      - azure-keyvault.KeyVaultClient.getSasDefinition_1
      - azure-keyvault.KeyVaultClient.getSasDefinitions
      - azure-keyvault.KeyVaultClient.getSasDefinitions_2
      - azure-keyvault.KeyVaultClient.getSasDefinitions_1
      - azure-keyvault.KeyVaultClient.getSasDefinitionsNext
      - azure-keyvault.KeyVaultClient.getSasDefinitionsNext_2
      - azure-keyvault.KeyVaultClient.getSasDefinitionsNext_1
      - azure-keyvault.KeyVaultClient.getSasDefinitionsNextWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getSasDefinitionsWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getSasDefinitionWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getSecret
      - azure-keyvault.KeyVaultClient.getSecret_2
      - azure-keyvault.KeyVaultClient.getSecret_1
      - azure-keyvault.KeyVaultClient.getSecrets
      - azure-keyvault.KeyVaultClient.getSecrets_2
      - azure-keyvault.KeyVaultClient.getSecrets_1
      - azure-keyvault.KeyVaultClient.getSecretsNext
      - azure-keyvault.KeyVaultClient.getSecretsNext_2
      - azure-keyvault.KeyVaultClient.getSecretsNext_1
      - azure-keyvault.KeyVaultClient.getSecretsNextWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getSecretsWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getSecretVersions
      - azure-keyvault.KeyVaultClient.getSecretVersions_2
      - azure-keyvault.KeyVaultClient.getSecretVersions_1
      - azure-keyvault.KeyVaultClient.getSecretVersionsNext
      - azure-keyvault.KeyVaultClient.getSecretVersionsNext_2
      - azure-keyvault.KeyVaultClient.getSecretVersionsNext_1
      - azure-keyvault.KeyVaultClient.getSecretVersionsNextWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getSecretVersionsWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getSecretWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getStorageAccount
      - azure-keyvault.KeyVaultClient.getStorageAccount_2
      - azure-keyvault.KeyVaultClient.getStorageAccount_1
      - azure-keyvault.KeyVaultClient.getStorageAccounts
      - azure-keyvault.KeyVaultClient.getStorageAccounts_2
      - azure-keyvault.KeyVaultClient.getStorageAccounts_1
      - azure-keyvault.KeyVaultClient.getStorageAccountsNext
      - azure-keyvault.KeyVaultClient.getStorageAccountsNext_2
      - azure-keyvault.KeyVaultClient.getStorageAccountsNext_1
      - azure-keyvault.KeyVaultClient.getStorageAccountsNextWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getStorageAccountsWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getStorageAccountWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.importCertificate
      - azure-keyvault.KeyVaultClient.importCertificate_2
      - azure-keyvault.KeyVaultClient.importCertificate_1
      - azure-keyvault.KeyVaultClient.importCertificateWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.importKey
      - azure-keyvault.KeyVaultClient.importKey_2
      - azure-keyvault.KeyVaultClient.importKey_1
      - azure-keyvault.KeyVaultClient.importKeyWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.constructor
      - azure-keyvault.KeyVaultClient.longRunningOperationRetryTimeout
      - azure-keyvault.KeyVaultClient.mergeCertificate
      - azure-keyvault.KeyVaultClient.mergeCertificate_2
      - azure-keyvault.KeyVaultClient.mergeCertificate_1
      - azure-keyvault.KeyVaultClient.mergeCertificateWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.purgeDeletedCertificate
      - azure-keyvault.KeyVaultClient.purgeDeletedCertificate_2
      - azure-keyvault.KeyVaultClient.purgeDeletedCertificate_1
      - azure-keyvault.KeyVaultClient.purgeDeletedCertificateWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.purgeDeletedKey
      - azure-keyvault.KeyVaultClient.purgeDeletedKey_2
      - azure-keyvault.KeyVaultClient.purgeDeletedKey_1
      - azure-keyvault.KeyVaultClient.purgeDeletedKeyWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.purgeDeletedSecret
      - azure-keyvault.KeyVaultClient.purgeDeletedSecret_2
      - azure-keyvault.KeyVaultClient.purgeDeletedSecret_1
      - azure-keyvault.KeyVaultClient.purgeDeletedSecretWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.purgeDeletedStorageAccount
      - azure-keyvault.KeyVaultClient.purgeDeletedStorageAccount_2
      - azure-keyvault.KeyVaultClient.purgeDeletedStorageAccount_1
      - azure-keyvault.KeyVaultClient.purgeDeletedStorageAccountWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.recoverDeletedCertificate
      - azure-keyvault.KeyVaultClient.recoverDeletedCertificate_2
      - azure-keyvault.KeyVaultClient.recoverDeletedCertificate_1
      - azure-keyvault.KeyVaultClient.recoverDeletedCertificateWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.recoverDeletedKey
      - azure-keyvault.KeyVaultClient.recoverDeletedKey_2
      - azure-keyvault.KeyVaultClient.recoverDeletedKey_1
      - azure-keyvault.KeyVaultClient.recoverDeletedKeyWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.recoverDeletedSasDefinition
      - azure-keyvault.KeyVaultClient.recoverDeletedSasDefinition_2
      - azure-keyvault.KeyVaultClient.recoverDeletedSasDefinition_1
      - azure-keyvault.KeyVaultClient.recoverDeletedSasDefinitionWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.recoverDeletedSecret
      - azure-keyvault.KeyVaultClient.recoverDeletedSecret_2
      - azure-keyvault.KeyVaultClient.recoverDeletedSecret_1
      - azure-keyvault.KeyVaultClient.recoverDeletedSecretWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.recoverDeletedStorageAccount
      - azure-keyvault.KeyVaultClient.recoverDeletedStorageAccount_2
      - azure-keyvault.KeyVaultClient.recoverDeletedStorageAccount_1
      - azure-keyvault.KeyVaultClient.recoverDeletedStorageAccountWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.regenerateStorageAccountKey
      - azure-keyvault.KeyVaultClient.regenerateStorageAccountKey_2
      - azure-keyvault.KeyVaultClient.regenerateStorageAccountKey_1
      - azure-keyvault.KeyVaultClient.regenerateStorageAccountKeyWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.restoreCertificate
      - azure-keyvault.KeyVaultClient.restoreCertificate_2
      - azure-keyvault.KeyVaultClient.restoreCertificate_1
      - azure-keyvault.KeyVaultClient.restoreCertificateWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.restoreKey
      - azure-keyvault.KeyVaultClient.restoreKey_2
      - azure-keyvault.KeyVaultClient.restoreKey_1
      - azure-keyvault.KeyVaultClient.restoreKeyWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.restoreSecret
      - azure-keyvault.KeyVaultClient.restoreSecret_2
      - azure-keyvault.KeyVaultClient.restoreSecret_1
      - azure-keyvault.KeyVaultClient.restoreSecretWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.restoreStorageAccount
      - azure-keyvault.KeyVaultClient.restoreStorageAccount_2
      - azure-keyvault.KeyVaultClient.restoreStorageAccount_1
      - azure-keyvault.KeyVaultClient.restoreStorageAccountWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.sendLongRunningRequest_1
      - azure-keyvault.KeyVaultClient.sendLongRunningRequest
      - azure-keyvault.KeyVaultClient.sendLongRunningRequestWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.sendRequest_1
      - azure-keyvault.KeyVaultClient.sendRequest
      - azure-keyvault.KeyVaultClient.sendRequestWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.setCertificateContacts
      - azure-keyvault.KeyVaultClient.setCertificateContacts_2
      - azure-keyvault.KeyVaultClient.setCertificateContacts_1
      - azure-keyvault.KeyVaultClient.setCertificateContactsWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.setCertificateIssuer
      - azure-keyvault.KeyVaultClient.setCertificateIssuer_2
      - azure-keyvault.KeyVaultClient.setCertificateIssuer_1
      - azure-keyvault.KeyVaultClient.setCertificateIssuerWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.setSasDefinition
      - azure-keyvault.KeyVaultClient.setSasDefinition_2
      - azure-keyvault.KeyVaultClient.setSasDefinition_1
      - azure-keyvault.KeyVaultClient.setSasDefinitionWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.setSecret
      - azure-keyvault.KeyVaultClient.setSecret_2
      - azure-keyvault.KeyVaultClient.setSecret_1
      - azure-keyvault.KeyVaultClient.setSecretWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.setStorageAccount
      - azure-keyvault.KeyVaultClient.setStorageAccount_2
      - azure-keyvault.KeyVaultClient.setStorageAccount_1
      - azure-keyvault.KeyVaultClient.setStorageAccountWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.sign
      - azure-keyvault.KeyVaultClient.sign_2
      - azure-keyvault.KeyVaultClient.sign_1
      - azure-keyvault.KeyVaultClient.signWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.unwrapKey
      - azure-keyvault.KeyVaultClient.unwrapKey_2
      - azure-keyvault.KeyVaultClient.unwrapKey_1
      - azure-keyvault.KeyVaultClient.unwrapKeyWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.updateCertificate
      - azure-keyvault.KeyVaultClient.updateCertificate_2
      - azure-keyvault.KeyVaultClient.updateCertificate_1
      - azure-keyvault.KeyVaultClient.updateCertificateIssuer
      - azure-keyvault.KeyVaultClient.updateCertificateIssuer_2
      - azure-keyvault.KeyVaultClient.updateCertificateIssuer_1
      - azure-keyvault.KeyVaultClient.updateCertificateIssuerWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.updateCertificateOperation
      - azure-keyvault.KeyVaultClient.updateCertificateOperation_2
      - azure-keyvault.KeyVaultClient.updateCertificateOperation_1
      - azure-keyvault.KeyVaultClient.updateCertificateOperationWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.updateCertificatePolicy
      - azure-keyvault.KeyVaultClient.updateCertificatePolicy_2
      - azure-keyvault.KeyVaultClient.updateCertificatePolicy_1
      - azure-keyvault.KeyVaultClient.updateCertificatePolicyWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.updateCertificateWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.updateKey
      - azure-keyvault.KeyVaultClient.updateKey_2
      - azure-keyvault.KeyVaultClient.updateKey_1
      - azure-keyvault.KeyVaultClient.updateKeyWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.updateSasDefinition
      - azure-keyvault.KeyVaultClient.updateSasDefinition_2
      - azure-keyvault.KeyVaultClient.updateSasDefinition_1
      - azure-keyvault.KeyVaultClient.updateSasDefinitionWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.updateSecret
      - azure-keyvault.KeyVaultClient.updateSecret_2
      - azure-keyvault.KeyVaultClient.updateSecret_1
      - azure-keyvault.KeyVaultClient.updateSecretWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.updateStorageAccount
      - azure-keyvault.KeyVaultClient.updateStorageAccount_2
      - azure-keyvault.KeyVaultClient.updateStorageAccount_1
      - azure-keyvault.KeyVaultClient.updateStorageAccountWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.verify
      - azure-keyvault.KeyVaultClient.verify_2
      - azure-keyvault.KeyVaultClient.verify_1
      - azure-keyvault.KeyVaultClient.verifyWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.wrapKey
      - azure-keyvault.KeyVaultClient.wrapKey_2
      - azure-keyvault.KeyVaultClient.wrapKey_1
      - azure-keyvault.KeyVaultClient.wrapKeyWithHttpOperationResponse
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: AzureServiceClient
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.acceptLanguage
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.addUserAgentInfo
    name: addUserAgentInfo(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-101">Adiciona informações personalizadas ao cabeçalho de agente do usuário</span><span class="sxs-lookup"><span data-stu-id="80da9-101">Adds custom information to user agent header</span></span>
    syntax:
      content: 'function addUserAgentInfo(additionalUserAgentInfo: any)'
      parameters:
        - id: additionalUserAgentInfo
          type:
            - any
          description: |
            <span data-ttu-id="80da9-102">informações a serem adicionadas ao cabeçalho de agente do usuário, como cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="80da9-102">information to be added to user agent header, as string.</span></span>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.apiVersion
    name: apiVersion
    fullName: apiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'apiVersion: string'
      return:
        type:
          - string
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.backupCertificate
    name: 'backupCertificate(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function backupCertificate(vaultBaseUrl: string, certificateName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-103">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-103">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-104">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-104">The name of the certificate.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.BackupCertificateResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.backupCertificate_2
    name: 'backupCertificate(string, string, Object, ServiceCallback<BackupCertificateResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function backupCertificate(vaultBaseUrl: string, certificateName: string, options: Object, callback: ServiceCallback<BackupCertificateResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.BackupCertificateResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.BackupCertificateResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.backupCertificate_1
    name: 'backupCertificate(string, string, ServiceCallback<BackupCertificateResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function backupCertificate(vaultBaseUrl: string, certificateName: string, callback: ServiceCallback<BackupCertificateResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.BackupCertificateResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.BackupCertificateResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.backupCertificateWithHttpOperationResponse
    name: 'backupCertificateWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function backupCertificateWithHttpOperationResponse(vaultBaseUrl: string, certificateName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-105">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-105">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-106">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-106">The name of the certificate.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.BackupCertificateResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.backupKey
    name: 'backupKey(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function backupKey(vaultBaseUrl: string, keyName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-107">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-107">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-108">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-108">The name of the key.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.BackupKeyResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.backupKey_2
    name: 'backupKey(string, string, Object, ServiceCallback<BackupKeyResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function backupKey(vaultBaseUrl: string, keyName: string, options: Object, callback: ServiceCallback<BackupKeyResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.BackupKeyResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.BackupKeyResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.backupKey_1
    name: 'backupKey(string, string, ServiceCallback<BackupKeyResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function backupKey(vaultBaseUrl: string, keyName: string, callback: ServiceCallback<BackupKeyResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.BackupKeyResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.BackupKeyResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.backupKeyWithHttpOperationResponse
    name: 'backupKeyWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function backupKeyWithHttpOperationResponse(vaultBaseUrl: string, keyName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-109">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-109">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-110">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-110">The name of the key.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.BackupKeyResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.backupSecret
    name: 'backupSecret(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function backupSecret(vaultBaseUrl: string, secretName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-111">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-111">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: secretName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-112">O nome do segredo.</span><span class="sxs-lookup"><span data-stu-id="80da9-112">The name of the secret.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.BackupSecretResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.backupSecret_2
    name: 'backupSecret(string, string, Object, ServiceCallback<BackupSecretResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function backupSecret(vaultBaseUrl: string, secretName: string, options: Object, callback: ServiceCallback<BackupSecretResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.BackupSecretResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.BackupSecretResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.backupSecret_1
    name: 'backupSecret(string, string, ServiceCallback<BackupSecretResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function backupSecret(vaultBaseUrl: string, secretName: string, callback: ServiceCallback<BackupSecretResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.BackupSecretResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.BackupSecretResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.backupSecretWithHttpOperationResponse
    name: 'backupSecretWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function backupSecretWithHttpOperationResponse(vaultBaseUrl: string, secretName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-113">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-113">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: secretName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-114">O nome do segredo.</span><span class="sxs-lookup"><span data-stu-id="80da9-114">The name of the secret.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.BackupSecretResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.backupStorageAccount
    name: 'backupStorageAccount(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function backupStorageAccount(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-115">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-115">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-116">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-116">The name of the storage account.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.BackupStorageResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.backupStorageAccount_2
    name: 'backupStorageAccount(string, string, Object, ServiceCallback<BackupStorageResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function backupStorageAccount(vaultBaseUrl: string, storageAccountName: string, options: Object, callback: ServiceCallback<BackupStorageResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.BackupStorageResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.BackupStorageResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.backupStorageAccount_1
    name: 'backupStorageAccount(string, string, ServiceCallback<BackupStorageResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function backupStorageAccount(vaultBaseUrl: string, storageAccountName: string, callback: ServiceCallback<BackupStorageResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.BackupStorageResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.BackupStorageResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.backupStorageAccountWithHttpOperationResponse
    name: 'backupStorageAccountWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function backupStorageAccountWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-117">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-117">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-118">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-118">The name of the storage account.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.BackupStorageResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.createCertificate
    name: 'createCertificate(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createCertificate(vaultBaseUrl: string, certificateName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-119">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-119">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-120">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-120">The name of the certificate.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificateOperation>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.createCertificate_2
    name: 'createCertificate(string, string, Object, ServiceCallback<CertificateOperation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createCertificate(vaultBaseUrl: string, certificateName: string, options: Object, callback: ServiceCallback<CertificateOperation>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateOperation>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateOperation>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.createCertificate_1
    name: 'createCertificate(string, string, ServiceCallback<CertificateOperation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createCertificate(vaultBaseUrl: string, certificateName: string, callback: ServiceCallback<CertificateOperation>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateOperation>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateOperation>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.createCertificateWithHttpOperationResponse
    name: 'createCertificateWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createCertificateWithHttpOperationResponse(vaultBaseUrl: string, certificateName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-121">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-121">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-122">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-122">The name of the certificate.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificateOperation>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.createKey
    name: 'createKey(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createKey(vaultBaseUrl: string, keyName: string, kty: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-123">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-123">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-124">O nome para a nova chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-124">The name for the new key.</span></span> <span data-ttu-id="80da9-125">O sistema irá gerar o nome da versão para a nova chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-125">The system will generate the version name for the new key.</span></span>
        - id: kty
          type:
            - string
          description: |
            <span data-ttu-id="80da9-126">O tipo de chave a ser criada.</span><span class="sxs-lookup"><span data-stu-id="80da9-126">The type of key to create.</span></span> <span data-ttu-id="80da9-127">Para obter valores válidos, consulte JsonWebKeyType.</span><span class="sxs-lookup"><span data-stu-id="80da9-127">For valid values, see JsonWebKeyType.</span></span> <span data-ttu-id="80da9-128">Os valores possíveis incluem: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'out'</span><span class="sxs-lookup"><span data-stu-id="80da9-128">Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct'</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.createKey_2
    name: 'createKey(string, string, string, Object, ServiceCallback<KeyBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createKey(vaultBaseUrl: string, keyName: string, kty: string, options: Object, callback: ServiceCallback<KeyBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: kty
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.createKey_1
    name: 'createKey(string, string, string, ServiceCallback<KeyBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createKey(vaultBaseUrl: string, keyName: string, kty: string, callback: ServiceCallback<KeyBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: kty
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.createKeyWithHttpOperationResponse
    name: 'createKeyWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createKeyWithHttpOperationResponse(vaultBaseUrl: string, keyName: string, kty: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-129">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-129">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-130">O nome para a nova chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-130">The name for the new key.</span></span> <span data-ttu-id="80da9-131">O sistema irá gerar o nome da versão para a nova chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-131">The system will generate the version name for the new key.</span></span>
        - id: kty
          type:
            - string
          description: |
            <span data-ttu-id="80da9-132">O tipo de chave a ser criada.</span><span class="sxs-lookup"><span data-stu-id="80da9-132">The type of key to create.</span></span> <span data-ttu-id="80da9-133">Para obter valores válidos, consulte JsonWebKeyType.</span><span class="sxs-lookup"><span data-stu-id="80da9-133">For valid values, see JsonWebKeyType.</span></span> <span data-ttu-id="80da9-134">Os valores possíveis incluem: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'out'</span><span class="sxs-lookup"><span data-stu-id="80da9-134">Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct'</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.KeyBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.credentials
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.decrypt
    name: 'decrypt(string, string, string, string, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function decrypt(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-135">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-135">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-136">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-136">The name of the key.</span></span>
        - id: keyVersion
          type:
            - string
          description: |
            <span data-ttu-id="80da9-137">A versão da chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-137">The version of the key.</span></span>
        - id: algorithm
          type:
            - string
          description: |
            <span data-ttu-id="80da9-138">Identificador de algoritmo.</span><span class="sxs-lookup"><span data-stu-id="80da9-138">algorithm identifier.</span></span> <span data-ttu-id="80da9-139">Os valores possíveis incluem: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'</span><span class="sxs-lookup"><span data-stu-id="80da9-139">Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'</span></span>
        - id: value
          type:
            - Buffer
          description: |+

        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.KeyOperationResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.decrypt_2
    name: 'decrypt(string, string, string, string, Buffer, Object, ServiceCallback<KeyOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function decrypt(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, options: Object, callback: ServiceCallback<KeyOperationResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: keyVersion
          type:
            - string
          description: ''
        - id: algorithm
          type:
            - string
          description: ''
        - id: value
          type:
            - Buffer
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyOperationResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.decrypt_1
    name: 'decrypt(string, string, string, string, Buffer, ServiceCallback<KeyOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function decrypt(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, callback: ServiceCallback<KeyOperationResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: keyVersion
          type:
            - string
          description: ''
        - id: algorithm
          type:
            - string
          description: ''
        - id: value
          type:
            - Buffer
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyOperationResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.decryptWithHttpOperationResponse
    name: 'decryptWithHttpOperationResponse(string, string, string, string, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function decryptWithHttpOperationResponse(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-140">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-140">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-141">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-141">The name of the key.</span></span>
        - id: keyVersion
          type:
            - string
          description: |
            <span data-ttu-id="80da9-142">A versão da chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-142">The version of the key.</span></span>
        - id: algorithm
          type:
            - string
          description: |
            <span data-ttu-id="80da9-143">Identificador de algoritmo.</span><span class="sxs-lookup"><span data-stu-id="80da9-143">algorithm identifier.</span></span> <span data-ttu-id="80da9-144">Os valores possíveis incluem: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'</span><span class="sxs-lookup"><span data-stu-id="80da9-144">Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'</span></span>
        - id: value
          type:
            - Buffer
          description: |+

        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.KeyOperationResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteCertificate
    name: 'deleteCertificate(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteCertificate(vaultBaseUrl: string, certificateName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-145">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-145">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-146">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-146">The name of the certificate.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedCertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteCertificate_2
    name: 'deleteCertificate(string, string, Object, ServiceCallback<DeletedCertificateBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteCertificate(vaultBaseUrl: string, certificateName: string, options: Object, callback: ServiceCallback<DeletedCertificateBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedCertificateBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedCertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteCertificate_1
    name: 'deleteCertificate(string, string, ServiceCallback<DeletedCertificateBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteCertificate(vaultBaseUrl: string, certificateName: string, callback: ServiceCallback<DeletedCertificateBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedCertificateBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedCertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteCertificateContacts
    name: 'deleteCertificateContacts(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteCertificateContacts(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-147">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-147">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.Contacts>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteCertificateContacts_2
    name: 'deleteCertificateContacts(string, Object, ServiceCallback<Contacts>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteCertificateContacts(vaultBaseUrl: string, options: Object, callback: ServiceCallback<Contacts>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.Contacts>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.Contacts>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteCertificateContacts_1
    name: 'deleteCertificateContacts(string, ServiceCallback<Contacts>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteCertificateContacts(vaultBaseUrl: string, callback: ServiceCallback<Contacts>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.Contacts>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.Contacts>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteCertificateContactsWithHttpOperationResponse
    name: 'deleteCertificateContactsWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteCertificateContactsWithHttpOperationResponse(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-148">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-148">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.Contacts>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteCertificateIssuer
    name: 'deleteCertificateIssuer(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteCertificateIssuer(vaultBaseUrl: string, issuerName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-149">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-149">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: issuerName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-150">O nome do emissor.</span><span class="sxs-lookup"><span data-stu-id="80da9-150">The name of the issuer.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.IssuerBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteCertificateIssuer_2
    name: 'deleteCertificateIssuer(string, string, Object, ServiceCallback<IssuerBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteCertificateIssuer(vaultBaseUrl: string, issuerName: string, options: Object, callback: ServiceCallback<IssuerBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: issuerName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.IssuerBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.IssuerBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteCertificateIssuer_1
    name: 'deleteCertificateIssuer(string, string, ServiceCallback<IssuerBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteCertificateIssuer(vaultBaseUrl: string, issuerName: string, callback: ServiceCallback<IssuerBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: issuerName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.IssuerBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.IssuerBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteCertificateIssuerWithHttpOperationResponse
    name: 'deleteCertificateIssuerWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteCertificateIssuerWithHttpOperationResponse(vaultBaseUrl: string, issuerName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-151">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-151">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: issuerName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-152">O nome do emissor.</span><span class="sxs-lookup"><span data-stu-id="80da9-152">The name of the issuer.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.IssuerBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteCertificateOperation
    name: 'deleteCertificateOperation(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteCertificateOperation(vaultBaseUrl: string, certificateName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-153">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-153">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-154">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-154">The name of the certificate.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificateOperation>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteCertificateOperation_2
    name: 'deleteCertificateOperation(string, string, Object, ServiceCallback<CertificateOperation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteCertificateOperation(vaultBaseUrl: string, certificateName: string, options: Object, callback: ServiceCallback<CertificateOperation>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateOperation>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateOperation>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteCertificateOperation_1
    name: 'deleteCertificateOperation(string, string, ServiceCallback<CertificateOperation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteCertificateOperation(vaultBaseUrl: string, certificateName: string, callback: ServiceCallback<CertificateOperation>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateOperation>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateOperation>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteCertificateOperationWithHttpOperationResponse
    name: 'deleteCertificateOperationWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteCertificateOperationWithHttpOperationResponse(vaultBaseUrl: string, certificateName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-155">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-155">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-156">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-156">The name of the certificate.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificateOperation>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteCertificateWithHttpOperationResponse
    name: 'deleteCertificateWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteCertificateWithHttpOperationResponse(vaultBaseUrl: string, certificateName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-157">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-157">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-158">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-158">The name of the certificate.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.DeletedCertificateBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteKey
    name: 'deleteKey(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteKey(vaultBaseUrl: string, keyName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-159">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-159">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-160">O nome da chave a excluir.</span><span class="sxs-lookup"><span data-stu-id="80da9-160">The name of the key to delete.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedKeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteKey_2
    name: 'deleteKey(string, string, Object, ServiceCallback<DeletedKeyBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteKey(vaultBaseUrl: string, keyName: string, options: Object, callback: ServiceCallback<DeletedKeyBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedKeyBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedKeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteKey_1
    name: 'deleteKey(string, string, ServiceCallback<DeletedKeyBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteKey(vaultBaseUrl: string, keyName: string, callback: ServiceCallback<DeletedKeyBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedKeyBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedKeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteKeyWithHttpOperationResponse
    name: 'deleteKeyWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteKeyWithHttpOperationResponse(vaultBaseUrl: string, keyName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-161">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-161">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-162">O nome da chave a excluir.</span><span class="sxs-lookup"><span data-stu-id="80da9-162">The name of the key to delete.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.DeletedKeyBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteSasDefinition
    name: 'deleteSasDefinition(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-163">Exclui uma definição de SAS de uma conta de armazenamento especificada.</span><span class="sxs-lookup"><span data-stu-id="80da9-163">Deletes a SAS definition from a specified storage account.</span></span> <span data-ttu-id="80da9-164">Esta operação requer a permissão de armazenamento/deletesas.</span><span class="sxs-lookup"><span data-stu-id="80da9-164">This operation requires the storage/deletesas permission.</span></span>
    syntax:
      content: 'function deleteSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-165">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-165">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-166">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-166">The name of the storage account.</span></span>
        - id: sasDefinitionName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-167">O nome da definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="80da9-167">The name of the SAS definition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedSasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteSasDefinition_2
    name: 'deleteSasDefinition(string, string, string, Object, ServiceCallback<DeletedSasDefinitionBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-168">Exclui uma definição de SAS de uma conta de armazenamento especificada.</span><span class="sxs-lookup"><span data-stu-id="80da9-168">Deletes a SAS definition from a specified storage account.</span></span> <span data-ttu-id="80da9-169">Esta operação requer a permissão de armazenamento/deletesas.</span><span class="sxs-lookup"><span data-stu-id="80da9-169">This operation requires the storage/deletesas permission.</span></span>
    syntax:
      content: 'function deleteSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, options: Object, callback: ServiceCallback<DeletedSasDefinitionBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: sasDefinitionName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedSasDefinitionBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedSasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteSasDefinition_1
    name: 'deleteSasDefinition(string, string, string, ServiceCallback<DeletedSasDefinitionBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-170">Exclui uma definição de SAS de uma conta de armazenamento especificada.</span><span class="sxs-lookup"><span data-stu-id="80da9-170">Deletes a SAS definition from a specified storage account.</span></span> <span data-ttu-id="80da9-171">Esta operação requer a permissão de armazenamento/deletesas.</span><span class="sxs-lookup"><span data-stu-id="80da9-171">This operation requires the storage/deletesas permission.</span></span>
    syntax:
      content: 'function deleteSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, callback: ServiceCallback<DeletedSasDefinitionBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: sasDefinitionName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedSasDefinitionBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedSasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteSasDefinitionWithHttpOperationResponse
    name: 'deleteSasDefinitionWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-172">Exclui uma definição de SAS de uma conta de armazenamento especificada.</span><span class="sxs-lookup"><span data-stu-id="80da9-172">Deletes a SAS definition from a specified storage account.</span></span> <span data-ttu-id="80da9-173">Esta operação requer a permissão de armazenamento/deletesas.</span><span class="sxs-lookup"><span data-stu-id="80da9-173">This operation requires the storage/deletesas permission.</span></span>
    syntax:
      content: 'function deleteSasDefinitionWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-174">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-174">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-175">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-175">The name of the storage account.</span></span>
        - id: sasDefinitionName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-176">O nome da definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="80da9-176">The name of the SAS definition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.DeletedSasDefinitionBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteSecret
    name: 'deleteSecret(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteSecret(vaultBaseUrl: string, secretName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-177">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-177">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: secretName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-178">O nome do segredo.</span><span class="sxs-lookup"><span data-stu-id="80da9-178">The name of the secret.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedSecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteSecret_2
    name: 'deleteSecret(string, string, Object, ServiceCallback<DeletedSecretBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteSecret(vaultBaseUrl: string, secretName: string, options: Object, callback: ServiceCallback<DeletedSecretBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedSecretBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedSecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteSecret_1
    name: 'deleteSecret(string, string, ServiceCallback<DeletedSecretBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteSecret(vaultBaseUrl: string, secretName: string, callback: ServiceCallback<DeletedSecretBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedSecretBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedSecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteSecretWithHttpOperationResponse
    name: 'deleteSecretWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteSecretWithHttpOperationResponse(vaultBaseUrl: string, secretName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-179">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-179">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: secretName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-180">O nome do segredo.</span><span class="sxs-lookup"><span data-stu-id="80da9-180">The name of the secret.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.DeletedSecretBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteStorageAccount
    name: 'deleteStorageAccount(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-181">Exclui uma conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-181">Deletes a storage account.</span></span> <span data-ttu-id="80da9-182">Esta operação requer a permissão de armazenamento/exclusão.</span><span class="sxs-lookup"><span data-stu-id="80da9-182">This operation requires the storage/delete permission.</span></span>
    syntax:
      content: 'function deleteStorageAccount(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-183">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-183">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-184">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-184">The name of the storage account.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedStorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteStorageAccount_2
    name: 'deleteStorageAccount(string, string, Object, ServiceCallback<DeletedStorageBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-185">Exclui uma conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-185">Deletes a storage account.</span></span> <span data-ttu-id="80da9-186">Esta operação requer a permissão de armazenamento/exclusão.</span><span class="sxs-lookup"><span data-stu-id="80da9-186">This operation requires the storage/delete permission.</span></span>
    syntax:
      content: 'function deleteStorageAccount(vaultBaseUrl: string, storageAccountName: string, options: Object, callback: ServiceCallback<DeletedStorageBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedStorageBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedStorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteStorageAccount_1
    name: 'deleteStorageAccount(string, string, ServiceCallback<DeletedStorageBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-187">Exclui uma conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-187">Deletes a storage account.</span></span> <span data-ttu-id="80da9-188">Esta operação requer a permissão de armazenamento/exclusão.</span><span class="sxs-lookup"><span data-stu-id="80da9-188">This operation requires the storage/delete permission.</span></span>
    syntax:
      content: 'function deleteStorageAccount(vaultBaseUrl: string, storageAccountName: string, callback: ServiceCallback<DeletedStorageBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedStorageBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedStorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteStorageAccountWithHttpOperationResponse
    name: 'deleteStorageAccountWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-189">Exclui uma conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-189">Deletes a storage account.</span></span> <span data-ttu-id="80da9-190">Esta operação requer a permissão de armazenamento/exclusão.</span><span class="sxs-lookup"><span data-stu-id="80da9-190">This operation requires the storage/delete permission.</span></span>
    syntax:
      content: 'function deleteStorageAccountWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-191">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-191">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-192">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-192">The name of the storage account.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.DeletedStorageBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.encrypt
    name: 'encrypt(string, string, string, string, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function encrypt(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-193">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-193">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-194">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-194">The name of the key.</span></span>
        - id: keyVersion
          type:
            - string
          description: |
            <span data-ttu-id="80da9-195">A versão da chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-195">The version of the key.</span></span>
        - id: algorithm
          type:
            - string
          description: |
            <span data-ttu-id="80da9-196">Identificador de algoritmo.</span><span class="sxs-lookup"><span data-stu-id="80da9-196">algorithm identifier.</span></span> <span data-ttu-id="80da9-197">Os valores possíveis incluem: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'</span><span class="sxs-lookup"><span data-stu-id="80da9-197">Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'</span></span>
        - id: value
          type:
            - Buffer
          description: |+

        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.KeyOperationResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.encrypt_2
    name: 'encrypt(string, string, string, string, Buffer, Object, ServiceCallback<KeyOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function encrypt(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, options: Object, callback: ServiceCallback<KeyOperationResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: keyVersion
          type:
            - string
          description: ''
        - id: algorithm
          type:
            - string
          description: ''
        - id: value
          type:
            - Buffer
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyOperationResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.encrypt_1
    name: 'encrypt(string, string, string, string, Buffer, ServiceCallback<KeyOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function encrypt(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, callback: ServiceCallback<KeyOperationResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: keyVersion
          type:
            - string
          description: ''
        - id: algorithm
          type:
            - string
          description: ''
        - id: value
          type:
            - Buffer
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyOperationResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.encryptWithHttpOperationResponse
    name: 'encryptWithHttpOperationResponse(string, string, string, string, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function encryptWithHttpOperationResponse(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-198">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-198">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-199">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-199">The name of the key.</span></span>
        - id: keyVersion
          type:
            - string
          description: |
            <span data-ttu-id="80da9-200">A versão da chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-200">The version of the key.</span></span>
        - id: algorithm
          type:
            - string
          description: |
            <span data-ttu-id="80da9-201">Identificador de algoritmo.</span><span class="sxs-lookup"><span data-stu-id="80da9-201">algorithm identifier.</span></span> <span data-ttu-id="80da9-202">Os valores possíveis incluem: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'</span><span class="sxs-lookup"><span data-stu-id="80da9-202">Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'</span></span>
        - id: value
          type:
            - Buffer
          description: |+

        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.KeyOperationResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.generateClientRequestId
    name: generateClientRequestId
    fullName: generateClientRequestId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'generateClientRequestId: boolean'
      return:
        type:
          - boolean
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificate
    name: 'getCertificate(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificate(vaultBaseUrl: string, certificateName: string, certificateVersion: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-203">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-203">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-204">O nome do certificado no cofre fornecido.</span><span class="sxs-lookup"><span data-stu-id="80da9-204">The name of the certificate in the given vault.</span></span>
        - id: certificateVersion
          type:
            - string
          description: |
            <span data-ttu-id="80da9-205">A versão do certificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-205">The version of the certificate.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificate_2
    name: 'getCertificate(string, string, string, Object, ServiceCallback<CertificateBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificate(vaultBaseUrl: string, certificateName: string, certificateVersion: string, options: Object, callback: ServiceCallback<CertificateBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: certificateVersion
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificate_1
    name: 'getCertificate(string, string, string, ServiceCallback<CertificateBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificate(vaultBaseUrl: string, certificateName: string, certificateVersion: string, callback: ServiceCallback<CertificateBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: certificateVersion
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateContacts
    name: 'getCertificateContacts(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificateContacts(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-206">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-206">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.Contacts>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateContacts_2
    name: 'getCertificateContacts(string, Object, ServiceCallback<Contacts>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificateContacts(vaultBaseUrl: string, options: Object, callback: ServiceCallback<Contacts>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.Contacts>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.Contacts>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateContacts_1
    name: 'getCertificateContacts(string, ServiceCallback<Contacts>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificateContacts(vaultBaseUrl: string, callback: ServiceCallback<Contacts>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.Contacts>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.Contacts>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateContactsWithHttpOperationResponse
    name: 'getCertificateContactsWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificateContactsWithHttpOperationResponse(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-207">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-207">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.Contacts>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateIssuer
    name: 'getCertificateIssuer(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificateIssuer(vaultBaseUrl: string, issuerName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-208">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-208">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: issuerName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-209">O nome do emissor.</span><span class="sxs-lookup"><span data-stu-id="80da9-209">The name of the issuer.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.IssuerBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateIssuer_2
    name: 'getCertificateIssuer(string, string, Object, ServiceCallback<IssuerBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificateIssuer(vaultBaseUrl: string, issuerName: string, options: Object, callback: ServiceCallback<IssuerBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: issuerName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.IssuerBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.IssuerBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateIssuer_1
    name: 'getCertificateIssuer(string, string, ServiceCallback<IssuerBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificateIssuer(vaultBaseUrl: string, issuerName: string, callback: ServiceCallback<IssuerBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: issuerName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.IssuerBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.IssuerBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateIssuers
    name: 'getCertificateIssuers(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificateIssuers(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-210">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-210">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificateIssuerListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateIssuers_2
    name: 'getCertificateIssuers(string, Object, ServiceCallback<CertificateIssuerListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificateIssuers(vaultBaseUrl: string, options: Object, callback: ServiceCallback<CertificateIssuerListResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateIssuerListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateIssuerListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateIssuers_1
    name: 'getCertificateIssuers(string, ServiceCallback<CertificateIssuerListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificateIssuers(vaultBaseUrl: string, callback: ServiceCallback<CertificateIssuerListResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateIssuerListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateIssuerListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateIssuersNext
    name: 'getCertificateIssuersNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificateIssuersNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            <span data-ttu-id="80da9-211">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="80da9-211">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificateIssuerListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateIssuersNext_2
    name: 'getCertificateIssuersNext(string, Object, ServiceCallback<CertificateIssuerListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificateIssuersNext(nextPageLink: string, options: Object, callback: ServiceCallback<CertificateIssuerListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateIssuerListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateIssuerListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateIssuersNext_1
    name: 'getCertificateIssuersNext(string, ServiceCallback<CertificateIssuerListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificateIssuersNext(nextPageLink: string, callback: ServiceCallback<CertificateIssuerListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateIssuerListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateIssuerListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateIssuersNextWithHttpOperationResponse
    name: 'getCertificateIssuersNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificateIssuersNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            <span data-ttu-id="80da9-212">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="80da9-212">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificateIssuerListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateIssuersWithHttpOperationResponse
    name: 'getCertificateIssuersWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificateIssuersWithHttpOperationResponse(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-213">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-213">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificateIssuerListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateIssuerWithHttpOperationResponse
    name: 'getCertificateIssuerWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificateIssuerWithHttpOperationResponse(vaultBaseUrl: string, issuerName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-214">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-214">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: issuerName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-215">O nome do emissor.</span><span class="sxs-lookup"><span data-stu-id="80da9-215">The name of the issuer.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.IssuerBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateOperation
    name: 'getCertificateOperation(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificateOperation(vaultBaseUrl: string, certificateName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-216">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-216">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-217">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-217">The name of the certificate.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificateOperation>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateOperation_2
    name: 'getCertificateOperation(string, string, Object, ServiceCallback<CertificateOperation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificateOperation(vaultBaseUrl: string, certificateName: string, options: Object, callback: ServiceCallback<CertificateOperation>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateOperation>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateOperation>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateOperation_1
    name: 'getCertificateOperation(string, string, ServiceCallback<CertificateOperation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificateOperation(vaultBaseUrl: string, certificateName: string, callback: ServiceCallback<CertificateOperation>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateOperation>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateOperation>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateOperationWithHttpOperationResponse
    name: 'getCertificateOperationWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificateOperationWithHttpOperationResponse(vaultBaseUrl: string, certificateName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-218">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-218">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-219">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-219">The name of the certificate.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificateOperation>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificatePolicy
    name: 'getCertificatePolicy(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificatePolicy(vaultBaseUrl: string, certificateName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-220">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-220">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-221">O nome do certificado em um determinado Cofre de chaves.</span><span class="sxs-lookup"><span data-stu-id="80da9-221">The name of the certificate in a given key vault.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificatePolicy>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificatePolicy_2
    name: 'getCertificatePolicy(string, string, Object, ServiceCallback<CertificatePolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificatePolicy(vaultBaseUrl: string, certificateName: string, options: Object, callback: ServiceCallback<CertificatePolicy>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificatePolicy>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificatePolicy>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificatePolicy_1
    name: 'getCertificatePolicy(string, string, ServiceCallback<CertificatePolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificatePolicy(vaultBaseUrl: string, certificateName: string, callback: ServiceCallback<CertificatePolicy>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificatePolicy>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificatePolicy>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificatePolicyWithHttpOperationResponse
    name: 'getCertificatePolicyWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificatePolicyWithHttpOperationResponse(vaultBaseUrl: string, certificateName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-222">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-222">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-223">O nome do certificado em um determinado Cofre de chaves.</span><span class="sxs-lookup"><span data-stu-id="80da9-223">The name of the certificate in a given key vault.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificatePolicy>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificates
    name: 'getCertificates(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificates(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-224">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-224">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificates_2
    name: 'getCertificates(string, Object, ServiceCallback<CertificateListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificates(vaultBaseUrl: string, options: Object, callback: ServiceCallback<CertificateListResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificates_1
    name: 'getCertificates(string, ServiceCallback<CertificateListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificates(vaultBaseUrl: string, callback: ServiceCallback<CertificateListResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificatesNext
    name: 'getCertificatesNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificatesNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            <span data-ttu-id="80da9-225">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="80da9-225">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificatesNext_2
    name: 'getCertificatesNext(string, Object, ServiceCallback<CertificateListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificatesNext(nextPageLink: string, options: Object, callback: ServiceCallback<CertificateListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificatesNext_1
    name: 'getCertificatesNext(string, ServiceCallback<CertificateListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificatesNext(nextPageLink: string, callback: ServiceCallback<CertificateListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificatesNextWithHttpOperationResponse
    name: 'getCertificatesNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificatesNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            <span data-ttu-id="80da9-226">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="80da9-226">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificateListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificatesWithHttpOperationResponse
    name: 'getCertificatesWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificatesWithHttpOperationResponse(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-227">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-227">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificateListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateVersions
    name: 'getCertificateVersions(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificateVersions(vaultBaseUrl: string, certificateName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-228">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-228">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-229">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-229">The name of the certificate.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateVersions_2
    name: 'getCertificateVersions(string, string, Object, ServiceCallback<CertificateListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificateVersions(vaultBaseUrl: string, certificateName: string, options: Object, callback: ServiceCallback<CertificateListResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateVersions_1
    name: 'getCertificateVersions(string, string, ServiceCallback<CertificateListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificateVersions(vaultBaseUrl: string, certificateName: string, callback: ServiceCallback<CertificateListResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateVersionsNext
    name: 'getCertificateVersionsNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificateVersionsNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            <span data-ttu-id="80da9-230">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="80da9-230">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateVersionsNext_2
    name: 'getCertificateVersionsNext(string, Object, ServiceCallback<CertificateListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificateVersionsNext(nextPageLink: string, options: Object, callback: ServiceCallback<CertificateListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateVersionsNext_1
    name: 'getCertificateVersionsNext(string, ServiceCallback<CertificateListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificateVersionsNext(nextPageLink: string, callback: ServiceCallback<CertificateListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateVersionsNextWithHttpOperationResponse
    name: 'getCertificateVersionsNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificateVersionsNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            <span data-ttu-id="80da9-231">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="80da9-231">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificateListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateVersionsWithHttpOperationResponse
    name: 'getCertificateVersionsWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificateVersionsWithHttpOperationResponse(vaultBaseUrl: string, certificateName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-232">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-232">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-233">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-233">The name of the certificate.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificateListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateWithHttpOperationResponse
    name: 'getCertificateWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificateWithHttpOperationResponse(vaultBaseUrl: string, certificateName: string, certificateVersion: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-234">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-234">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-235">O nome do certificado no cofre fornecido.</span><span class="sxs-lookup"><span data-stu-id="80da9-235">The name of the certificate in the given vault.</span></span>
        - id: certificateVersion
          type:
            - string
          description: |
            <span data-ttu-id="80da9-236">A versão do certificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-236">The version of the certificate.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificateBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedCertificate
    name: 'getDeletedCertificate(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedCertificate(vaultBaseUrl: string, certificateName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-237">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-237">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-238">O nome do certificado</span><span class="sxs-lookup"><span data-stu-id="80da9-238">The name of the certificate</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedCertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedCertificate_2
    name: 'getDeletedCertificate(string, string, Object, ServiceCallback<DeletedCertificateBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedCertificate(vaultBaseUrl: string, certificateName: string, options: Object, callback: ServiceCallback<DeletedCertificateBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedCertificateBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedCertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedCertificate_1
    name: 'getDeletedCertificate(string, string, ServiceCallback<DeletedCertificateBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedCertificate(vaultBaseUrl: string, certificateName: string, callback: ServiceCallback<DeletedCertificateBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedCertificateBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedCertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedCertificates
    name: 'getDeletedCertificates(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedCertificates(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-239">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-239">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedCertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedCertificates_2
    name: 'getDeletedCertificates(string, Object, ServiceCallback<DeletedCertificateListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedCertificates(vaultBaseUrl: string, options: Object, callback: ServiceCallback<DeletedCertificateListResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedCertificateListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedCertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedCertificates_1
    name: 'getDeletedCertificates(string, ServiceCallback<DeletedCertificateListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedCertificates(vaultBaseUrl: string, callback: ServiceCallback<DeletedCertificateListResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedCertificateListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedCertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedCertificatesNext
    name: 'getDeletedCertificatesNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedCertificatesNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            <span data-ttu-id="80da9-240">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="80da9-240">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedCertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedCertificatesNext_2
    name: 'getDeletedCertificatesNext(string, Object, ServiceCallback<DeletedCertificateListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedCertificatesNext(nextPageLink: string, options: Object, callback: ServiceCallback<DeletedCertificateListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedCertificateListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedCertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedCertificatesNext_1
    name: 'getDeletedCertificatesNext(string, ServiceCallback<DeletedCertificateListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedCertificatesNext(nextPageLink: string, callback: ServiceCallback<DeletedCertificateListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedCertificateListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedCertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedCertificatesNextWithHttpOperationResponse
    name: 'getDeletedCertificatesNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedCertificatesNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            <span data-ttu-id="80da9-241">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="80da9-241">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.DeletedCertificateListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedCertificatesWithHttpOperationResponse
    name: 'getDeletedCertificatesWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedCertificatesWithHttpOperationResponse(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-242">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-242">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.DeletedCertificateListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedCertificateWithHttpOperationResponse
    name: 'getDeletedCertificateWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedCertificateWithHttpOperationResponse(vaultBaseUrl: string, certificateName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-243">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-243">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-244">O nome do certificado</span><span class="sxs-lookup"><span data-stu-id="80da9-244">The name of the certificate</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.DeletedCertificateBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedKey
    name: 'getDeletedKey(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedKey(vaultBaseUrl: string, keyName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-245">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-245">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-246">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-246">The name of the key.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedKeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedKey_2
    name: 'getDeletedKey(string, string, Object, ServiceCallback<DeletedKeyBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedKey(vaultBaseUrl: string, keyName: string, options: Object, callback: ServiceCallback<DeletedKeyBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedKeyBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedKeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedKey_1
    name: 'getDeletedKey(string, string, ServiceCallback<DeletedKeyBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedKey(vaultBaseUrl: string, keyName: string, callback: ServiceCallback<DeletedKeyBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedKeyBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedKeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedKeys
    name: 'getDeletedKeys(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedKeys(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-247">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-247">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedKeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedKeys_2
    name: 'getDeletedKeys(string, Object, ServiceCallback<DeletedKeyListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedKeys(vaultBaseUrl: string, options: Object, callback: ServiceCallback<DeletedKeyListResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedKeyListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedKeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedKeys_1
    name: 'getDeletedKeys(string, ServiceCallback<DeletedKeyListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedKeys(vaultBaseUrl: string, callback: ServiceCallback<DeletedKeyListResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedKeyListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedKeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedKeysNext
    name: 'getDeletedKeysNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedKeysNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            <span data-ttu-id="80da9-248">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="80da9-248">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedKeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedKeysNext_2
    name: 'getDeletedKeysNext(string, Object, ServiceCallback<DeletedKeyListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedKeysNext(nextPageLink: string, options: Object, callback: ServiceCallback<DeletedKeyListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedKeyListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedKeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedKeysNext_1
    name: 'getDeletedKeysNext(string, ServiceCallback<DeletedKeyListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedKeysNext(nextPageLink: string, callback: ServiceCallback<DeletedKeyListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedKeyListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedKeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedKeysNextWithHttpOperationResponse
    name: 'getDeletedKeysNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedKeysNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            <span data-ttu-id="80da9-249">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="80da9-249">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.DeletedKeyListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedKeysWithHttpOperationResponse
    name: 'getDeletedKeysWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedKeysWithHttpOperationResponse(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-250">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-250">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.DeletedKeyListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedKeyWithHttpOperationResponse
    name: 'getDeletedKeyWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedKeyWithHttpOperationResponse(vaultBaseUrl: string, keyName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-251">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-251">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-252">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-252">The name of the key.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.DeletedKeyBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinition
    name: 'getDeletedSasDefinition(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-253">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-253">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-254">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-254">The name of the storage account.</span></span>
        - id: sasDefinitionName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-255">O nome da definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="80da9-255">The name of the SAS definition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedSasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinition_2
    name: 'getDeletedSasDefinition(string, string, string, Object, ServiceCallback<DeletedSasDefinitionBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, options: Object, callback: ServiceCallback<DeletedSasDefinitionBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: sasDefinitionName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedSasDefinitionBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedSasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinition_1
    name: 'getDeletedSasDefinition(string, string, string, ServiceCallback<DeletedSasDefinitionBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, callback: ServiceCallback<DeletedSasDefinitionBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: sasDefinitionName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedSasDefinitionBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedSasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinitions
    name: 'getDeletedSasDefinitions(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedSasDefinitions(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-256">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-256">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-257">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-257">The name of the storage account.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedSasDefinitionListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinitions_2
    name: 'getDeletedSasDefinitions(string, string, Object, ServiceCallback<DeletedSasDefinitionListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedSasDefinitions(vaultBaseUrl: string, storageAccountName: string, options: Object, callback: ServiceCallback<DeletedSasDefinitionListResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedSasDefinitionListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedSasDefinitionListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinitions_1
    name: 'getDeletedSasDefinitions(string, string, ServiceCallback<DeletedSasDefinitionListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedSasDefinitions(vaultBaseUrl: string, storageAccountName: string, callback: ServiceCallback<DeletedSasDefinitionListResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedSasDefinitionListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedSasDefinitionListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsNext
    name: 'getDeletedSasDefinitionsNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedSasDefinitionsNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            <span data-ttu-id="80da9-258">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="80da9-258">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedSasDefinitionListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsNext_2
    name: 'getDeletedSasDefinitionsNext(string, Object, ServiceCallback<DeletedSasDefinitionListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedSasDefinitionsNext(nextPageLink: string, options: Object, callback: ServiceCallback<DeletedSasDefinitionListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedSasDefinitionListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedSasDefinitionListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsNext_1
    name: 'getDeletedSasDefinitionsNext(string, ServiceCallback<DeletedSasDefinitionListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedSasDefinitionsNext(nextPageLink: string, callback: ServiceCallback<DeletedSasDefinitionListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedSasDefinitionListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedSasDefinitionListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsNextWithHttpOperationResponse
    name: 'getDeletedSasDefinitionsNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedSasDefinitionsNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            <span data-ttu-id="80da9-259">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="80da9-259">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.DeletedSasDefinitionListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsWithHttpOperationResponse
    name: 'getDeletedSasDefinitionsWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedSasDefinitionsWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-260">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-260">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-261">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-261">The name of the storage account.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.DeletedSasDefinitionListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinitionWithHttpOperationResponse
    name: 'getDeletedSasDefinitionWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedSasDefinitionWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-262">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-262">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-263">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-263">The name of the storage account.</span></span>
        - id: sasDefinitionName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-264">O nome da definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="80da9-264">The name of the SAS definition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.DeletedSasDefinitionBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSecret
    name: 'getDeletedSecret(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedSecret(vaultBaseUrl: string, secretName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-265">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-265">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: secretName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-266">O nome do segredo.</span><span class="sxs-lookup"><span data-stu-id="80da9-266">The name of the secret.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedSecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSecret_2
    name: 'getDeletedSecret(string, string, Object, ServiceCallback<DeletedSecretBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedSecret(vaultBaseUrl: string, secretName: string, options: Object, callback: ServiceCallback<DeletedSecretBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedSecretBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedSecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSecret_1
    name: 'getDeletedSecret(string, string, ServiceCallback<DeletedSecretBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedSecret(vaultBaseUrl: string, secretName: string, callback: ServiceCallback<DeletedSecretBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedSecretBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedSecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSecrets
    name: 'getDeletedSecrets(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedSecrets(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-267">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-267">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedSecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSecrets_2
    name: 'getDeletedSecrets(string, Object, ServiceCallback<DeletedSecretListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedSecrets(vaultBaseUrl: string, options: Object, callback: ServiceCallback<DeletedSecretListResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedSecretListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedSecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSecrets_1
    name: 'getDeletedSecrets(string, ServiceCallback<DeletedSecretListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedSecrets(vaultBaseUrl: string, callback: ServiceCallback<DeletedSecretListResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedSecretListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedSecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSecretsNext
    name: 'getDeletedSecretsNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedSecretsNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            <span data-ttu-id="80da9-268">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="80da9-268">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedSecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSecretsNext_2
    name: 'getDeletedSecretsNext(string, Object, ServiceCallback<DeletedSecretListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedSecretsNext(nextPageLink: string, options: Object, callback: ServiceCallback<DeletedSecretListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedSecretListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedSecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSecretsNext_1
    name: 'getDeletedSecretsNext(string, ServiceCallback<DeletedSecretListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedSecretsNext(nextPageLink: string, callback: ServiceCallback<DeletedSecretListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedSecretListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedSecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSecretsNextWithHttpOperationResponse
    name: 'getDeletedSecretsNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedSecretsNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            <span data-ttu-id="80da9-269">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="80da9-269">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.DeletedSecretListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSecretsWithHttpOperationResponse
    name: 'getDeletedSecretsWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedSecretsWithHttpOperationResponse(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-270">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-270">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.DeletedSecretListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSecretWithHttpOperationResponse
    name: 'getDeletedSecretWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedSecretWithHttpOperationResponse(vaultBaseUrl: string, secretName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-271">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-271">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: secretName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-272">O nome do segredo.</span><span class="sxs-lookup"><span data-stu-id="80da9-272">The name of the secret.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.DeletedSecretBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccount
    name: 'getDeletedStorageAccount(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedStorageAccount(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-273">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-273">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-274">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-274">The name of the storage account.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedStorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccount_2
    name: 'getDeletedStorageAccount(string, string, Object, ServiceCallback<DeletedStorageBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedStorageAccount(vaultBaseUrl: string, storageAccountName: string, options: Object, callback: ServiceCallback<DeletedStorageBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedStorageBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedStorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccount_1
    name: 'getDeletedStorageAccount(string, string, ServiceCallback<DeletedStorageBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedStorageAccount(vaultBaseUrl: string, storageAccountName: string, callback: ServiceCallback<DeletedStorageBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedStorageBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedStorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccounts
    name: 'getDeletedStorageAccounts(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedStorageAccounts(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-275">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-275">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedStorageListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccounts_2
    name: 'getDeletedStorageAccounts(string, Object, ServiceCallback<DeletedStorageListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedStorageAccounts(vaultBaseUrl: string, options: Object, callback: ServiceCallback<DeletedStorageListResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedStorageListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedStorageListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccounts_1
    name: 'getDeletedStorageAccounts(string, ServiceCallback<DeletedStorageListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedStorageAccounts(vaultBaseUrl: string, callback: ServiceCallback<DeletedStorageListResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedStorageListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedStorageListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccountsNext
    name: 'getDeletedStorageAccountsNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedStorageAccountsNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            <span data-ttu-id="80da9-276">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="80da9-276">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedStorageListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccountsNext_2
    name: 'getDeletedStorageAccountsNext(string, Object, ServiceCallback<DeletedStorageListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedStorageAccountsNext(nextPageLink: string, options: Object, callback: ServiceCallback<DeletedStorageListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedStorageListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedStorageListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccountsNext_1
    name: 'getDeletedStorageAccountsNext(string, ServiceCallback<DeletedStorageListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedStorageAccountsNext(nextPageLink: string, callback: ServiceCallback<DeletedStorageListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedStorageListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedStorageListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccountsNextWithHttpOperationResponse
    name: 'getDeletedStorageAccountsNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedStorageAccountsNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            <span data-ttu-id="80da9-277">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="80da9-277">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.DeletedStorageListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccountsWithHttpOperationResponse
    name: 'getDeletedStorageAccountsWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedStorageAccountsWithHttpOperationResponse(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-278">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-278">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.DeletedStorageListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccountWithHttpOperationResponse
    name: 'getDeletedStorageAccountWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedStorageAccountWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-279">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-279">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-280">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-280">The name of the storage account.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.DeletedStorageBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKey
    name: 'getKey(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getKey(vaultBaseUrl: string, keyName: string, keyVersion: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-281">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-281">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-282">O nome da chave a ser obtida.</span><span class="sxs-lookup"><span data-stu-id="80da9-282">The name of the key to get.</span></span>
        - id: keyVersion
          type:
            - string
          description: |
            <span data-ttu-id="80da9-283">Adicionar o parâmetro version recupera uma versão específica de uma chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-283">Adding the version parameter retrieves a specific version of a key.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKey_2
    name: 'getKey(string, string, string, Object, ServiceCallback<KeyBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getKey(vaultBaseUrl: string, keyName: string, keyVersion: string, options: Object, callback: ServiceCallback<KeyBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: keyVersion
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKey_1
    name: 'getKey(string, string, string, ServiceCallback<KeyBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getKey(vaultBaseUrl: string, keyName: string, keyVersion: string, callback: ServiceCallback<KeyBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: keyVersion
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeys
    name: 'getKeys(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getKeys(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-284">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-284">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.KeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeys_2
    name: 'getKeys(string, Object, ServiceCallback<KeyListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getKeys(vaultBaseUrl: string, options: Object, callback: ServiceCallback<KeyListResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeys_1
    name: 'getKeys(string, ServiceCallback<KeyListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getKeys(vaultBaseUrl: string, callback: ServiceCallback<KeyListResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeysNext
    name: 'getKeysNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getKeysNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            <span data-ttu-id="80da9-285">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="80da9-285">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.KeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeysNext_2
    name: 'getKeysNext(string, Object, ServiceCallback<KeyListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getKeysNext(nextPageLink: string, options: Object, callback: ServiceCallback<KeyListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeysNext_1
    name: 'getKeysNext(string, ServiceCallback<KeyListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getKeysNext(nextPageLink: string, callback: ServiceCallback<KeyListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeysNextWithHttpOperationResponse
    name: 'getKeysNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getKeysNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            <span data-ttu-id="80da9-286">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="80da9-286">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.KeyListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeysWithHttpOperationResponse
    name: 'getKeysWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getKeysWithHttpOperationResponse(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-287">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-287">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.KeyListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeyVersions
    name: 'getKeyVersions(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getKeyVersions(vaultBaseUrl: string, keyName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-288">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-288">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-289">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-289">The name of the key.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.KeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeyVersions_2
    name: 'getKeyVersions(string, string, Object, ServiceCallback<KeyListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getKeyVersions(vaultBaseUrl: string, keyName: string, options: Object, callback: ServiceCallback<KeyListResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeyVersions_1
    name: 'getKeyVersions(string, string, ServiceCallback<KeyListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getKeyVersions(vaultBaseUrl: string, keyName: string, callback: ServiceCallback<KeyListResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeyVersionsNext
    name: 'getKeyVersionsNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getKeyVersionsNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            <span data-ttu-id="80da9-290">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="80da9-290">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.KeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeyVersionsNext_2
    name: 'getKeyVersionsNext(string, Object, ServiceCallback<KeyListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getKeyVersionsNext(nextPageLink: string, options: Object, callback: ServiceCallback<KeyListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeyVersionsNext_1
    name: 'getKeyVersionsNext(string, ServiceCallback<KeyListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getKeyVersionsNext(nextPageLink: string, callback: ServiceCallback<KeyListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeyVersionsNextWithHttpOperationResponse
    name: 'getKeyVersionsNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getKeyVersionsNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            <span data-ttu-id="80da9-291">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="80da9-291">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.KeyListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeyVersionsWithHttpOperationResponse
    name: 'getKeyVersionsWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getKeyVersionsWithHttpOperationResponse(vaultBaseUrl: string, keyName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-292">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-292">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-293">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-293">The name of the key.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.KeyListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeyWithHttpOperationResponse
    name: 'getKeyWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getKeyWithHttpOperationResponse(vaultBaseUrl: string, keyName: string, keyVersion: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-294">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-294">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-295">O nome da chave a ser obtida.</span><span class="sxs-lookup"><span data-stu-id="80da9-295">The name of the key to get.</span></span>
        - id: keyVersion
          type:
            - string
          description: |
            <span data-ttu-id="80da9-296">Adicionar o parâmetro version recupera uma versão específica de uma chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-296">Adding the version parameter retrieves a specific version of a key.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.KeyBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getLongRunningOperationResult_2
    name: 'getLongRunningOperationResult(HttpOperationResponse<TResult>, RequestOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getLongRunningOperationResult<TResult>(resultOfInitialRequest: HttpOperationResponse<TResult>, options?: RequestOptions)'
      parameters:
        - id: resultOfInitialRequest
          type:
            - HttpOperationResponse<TResult>
          description: ''
        - id: options
          type:
            - RequestOptions
          description: ''
          optional: true
      return:
        type:
          - Promise<TResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getLongRunningOperationResult
    name: 'getLongRunningOperationResult(HttpOperationResponse<TResult>, RequestOptions, ServiceCallback<TResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getLongRunningOperationResult<TResult>(resultOfInitialRequest: HttpOperationResponse<TResult>, options: RequestOptions, callback: ServiceCallback<TResult>)'
      parameters:
        - id: resultOfInitialRequest
          type:
            - HttpOperationResponse<TResult>
          description: ''
        - id: options
          type:
            - RequestOptions
          description: ''
        - id: callback
          type:
            - ServiceCallback<TResult>
          description: ''
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getLongRunningOperationResult_1
    name: 'getLongRunningOperationResult(HttpOperationResponse<TResult>, ServiceCallback<TResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getLongRunningOperationResult<TResult>(resultOfInitialRequest: HttpOperationResponse<TResult>, callback: ServiceCallback<TResult>)'
      parameters:
        - id: resultOfInitialRequest
          type:
            - HttpOperationResponse<TResult>
          description: ''
        - id: callback
          type:
            - ServiceCallback<TResult>
          description: ''
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getPackageJsonInfo
    name: getPackageJsonInfo(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="80da9-297">Tenta localizar o Package. JSON para o pacote de determinado nodejs do azure.</span><span class="sxs-lookup"><span data-stu-id="80da9-297">Attempts to find package.json for the given azure nodejs package.</span></span>
      <span data-ttu-id="80da9-298">Se encontrado, retorna o nome e versão do pacote, lendo o Package. JSON se Package. JSON não for encontrado, retorna um valor padrão.</span><span class="sxs-lookup"><span data-stu-id="80da9-298">If found, returns the name and version of the package by reading the package.json If package.json is not found, returns a default value.</span></span>
    syntax:
      content: 'function getPackageJsonInfo(managementClientDir: string)'
      parameters:
        - id: managementClientDir
          type:
            - string
          description: <span data-ttu-id="80da9-299">Passe o diretório do cliente específicas de gerenciamento do azure.</span><span class="sxs-lookup"><span data-stu-id="80da9-299">pass the directory of the specific azure management client.</span></span>
      return:
        type:
          - Object
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSasDefinition
    name: 'getSasDefinition(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="80da9-300">Obtém informações sobre uma definição de SAS da conta de armazenamento especificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-300">Gets information about a SAS definition for the specified storage account.</span></span>
      <span data-ttu-id="80da9-301">Esta operação requer a permissão de armazenamento/getsas.</span><span class="sxs-lookup"><span data-stu-id="80da9-301">This operation requires the storage/getsas permission.</span></span>
    syntax:
      content: 'function getSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-302">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-302">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-303">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-303">The name of the storage account.</span></span>
        - id: sasDefinitionName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-304">O nome da definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="80da9-304">The name of the SAS definition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSasDefinition_2
    name: 'getSasDefinition(string, string, string, Object, ServiceCallback<SasDefinitionBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="80da9-305">Obtém informações sobre uma definição de SAS da conta de armazenamento especificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-305">Gets information about a SAS definition for the specified storage account.</span></span>
      <span data-ttu-id="80da9-306">Esta operação requer a permissão de armazenamento/getsas.</span><span class="sxs-lookup"><span data-stu-id="80da9-306">This operation requires the storage/getsas permission.</span></span>
    syntax:
      content: 'function getSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, options: Object, callback: ServiceCallback<SasDefinitionBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: sasDefinitionName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SasDefinitionBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSasDefinition_1
    name: 'getSasDefinition(string, string, string, ServiceCallback<SasDefinitionBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="80da9-307">Obtém informações sobre uma definição de SAS da conta de armazenamento especificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-307">Gets information about a SAS definition for the specified storage account.</span></span>
      <span data-ttu-id="80da9-308">Esta operação requer a permissão de armazenamento/getsas.</span><span class="sxs-lookup"><span data-stu-id="80da9-308">This operation requires the storage/getsas permission.</span></span>
    syntax:
      content: 'function getSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, callback: ServiceCallback<SasDefinitionBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: sasDefinitionName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SasDefinitionBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSasDefinitions
    name: 'getSasDefinitions(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-309">Listar as definições de SAS de armazenamento para a conta de armazenamento específica.</span><span class="sxs-lookup"><span data-stu-id="80da9-309">List storage SAS definitions for the given storage account.</span></span> <span data-ttu-id="80da9-310">Esta operação requer a permissão de armazenamento/listsas.</span><span class="sxs-lookup"><span data-stu-id="80da9-310">This operation requires the storage/listsas permission.</span></span>
    syntax:
      content: 'function getSasDefinitions(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-311">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-311">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-312">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-312">The name of the storage account.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSasDefinitions_2
    name: 'getSasDefinitions(string, string, Object, ServiceCallback<SasDefinitionListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-313">Listar as definições de SAS de armazenamento para a conta de armazenamento específica.</span><span class="sxs-lookup"><span data-stu-id="80da9-313">List storage SAS definitions for the given storage account.</span></span> <span data-ttu-id="80da9-314">Esta operação requer a permissão de armazenamento/listsas.</span><span class="sxs-lookup"><span data-stu-id="80da9-314">This operation requires the storage/listsas permission.</span></span>
    syntax:
      content: 'function getSasDefinitions(vaultBaseUrl: string, storageAccountName: string, options: Object, callback: ServiceCallback<SasDefinitionListResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SasDefinitionListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSasDefinitions_1
    name: 'getSasDefinitions(string, string, ServiceCallback<SasDefinitionListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-315">Listar as definições de SAS de armazenamento para a conta de armazenamento específica.</span><span class="sxs-lookup"><span data-stu-id="80da9-315">List storage SAS definitions for the given storage account.</span></span> <span data-ttu-id="80da9-316">Esta operação requer a permissão de armazenamento/listsas.</span><span class="sxs-lookup"><span data-stu-id="80da9-316">This operation requires the storage/listsas permission.</span></span>
    syntax:
      content: 'function getSasDefinitions(vaultBaseUrl: string, storageAccountName: string, callback: ServiceCallback<SasDefinitionListResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SasDefinitionListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSasDefinitionsNext
    name: 'getSasDefinitionsNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-317">Listar as definições de SAS de armazenamento para a conta de armazenamento específica.</span><span class="sxs-lookup"><span data-stu-id="80da9-317">List storage SAS definitions for the given storage account.</span></span> <span data-ttu-id="80da9-318">Esta operação requer a permissão de armazenamento/listsas.</span><span class="sxs-lookup"><span data-stu-id="80da9-318">This operation requires the storage/listsas permission.</span></span>
    syntax:
      content: 'function getSasDefinitionsNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            <span data-ttu-id="80da9-319">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="80da9-319">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSasDefinitionsNext_2
    name: 'getSasDefinitionsNext(string, Object, ServiceCallback<SasDefinitionListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-320">Listar as definições de SAS de armazenamento para a conta de armazenamento específica.</span><span class="sxs-lookup"><span data-stu-id="80da9-320">List storage SAS definitions for the given storage account.</span></span> <span data-ttu-id="80da9-321">Esta operação requer a permissão de armazenamento/listsas.</span><span class="sxs-lookup"><span data-stu-id="80da9-321">This operation requires the storage/listsas permission.</span></span>
    syntax:
      content: 'function getSasDefinitionsNext(nextPageLink: string, options: Object, callback: ServiceCallback<SasDefinitionListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SasDefinitionListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSasDefinitionsNext_1
    name: 'getSasDefinitionsNext(string, ServiceCallback<SasDefinitionListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-322">Listar as definições de SAS de armazenamento para a conta de armazenamento específica.</span><span class="sxs-lookup"><span data-stu-id="80da9-322">List storage SAS definitions for the given storage account.</span></span> <span data-ttu-id="80da9-323">Esta operação requer a permissão de armazenamento/listsas.</span><span class="sxs-lookup"><span data-stu-id="80da9-323">This operation requires the storage/listsas permission.</span></span>
    syntax:
      content: 'function getSasDefinitionsNext(nextPageLink: string, callback: ServiceCallback<SasDefinitionListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SasDefinitionListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSasDefinitionsNextWithHttpOperationResponse
    name: 'getSasDefinitionsNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-324">Listar as definições de SAS de armazenamento para a conta de armazenamento específica.</span><span class="sxs-lookup"><span data-stu-id="80da9-324">List storage SAS definitions for the given storage account.</span></span> <span data-ttu-id="80da9-325">Esta operação requer a permissão de armazenamento/listsas.</span><span class="sxs-lookup"><span data-stu-id="80da9-325">This operation requires the storage/listsas permission.</span></span>
    syntax:
      content: 'function getSasDefinitionsNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            <span data-ttu-id="80da9-326">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="80da9-326">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.SasDefinitionListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSasDefinitionsWithHttpOperationResponse
    name: 'getSasDefinitionsWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-327">Listar as definições de SAS de armazenamento para a conta de armazenamento específica.</span><span class="sxs-lookup"><span data-stu-id="80da9-327">List storage SAS definitions for the given storage account.</span></span> <span data-ttu-id="80da9-328">Esta operação requer a permissão de armazenamento/listsas.</span><span class="sxs-lookup"><span data-stu-id="80da9-328">This operation requires the storage/listsas permission.</span></span>
    syntax:
      content: 'function getSasDefinitionsWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-329">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-329">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-330">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-330">The name of the storage account.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.SasDefinitionListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSasDefinitionWithHttpOperationResponse
    name: 'getSasDefinitionWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="80da9-331">Obtém informações sobre uma definição de SAS da conta de armazenamento especificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-331">Gets information about a SAS definition for the specified storage account.</span></span>
      <span data-ttu-id="80da9-332">Esta operação requer a permissão de armazenamento/getsas.</span><span class="sxs-lookup"><span data-stu-id="80da9-332">This operation requires the storage/getsas permission.</span></span>
    syntax:
      content: 'function getSasDefinitionWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-333">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-333">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-334">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-334">The name of the storage account.</span></span>
        - id: sasDefinitionName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-335">O nome da definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="80da9-335">The name of the SAS definition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.SasDefinitionBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecret
    name: 'getSecret(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSecret(vaultBaseUrl: string, secretName: string, secretVersion: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-336">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-336">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: secretName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-337">O nome do segredo.</span><span class="sxs-lookup"><span data-stu-id="80da9-337">The name of the secret.</span></span>
        - id: secretVersion
          type:
            - string
          description: |
            <span data-ttu-id="80da9-338">A versão do segredo.</span><span class="sxs-lookup"><span data-stu-id="80da9-338">The version of the secret.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.SecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecret_2
    name: 'getSecret(string, string, string, Object, ServiceCallback<SecretBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSecret(vaultBaseUrl: string, secretName: string, secretVersion: string, options: Object, callback: ServiceCallback<SecretBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: secretVersion
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecret_1
    name: 'getSecret(string, string, string, ServiceCallback<SecretBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSecret(vaultBaseUrl: string, secretName: string, secretVersion: string, callback: ServiceCallback<SecretBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: secretVersion
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecrets
    name: 'getSecrets(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSecrets(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-339">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-339">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.SecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecrets_2
    name: 'getSecrets(string, Object, ServiceCallback<SecretListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSecrets(vaultBaseUrl: string, options: Object, callback: ServiceCallback<SecretListResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecrets_1
    name: 'getSecrets(string, ServiceCallback<SecretListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSecrets(vaultBaseUrl: string, callback: ServiceCallback<SecretListResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecretsNext
    name: 'getSecretsNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSecretsNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            <span data-ttu-id="80da9-340">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="80da9-340">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.SecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecretsNext_2
    name: 'getSecretsNext(string, Object, ServiceCallback<SecretListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSecretsNext(nextPageLink: string, options: Object, callback: ServiceCallback<SecretListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecretsNext_1
    name: 'getSecretsNext(string, ServiceCallback<SecretListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSecretsNext(nextPageLink: string, callback: ServiceCallback<SecretListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecretsNextWithHttpOperationResponse
    name: 'getSecretsNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSecretsNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            <span data-ttu-id="80da9-341">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="80da9-341">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.SecretListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecretsWithHttpOperationResponse
    name: 'getSecretsWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSecretsWithHttpOperationResponse(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-342">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-342">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.SecretListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecretVersions
    name: 'getSecretVersions(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSecretVersions(vaultBaseUrl: string, secretName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-343">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-343">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: secretName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-344">O nome do segredo.</span><span class="sxs-lookup"><span data-stu-id="80da9-344">The name of the secret.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.SecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecretVersions_2
    name: 'getSecretVersions(string, string, Object, ServiceCallback<SecretListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSecretVersions(vaultBaseUrl: string, secretName: string, options: Object, callback: ServiceCallback<SecretListResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecretVersions_1
    name: 'getSecretVersions(string, string, ServiceCallback<SecretListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSecretVersions(vaultBaseUrl: string, secretName: string, callback: ServiceCallback<SecretListResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecretVersionsNext
    name: 'getSecretVersionsNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSecretVersionsNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            <span data-ttu-id="80da9-345">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="80da9-345">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.SecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecretVersionsNext_2
    name: 'getSecretVersionsNext(string, Object, ServiceCallback<SecretListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSecretVersionsNext(nextPageLink: string, options: Object, callback: ServiceCallback<SecretListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecretVersionsNext_1
    name: 'getSecretVersionsNext(string, ServiceCallback<SecretListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSecretVersionsNext(nextPageLink: string, callback: ServiceCallback<SecretListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecretVersionsNextWithHttpOperationResponse
    name: 'getSecretVersionsNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSecretVersionsNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            <span data-ttu-id="80da9-346">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="80da9-346">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.SecretListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecretVersionsWithHttpOperationResponse
    name: 'getSecretVersionsWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSecretVersionsWithHttpOperationResponse(vaultBaseUrl: string, secretName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-347">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-347">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: secretName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-348">O nome do segredo.</span><span class="sxs-lookup"><span data-stu-id="80da9-348">The name of the secret.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.SecretListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecretWithHttpOperationResponse
    name: 'getSecretWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSecretWithHttpOperationResponse(vaultBaseUrl: string, secretName: string, secretVersion: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-349">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-349">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: secretName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-350">O nome do segredo.</span><span class="sxs-lookup"><span data-stu-id="80da9-350">The name of the secret.</span></span>
        - id: secretVersion
          type:
            - string
          description: |
            <span data-ttu-id="80da9-351">A versão do segredo.</span><span class="sxs-lookup"><span data-stu-id="80da9-351">The version of the secret.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.SecretBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getStorageAccount
    name: 'getStorageAccount(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-352">Obtém informações sobre uma conta de armazenamento especificada.</span><span class="sxs-lookup"><span data-stu-id="80da9-352">Gets information about a specified storage account.</span></span> <span data-ttu-id="80da9-353">Esta operação requer a permissão de armazenamento/get.</span><span class="sxs-lookup"><span data-stu-id="80da9-353">This operation requires the storage/get permission.</span></span>
    syntax:
      content: 'function getStorageAccount(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-354">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-354">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-355">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-355">The name of the storage account.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getStorageAccount_2
    name: 'getStorageAccount(string, string, Object, ServiceCallback<StorageBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-356">Obtém informações sobre uma conta de armazenamento especificada.</span><span class="sxs-lookup"><span data-stu-id="80da9-356">Gets information about a specified storage account.</span></span> <span data-ttu-id="80da9-357">Esta operação requer a permissão de armazenamento/get.</span><span class="sxs-lookup"><span data-stu-id="80da9-357">This operation requires the storage/get permission.</span></span>
    syntax:
      content: 'function getStorageAccount(vaultBaseUrl: string, storageAccountName: string, options: Object, callback: ServiceCallback<StorageBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.StorageBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getStorageAccount_1
    name: 'getStorageAccount(string, string, ServiceCallback<StorageBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-358">Obtém informações sobre uma conta de armazenamento especificada.</span><span class="sxs-lookup"><span data-stu-id="80da9-358">Gets information about a specified storage account.</span></span> <span data-ttu-id="80da9-359">Esta operação requer a permissão de armazenamento/get.</span><span class="sxs-lookup"><span data-stu-id="80da9-359">This operation requires the storage/get permission.</span></span>
    syntax:
      content: 'function getStorageAccount(vaultBaseUrl: string, storageAccountName: string, callback: ServiceCallback<StorageBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.StorageBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getStorageAccounts
    name: 'getStorageAccounts(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-360">Listar contas de armazenamento gerenciadas pelo Cofre de chaves especificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-360">List storage accounts managed by the specified key vault.</span></span> <span data-ttu-id="80da9-361">Esta operação requer a permissão de lista/armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-361">This operation requires the storage/list permission.</span></span>
    syntax:
      content: 'function getStorageAccounts(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-362">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-362">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.StorageListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getStorageAccounts_2
    name: 'getStorageAccounts(string, Object, ServiceCallback<StorageListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-363">Listar contas de armazenamento gerenciadas pelo Cofre de chaves especificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-363">List storage accounts managed by the specified key vault.</span></span> <span data-ttu-id="80da9-364">Esta operação requer a permissão de lista/armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-364">This operation requires the storage/list permission.</span></span>
    syntax:
      content: 'function getStorageAccounts(vaultBaseUrl: string, options: Object, callback: ServiceCallback<StorageListResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.StorageListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.StorageListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getStorageAccounts_1
    name: 'getStorageAccounts(string, ServiceCallback<StorageListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-365">Listar contas de armazenamento gerenciadas pelo Cofre de chaves especificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-365">List storage accounts managed by the specified key vault.</span></span> <span data-ttu-id="80da9-366">Esta operação requer a permissão de lista/armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-366">This operation requires the storage/list permission.</span></span>
    syntax:
      content: 'function getStorageAccounts(vaultBaseUrl: string, callback: ServiceCallback<StorageListResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.StorageListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.StorageListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getStorageAccountsNext
    name: 'getStorageAccountsNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-367">Listar contas de armazenamento gerenciadas pelo Cofre de chaves especificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-367">List storage accounts managed by the specified key vault.</span></span> <span data-ttu-id="80da9-368">Esta operação requer a permissão de lista/armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-368">This operation requires the storage/list permission.</span></span>
    syntax:
      content: 'function getStorageAccountsNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            <span data-ttu-id="80da9-369">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="80da9-369">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.StorageListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getStorageAccountsNext_2
    name: 'getStorageAccountsNext(string, Object, ServiceCallback<StorageListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-370">Listar contas de armazenamento gerenciadas pelo Cofre de chaves especificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-370">List storage accounts managed by the specified key vault.</span></span> <span data-ttu-id="80da9-371">Esta operação requer a permissão de lista/armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-371">This operation requires the storage/list permission.</span></span>
    syntax:
      content: 'function getStorageAccountsNext(nextPageLink: string, options: Object, callback: ServiceCallback<StorageListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.StorageListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.StorageListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getStorageAccountsNext_1
    name: 'getStorageAccountsNext(string, ServiceCallback<StorageListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-372">Listar contas de armazenamento gerenciadas pelo Cofre de chaves especificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-372">List storage accounts managed by the specified key vault.</span></span> <span data-ttu-id="80da9-373">Esta operação requer a permissão de lista/armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-373">This operation requires the storage/list permission.</span></span>
    syntax:
      content: 'function getStorageAccountsNext(nextPageLink: string, callback: ServiceCallback<StorageListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.StorageListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.StorageListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getStorageAccountsNextWithHttpOperationResponse
    name: 'getStorageAccountsNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-374">Listar contas de armazenamento gerenciadas pelo Cofre de chaves especificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-374">List storage accounts managed by the specified key vault.</span></span> <span data-ttu-id="80da9-375">Esta operação requer a permissão de lista/armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-375">This operation requires the storage/list permission.</span></span>
    syntax:
      content: 'function getStorageAccountsNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            <span data-ttu-id="80da9-376">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="80da9-376">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.StorageListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getStorageAccountsWithHttpOperationResponse
    name: 'getStorageAccountsWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-377">Listar contas de armazenamento gerenciadas pelo Cofre de chaves especificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-377">List storage accounts managed by the specified key vault.</span></span> <span data-ttu-id="80da9-378">Esta operação requer a permissão de lista/armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-378">This operation requires the storage/list permission.</span></span>
    syntax:
      content: 'function getStorageAccountsWithHttpOperationResponse(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-379">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-379">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.StorageListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getStorageAccountWithHttpOperationResponse
    name: 'getStorageAccountWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-380">Obtém informações sobre uma conta de armazenamento especificada.</span><span class="sxs-lookup"><span data-stu-id="80da9-380">Gets information about a specified storage account.</span></span> <span data-ttu-id="80da9-381">Esta operação requer a permissão de armazenamento/get.</span><span class="sxs-lookup"><span data-stu-id="80da9-381">This operation requires the storage/get permission.</span></span>
    syntax:
      content: 'function getStorageAccountWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-382">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-382">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-383">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-383">The name of the storage account.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.StorageBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.importCertificate
    name: 'importCertificate(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function importCertificate(vaultBaseUrl: string, certificateName: string, base64EncodedCertificate: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-384">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-384">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-385">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-385">The name of the certificate.</span></span>
        - id: base64EncodedCertificate
          type:
            - string
          description: |
            <span data-ttu-id="80da9-386">Representação do objeto para Importar certificado codificado em Base64.</span><span class="sxs-lookup"><span data-stu-id="80da9-386">Base64 encoded representation of the certificate object to import.</span></span> <span data-ttu-id="80da9-387">Esse certificado deve conter a chave privada.</span><span class="sxs-lookup"><span data-stu-id="80da9-387">This certificate needs to contain the private key.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.importCertificate_2
    name: 'importCertificate(string, string, string, Object, ServiceCallback<CertificateBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function importCertificate(vaultBaseUrl: string, certificateName: string, base64EncodedCertificate: string, options: Object, callback: ServiceCallback<CertificateBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: base64EncodedCertificate
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.importCertificate_1
    name: 'importCertificate(string, string, string, ServiceCallback<CertificateBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function importCertificate(vaultBaseUrl: string, certificateName: string, base64EncodedCertificate: string, callback: ServiceCallback<CertificateBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: base64EncodedCertificate
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.importCertificateWithHttpOperationResponse
    name: 'importCertificateWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function importCertificateWithHttpOperationResponse(vaultBaseUrl: string, certificateName: string, base64EncodedCertificate: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-388">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-388">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-389">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-389">The name of the certificate.</span></span>
        - id: base64EncodedCertificate
          type:
            - string
          description: |
            <span data-ttu-id="80da9-390">Representação do objeto para Importar certificado codificado em Base64.</span><span class="sxs-lookup"><span data-stu-id="80da9-390">Base64 encoded representation of the certificate object to import.</span></span> <span data-ttu-id="80da9-391">Esse certificado deve conter a chave privada.</span><span class="sxs-lookup"><span data-stu-id="80da9-391">This certificate needs to contain the private key.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificateBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.importKey
    name: 'importKey(string, string, JsonWebKey, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function importKey(vaultBaseUrl: string, keyName: string, key: JsonWebKey, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-392">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-392">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-393">Nome para a chave importada.</span><span class="sxs-lookup"><span data-stu-id="80da9-393">Name for the imported key.</span></span>
        - id: key
          type:
            - azure-keyvault.JsonWebKey
          description: |
            <span data-ttu-id="80da9-394">A chave da web Json</span><span class="sxs-lookup"><span data-stu-id="80da9-394">The Json web key</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.importKey_2
    name: 'importKey(string, string, JsonWebKey, Object, ServiceCallback<KeyBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function importKey(vaultBaseUrl: string, keyName: string, key: JsonWebKey, options: Object, callback: ServiceCallback<KeyBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: key
          type:
            - azure-keyvault.JsonWebKey
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.importKey_1
    name: 'importKey(string, string, JsonWebKey, ServiceCallback<KeyBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function importKey(vaultBaseUrl: string, keyName: string, key: JsonWebKey, callback: ServiceCallback<KeyBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: key
          type:
            - azure-keyvault.JsonWebKey
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.importKeyWithHttpOperationResponse
    name: 'importKeyWithHttpOperationResponse(string, string, JsonWebKey, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function importKeyWithHttpOperationResponse(vaultBaseUrl: string, keyName: string, key: JsonWebKey, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-395">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-395">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-396">Nome para a chave importada.</span><span class="sxs-lookup"><span data-stu-id="80da9-396">Name for the imported key.</span></span>
        - id: key
          type:
            - azure-keyvault.JsonWebKey
          description: |
            <span data-ttu-id="80da9-397">A chave da web Json</span><span class="sxs-lookup"><span data-stu-id="80da9-397">The Json web key</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.KeyBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.constructor
    name: 'KeyVaultClient(ServiceClientCredentials, AzureServiceClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-398">Inicializa uma nova instância da classe KeyVaultClient.</span><span class="sxs-lookup"><span data-stu-id="80da9-398">Initializes a new instance of the KeyVaultClient class.</span></span>
    syntax:
      content: 'new KeyVaultClient(credentials: ServiceClientCredentials, options?: AzureServiceClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: |
            <span data-ttu-id="80da9-399">Credenciais necessárias para o cliente se conectar ao Azure.</span><span class="sxs-lookup"><span data-stu-id="80da9-399">Credentials needed for the client to connect to Azure.</span></span>
        - id: options
          type:
            - AzureServiceClientOptions
          description: ''
          optional: true
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.longRunningOperationRetryTimeout
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'longRunningOperationRetryTimeout: number'
      return:
        type:
          - number
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.mergeCertificate
    name: 'mergeCertificate(string, string, Buffer[], Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function mergeCertificate(vaultBaseUrl: string, certificateName: string, x509Certificates: Buffer[], options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-400">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-400">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-401">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-401">The name of the certificate.</span></span>
        - id: x509Certificates
          type:
            - 'Buffer[]'
          description: |
            <span data-ttu-id="80da9-402">O certificado ou a cadeia de certificados para mesclar.</span><span class="sxs-lookup"><span data-stu-id="80da9-402">The certificate or the certificate chain to merge.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.mergeCertificate_2
    name: 'mergeCertificate(string, string, Buffer[], Object, ServiceCallback<CertificateBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function mergeCertificate(vaultBaseUrl: string, certificateName: string, x509Certificates: Buffer[], options: Object, callback: ServiceCallback<CertificateBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: x509Certificates
          type:
            - 'Buffer[]'
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.mergeCertificate_1
    name: 'mergeCertificate(string, string, Buffer[], ServiceCallback<CertificateBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function mergeCertificate(vaultBaseUrl: string, certificateName: string, x509Certificates: Buffer[], callback: ServiceCallback<CertificateBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: x509Certificates
          type:
            - 'Buffer[]'
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.mergeCertificateWithHttpOperationResponse
    name: 'mergeCertificateWithHttpOperationResponse(string, string, Buffer[], Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function mergeCertificateWithHttpOperationResponse(vaultBaseUrl: string, certificateName: string, x509Certificates: Buffer[], options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-403">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-403">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-404">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-404">The name of the certificate.</span></span>
        - id: x509Certificates
          type:
            - 'Buffer[]'
          description: |
            <span data-ttu-id="80da9-405">O certificado ou a cadeia de certificados para mesclar.</span><span class="sxs-lookup"><span data-stu-id="80da9-405">The certificate or the certificate chain to merge.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificateBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.purgeDeletedCertificate
    name: 'purgeDeletedCertificate(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function purgeDeletedCertificate(vaultBaseUrl: string, certificateName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-406">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-406">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-407">O nome do certificado</span><span class="sxs-lookup"><span data-stu-id="80da9-407">The name of the certificate</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.purgeDeletedCertificate_2
    name: 'purgeDeletedCertificate(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function purgeDeletedCertificate(vaultBaseUrl: string, certificateName: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.purgeDeletedCertificate_1
    name: 'purgeDeletedCertificate(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function purgeDeletedCertificate(vaultBaseUrl: string, certificateName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.purgeDeletedCertificateWithHttpOperationResponse
    name: 'purgeDeletedCertificateWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function purgeDeletedCertificateWithHttpOperationResponse(vaultBaseUrl: string, certificateName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-408">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-408">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-409">O nome do certificado</span><span class="sxs-lookup"><span data-stu-id="80da9-409">The name of the certificate</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.purgeDeletedKey
    name: 'purgeDeletedKey(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function purgeDeletedKey(vaultBaseUrl: string, keyName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-410">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-410">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-411">O nome da chave</span><span class="sxs-lookup"><span data-stu-id="80da9-411">The name of the key</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.purgeDeletedKey_2
    name: 'purgeDeletedKey(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function purgeDeletedKey(vaultBaseUrl: string, keyName: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.purgeDeletedKey_1
    name: 'purgeDeletedKey(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function purgeDeletedKey(vaultBaseUrl: string, keyName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.purgeDeletedKeyWithHttpOperationResponse
    name: 'purgeDeletedKeyWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function purgeDeletedKeyWithHttpOperationResponse(vaultBaseUrl: string, keyName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-412">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-412">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-413">O nome da chave</span><span class="sxs-lookup"><span data-stu-id="80da9-413">The name of the key</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.purgeDeletedSecret
    name: 'purgeDeletedSecret(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function purgeDeletedSecret(vaultBaseUrl: string, secretName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-414">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-414">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: secretName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-415">O nome do segredo.</span><span class="sxs-lookup"><span data-stu-id="80da9-415">The name of the secret.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.purgeDeletedSecret_2
    name: 'purgeDeletedSecret(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function purgeDeletedSecret(vaultBaseUrl: string, secretName: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.purgeDeletedSecret_1
    name: 'purgeDeletedSecret(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function purgeDeletedSecret(vaultBaseUrl: string, secretName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.purgeDeletedSecretWithHttpOperationResponse
    name: 'purgeDeletedSecretWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function purgeDeletedSecretWithHttpOperationResponse(vaultBaseUrl: string, secretName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-416">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-416">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: secretName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-417">O nome do segredo.</span><span class="sxs-lookup"><span data-stu-id="80da9-417">The name of the secret.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.purgeDeletedStorageAccount
    name: 'purgeDeletedStorageAccount(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function purgeDeletedStorageAccount(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-418">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-418">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-419">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-419">The name of the storage account.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.purgeDeletedStorageAccount_2
    name: 'purgeDeletedStorageAccount(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function purgeDeletedStorageAccount(vaultBaseUrl: string, storageAccountName: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.purgeDeletedStorageAccount_1
    name: 'purgeDeletedStorageAccount(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function purgeDeletedStorageAccount(vaultBaseUrl: string, storageAccountName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.purgeDeletedStorageAccountWithHttpOperationResponse
    name: 'purgeDeletedStorageAccountWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function purgeDeletedStorageAccountWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-420">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-420">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-421">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-421">The name of the storage account.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedCertificate
    name: 'recoverDeletedCertificate(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverDeletedCertificate(vaultBaseUrl: string, certificateName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-422">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-422">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-423">O nome do certificado excluído</span><span class="sxs-lookup"><span data-stu-id="80da9-423">The name of the deleted certificate</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedCertificate_2
    name: 'recoverDeletedCertificate(string, string, Object, ServiceCallback<CertificateBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverDeletedCertificate(vaultBaseUrl: string, certificateName: string, options: Object, callback: ServiceCallback<CertificateBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedCertificate_1
    name: 'recoverDeletedCertificate(string, string, ServiceCallback<CertificateBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverDeletedCertificate(vaultBaseUrl: string, certificateName: string, callback: ServiceCallback<CertificateBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedCertificateWithHttpOperationResponse
    name: 'recoverDeletedCertificateWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverDeletedCertificateWithHttpOperationResponse(vaultBaseUrl: string, certificateName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-424">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-424">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-425">O nome do certificado excluído</span><span class="sxs-lookup"><span data-stu-id="80da9-425">The name of the deleted certificate</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificateBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedKey
    name: 'recoverDeletedKey(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverDeletedKey(vaultBaseUrl: string, keyName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-426">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-426">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-427">O nome da chave excluída.</span><span class="sxs-lookup"><span data-stu-id="80da9-427">The name of the deleted key.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedKey_2
    name: 'recoverDeletedKey(string, string, Object, ServiceCallback<KeyBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverDeletedKey(vaultBaseUrl: string, keyName: string, options: Object, callback: ServiceCallback<KeyBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedKey_1
    name: 'recoverDeletedKey(string, string, ServiceCallback<KeyBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverDeletedKey(vaultBaseUrl: string, keyName: string, callback: ServiceCallback<KeyBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedKeyWithHttpOperationResponse
    name: 'recoverDeletedKeyWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverDeletedKeyWithHttpOperationResponse(vaultBaseUrl: string, keyName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-428">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-428">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-429">O nome da chave excluída.</span><span class="sxs-lookup"><span data-stu-id="80da9-429">The name of the deleted key.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.KeyBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedSasDefinition
    name: 'recoverDeletedSasDefinition(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverDeletedSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-430">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-430">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-431">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-431">The name of the storage account.</span></span>
        - id: sasDefinitionName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-432">O nome da definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="80da9-432">The name of the SAS definition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedSasDefinition_2
    name: 'recoverDeletedSasDefinition(string, string, string, Object, ServiceCallback<SasDefinitionBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverDeletedSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, options: Object, callback: ServiceCallback<SasDefinitionBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: sasDefinitionName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SasDefinitionBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedSasDefinition_1
    name: 'recoverDeletedSasDefinition(string, string, string, ServiceCallback<SasDefinitionBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverDeletedSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, callback: ServiceCallback<SasDefinitionBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: sasDefinitionName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SasDefinitionBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedSasDefinitionWithHttpOperationResponse
    name: 'recoverDeletedSasDefinitionWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverDeletedSasDefinitionWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-433">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-433">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-434">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-434">The name of the storage account.</span></span>
        - id: sasDefinitionName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-435">O nome da definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="80da9-435">The name of the SAS definition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.SasDefinitionBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedSecret
    name: 'recoverDeletedSecret(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverDeletedSecret(vaultBaseUrl: string, secretName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-436">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-436">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: secretName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-437">O nome do segredo excluído.</span><span class="sxs-lookup"><span data-stu-id="80da9-437">The name of the deleted secret.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.SecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedSecret_2
    name: 'recoverDeletedSecret(string, string, Object, ServiceCallback<SecretBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverDeletedSecret(vaultBaseUrl: string, secretName: string, options: Object, callback: ServiceCallback<SecretBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedSecret_1
    name: 'recoverDeletedSecret(string, string, ServiceCallback<SecretBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverDeletedSecret(vaultBaseUrl: string, secretName: string, callback: ServiceCallback<SecretBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedSecretWithHttpOperationResponse
    name: 'recoverDeletedSecretWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverDeletedSecretWithHttpOperationResponse(vaultBaseUrl: string, secretName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-438">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-438">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: secretName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-439">O nome do segredo excluído.</span><span class="sxs-lookup"><span data-stu-id="80da9-439">The name of the deleted secret.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.SecretBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedStorageAccount
    name: 'recoverDeletedStorageAccount(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverDeletedStorageAccount(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-440">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-440">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-441">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-441">The name of the storage account.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedStorageAccount_2
    name: 'recoverDeletedStorageAccount(string, string, Object, ServiceCallback<StorageBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverDeletedStorageAccount(vaultBaseUrl: string, storageAccountName: string, options: Object, callback: ServiceCallback<StorageBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.StorageBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedStorageAccount_1
    name: 'recoverDeletedStorageAccount(string, string, ServiceCallback<StorageBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverDeletedStorageAccount(vaultBaseUrl: string, storageAccountName: string, callback: ServiceCallback<StorageBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.StorageBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedStorageAccountWithHttpOperationResponse
    name: 'recoverDeletedStorageAccountWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverDeletedStorageAccountWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-442">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-442">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-443">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-443">The name of the storage account.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.StorageBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.regenerateStorageAccountKey
    name: 'regenerateStorageAccountKey(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-444">Regenera o valor de chave especificado para a conta de armazenamento específica.</span><span class="sxs-lookup"><span data-stu-id="80da9-444">Regenerates the specified key value for the given storage account.</span></span> <span data-ttu-id="80da9-445">Esta operação requer a permissão de armazenamento/regeneratekey.</span><span class="sxs-lookup"><span data-stu-id="80da9-445">This operation requires the storage/regeneratekey permission.</span></span>
    syntax:
      content: 'function regenerateStorageAccountKey(vaultBaseUrl: string, storageAccountName: string, keyName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-446">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-446">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-447">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-447">The name of the storage account.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-448">O nome de chave de conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-448">The storage account key name.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.regenerateStorageAccountKey_2
    name: 'regenerateStorageAccountKey(string, string, string, Object, ServiceCallback<StorageBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-449">Regenera o valor de chave especificado para a conta de armazenamento específica.</span><span class="sxs-lookup"><span data-stu-id="80da9-449">Regenerates the specified key value for the given storage account.</span></span> <span data-ttu-id="80da9-450">Esta operação requer a permissão de armazenamento/regeneratekey.</span><span class="sxs-lookup"><span data-stu-id="80da9-450">This operation requires the storage/regeneratekey permission.</span></span>
    syntax:
      content: 'function regenerateStorageAccountKey(vaultBaseUrl: string, storageAccountName: string, keyName: string, options: Object, callback: ServiceCallback<StorageBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.StorageBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.regenerateStorageAccountKey_1
    name: 'regenerateStorageAccountKey(string, string, string, ServiceCallback<StorageBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-451">Regenera o valor de chave especificado para a conta de armazenamento específica.</span><span class="sxs-lookup"><span data-stu-id="80da9-451">Regenerates the specified key value for the given storage account.</span></span> <span data-ttu-id="80da9-452">Esta operação requer a permissão de armazenamento/regeneratekey.</span><span class="sxs-lookup"><span data-stu-id="80da9-452">This operation requires the storage/regeneratekey permission.</span></span>
    syntax:
      content: 'function regenerateStorageAccountKey(vaultBaseUrl: string, storageAccountName: string, keyName: string, callback: ServiceCallback<StorageBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.StorageBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.regenerateStorageAccountKeyWithHttpOperationResponse
    name: 'regenerateStorageAccountKeyWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-453">Regenera o valor de chave especificado para a conta de armazenamento específica.</span><span class="sxs-lookup"><span data-stu-id="80da9-453">Regenerates the specified key value for the given storage account.</span></span> <span data-ttu-id="80da9-454">Esta operação requer a permissão de armazenamento/regeneratekey.</span><span class="sxs-lookup"><span data-stu-id="80da9-454">This operation requires the storage/regeneratekey permission.</span></span>
    syntax:
      content: 'function regenerateStorageAccountKeyWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, keyName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-455">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-455">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-456">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-456">The name of the storage account.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-457">O nome de chave de conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-457">The storage account key name.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.StorageBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.restoreCertificate
    name: 'restoreCertificate(string, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restoreCertificate(vaultBaseUrl: string, certificateBundleBackup: Buffer, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-458">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-458">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateBundleBackup
          type:
            - Buffer
          description: |
            <span data-ttu-id="80da9-459">O blob de backup associado a um pacote de certificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-459">The backup blob associated with a certificate bundle.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.restoreCertificate_2
    name: 'restoreCertificate(string, Buffer, Object, ServiceCallback<CertificateBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restoreCertificate(vaultBaseUrl: string, certificateBundleBackup: Buffer, options: Object, callback: ServiceCallback<CertificateBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateBundleBackup
          type:
            - Buffer
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.restoreCertificate_1
    name: 'restoreCertificate(string, Buffer, ServiceCallback<CertificateBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restoreCertificate(vaultBaseUrl: string, certificateBundleBackup: Buffer, callback: ServiceCallback<CertificateBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateBundleBackup
          type:
            - Buffer
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.restoreCertificateWithHttpOperationResponse
    name: 'restoreCertificateWithHttpOperationResponse(string, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restoreCertificateWithHttpOperationResponse(vaultBaseUrl: string, certificateBundleBackup: Buffer, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-460">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-460">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateBundleBackup
          type:
            - Buffer
          description: |
            <span data-ttu-id="80da9-461">O blob de backup associado a um pacote de certificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-461">The backup blob associated with a certificate bundle.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificateBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.restoreKey
    name: 'restoreKey(string, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restoreKey(vaultBaseUrl: string, keyBundleBackup: Buffer, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-462">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-462">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyBundleBackup
          type:
            - Buffer
          description: |
            <span data-ttu-id="80da9-463">O blob de backup associado a um pacote de chaves.</span><span class="sxs-lookup"><span data-stu-id="80da9-463">The backup blob associated with a key bundle.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.restoreKey_2
    name: 'restoreKey(string, Buffer, Object, ServiceCallback<KeyBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restoreKey(vaultBaseUrl: string, keyBundleBackup: Buffer, options: Object, callback: ServiceCallback<KeyBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyBundleBackup
          type:
            - Buffer
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.restoreKey_1
    name: 'restoreKey(string, Buffer, ServiceCallback<KeyBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restoreKey(vaultBaseUrl: string, keyBundleBackup: Buffer, callback: ServiceCallback<KeyBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyBundleBackup
          type:
            - Buffer
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.restoreKeyWithHttpOperationResponse
    name: 'restoreKeyWithHttpOperationResponse(string, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restoreKeyWithHttpOperationResponse(vaultBaseUrl: string, keyBundleBackup: Buffer, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-464">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-464">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyBundleBackup
          type:
            - Buffer
          description: |
            <span data-ttu-id="80da9-465">O blob de backup associado a um pacote de chaves.</span><span class="sxs-lookup"><span data-stu-id="80da9-465">The backup blob associated with a key bundle.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.KeyBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.restoreSecret
    name: 'restoreSecret(string, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restoreSecret(vaultBaseUrl: string, secretBundleBackup: Buffer, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-466">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-466">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: secretBundleBackup
          type:
            - Buffer
          description: |
            <span data-ttu-id="80da9-467">O blob de backup associado a um pacote de segredo.</span><span class="sxs-lookup"><span data-stu-id="80da9-467">The backup blob associated with a secret bundle.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.SecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.restoreSecret_2
    name: 'restoreSecret(string, Buffer, Object, ServiceCallback<SecretBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restoreSecret(vaultBaseUrl: string, secretBundleBackup: Buffer, options: Object, callback: ServiceCallback<SecretBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretBundleBackup
          type:
            - Buffer
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.restoreSecret_1
    name: 'restoreSecret(string, Buffer, ServiceCallback<SecretBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restoreSecret(vaultBaseUrl: string, secretBundleBackup: Buffer, callback: ServiceCallback<SecretBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretBundleBackup
          type:
            - Buffer
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.restoreSecretWithHttpOperationResponse
    name: 'restoreSecretWithHttpOperationResponse(string, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restoreSecretWithHttpOperationResponse(vaultBaseUrl: string, secretBundleBackup: Buffer, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-468">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-468">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: secretBundleBackup
          type:
            - Buffer
          description: |
            <span data-ttu-id="80da9-469">O blob de backup associado a um pacote de segredo.</span><span class="sxs-lookup"><span data-stu-id="80da9-469">The backup blob associated with a secret bundle.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.SecretBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.restoreStorageAccount
    name: 'restoreStorageAccount(string, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restoreStorageAccount(vaultBaseUrl: string, storageBundleBackup: Buffer, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-470">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-470">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageBundleBackup
          type:
            - Buffer
          description: |
            <span data-ttu-id="80da9-471">O blob de backup associado a uma conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-471">The backup blob associated with a storage account.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.restoreStorageAccount_2
    name: 'restoreStorageAccount(string, Buffer, Object, ServiceCallback<StorageBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restoreStorageAccount(vaultBaseUrl: string, storageBundleBackup: Buffer, options: Object, callback: ServiceCallback<StorageBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageBundleBackup
          type:
            - Buffer
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.StorageBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.restoreStorageAccount_1
    name: 'restoreStorageAccount(string, Buffer, ServiceCallback<StorageBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restoreStorageAccount(vaultBaseUrl: string, storageBundleBackup: Buffer, callback: ServiceCallback<StorageBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageBundleBackup
          type:
            - Buffer
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.StorageBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.restoreStorageAccountWithHttpOperationResponse
    name: 'restoreStorageAccountWithHttpOperationResponse(string, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restoreStorageAccountWithHttpOperationResponse(vaultBaseUrl: string, storageBundleBackup: Buffer, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-472">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-472">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageBundleBackup
          type:
            - Buffer
          description: |
            <span data-ttu-id="80da9-473">O blob de backup associado a uma conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-473">The backup blob associated with a storage account.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.StorageBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.sendLongRunningRequest_1
    name: sendLongRunningRequest(LongRunningUrlBasedRequestPrepareOptions | LongRunningPathTemplateBasedRequestPrepareOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendLongRunningRequest<TResult>(options: LongRunningUrlBasedRequestPrepareOptions | LongRunningPathTemplateBasedRequestPrepareOptions)'
      parameters:
        - id: options
          type:
            - LongRunningUrlBasedRequestPrepareOptions | LongRunningPathTemplateBasedRequestPrepareOptions
          description: ''
      return:
        type:
          - Promise<TResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.sendLongRunningRequest
    name: 'sendLongRunningRequest(LongRunningUrlBasedRequestPrepareOptions | LongRunningPathTemplateBasedRequestPrepareOptions, ServiceCallback<TResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendLongRunningRequest<TResult>(options: LongRunningUrlBasedRequestPrepareOptions | LongRunningPathTemplateBasedRequestPrepareOptions, callback: ServiceCallback<TResult>)'
      parameters:
        - id: options
          type:
            - LongRunningUrlBasedRequestPrepareOptions | LongRunningPathTemplateBasedRequestPrepareOptions
          description: ''
        - id: callback
          type:
            - ServiceCallback<TResult>
          description: ''
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.sendLongRunningRequestWithHttpOperationResponse
    name: sendLongRunningRequestWithHttpOperationResponse(LongRunningUrlBasedRequestPrepareOptions | LongRunningPathTemplateBasedRequestPrepareOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendLongRunningRequestWithHttpOperationResponse<TResult>(options: LongRunningUrlBasedRequestPrepareOptions | LongRunningPathTemplateBasedRequestPrepareOptions)'
      parameters:
        - id: options
          type:
            - LongRunningUrlBasedRequestPrepareOptions | LongRunningPathTemplateBasedRequestPrepareOptions
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse<TResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.sendRequest_1
    name: sendRequest(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequest<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
      return:
        type:
          - Promise<TResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.sendRequest
    name: 'sendRequest(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions, ServiceCallback<TResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequest<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions, callback: ServiceCallback<TResult>)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
        - id: callback
          type:
            - ServiceCallback<TResult>
          description: ''
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.sendRequestWithHttpOperationResponse
    name: sendRequestWithHttpOperationResponse(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequestWithHttpOperationResponse<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse<TResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setCertificateContacts
    name: 'setCertificateContacts(string, Contacts, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setCertificateContacts(vaultBaseUrl: string, contacts: Contacts, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-474">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-474">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: contacts
          type:
            - azure-keyvault.Contacts
          description: |
            <span data-ttu-id="80da9-475">Os contatos para o certificado de Cofre de chaves.</span><span class="sxs-lookup"><span data-stu-id="80da9-475">The contacts for the key vault certificate.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.Contacts>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setCertificateContacts_2
    name: 'setCertificateContacts(string, Contacts, Object, ServiceCallback<Contacts>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setCertificateContacts(vaultBaseUrl: string, contacts: Contacts, options: Object, callback: ServiceCallback<Contacts>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: contacts
          type:
            - azure-keyvault.Contacts
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.Contacts>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.Contacts>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setCertificateContacts_1
    name: 'setCertificateContacts(string, Contacts, ServiceCallback<Contacts>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setCertificateContacts(vaultBaseUrl: string, contacts: Contacts, callback: ServiceCallback<Contacts>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: contacts
          type:
            - azure-keyvault.Contacts
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.Contacts>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.Contacts>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setCertificateContactsWithHttpOperationResponse
    name: 'setCertificateContactsWithHttpOperationResponse(string, Contacts, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setCertificateContactsWithHttpOperationResponse(vaultBaseUrl: string, contacts: Contacts, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-476">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-476">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: contacts
          type:
            - azure-keyvault.Contacts
          description: |
            <span data-ttu-id="80da9-477">Os contatos para o certificado de Cofre de chaves.</span><span class="sxs-lookup"><span data-stu-id="80da9-477">The contacts for the key vault certificate.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.Contacts>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setCertificateIssuer
    name: 'setCertificateIssuer(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setCertificateIssuer(vaultBaseUrl: string, issuerName: string, provider: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-478">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-478">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: issuerName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-479">O nome do emissor.</span><span class="sxs-lookup"><span data-stu-id="80da9-479">The name of the issuer.</span></span>
        - id: provider
          type:
            - string
          description: |
            <span data-ttu-id="80da9-480">O provedor do emissor.</span><span class="sxs-lookup"><span data-stu-id="80da9-480">The issuer provider.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.IssuerBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setCertificateIssuer_2
    name: 'setCertificateIssuer(string, string, string, Object, ServiceCallback<IssuerBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setCertificateIssuer(vaultBaseUrl: string, issuerName: string, provider: string, options: Object, callback: ServiceCallback<IssuerBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: issuerName
          type:
            - string
          description: ''
        - id: provider
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.IssuerBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.IssuerBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setCertificateIssuer_1
    name: 'setCertificateIssuer(string, string, string, ServiceCallback<IssuerBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setCertificateIssuer(vaultBaseUrl: string, issuerName: string, provider: string, callback: ServiceCallback<IssuerBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: issuerName
          type:
            - string
          description: ''
        - id: provider
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.IssuerBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.IssuerBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setCertificateIssuerWithHttpOperationResponse
    name: 'setCertificateIssuerWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setCertificateIssuerWithHttpOperationResponse(vaultBaseUrl: string, issuerName: string, provider: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-481">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-481">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: issuerName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-482">O nome do emissor.</span><span class="sxs-lookup"><span data-stu-id="80da9-482">The name of the issuer.</span></span>
        - id: provider
          type:
            - string
          description: |
            <span data-ttu-id="80da9-483">O provedor do emissor.</span><span class="sxs-lookup"><span data-stu-id="80da9-483">The issuer provider.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.IssuerBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setSasDefinition
    name: 'setSasDefinition(string, string, string, string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="80da9-484">Cria ou atualiza uma nova definição de SAS para a conta de armazenamento especificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-484">Creates or updates a new SAS definition for the specified storage account.</span></span>
      <span data-ttu-id="80da9-485">Esta operação requer a permissão de armazenamento/setsas.</span><span class="sxs-lookup"><span data-stu-id="80da9-485">This operation requires the storage/setsas permission.</span></span>
    syntax:
      content: 'function setSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, templateUri: string, sasType: string, validityPeriod: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-486">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-486">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-487">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-487">The name of the storage account.</span></span>
        - id: sasDefinitionName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-488">O nome da definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="80da9-488">The name of the SAS definition.</span></span>
        - id: templateUri
          type:
            - string
          description: |
            <span data-ttu-id="80da9-489">O modelo de token de definição de SAS assinado com uma chave arbitrária.</span><span class="sxs-lookup"><span data-stu-id="80da9-489">The SAS definition token template signed with an arbitrary key.</span></span>  <span data-ttu-id="80da9-490">Os tokens criados de acordo com a definição de SAS terá as mesmas propriedades que o modelo.</span><span class="sxs-lookup"><span data-stu-id="80da9-490">Tokens created according to the SAS definition will have the same properties as the template.</span></span>
        - id: sasType
          type:
            - string
          description: |
            <span data-ttu-id="80da9-491">O tipo de token SAS criará a definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="80da9-491">The type of SAS token the SAS definition will create.</span></span> <span data-ttu-id="80da9-492">Os valores possíveis incluem: 'conta', 'service'</span><span class="sxs-lookup"><span data-stu-id="80da9-492">Possible values include: 'account', 'service'</span></span>
        - id: validityPeriod
          type:
            - string
          description: |
            <span data-ttu-id="80da9-493">O período de validade de tokens SAS criadas de acordo com a definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="80da9-493">The validity period of SAS tokens created according to the SAS definition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setSasDefinition_2
    name: 'setSasDefinition(string, string, string, string, string, string, Object, ServiceCallback<SasDefinitionBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="80da9-494">Cria ou atualiza uma nova definição de SAS para a conta de armazenamento especificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-494">Creates or updates a new SAS definition for the specified storage account.</span></span>
      <span data-ttu-id="80da9-495">Esta operação requer a permissão de armazenamento/setsas.</span><span class="sxs-lookup"><span data-stu-id="80da9-495">This operation requires the storage/setsas permission.</span></span>
    syntax:
      content: 'function setSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, templateUri: string, sasType: string, validityPeriod: string, options: Object, callback: ServiceCallback<SasDefinitionBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: sasDefinitionName
          type:
            - string
          description: ''
        - id: templateUri
          type:
            - string
          description: ''
        - id: sasType
          type:
            - string
          description: ''
        - id: validityPeriod
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SasDefinitionBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setSasDefinition_1
    name: 'setSasDefinition(string, string, string, string, string, string, ServiceCallback<SasDefinitionBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="80da9-496">Cria ou atualiza uma nova definição de SAS para a conta de armazenamento especificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-496">Creates or updates a new SAS definition for the specified storage account.</span></span>
      <span data-ttu-id="80da9-497">Esta operação requer a permissão de armazenamento/setsas.</span><span class="sxs-lookup"><span data-stu-id="80da9-497">This operation requires the storage/setsas permission.</span></span>
    syntax:
      content: 'function setSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, templateUri: string, sasType: string, validityPeriod: string, callback: ServiceCallback<SasDefinitionBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: sasDefinitionName
          type:
            - string
          description: ''
        - id: templateUri
          type:
            - string
          description: ''
        - id: sasType
          type:
            - string
          description: ''
        - id: validityPeriod
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SasDefinitionBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setSasDefinitionWithHttpOperationResponse
    name: 'setSasDefinitionWithHttpOperationResponse(string, string, string, string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="80da9-498">Cria ou atualiza uma nova definição de SAS para a conta de armazenamento especificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-498">Creates or updates a new SAS definition for the specified storage account.</span></span>
      <span data-ttu-id="80da9-499">Esta operação requer a permissão de armazenamento/setsas.</span><span class="sxs-lookup"><span data-stu-id="80da9-499">This operation requires the storage/setsas permission.</span></span>
    syntax:
      content: 'function setSasDefinitionWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, templateUri: string, sasType: string, validityPeriod: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-500">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-500">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-501">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-501">The name of the storage account.</span></span>
        - id: sasDefinitionName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-502">O nome da definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="80da9-502">The name of the SAS definition.</span></span>
        - id: templateUri
          type:
            - string
          description: |
            <span data-ttu-id="80da9-503">O modelo de token de definição de SAS assinado com uma chave arbitrária.</span><span class="sxs-lookup"><span data-stu-id="80da9-503">The SAS definition token template signed with an arbitrary key.</span></span>  <span data-ttu-id="80da9-504">Os tokens criados de acordo com a definição de SAS terá as mesmas propriedades que o modelo.</span><span class="sxs-lookup"><span data-stu-id="80da9-504">Tokens created according to the SAS definition will have the same properties as the template.</span></span>
        - id: sasType
          type:
            - string
          description: |
            <span data-ttu-id="80da9-505">O tipo de token SAS criará a definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="80da9-505">The type of SAS token the SAS definition will create.</span></span> <span data-ttu-id="80da9-506">Os valores possíveis incluem: 'conta', 'service'</span><span class="sxs-lookup"><span data-stu-id="80da9-506">Possible values include: 'account', 'service'</span></span>
        - id: validityPeriod
          type:
            - string
          description: |
            <span data-ttu-id="80da9-507">O período de validade de tokens SAS criadas de acordo com a definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="80da9-507">The validity period of SAS tokens created according to the SAS definition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.SasDefinitionBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setSecret
    name: 'setSecret(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setSecret(vaultBaseUrl: string, secretName: string, value: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-508">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-508">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: secretName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-509">O nome do segredo.</span><span class="sxs-lookup"><span data-stu-id="80da9-509">The name of the secret.</span></span>
        - id: value
          type:
            - string
          description: |
            <span data-ttu-id="80da9-510">O valor do segredo.</span><span class="sxs-lookup"><span data-stu-id="80da9-510">The value of the secret.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.SecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setSecret_2
    name: 'setSecret(string, string, string, Object, ServiceCallback<SecretBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setSecret(vaultBaseUrl: string, secretName: string, value: string, options: Object, callback: ServiceCallback<SecretBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: value
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setSecret_1
    name: 'setSecret(string, string, string, ServiceCallback<SecretBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setSecret(vaultBaseUrl: string, secretName: string, value: string, callback: ServiceCallback<SecretBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: value
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setSecretWithHttpOperationResponse
    name: 'setSecretWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setSecretWithHttpOperationResponse(vaultBaseUrl: string, secretName: string, value: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-511">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-511">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: secretName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-512">O nome do segredo.</span><span class="sxs-lookup"><span data-stu-id="80da9-512">The name of the secret.</span></span>
        - id: value
          type:
            - string
          description: |
            <span data-ttu-id="80da9-513">O valor do segredo.</span><span class="sxs-lookup"><span data-stu-id="80da9-513">The value of the secret.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.SecretBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setStorageAccount
    name: 'setStorageAccount(string, string, string, string, boolean, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-514">Cria ou atualiza uma nova conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-514">Creates or updates a new storage account.</span></span> <span data-ttu-id="80da9-515">Esta operação requer a permissão de armazenamento/definir.</span><span class="sxs-lookup"><span data-stu-id="80da9-515">This operation requires the storage/set permission.</span></span>
    syntax:
      content: 'function setStorageAccount(vaultBaseUrl: string, storageAccountName: string, resourceId: string, activeKeyName: string, autoRegenerateKey: boolean, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-516">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-516">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-517">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-517">The name of the storage account.</span></span>
        - id: resourceId
          type:
            - string
          description: |
            <span data-ttu-id="80da9-518">Id do recurso de conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-518">Storage account resource id.</span></span>
        - id: activeKeyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-519">Armazenamento ativo chave nome da conta atual.</span><span class="sxs-lookup"><span data-stu-id="80da9-519">Current active storage account key name.</span></span>
        - id: autoRegenerateKey
          type:
            - boolean
          description: |
            <span data-ttu-id="80da9-520">Se o Cofre de chaves deve gerenciar a conta de armazenamento para o usuário.</span><span class="sxs-lookup"><span data-stu-id="80da9-520">whether keyvault should manage the storage account for the user.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setStorageAccount_2
    name: 'setStorageAccount(string, string, string, string, boolean, Object, ServiceCallback<StorageBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-521">Cria ou atualiza uma nova conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-521">Creates or updates a new storage account.</span></span> <span data-ttu-id="80da9-522">Esta operação requer a permissão de armazenamento/definir.</span><span class="sxs-lookup"><span data-stu-id="80da9-522">This operation requires the storage/set permission.</span></span>
    syntax:
      content: 'function setStorageAccount(vaultBaseUrl: string, storageAccountName: string, resourceId: string, activeKeyName: string, autoRegenerateKey: boolean, options: Object, callback: ServiceCallback<StorageBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: resourceId
          type:
            - string
          description: ''
        - id: activeKeyName
          type:
            - string
          description: ''
        - id: autoRegenerateKey
          type:
            - boolean
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.StorageBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setStorageAccount_1
    name: 'setStorageAccount(string, string, string, string, boolean, ServiceCallback<StorageBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-523">Cria ou atualiza uma nova conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-523">Creates or updates a new storage account.</span></span> <span data-ttu-id="80da9-524">Esta operação requer a permissão de armazenamento/definir.</span><span class="sxs-lookup"><span data-stu-id="80da9-524">This operation requires the storage/set permission.</span></span>
    syntax:
      content: 'function setStorageAccount(vaultBaseUrl: string, storageAccountName: string, resourceId: string, activeKeyName: string, autoRegenerateKey: boolean, callback: ServiceCallback<StorageBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: resourceId
          type:
            - string
          description: ''
        - id: activeKeyName
          type:
            - string
          description: ''
        - id: autoRegenerateKey
          type:
            - boolean
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.StorageBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setStorageAccountWithHttpOperationResponse
    name: 'setStorageAccountWithHttpOperationResponse(string, string, string, string, boolean, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="80da9-525">Cria ou atualiza uma nova conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-525">Creates or updates a new storage account.</span></span> <span data-ttu-id="80da9-526">Esta operação requer a permissão de armazenamento/definir.</span><span class="sxs-lookup"><span data-stu-id="80da9-526">This operation requires the storage/set permission.</span></span>
    syntax:
      content: 'function setStorageAccountWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, resourceId: string, activeKeyName: string, autoRegenerateKey: boolean, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-527">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-527">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-528">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-528">The name of the storage account.</span></span>
        - id: resourceId
          type:
            - string
          description: |
            <span data-ttu-id="80da9-529">Id do recurso de conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-529">Storage account resource id.</span></span>
        - id: activeKeyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-530">Armazenamento ativo chave nome da conta atual.</span><span class="sxs-lookup"><span data-stu-id="80da9-530">Current active storage account key name.</span></span>
        - id: autoRegenerateKey
          type:
            - boolean
          description: |
            <span data-ttu-id="80da9-531">Se o Cofre de chaves deve gerenciar a conta de armazenamento para o usuário.</span><span class="sxs-lookup"><span data-stu-id="80da9-531">whether keyvault should manage the storage account for the user.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.StorageBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.sign
    name: 'sign(string, string, string, string, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sign(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-532">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-532">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-533">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-533">The name of the key.</span></span>
        - id: keyVersion
          type:
            - string
          description: |
            <span data-ttu-id="80da9-534">A versão da chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-534">The version of the key.</span></span>
        - id: algorithm
          type:
            - string
          description: |
            <span data-ttu-id="80da9-535">O identificador de algoritmo de verificação/assinatura.</span><span class="sxs-lookup"><span data-stu-id="80da9-535">The signing/verification algorithm identifier.</span></span> <span data-ttu-id="80da9-536">Para obter mais informações sobre os tipos possíveis de algoritmo, consulte JsonWebKeySignatureAlgorithm.</span><span class="sxs-lookup"><span data-stu-id="80da9-536">For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm.</span></span> <span data-ttu-id="80da9-537">Os valores possíveis incluem: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K'</span><span class="sxs-lookup"><span data-stu-id="80da9-537">Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K'</span></span>
        - id: value
          type:
            - Buffer
          description: |+

        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.KeyOperationResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.sign_2
    name: 'sign(string, string, string, string, Buffer, Object, ServiceCallback<KeyOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sign(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, options: Object, callback: ServiceCallback<KeyOperationResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: keyVersion
          type:
            - string
          description: ''
        - id: algorithm
          type:
            - string
          description: ''
        - id: value
          type:
            - Buffer
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyOperationResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.sign_1
    name: 'sign(string, string, string, string, Buffer, ServiceCallback<KeyOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sign(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, callback: ServiceCallback<KeyOperationResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: keyVersion
          type:
            - string
          description: ''
        - id: algorithm
          type:
            - string
          description: ''
        - id: value
          type:
            - Buffer
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyOperationResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.signWithHttpOperationResponse
    name: 'signWithHttpOperationResponse(string, string, string, string, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function signWithHttpOperationResponse(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-538">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-538">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-539">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-539">The name of the key.</span></span>
        - id: keyVersion
          type:
            - string
          description: |
            <span data-ttu-id="80da9-540">A versão da chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-540">The version of the key.</span></span>
        - id: algorithm
          type:
            - string
          description: |
            <span data-ttu-id="80da9-541">O identificador de algoritmo de verificação/assinatura.</span><span class="sxs-lookup"><span data-stu-id="80da9-541">The signing/verification algorithm identifier.</span></span> <span data-ttu-id="80da9-542">Para obter mais informações sobre os tipos possíveis de algoritmo, consulte JsonWebKeySignatureAlgorithm.</span><span class="sxs-lookup"><span data-stu-id="80da9-542">For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm.</span></span> <span data-ttu-id="80da9-543">Os valores possíveis incluem: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K'</span><span class="sxs-lookup"><span data-stu-id="80da9-543">Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K'</span></span>
        - id: value
          type:
            - Buffer
          description: |+

        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.KeyOperationResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.unwrapKey
    name: 'unwrapKey(string, string, string, string, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unwrapKey(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-544">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-544">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-545">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-545">The name of the key.</span></span>
        - id: keyVersion
          type:
            - string
          description: |
            <span data-ttu-id="80da9-546">A versão da chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-546">The version of the key.</span></span>
        - id: algorithm
          type:
            - string
          description: |
            <span data-ttu-id="80da9-547">Identificador de algoritmo.</span><span class="sxs-lookup"><span data-stu-id="80da9-547">algorithm identifier.</span></span> <span data-ttu-id="80da9-548">Os valores possíveis incluem: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'</span><span class="sxs-lookup"><span data-stu-id="80da9-548">Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'</span></span>
        - id: value
          type:
            - Buffer
          description: |+

        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.KeyOperationResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.unwrapKey_2
    name: 'unwrapKey(string, string, string, string, Buffer, Object, ServiceCallback<KeyOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unwrapKey(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, options: Object, callback: ServiceCallback<KeyOperationResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: keyVersion
          type:
            - string
          description: ''
        - id: algorithm
          type:
            - string
          description: ''
        - id: value
          type:
            - Buffer
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyOperationResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.unwrapKey_1
    name: 'unwrapKey(string, string, string, string, Buffer, ServiceCallback<KeyOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unwrapKey(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, callback: ServiceCallback<KeyOperationResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: keyVersion
          type:
            - string
          description: ''
        - id: algorithm
          type:
            - string
          description: ''
        - id: value
          type:
            - Buffer
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyOperationResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.unwrapKeyWithHttpOperationResponse
    name: 'unwrapKeyWithHttpOperationResponse(string, string, string, string, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unwrapKeyWithHttpOperationResponse(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-549">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-549">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-550">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-550">The name of the key.</span></span>
        - id: keyVersion
          type:
            - string
          description: |
            <span data-ttu-id="80da9-551">A versão da chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-551">The version of the key.</span></span>
        - id: algorithm
          type:
            - string
          description: |
            <span data-ttu-id="80da9-552">Identificador de algoritmo.</span><span class="sxs-lookup"><span data-stu-id="80da9-552">algorithm identifier.</span></span> <span data-ttu-id="80da9-553">Os valores possíveis incluem: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'</span><span class="sxs-lookup"><span data-stu-id="80da9-553">Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'</span></span>
        - id: value
          type:
            - Buffer
          description: |+

        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.KeyOperationResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateCertificate
    name: 'updateCertificate(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateCertificate(vaultBaseUrl: string, certificateName: string, certificateVersion: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-554">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-554">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-555">O nome do certificado no cofre da chave determinado.</span><span class="sxs-lookup"><span data-stu-id="80da9-555">The name of the certificate in the given key vault.</span></span>
        - id: certificateVersion
          type:
            - string
          description: |
            <span data-ttu-id="80da9-556">A versão do certificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-556">The version of the certificate.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateCertificate_2
    name: 'updateCertificate(string, string, string, Object, ServiceCallback<CertificateBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateCertificate(vaultBaseUrl: string, certificateName: string, certificateVersion: string, options: Object, callback: ServiceCallback<CertificateBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: certificateVersion
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateCertificate_1
    name: 'updateCertificate(string, string, string, ServiceCallback<CertificateBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateCertificate(vaultBaseUrl: string, certificateName: string, certificateVersion: string, callback: ServiceCallback<CertificateBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: certificateVersion
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateCertificateIssuer
    name: 'updateCertificateIssuer(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateCertificateIssuer(vaultBaseUrl: string, issuerName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-557">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-557">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: issuerName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-558">O nome do emissor.</span><span class="sxs-lookup"><span data-stu-id="80da9-558">The name of the issuer.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.IssuerBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateCertificateIssuer_2
    name: 'updateCertificateIssuer(string, string, Object, ServiceCallback<IssuerBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateCertificateIssuer(vaultBaseUrl: string, issuerName: string, options: Object, callback: ServiceCallback<IssuerBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: issuerName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.IssuerBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.IssuerBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateCertificateIssuer_1
    name: 'updateCertificateIssuer(string, string, ServiceCallback<IssuerBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateCertificateIssuer(vaultBaseUrl: string, issuerName: string, callback: ServiceCallback<IssuerBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: issuerName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.IssuerBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.IssuerBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateCertificateIssuerWithHttpOperationResponse
    name: 'updateCertificateIssuerWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateCertificateIssuerWithHttpOperationResponse(vaultBaseUrl: string, issuerName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-559">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-559">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: issuerName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-560">O nome do emissor.</span><span class="sxs-lookup"><span data-stu-id="80da9-560">The name of the issuer.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.IssuerBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateCertificateOperation
    name: 'updateCertificateOperation(string, string, boolean, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateCertificateOperation(vaultBaseUrl: string, certificateName: string, cancellationRequested: boolean, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-561">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-561">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-562">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-562">The name of the certificate.</span></span>
        - id: cancellationRequested
          type:
            - boolean
          description: |
            <span data-ttu-id="80da9-563">Indica se o cancelamento foi solicitado a operação de certificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-563">Indicates if cancellation was requested on the certificate operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificateOperation>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateCertificateOperation_2
    name: 'updateCertificateOperation(string, string, boolean, Object, ServiceCallback<CertificateOperation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateCertificateOperation(vaultBaseUrl: string, certificateName: string, cancellationRequested: boolean, options: Object, callback: ServiceCallback<CertificateOperation>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: cancellationRequested
          type:
            - boolean
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateOperation>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateOperation>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateCertificateOperation_1
    name: 'updateCertificateOperation(string, string, boolean, ServiceCallback<CertificateOperation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateCertificateOperation(vaultBaseUrl: string, certificateName: string, cancellationRequested: boolean, callback: ServiceCallback<CertificateOperation>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: cancellationRequested
          type:
            - boolean
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateOperation>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateOperation>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateCertificateOperationWithHttpOperationResponse
    name: 'updateCertificateOperationWithHttpOperationResponse(string, string, boolean, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateCertificateOperationWithHttpOperationResponse(vaultBaseUrl: string, certificateName: string, cancellationRequested: boolean, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-564">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-564">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-565">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-565">The name of the certificate.</span></span>
        - id: cancellationRequested
          type:
            - boolean
          description: |
            <span data-ttu-id="80da9-566">Indica se o cancelamento foi solicitado a operação de certificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-566">Indicates if cancellation was requested on the certificate operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificateOperation>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateCertificatePolicy
    name: 'updateCertificatePolicy(string, string, CertificatePolicy, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateCertificatePolicy(vaultBaseUrl: string, certificateName: string, certificatePolicy: CertificatePolicy, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-567">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-567">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-568">O nome do certificado no cofre fornecido.</span><span class="sxs-lookup"><span data-stu-id="80da9-568">The name of the certificate in the given vault.</span></span>
        - id: certificatePolicy
          type:
            - azure-keyvault.CertificatePolicy
          description: |
            <span data-ttu-id="80da9-569">A política para o certificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-569">The policy for the certificate.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificatePolicy>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateCertificatePolicy_2
    name: 'updateCertificatePolicy(string, string, CertificatePolicy, Object, ServiceCallback<CertificatePolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateCertificatePolicy(vaultBaseUrl: string, certificateName: string, certificatePolicy: CertificatePolicy, options: Object, callback: ServiceCallback<CertificatePolicy>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: certificatePolicy
          type:
            - azure-keyvault.CertificatePolicy
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificatePolicy>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificatePolicy>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateCertificatePolicy_1
    name: 'updateCertificatePolicy(string, string, CertificatePolicy, ServiceCallback<CertificatePolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateCertificatePolicy(vaultBaseUrl: string, certificateName: string, certificatePolicy: CertificatePolicy, callback: ServiceCallback<CertificatePolicy>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: certificatePolicy
          type:
            - azure-keyvault.CertificatePolicy
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificatePolicy>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificatePolicy>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateCertificatePolicyWithHttpOperationResponse
    name: 'updateCertificatePolicyWithHttpOperationResponse(string, string, CertificatePolicy, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateCertificatePolicyWithHttpOperationResponse(vaultBaseUrl: string, certificateName: string, certificatePolicy: CertificatePolicy, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-570">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-570">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-571">O nome do certificado no cofre fornecido.</span><span class="sxs-lookup"><span data-stu-id="80da9-571">The name of the certificate in the given vault.</span></span>
        - id: certificatePolicy
          type:
            - azure-keyvault.CertificatePolicy
          description: |
            <span data-ttu-id="80da9-572">A política para o certificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-572">The policy for the certificate.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificatePolicy>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateCertificateWithHttpOperationResponse
    name: 'updateCertificateWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateCertificateWithHttpOperationResponse(vaultBaseUrl: string, certificateName: string, certificateVersion: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-573">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-573">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: certificateName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-574">O nome do certificado no cofre da chave determinado.</span><span class="sxs-lookup"><span data-stu-id="80da9-574">The name of the certificate in the given key vault.</span></span>
        - id: certificateVersion
          type:
            - string
          description: |
            <span data-ttu-id="80da9-575">A versão do certificado.</span><span class="sxs-lookup"><span data-stu-id="80da9-575">The version of the certificate.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificateBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateKey
    name: 'updateKey(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateKey(vaultBaseUrl: string, keyName: string, keyVersion: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-576">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-576">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-577">O nome da chave a ser atualizada.</span><span class="sxs-lookup"><span data-stu-id="80da9-577">The name of key to update.</span></span>
        - id: keyVersion
          type:
            - string
          description: |
            <span data-ttu-id="80da9-578">A versão da chave para atualizar.</span><span class="sxs-lookup"><span data-stu-id="80da9-578">The version of the key to update.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateKey_2
    name: 'updateKey(string, string, string, Object, ServiceCallback<KeyBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateKey(vaultBaseUrl: string, keyName: string, keyVersion: string, options: Object, callback: ServiceCallback<KeyBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: keyVersion
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateKey_1
    name: 'updateKey(string, string, string, ServiceCallback<KeyBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateKey(vaultBaseUrl: string, keyName: string, keyVersion: string, callback: ServiceCallback<KeyBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: keyVersion
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateKeyWithHttpOperationResponse
    name: 'updateKeyWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateKeyWithHttpOperationResponse(vaultBaseUrl: string, keyName: string, keyVersion: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-579">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-579">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-580">O nome da chave a ser atualizada.</span><span class="sxs-lookup"><span data-stu-id="80da9-580">The name of key to update.</span></span>
        - id: keyVersion
          type:
            - string
          description: |
            <span data-ttu-id="80da9-581">A versão da chave para atualizar.</span><span class="sxs-lookup"><span data-stu-id="80da9-581">The version of the key to update.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.KeyBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateSasDefinition
    name: 'updateSasDefinition(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="80da9-582">Atualiza os atributos especificados associados a determinada definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="80da9-582">Updates the specified attributes associated with the given SAS definition.</span></span>
      <span data-ttu-id="80da9-583">Esta operação requer a permissão de armazenamento/setsas.</span><span class="sxs-lookup"><span data-stu-id="80da9-583">This operation requires the storage/setsas permission.</span></span>
    syntax:
      content: 'function updateSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-584">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-584">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-585">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-585">The name of the storage account.</span></span>
        - id: sasDefinitionName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-586">O nome da definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="80da9-586">The name of the SAS definition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateSasDefinition_2
    name: 'updateSasDefinition(string, string, string, Object, ServiceCallback<SasDefinitionBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="80da9-587">Atualiza os atributos especificados associados a determinada definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="80da9-587">Updates the specified attributes associated with the given SAS definition.</span></span>
      <span data-ttu-id="80da9-588">Esta operação requer a permissão de armazenamento/setsas.</span><span class="sxs-lookup"><span data-stu-id="80da9-588">This operation requires the storage/setsas permission.</span></span>
    syntax:
      content: 'function updateSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, options: Object, callback: ServiceCallback<SasDefinitionBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: sasDefinitionName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SasDefinitionBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateSasDefinition_1
    name: 'updateSasDefinition(string, string, string, ServiceCallback<SasDefinitionBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="80da9-589">Atualiza os atributos especificados associados a determinada definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="80da9-589">Updates the specified attributes associated with the given SAS definition.</span></span>
      <span data-ttu-id="80da9-590">Esta operação requer a permissão de armazenamento/setsas.</span><span class="sxs-lookup"><span data-stu-id="80da9-590">This operation requires the storage/setsas permission.</span></span>
    syntax:
      content: 'function updateSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, callback: ServiceCallback<SasDefinitionBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: sasDefinitionName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SasDefinitionBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateSasDefinitionWithHttpOperationResponse
    name: 'updateSasDefinitionWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="80da9-591">Atualiza os atributos especificados associados a determinada definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="80da9-591">Updates the specified attributes associated with the given SAS definition.</span></span>
      <span data-ttu-id="80da9-592">Esta operação requer a permissão de armazenamento/setsas.</span><span class="sxs-lookup"><span data-stu-id="80da9-592">This operation requires the storage/setsas permission.</span></span>
    syntax:
      content: 'function updateSasDefinitionWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-593">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-593">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-594">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-594">The name of the storage account.</span></span>
        - id: sasDefinitionName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-595">O nome da definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="80da9-595">The name of the SAS definition.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.SasDefinitionBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateSecret
    name: 'updateSecret(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateSecret(vaultBaseUrl: string, secretName: string, secretVersion: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-596">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-596">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: secretName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-597">O nome do segredo.</span><span class="sxs-lookup"><span data-stu-id="80da9-597">The name of the secret.</span></span>
        - id: secretVersion
          type:
            - string
          description: |
            <span data-ttu-id="80da9-598">A versão do segredo.</span><span class="sxs-lookup"><span data-stu-id="80da9-598">The version of the secret.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.SecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateSecret_2
    name: 'updateSecret(string, string, string, Object, ServiceCallback<SecretBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateSecret(vaultBaseUrl: string, secretName: string, secretVersion: string, options: Object, callback: ServiceCallback<SecretBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: secretVersion
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateSecret_1
    name: 'updateSecret(string, string, string, ServiceCallback<SecretBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateSecret(vaultBaseUrl: string, secretName: string, secretVersion: string, callback: ServiceCallback<SecretBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: secretVersion
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateSecretWithHttpOperationResponse
    name: 'updateSecretWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateSecretWithHttpOperationResponse(vaultBaseUrl: string, secretName: string, secretVersion: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-599">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-599">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: secretName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-600">O nome do segredo.</span><span class="sxs-lookup"><span data-stu-id="80da9-600">The name of the secret.</span></span>
        - id: secretVersion
          type:
            - string
          description: |
            <span data-ttu-id="80da9-601">A versão do segredo.</span><span class="sxs-lookup"><span data-stu-id="80da9-601">The version of the secret.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.SecretBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateStorageAccount
    name: 'updateStorageAccount(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="80da9-602">Atualiza os atributos especificados associados à conta de armazenamento específica.</span><span class="sxs-lookup"><span data-stu-id="80da9-602">Updates the specified attributes associated with the given storage account.</span></span>
      <span data-ttu-id="80da9-603">Esta operação requer a permissão de atualização/de conjunto de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-603">This operation requires the storage/set/update permission.</span></span>
    syntax:
      content: 'function updateStorageAccount(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-604">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-604">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-605">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-605">The name of the storage account.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateStorageAccount_2
    name: 'updateStorageAccount(string, string, Object, ServiceCallback<StorageBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="80da9-606">Atualiza os atributos especificados associados à conta de armazenamento específica.</span><span class="sxs-lookup"><span data-stu-id="80da9-606">Updates the specified attributes associated with the given storage account.</span></span>
      <span data-ttu-id="80da9-607">Esta operação requer a permissão de atualização/de conjunto de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-607">This operation requires the storage/set/update permission.</span></span>
    syntax:
      content: 'function updateStorageAccount(vaultBaseUrl: string, storageAccountName: string, options: Object, callback: ServiceCallback<StorageBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.StorageBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateStorageAccount_1
    name: 'updateStorageAccount(string, string, ServiceCallback<StorageBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="80da9-608">Atualiza os atributos especificados associados à conta de armazenamento específica.</span><span class="sxs-lookup"><span data-stu-id="80da9-608">Updates the specified attributes associated with the given storage account.</span></span>
      <span data-ttu-id="80da9-609">Esta operação requer a permissão de atualização/de conjunto de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-609">This operation requires the storage/set/update permission.</span></span>
    syntax:
      content: 'function updateStorageAccount(vaultBaseUrl: string, storageAccountName: string, callback: ServiceCallback<StorageBundle>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.StorageBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateStorageAccountWithHttpOperationResponse
    name: 'updateStorageAccountWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="80da9-610">Atualiza os atributos especificados associados à conta de armazenamento específica.</span><span class="sxs-lookup"><span data-stu-id="80da9-610">Updates the specified attributes associated with the given storage account.</span></span>
      <span data-ttu-id="80da9-611">Esta operação requer a permissão de atualização/de conjunto de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-611">This operation requires the storage/set/update permission.</span></span>
    syntax:
      content: 'function updateStorageAccountWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-612">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-612">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: storageAccountName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-613">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="80da9-613">The name of the storage account.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.StorageBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.verify
    name: 'verify(string, string, string, string, Buffer, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function verify(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, digest: Buffer, signature: Buffer, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-614">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-614">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-615">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-615">The name of the key.</span></span>
        - id: keyVersion
          type:
            - string
          description: |
            <span data-ttu-id="80da9-616">A versão da chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-616">The version of the key.</span></span>
        - id: algorithm
          type:
            - string
          description: |
            <span data-ttu-id="80da9-617">O algoritmo de verificação/assinatura.</span><span class="sxs-lookup"><span data-stu-id="80da9-617">The signing/verification algorithm.</span></span> <span data-ttu-id="80da9-618">Para obter mais informações sobre os tipos possíveis de algoritmo, consulte JsonWebKeySignatureAlgorithm.</span><span class="sxs-lookup"><span data-stu-id="80da9-618">For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm.</span></span>
            <span data-ttu-id="80da9-619">Os valores possíveis incluem: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K'</span><span class="sxs-lookup"><span data-stu-id="80da9-619">Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K'</span></span>
        - id: digest
          type:
            - Buffer
          description: |
            <span data-ttu-id="80da9-620">O resumo da mensagem usado para assinatura.</span><span class="sxs-lookup"><span data-stu-id="80da9-620">The digest used for signing.</span></span>
        - id: signature
          type:
            - Buffer
          description: |
            <span data-ttu-id="80da9-621">A assinatura a ser verificada.</span><span class="sxs-lookup"><span data-stu-id="80da9-621">The signature to be verified.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.KeyVerifyResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.verify_2
    name: 'verify(string, string, string, string, Buffer, Buffer, Object, ServiceCallback<KeyVerifyResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function verify(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, digest: Buffer, signature: Buffer, options: Object, callback: ServiceCallback<KeyVerifyResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: keyVersion
          type:
            - string
          description: ''
        - id: algorithm
          type:
            - string
          description: ''
        - id: digest
          type:
            - Buffer
          description: ''
        - id: signature
          type:
            - Buffer
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyVerifyResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyVerifyResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.verify_1
    name: 'verify(string, string, string, string, Buffer, Buffer, ServiceCallback<KeyVerifyResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function verify(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, digest: Buffer, signature: Buffer, callback: ServiceCallback<KeyVerifyResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: keyVersion
          type:
            - string
          description: ''
        - id: algorithm
          type:
            - string
          description: ''
        - id: digest
          type:
            - Buffer
          description: ''
        - id: signature
          type:
            - Buffer
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyVerifyResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyVerifyResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.verifyWithHttpOperationResponse
    name: 'verifyWithHttpOperationResponse(string, string, string, string, Buffer, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function verifyWithHttpOperationResponse(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, digest: Buffer, signature: Buffer, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-622">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-622">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-623">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-623">The name of the key.</span></span>
        - id: keyVersion
          type:
            - string
          description: |
            <span data-ttu-id="80da9-624">A versão da chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-624">The version of the key.</span></span>
        - id: algorithm
          type:
            - string
          description: |
            <span data-ttu-id="80da9-625">O algoritmo de verificação/assinatura.</span><span class="sxs-lookup"><span data-stu-id="80da9-625">The signing/verification algorithm.</span></span> <span data-ttu-id="80da9-626">Para obter mais informações sobre os tipos possíveis de algoritmo, consulte JsonWebKeySignatureAlgorithm.</span><span class="sxs-lookup"><span data-stu-id="80da9-626">For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm.</span></span>
            <span data-ttu-id="80da9-627">Os valores possíveis incluem: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K'</span><span class="sxs-lookup"><span data-stu-id="80da9-627">Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K'</span></span>
        - id: digest
          type:
            - Buffer
          description: |
            <span data-ttu-id="80da9-628">O resumo da mensagem usado para assinatura.</span><span class="sxs-lookup"><span data-stu-id="80da9-628">The digest used for signing.</span></span>
        - id: signature
          type:
            - Buffer
          description: |
            <span data-ttu-id="80da9-629">A assinatura a ser verificada.</span><span class="sxs-lookup"><span data-stu-id="80da9-629">The signature to be verified.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.KeyVerifyResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.wrapKey
    name: 'wrapKey(string, string, string, string, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function wrapKey(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-630">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-630">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-631">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-631">The name of the key.</span></span>
        - id: keyVersion
          type:
            - string
          description: |
            <span data-ttu-id="80da9-632">A versão da chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-632">The version of the key.</span></span>
        - id: algorithm
          type:
            - string
          description: |
            <span data-ttu-id="80da9-633">Identificador de algoritmo.</span><span class="sxs-lookup"><span data-stu-id="80da9-633">algorithm identifier.</span></span> <span data-ttu-id="80da9-634">Os valores possíveis incluem: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'</span><span class="sxs-lookup"><span data-stu-id="80da9-634">Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'</span></span>
        - id: value
          type:
            - Buffer
          description: |+

        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.KeyOperationResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.wrapKey_2
    name: 'wrapKey(string, string, string, string, Buffer, Object, ServiceCallback<KeyOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function wrapKey(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, options: Object, callback: ServiceCallback<KeyOperationResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: keyVersion
          type:
            - string
          description: ''
        - id: algorithm
          type:
            - string
          description: ''
        - id: value
          type:
            - Buffer
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyOperationResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.wrapKey_1
    name: 'wrapKey(string, string, string, string, Buffer, ServiceCallback<KeyOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function wrapKey(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, callback: ServiceCallback<KeyOperationResult>)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: keyVersion
          type:
            - string
          description: ''
        - id: algorithm
          type:
            - string
          description: ''
        - id: value
          type:
            - Buffer
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyOperationResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.wrapKeyWithHttpOperationResponse
    name: 'wrapKeyWithHttpOperationResponse(string, string, string, string, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function wrapKeyWithHttpOperationResponse(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            <span data-ttu-id="80da9-635">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="80da9-635">The vault name, for example https://myvault.vault.azure.net.</span></span>
        - id: keyName
          type:
            - string
          description: |
            <span data-ttu-id="80da9-636">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-636">The name of the key.</span></span>
        - id: keyVersion
          type:
            - string
          description: |
            <span data-ttu-id="80da9-637">A versão da chave.</span><span class="sxs-lookup"><span data-stu-id="80da9-637">The version of the key.</span></span>
        - id: algorithm
          type:
            - string
          description: |
            <span data-ttu-id="80da9-638">Identificador de algoritmo.</span><span class="sxs-lookup"><span data-stu-id="80da9-638">algorithm identifier.</span></span> <span data-ttu-id="80da9-639">Os valores possíveis incluem: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'</span><span class="sxs-lookup"><span data-stu-id="80da9-639">Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'</span></span>
        - id: value
          type:
            - Buffer
          description: |+

        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.KeyOperationResult>>
    package: azure-keyvault
references:
  - uid: Promise<azure-keyvault.BackupCertificateResult>
    name: BackupCertificateResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BackupCertificateResult
        fullName: BackupCertificateResult
        uid: azure-keyvault.BackupCertificateResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.BackupCertificateResult>
    name: BackupCertificateResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BackupCertificateResult
        fullName: BackupCertificateResult
        uid: azure-keyvault.BackupCertificateResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.BackupCertificateResult>>
    name: BackupCertificateResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: BackupCertificateResult
        fullName: BackupCertificateResult
        uid: azure-keyvault.BackupCertificateResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.BackupKeyResult>
    name: BackupKeyResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BackupKeyResult
        fullName: BackupKeyResult
        uid: azure-keyvault.BackupKeyResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.BackupKeyResult>
    name: BackupKeyResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BackupKeyResult
        fullName: BackupKeyResult
        uid: azure-keyvault.BackupKeyResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.BackupKeyResult>>
    name: BackupKeyResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: BackupKeyResult
        fullName: BackupKeyResult
        uid: azure-keyvault.BackupKeyResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.BackupSecretResult>
    name: BackupSecretResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BackupSecretResult
        fullName: BackupSecretResult
        uid: azure-keyvault.BackupSecretResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.BackupSecretResult>
    name: BackupSecretResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BackupSecretResult
        fullName: BackupSecretResult
        uid: azure-keyvault.BackupSecretResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.BackupSecretResult>>
    name: BackupSecretResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: BackupSecretResult
        fullName: BackupSecretResult
        uid: azure-keyvault.BackupSecretResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.BackupStorageResult>
    name: BackupStorageResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BackupStorageResult
        fullName: BackupStorageResult
        uid: azure-keyvault.BackupStorageResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.BackupStorageResult>
    name: BackupStorageResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BackupStorageResult
        fullName: BackupStorageResult
        uid: azure-keyvault.BackupStorageResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.BackupStorageResult>>
    name: BackupStorageResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: BackupStorageResult
        fullName: BackupStorageResult
        uid: azure-keyvault.BackupStorageResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.CertificateOperation>
    name: CertificateOperation>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: CertificateOperation
        fullName: CertificateOperation
        uid: azure-keyvault.CertificateOperation
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.CertificateOperation>
    name: CertificateOperation>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CertificateOperation
        fullName: CertificateOperation
        uid: azure-keyvault.CertificateOperation
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.CertificateOperation>>
    name: CertificateOperation>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: CertificateOperation
        fullName: CertificateOperation
        uid: azure-keyvault.CertificateOperation
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.KeyBundle>
    name: KeyBundle>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: KeyBundle
        fullName: KeyBundle
        uid: azure-keyvault.KeyBundle
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.KeyBundle>
    name: KeyBundle>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: KeyBundle
        fullName: KeyBundle
        uid: azure-keyvault.KeyBundle
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.KeyBundle>>
    name: KeyBundle>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: KeyBundle
        fullName: KeyBundle
        uid: azure-keyvault.KeyBundle
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.KeyOperationResult>
    name: KeyOperationResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: KeyOperationResult
        fullName: KeyOperationResult
        uid: azure-keyvault.KeyOperationResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.KeyOperationResult>
    name: KeyOperationResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: KeyOperationResult
        fullName: KeyOperationResult
        uid: azure-keyvault.KeyOperationResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.KeyOperationResult>>
    name: KeyOperationResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: KeyOperationResult
        fullName: KeyOperationResult
        uid: azure-keyvault.KeyOperationResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.DeletedCertificateBundle>
    name: DeletedCertificateBundle>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeletedCertificateBundle
        fullName: DeletedCertificateBundle
        uid: azure-keyvault.DeletedCertificateBundle
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.DeletedCertificateBundle>
    name: DeletedCertificateBundle>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeletedCertificateBundle
        fullName: DeletedCertificateBundle
        uid: azure-keyvault.DeletedCertificateBundle
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-keyvault.Contacts>
    name: Contacts>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Contacts
        fullName: Contacts
        uid: azure-keyvault.Contacts
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.Contacts>
    name: Contacts>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Contacts
        fullName: Contacts
        uid: azure-keyvault.Contacts
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.Contacts>>
    name: Contacts>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: Contacts
        fullName: Contacts
        uid: azure-keyvault.Contacts
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.IssuerBundle>
    name: IssuerBundle>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: IssuerBundle
        fullName: IssuerBundle
        uid: azure-keyvault.IssuerBundle
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.IssuerBundle>
    name: IssuerBundle>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: IssuerBundle
        fullName: IssuerBundle
        uid: azure-keyvault.IssuerBundle
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.IssuerBundle>>
    name: IssuerBundle>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: IssuerBundle
        fullName: IssuerBundle
        uid: azure-keyvault.IssuerBundle
      - name: '>>'
        fullName: '>>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.DeletedCertificateBundle>>
    name: DeletedCertificateBundle>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DeletedCertificateBundle
        fullName: DeletedCertificateBundle
        uid: azure-keyvault.DeletedCertificateBundle
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.DeletedKeyBundle>
    name: DeletedKeyBundle>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeletedKeyBundle
        fullName: DeletedKeyBundle
        uid: azure-keyvault.DeletedKeyBundle
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.DeletedKeyBundle>
    name: DeletedKeyBundle>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeletedKeyBundle
        fullName: DeletedKeyBundle
        uid: azure-keyvault.DeletedKeyBundle
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.DeletedKeyBundle>>
    name: DeletedKeyBundle>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DeletedKeyBundle
        fullName: DeletedKeyBundle
        uid: azure-keyvault.DeletedKeyBundle
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.DeletedSasDefinitionBundle>
    name: DeletedSasDefinitionBundle>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeletedSasDefinitionBundle
        fullName: DeletedSasDefinitionBundle
        uid: azure-keyvault.DeletedSasDefinitionBundle
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.DeletedSasDefinitionBundle>
    name: DeletedSasDefinitionBundle>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeletedSasDefinitionBundle
        fullName: DeletedSasDefinitionBundle
        uid: azure-keyvault.DeletedSasDefinitionBundle
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.DeletedSasDefinitionBundle>>
    name: DeletedSasDefinitionBundle>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DeletedSasDefinitionBundle
        fullName: DeletedSasDefinitionBundle
        uid: azure-keyvault.DeletedSasDefinitionBundle
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.DeletedSecretBundle>
    name: DeletedSecretBundle>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeletedSecretBundle
        fullName: DeletedSecretBundle
        uid: azure-keyvault.DeletedSecretBundle
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.DeletedSecretBundle>
    name: DeletedSecretBundle>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeletedSecretBundle
        fullName: DeletedSecretBundle
        uid: azure-keyvault.DeletedSecretBundle
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.DeletedSecretBundle>>
    name: DeletedSecretBundle>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DeletedSecretBundle
        fullName: DeletedSecretBundle
        uid: azure-keyvault.DeletedSecretBundle
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.DeletedStorageBundle>
    name: DeletedStorageBundle>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeletedStorageBundle
        fullName: DeletedStorageBundle
        uid: azure-keyvault.DeletedStorageBundle
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.DeletedStorageBundle>
    name: DeletedStorageBundle>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeletedStorageBundle
        fullName: DeletedStorageBundle
        uid: azure-keyvault.DeletedStorageBundle
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.DeletedStorageBundle>>
    name: DeletedStorageBundle>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DeletedStorageBundle
        fullName: DeletedStorageBundle
        uid: azure-keyvault.DeletedStorageBundle
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.CertificateBundle>
    name: CertificateBundle>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: CertificateBundle
        fullName: CertificateBundle
        uid: azure-keyvault.CertificateBundle
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.CertificateBundle>
    name: CertificateBundle>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CertificateBundle
        fullName: CertificateBundle
        uid: azure-keyvault.CertificateBundle
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-keyvault.CertificateIssuerListResult>
    name: CertificateIssuerListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: CertificateIssuerListResult
        fullName: CertificateIssuerListResult
        uid: azure-keyvault.CertificateIssuerListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.CertificateIssuerListResult>
    name: CertificateIssuerListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CertificateIssuerListResult
        fullName: CertificateIssuerListResult
        uid: azure-keyvault.CertificateIssuerListResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.CertificateIssuerListResult>>
    name: CertificateIssuerListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: CertificateIssuerListResult
        fullName: CertificateIssuerListResult
        uid: azure-keyvault.CertificateIssuerListResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.CertificatePolicy>
    name: CertificatePolicy>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: CertificatePolicy
        fullName: CertificatePolicy
        uid: azure-keyvault.CertificatePolicy
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.CertificatePolicy>
    name: CertificatePolicy>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CertificatePolicy
        fullName: CertificatePolicy
        uid: azure-keyvault.CertificatePolicy
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.CertificatePolicy>>
    name: CertificatePolicy>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: CertificatePolicy
        fullName: CertificatePolicy
        uid: azure-keyvault.CertificatePolicy
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.CertificateListResult>
    name: CertificateListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: CertificateListResult
        fullName: CertificateListResult
        uid: azure-keyvault.CertificateListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.CertificateListResult>
    name: CertificateListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CertificateListResult
        fullName: CertificateListResult
        uid: azure-keyvault.CertificateListResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.CertificateListResult>>
    name: CertificateListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: CertificateListResult
        fullName: CertificateListResult
        uid: azure-keyvault.CertificateListResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.CertificateBundle>>
    name: CertificateBundle>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: CertificateBundle
        fullName: CertificateBundle
        uid: azure-keyvault.CertificateBundle
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.DeletedCertificateListResult>
    name: DeletedCertificateListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeletedCertificateListResult
        fullName: DeletedCertificateListResult
        uid: azure-keyvault.DeletedCertificateListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.DeletedCertificateListResult>
    name: DeletedCertificateListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeletedCertificateListResult
        fullName: DeletedCertificateListResult
        uid: azure-keyvault.DeletedCertificateListResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.DeletedCertificateListResult>>
    name: DeletedCertificateListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DeletedCertificateListResult
        fullName: DeletedCertificateListResult
        uid: azure-keyvault.DeletedCertificateListResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.DeletedKeyListResult>
    name: DeletedKeyListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeletedKeyListResult
        fullName: DeletedKeyListResult
        uid: azure-keyvault.DeletedKeyListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.DeletedKeyListResult>
    name: DeletedKeyListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeletedKeyListResult
        fullName: DeletedKeyListResult
        uid: azure-keyvault.DeletedKeyListResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.DeletedKeyListResult>>
    name: DeletedKeyListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DeletedKeyListResult
        fullName: DeletedKeyListResult
        uid: azure-keyvault.DeletedKeyListResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.DeletedSasDefinitionListResult>
    name: DeletedSasDefinitionListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeletedSasDefinitionListResult
        fullName: DeletedSasDefinitionListResult
        uid: azure-keyvault.DeletedSasDefinitionListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.DeletedSasDefinitionListResult>
    name: DeletedSasDefinitionListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeletedSasDefinitionListResult
        fullName: DeletedSasDefinitionListResult
        uid: azure-keyvault.DeletedSasDefinitionListResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.DeletedSasDefinitionListResult>>
    name: DeletedSasDefinitionListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DeletedSasDefinitionListResult
        fullName: DeletedSasDefinitionListResult
        uid: azure-keyvault.DeletedSasDefinitionListResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.DeletedSecretListResult>
    name: DeletedSecretListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeletedSecretListResult
        fullName: DeletedSecretListResult
        uid: azure-keyvault.DeletedSecretListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.DeletedSecretListResult>
    name: DeletedSecretListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeletedSecretListResult
        fullName: DeletedSecretListResult
        uid: azure-keyvault.DeletedSecretListResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.DeletedSecretListResult>>
    name: DeletedSecretListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DeletedSecretListResult
        fullName: DeletedSecretListResult
        uid: azure-keyvault.DeletedSecretListResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.DeletedStorageListResult>
    name: DeletedStorageListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeletedStorageListResult
        fullName: DeletedStorageListResult
        uid: azure-keyvault.DeletedStorageListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.DeletedStorageListResult>
    name: DeletedStorageListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeletedStorageListResult
        fullName: DeletedStorageListResult
        uid: azure-keyvault.DeletedStorageListResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.DeletedStorageListResult>>
    name: DeletedStorageListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DeletedStorageListResult
        fullName: DeletedStorageListResult
        uid: azure-keyvault.DeletedStorageListResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.KeyListResult>
    name: KeyListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: KeyListResult
        fullName: KeyListResult
        uid: azure-keyvault.KeyListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.KeyListResult>
    name: KeyListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: KeyListResult
        fullName: KeyListResult
        uid: azure-keyvault.KeyListResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.KeyListResult>>
    name: KeyListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: KeyListResult
        fullName: KeyListResult
        uid: azure-keyvault.KeyListResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.SasDefinitionBundle>
    name: SasDefinitionBundle>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SasDefinitionBundle
        fullName: SasDefinitionBundle
        uid: azure-keyvault.SasDefinitionBundle
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.SasDefinitionBundle>
    name: SasDefinitionBundle>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SasDefinitionBundle
        fullName: SasDefinitionBundle
        uid: azure-keyvault.SasDefinitionBundle
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.SasDefinitionBundle>>
    name: SasDefinitionBundle>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: SasDefinitionBundle
        fullName: SasDefinitionBundle
        uid: azure-keyvault.SasDefinitionBundle
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.SasDefinitionListResult>
    name: SasDefinitionListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SasDefinitionListResult
        fullName: SasDefinitionListResult
        uid: azure-keyvault.SasDefinitionListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.SasDefinitionListResult>
    name: SasDefinitionListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SasDefinitionListResult
        fullName: SasDefinitionListResult
        uid: azure-keyvault.SasDefinitionListResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.SasDefinitionListResult>>
    name: SasDefinitionListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: SasDefinitionListResult
        fullName: SasDefinitionListResult
        uid: azure-keyvault.SasDefinitionListResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.SecretBundle>
    name: SecretBundle>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SecretBundle
        fullName: SecretBundle
        uid: azure-keyvault.SecretBundle
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.SecretBundle>
    name: SecretBundle>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SecretBundle
        fullName: SecretBundle
        uid: azure-keyvault.SecretBundle
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-keyvault.SecretListResult>
    name: SecretListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SecretListResult
        fullName: SecretListResult
        uid: azure-keyvault.SecretListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.SecretListResult>
    name: SecretListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SecretListResult
        fullName: SecretListResult
        uid: azure-keyvault.SecretListResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.SecretListResult>>
    name: SecretListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: SecretListResult
        fullName: SecretListResult
        uid: azure-keyvault.SecretListResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.SecretBundle>>
    name: SecretBundle>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: SecretBundle
        fullName: SecretBundle
        uid: azure-keyvault.SecretBundle
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.StorageBundle>
    name: StorageBundle>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: StorageBundle
        fullName: StorageBundle
        uid: azure-keyvault.StorageBundle
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.StorageBundle>
    name: StorageBundle>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: StorageBundle
        fullName: StorageBundle
        uid: azure-keyvault.StorageBundle
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.StorageBundle>>
    name: StorageBundle>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: StorageBundle
        fullName: StorageBundle
        uid: azure-keyvault.StorageBundle
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.StorageListResult>
    name: StorageListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: StorageListResult
        fullName: StorageListResult
        uid: azure-keyvault.StorageListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.StorageListResult>
    name: StorageListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: StorageListResult
        fullName: StorageListResult
        uid: azure-keyvault.StorageListResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.StorageListResult>>
    name: StorageListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: StorageListResult
        fullName: StorageListResult
        uid: azure-keyvault.StorageListResult
      - name: '>>'
        fullName: '>>'
  - uid: azure-keyvault.JsonWebKey
    name: JsonWebKey
    spec.typeScript:
      - name: JsonWebKey
        fullName: JsonWebKey
        uid: azure-keyvault.JsonWebKey
  - uid: azure-keyvault.Contacts
    name: Contacts
    spec.typeScript:
      - name: Contacts
        fullName: Contacts
        uid: azure-keyvault.Contacts
  - uid: azure-keyvault.CertificatePolicy
    name: CertificatePolicy
    spec.typeScript:
      - name: CertificatePolicy
        fullName: CertificatePolicy
        uid: azure-keyvault.CertificatePolicy
  - uid: Promise<azure-keyvault.KeyVerifyResult>
    name: KeyVerifyResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: KeyVerifyResult
        fullName: KeyVerifyResult
        uid: azure-keyvault.KeyVerifyResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.KeyVerifyResult>
    name: KeyVerifyResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: KeyVerifyResult
        fullName: KeyVerifyResult
        uid: azure-keyvault.KeyVerifyResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.KeyVerifyResult>>
    name: KeyVerifyResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: KeyVerifyResult
        fullName: KeyVerifyResult
        uid: azure-keyvault.KeyVerifyResult
      - name: '>>'
        fullName: '>>'