### YamlMime:UniversalReference
ms.openlocfilehash: 6c9fa38f041c4f6d118168c1914255f0a897bd18
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52005850"
items:
- uid: azure-keyvault.KeyVaultClient
  name: KeyVaultClient
  fullName: KeyVaultClient
  children:
  - azure-keyvault.KeyVaultClient.acceptLanguage
  - azure-keyvault.KeyVaultClient.apiVersion
  - azure-keyvault.KeyVaultClient.backupCertificate
  - azure-keyvault.KeyVaultClient.backupCertificate_2
  - azure-keyvault.KeyVaultClient.backupCertificate_1
  - azure-keyvault.KeyVaultClient.backupCertificateWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.backupKey
  - azure-keyvault.KeyVaultClient.backupKey_2
  - azure-keyvault.KeyVaultClient.backupKey_1
  - azure-keyvault.KeyVaultClient.backupKeyWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.backupSecret
  - azure-keyvault.KeyVaultClient.backupSecret_2
  - azure-keyvault.KeyVaultClient.backupSecret_1
  - azure-keyvault.KeyVaultClient.backupSecretWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.backupStorageAccount
  - azure-keyvault.KeyVaultClient.backupStorageAccount_2
  - azure-keyvault.KeyVaultClient.backupStorageAccount_1
  - azure-keyvault.KeyVaultClient.backupStorageAccountWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.createCertificate
  - azure-keyvault.KeyVaultClient.createCertificate_2
  - azure-keyvault.KeyVaultClient.createCertificate_1
  - azure-keyvault.KeyVaultClient.createCertificateWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.createKey
  - azure-keyvault.KeyVaultClient.createKey_2
  - azure-keyvault.KeyVaultClient.createKey_1
  - azure-keyvault.KeyVaultClient.createKeyWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.credentials
  - azure-keyvault.KeyVaultClient.decrypt
  - azure-keyvault.KeyVaultClient.decrypt_2
  - azure-keyvault.KeyVaultClient.decrypt_1
  - azure-keyvault.KeyVaultClient.decryptWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.deleteCertificate
  - azure-keyvault.KeyVaultClient.deleteCertificate_2
  - azure-keyvault.KeyVaultClient.deleteCertificate_1
  - azure-keyvault.KeyVaultClient.deleteCertificateContacts
  - azure-keyvault.KeyVaultClient.deleteCertificateContacts_2
  - azure-keyvault.KeyVaultClient.deleteCertificateContacts_1
  - azure-keyvault.KeyVaultClient.deleteCertificateContactsWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.deleteCertificateIssuer
  - azure-keyvault.KeyVaultClient.deleteCertificateIssuer_2
  - azure-keyvault.KeyVaultClient.deleteCertificateIssuer_1
  - azure-keyvault.KeyVaultClient.deleteCertificateIssuerWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.deleteCertificateOperation
  - azure-keyvault.KeyVaultClient.deleteCertificateOperation_2
  - azure-keyvault.KeyVaultClient.deleteCertificateOperation_1
  - azure-keyvault.KeyVaultClient.deleteCertificateOperationWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.deleteCertificateWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.deleteKey
  - azure-keyvault.KeyVaultClient.deleteKey_2
  - azure-keyvault.KeyVaultClient.deleteKey_1
  - azure-keyvault.KeyVaultClient.deleteKeyWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.deleteSasDefinition
  - azure-keyvault.KeyVaultClient.deleteSasDefinition_2
  - azure-keyvault.KeyVaultClient.deleteSasDefinition_1
  - azure-keyvault.KeyVaultClient.deleteSasDefinitionWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.deleteSecret
  - azure-keyvault.KeyVaultClient.deleteSecret_2
  - azure-keyvault.KeyVaultClient.deleteSecret_1
  - azure-keyvault.KeyVaultClient.deleteSecretWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.deleteStorageAccount
  - azure-keyvault.KeyVaultClient.deleteStorageAccount_2
  - azure-keyvault.KeyVaultClient.deleteStorageAccount_1
  - azure-keyvault.KeyVaultClient.deleteStorageAccountWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.encrypt
  - azure-keyvault.KeyVaultClient.encrypt_2
  - azure-keyvault.KeyVaultClient.encrypt_1
  - azure-keyvault.KeyVaultClient.encryptWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.generateClientRequestId
  - azure-keyvault.KeyVaultClient.getCertificate
  - azure-keyvault.KeyVaultClient.getCertificate_2
  - azure-keyvault.KeyVaultClient.getCertificate_1
  - azure-keyvault.KeyVaultClient.getCertificateContacts
  - azure-keyvault.KeyVaultClient.getCertificateContacts_2
  - azure-keyvault.KeyVaultClient.getCertificateContacts_1
  - azure-keyvault.KeyVaultClient.getCertificateContactsWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getCertificateIssuer
  - azure-keyvault.KeyVaultClient.getCertificateIssuer_2
  - azure-keyvault.KeyVaultClient.getCertificateIssuer_1
  - azure-keyvault.KeyVaultClient.getCertificateIssuers
  - azure-keyvault.KeyVaultClient.getCertificateIssuers_2
  - azure-keyvault.KeyVaultClient.getCertificateIssuers_1
  - azure-keyvault.KeyVaultClient.getCertificateIssuersNext
  - azure-keyvault.KeyVaultClient.getCertificateIssuersNext_2
  - azure-keyvault.KeyVaultClient.getCertificateIssuersNext_1
  - azure-keyvault.KeyVaultClient.getCertificateIssuersNextWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getCertificateIssuersWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getCertificateIssuerWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getCertificateOperation
  - azure-keyvault.KeyVaultClient.getCertificateOperation_2
  - azure-keyvault.KeyVaultClient.getCertificateOperation_1
  - azure-keyvault.KeyVaultClient.getCertificateOperationWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getCertificatePolicy
  - azure-keyvault.KeyVaultClient.getCertificatePolicy_2
  - azure-keyvault.KeyVaultClient.getCertificatePolicy_1
  - azure-keyvault.KeyVaultClient.getCertificatePolicyWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getCertificates
  - azure-keyvault.KeyVaultClient.getCertificates_2
  - azure-keyvault.KeyVaultClient.getCertificates_1
  - azure-keyvault.KeyVaultClient.getCertificatesNext
  - azure-keyvault.KeyVaultClient.getCertificatesNext_2
  - azure-keyvault.KeyVaultClient.getCertificatesNext_1
  - azure-keyvault.KeyVaultClient.getCertificatesNextWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getCertificatesWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getCertificateVersions
  - azure-keyvault.KeyVaultClient.getCertificateVersions_2
  - azure-keyvault.KeyVaultClient.getCertificateVersions_1
  - azure-keyvault.KeyVaultClient.getCertificateVersionsNext
  - azure-keyvault.KeyVaultClient.getCertificateVersionsNext_2
  - azure-keyvault.KeyVaultClient.getCertificateVersionsNext_1
  - azure-keyvault.KeyVaultClient.getCertificateVersionsNextWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getCertificateVersionsWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getCertificateWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getDeletedCertificate
  - azure-keyvault.KeyVaultClient.getDeletedCertificate_2
  - azure-keyvault.KeyVaultClient.getDeletedCertificate_1
  - azure-keyvault.KeyVaultClient.getDeletedCertificates
  - azure-keyvault.KeyVaultClient.getDeletedCertificates_2
  - azure-keyvault.KeyVaultClient.getDeletedCertificates_1
  - azure-keyvault.KeyVaultClient.getDeletedCertificatesNext
  - azure-keyvault.KeyVaultClient.getDeletedCertificatesNext_2
  - azure-keyvault.KeyVaultClient.getDeletedCertificatesNext_1
  - azure-keyvault.KeyVaultClient.getDeletedCertificatesNextWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getDeletedCertificatesWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getDeletedCertificateWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getDeletedKey
  - azure-keyvault.KeyVaultClient.getDeletedKey_2
  - azure-keyvault.KeyVaultClient.getDeletedKey_1
  - azure-keyvault.KeyVaultClient.getDeletedKeys
  - azure-keyvault.KeyVaultClient.getDeletedKeys_2
  - azure-keyvault.KeyVaultClient.getDeletedKeys_1
  - azure-keyvault.KeyVaultClient.getDeletedKeysNext
  - azure-keyvault.KeyVaultClient.getDeletedKeysNext_2
  - azure-keyvault.KeyVaultClient.getDeletedKeysNext_1
  - azure-keyvault.KeyVaultClient.getDeletedKeysNextWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getDeletedKeysWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getDeletedKeyWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getDeletedSasDefinition
  - azure-keyvault.KeyVaultClient.getDeletedSasDefinition_2
  - azure-keyvault.KeyVaultClient.getDeletedSasDefinition_1
  - azure-keyvault.KeyVaultClient.getDeletedSasDefinitions
  - azure-keyvault.KeyVaultClient.getDeletedSasDefinitions_2
  - azure-keyvault.KeyVaultClient.getDeletedSasDefinitions_1
  - azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsNext
  - azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsNext_2
  - azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsNext_1
  - azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsNextWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getDeletedSasDefinitionWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getDeletedSecret
  - azure-keyvault.KeyVaultClient.getDeletedSecret_2
  - azure-keyvault.KeyVaultClient.getDeletedSecret_1
  - azure-keyvault.KeyVaultClient.getDeletedSecrets
  - azure-keyvault.KeyVaultClient.getDeletedSecrets_2
  - azure-keyvault.KeyVaultClient.getDeletedSecrets_1
  - azure-keyvault.KeyVaultClient.getDeletedSecretsNext
  - azure-keyvault.KeyVaultClient.getDeletedSecretsNext_2
  - azure-keyvault.KeyVaultClient.getDeletedSecretsNext_1
  - azure-keyvault.KeyVaultClient.getDeletedSecretsNextWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getDeletedSecretsWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getDeletedSecretWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getDeletedStorageAccount
  - azure-keyvault.KeyVaultClient.getDeletedStorageAccount_2
  - azure-keyvault.KeyVaultClient.getDeletedStorageAccount_1
  - azure-keyvault.KeyVaultClient.getDeletedStorageAccounts
  - azure-keyvault.KeyVaultClient.getDeletedStorageAccounts_2
  - azure-keyvault.KeyVaultClient.getDeletedStorageAccounts_1
  - azure-keyvault.KeyVaultClient.getDeletedStorageAccountsNext
  - azure-keyvault.KeyVaultClient.getDeletedStorageAccountsNext_2
  - azure-keyvault.KeyVaultClient.getDeletedStorageAccountsNext_1
  - azure-keyvault.KeyVaultClient.getDeletedStorageAccountsNextWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getDeletedStorageAccountsWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getDeletedStorageAccountWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getKey
  - azure-keyvault.KeyVaultClient.getKey_2
  - azure-keyvault.KeyVaultClient.getKey_1
  - azure-keyvault.KeyVaultClient.getKeys
  - azure-keyvault.KeyVaultClient.getKeys_2
  - azure-keyvault.KeyVaultClient.getKeys_1
  - azure-keyvault.KeyVaultClient.getKeysNext
  - azure-keyvault.KeyVaultClient.getKeysNext_2
  - azure-keyvault.KeyVaultClient.getKeysNext_1
  - azure-keyvault.KeyVaultClient.getKeysNextWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getKeysWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getKeyVersions
  - azure-keyvault.KeyVaultClient.getKeyVersions_2
  - azure-keyvault.KeyVaultClient.getKeyVersions_1
  - azure-keyvault.KeyVaultClient.getKeyVersionsNext
  - azure-keyvault.KeyVaultClient.getKeyVersionsNext_2
  - azure-keyvault.KeyVaultClient.getKeyVersionsNext_1
  - azure-keyvault.KeyVaultClient.getKeyVersionsNextWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getKeyVersionsWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getKeyWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getSasDefinition
  - azure-keyvault.KeyVaultClient.getSasDefinition_2
  - azure-keyvault.KeyVaultClient.getSasDefinition_1
  - azure-keyvault.KeyVaultClient.getSasDefinitions
  - azure-keyvault.KeyVaultClient.getSasDefinitions_2
  - azure-keyvault.KeyVaultClient.getSasDefinitions_1
  - azure-keyvault.KeyVaultClient.getSasDefinitionsNext
  - azure-keyvault.KeyVaultClient.getSasDefinitionsNext_2
  - azure-keyvault.KeyVaultClient.getSasDefinitionsNext_1
  - azure-keyvault.KeyVaultClient.getSasDefinitionsNextWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getSasDefinitionsWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getSasDefinitionWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getSecret
  - azure-keyvault.KeyVaultClient.getSecret_2
  - azure-keyvault.KeyVaultClient.getSecret_1
  - azure-keyvault.KeyVaultClient.getSecrets
  - azure-keyvault.KeyVaultClient.getSecrets_2
  - azure-keyvault.KeyVaultClient.getSecrets_1
  - azure-keyvault.KeyVaultClient.getSecretsNext
  - azure-keyvault.KeyVaultClient.getSecretsNext_2
  - azure-keyvault.KeyVaultClient.getSecretsNext_1
  - azure-keyvault.KeyVaultClient.getSecretsNextWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getSecretsWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getSecretVersions
  - azure-keyvault.KeyVaultClient.getSecretVersions_2
  - azure-keyvault.KeyVaultClient.getSecretVersions_1
  - azure-keyvault.KeyVaultClient.getSecretVersionsNext
  - azure-keyvault.KeyVaultClient.getSecretVersionsNext_2
  - azure-keyvault.KeyVaultClient.getSecretVersionsNext_1
  - azure-keyvault.KeyVaultClient.getSecretVersionsNextWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getSecretVersionsWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getSecretWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getStorageAccount
  - azure-keyvault.KeyVaultClient.getStorageAccount_2
  - azure-keyvault.KeyVaultClient.getStorageAccount_1
  - azure-keyvault.KeyVaultClient.getStorageAccounts
  - azure-keyvault.KeyVaultClient.getStorageAccounts_2
  - azure-keyvault.KeyVaultClient.getStorageAccounts_1
  - azure-keyvault.KeyVaultClient.getStorageAccountsNext
  - azure-keyvault.KeyVaultClient.getStorageAccountsNext_2
  - azure-keyvault.KeyVaultClient.getStorageAccountsNext_1
  - azure-keyvault.KeyVaultClient.getStorageAccountsNextWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getStorageAccountsWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.getStorageAccountWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.importCertificate
  - azure-keyvault.KeyVaultClient.importCertificate_2
  - azure-keyvault.KeyVaultClient.importCertificate_1
  - azure-keyvault.KeyVaultClient.importCertificateWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.importKey
  - azure-keyvault.KeyVaultClient.importKey_2
  - azure-keyvault.KeyVaultClient.importKey_1
  - azure-keyvault.KeyVaultClient.importKeyWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.constructor
  - azure-keyvault.KeyVaultClient.longRunningOperationRetryTimeout
  - azure-keyvault.KeyVaultClient.mergeCertificate
  - azure-keyvault.KeyVaultClient.mergeCertificate_2
  - azure-keyvault.KeyVaultClient.mergeCertificate_1
  - azure-keyvault.KeyVaultClient.mergeCertificateWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.purgeDeletedCertificate
  - azure-keyvault.KeyVaultClient.purgeDeletedCertificate_2
  - azure-keyvault.KeyVaultClient.purgeDeletedCertificate_1
  - azure-keyvault.KeyVaultClient.purgeDeletedCertificateWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.purgeDeletedKey
  - azure-keyvault.KeyVaultClient.purgeDeletedKey_2
  - azure-keyvault.KeyVaultClient.purgeDeletedKey_1
  - azure-keyvault.KeyVaultClient.purgeDeletedKeyWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.purgeDeletedSecret
  - azure-keyvault.KeyVaultClient.purgeDeletedSecret_2
  - azure-keyvault.KeyVaultClient.purgeDeletedSecret_1
  - azure-keyvault.KeyVaultClient.purgeDeletedSecretWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.purgeDeletedStorageAccount
  - azure-keyvault.KeyVaultClient.purgeDeletedStorageAccount_2
  - azure-keyvault.KeyVaultClient.purgeDeletedStorageAccount_1
  - azure-keyvault.KeyVaultClient.purgeDeletedStorageAccountWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.recoverDeletedCertificate
  - azure-keyvault.KeyVaultClient.recoverDeletedCertificate_2
  - azure-keyvault.KeyVaultClient.recoverDeletedCertificate_1
  - azure-keyvault.KeyVaultClient.recoverDeletedCertificateWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.recoverDeletedKey
  - azure-keyvault.KeyVaultClient.recoverDeletedKey_2
  - azure-keyvault.KeyVaultClient.recoverDeletedKey_1
  - azure-keyvault.KeyVaultClient.recoverDeletedKeyWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.recoverDeletedSasDefinition
  - azure-keyvault.KeyVaultClient.recoverDeletedSasDefinition_2
  - azure-keyvault.KeyVaultClient.recoverDeletedSasDefinition_1
  - azure-keyvault.KeyVaultClient.recoverDeletedSasDefinitionWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.recoverDeletedSecret
  - azure-keyvault.KeyVaultClient.recoverDeletedSecret_2
  - azure-keyvault.KeyVaultClient.recoverDeletedSecret_1
  - azure-keyvault.KeyVaultClient.recoverDeletedSecretWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.recoverDeletedStorageAccount
  - azure-keyvault.KeyVaultClient.recoverDeletedStorageAccount_2
  - azure-keyvault.KeyVaultClient.recoverDeletedStorageAccount_1
  - azure-keyvault.KeyVaultClient.recoverDeletedStorageAccountWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.regenerateStorageAccountKey
  - azure-keyvault.KeyVaultClient.regenerateStorageAccountKey_2
  - azure-keyvault.KeyVaultClient.regenerateStorageAccountKey_1
  - azure-keyvault.KeyVaultClient.regenerateStorageAccountKeyWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.restoreCertificate
  - azure-keyvault.KeyVaultClient.restoreCertificate_2
  - azure-keyvault.KeyVaultClient.restoreCertificate_1
  - azure-keyvault.KeyVaultClient.restoreCertificateWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.restoreKey
  - azure-keyvault.KeyVaultClient.restoreKey_2
  - azure-keyvault.KeyVaultClient.restoreKey_1
  - azure-keyvault.KeyVaultClient.restoreKeyWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.restoreSecret
  - azure-keyvault.KeyVaultClient.restoreSecret_2
  - azure-keyvault.KeyVaultClient.restoreSecret_1
  - azure-keyvault.KeyVaultClient.restoreSecretWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.restoreStorageAccount
  - azure-keyvault.KeyVaultClient.restoreStorageAccount_2
  - azure-keyvault.KeyVaultClient.restoreStorageAccount_1
  - azure-keyvault.KeyVaultClient.restoreStorageAccountWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.setCertificateContacts
  - azure-keyvault.KeyVaultClient.setCertificateContacts_2
  - azure-keyvault.KeyVaultClient.setCertificateContacts_1
  - azure-keyvault.KeyVaultClient.setCertificateContactsWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.setCertificateIssuer
  - azure-keyvault.KeyVaultClient.setCertificateIssuer_2
  - azure-keyvault.KeyVaultClient.setCertificateIssuer_1
  - azure-keyvault.KeyVaultClient.setCertificateIssuerWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.setSasDefinition
  - azure-keyvault.KeyVaultClient.setSasDefinition_2
  - azure-keyvault.KeyVaultClient.setSasDefinition_1
  - azure-keyvault.KeyVaultClient.setSasDefinitionWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.setSecret
  - azure-keyvault.KeyVaultClient.setSecret_2
  - azure-keyvault.KeyVaultClient.setSecret_1
  - azure-keyvault.KeyVaultClient.setSecretWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.setStorageAccount
  - azure-keyvault.KeyVaultClient.setStorageAccount_2
  - azure-keyvault.KeyVaultClient.setStorageAccount_1
  - azure-keyvault.KeyVaultClient.setStorageAccountWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.sign
  - azure-keyvault.KeyVaultClient.sign_2
  - azure-keyvault.KeyVaultClient.sign_1
  - azure-keyvault.KeyVaultClient.signWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.unwrapKey
  - azure-keyvault.KeyVaultClient.unwrapKey_2
  - azure-keyvault.KeyVaultClient.unwrapKey_1
  - azure-keyvault.KeyVaultClient.unwrapKeyWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.updateCertificate
  - azure-keyvault.KeyVaultClient.updateCertificate_2
  - azure-keyvault.KeyVaultClient.updateCertificate_1
  - azure-keyvault.KeyVaultClient.updateCertificateIssuer
  - azure-keyvault.KeyVaultClient.updateCertificateIssuer_2
  - azure-keyvault.KeyVaultClient.updateCertificateIssuer_1
  - azure-keyvault.KeyVaultClient.updateCertificateIssuerWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.updateCertificateOperation
  - azure-keyvault.KeyVaultClient.updateCertificateOperation_2
  - azure-keyvault.KeyVaultClient.updateCertificateOperation_1
  - azure-keyvault.KeyVaultClient.updateCertificateOperationWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.updateCertificatePolicy
  - azure-keyvault.KeyVaultClient.updateCertificatePolicy_2
  - azure-keyvault.KeyVaultClient.updateCertificatePolicy_1
  - azure-keyvault.KeyVaultClient.updateCertificatePolicyWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.updateCertificateWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.updateKey
  - azure-keyvault.KeyVaultClient.updateKey_2
  - azure-keyvault.KeyVaultClient.updateKey_1
  - azure-keyvault.KeyVaultClient.updateKeyWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.updateSasDefinition
  - azure-keyvault.KeyVaultClient.updateSasDefinition_2
  - azure-keyvault.KeyVaultClient.updateSasDefinition_1
  - azure-keyvault.KeyVaultClient.updateSasDefinitionWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.updateSecret
  - azure-keyvault.KeyVaultClient.updateSecret_2
  - azure-keyvault.KeyVaultClient.updateSecret_1
  - azure-keyvault.KeyVaultClient.updateSecretWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.updateStorageAccount
  - azure-keyvault.KeyVaultClient.updateStorageAccount_2
  - azure-keyvault.KeyVaultClient.updateStorageAccount_1
  - azure-keyvault.KeyVaultClient.updateStorageAccountWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.verify
  - azure-keyvault.KeyVaultClient.verify_2
  - azure-keyvault.KeyVaultClient.verify_1
  - azure-keyvault.KeyVaultClient.verifyWithHttpOperationResponse
  - azure-keyvault.KeyVaultClient.wrapKey
  - azure-keyvault.KeyVaultClient.wrapKey_2
  - azure-keyvault.KeyVaultClient.wrapKey_1
  - azure-keyvault.KeyVaultClient.wrapKeyWithHttpOperationResponse
  langs:
  - typeScript
  type: class
  summary: ''
  extends:
    name: AzureServiceClient
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.acceptLanguage
  name: acceptLanguage
  fullName: acceptLanguage
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'acceptLanguage: string'
    return:
      type:
      - string
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.apiVersion
  name: apiVersion
  fullName: apiVersion
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'apiVersion: string'
    return:
      type:
      - string
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.backupCertificate
  name: backupCertificate(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function backupCertificate(vaultBaseUrl: string, certificateName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-101">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-101">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-102">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-102">The name of the certificate.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.BackupCertificateResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.backupCertificate_2
  name: backupCertificate(string, string, Object, ServiceCallback<BackupCertificateResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function backupCertificate(vaultBaseUrl: string, certificateName: string, options: Object, callback: ServiceCallback<BackupCertificateResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.BackupCertificateResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.BackupCertificateResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.backupCertificate_1
  name: backupCertificate(string, string, ServiceCallback<BackupCertificateResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function backupCertificate(vaultBaseUrl: string, certificateName: string, callback: ServiceCallback<BackupCertificateResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.BackupCertificateResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.BackupCertificateResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.backupCertificateWithHttpOperationResponse
  name: backupCertificateWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function backupCertificateWithHttpOperationResponse(vaultBaseUrl: string, certificateName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-103">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-103">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-104">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-104">The name of the certificate.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.BackupCertificateResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.backupKey
  name: backupKey(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function backupKey(vaultBaseUrl: string, keyName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-105">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-105">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-106">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-106">The name of the key.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.BackupKeyResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.backupKey_2
  name: backupKey(string, string, Object, ServiceCallback<BackupKeyResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function backupKey(vaultBaseUrl: string, keyName: string, options: Object, callback: ServiceCallback<BackupKeyResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.BackupKeyResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.BackupKeyResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.backupKey_1
  name: backupKey(string, string, ServiceCallback<BackupKeyResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function backupKey(vaultBaseUrl: string, keyName: string, callback: ServiceCallback<BackupKeyResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.BackupKeyResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.BackupKeyResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.backupKeyWithHttpOperationResponse
  name: backupKeyWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function backupKeyWithHttpOperationResponse(vaultBaseUrl: string, keyName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-107">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-107">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-108">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-108">The name of the key.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.BackupKeyResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.backupSecret
  name: backupSecret(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function backupSecret(vaultBaseUrl: string, secretName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-109">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-109">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: secretName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-110">O nome do segredo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-110">The name of the secret.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.BackupSecretResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.backupSecret_2
  name: backupSecret(string, string, Object, ServiceCallback<BackupSecretResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function backupSecret(vaultBaseUrl: string, secretName: string, options: Object, callback: ServiceCallback<BackupSecretResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: secretName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.BackupSecretResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.BackupSecretResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.backupSecret_1
  name: backupSecret(string, string, ServiceCallback<BackupSecretResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function backupSecret(vaultBaseUrl: string, secretName: string, callback: ServiceCallback<BackupSecretResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: secretName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.BackupSecretResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.BackupSecretResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.backupSecretWithHttpOperationResponse
  name: backupSecretWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function backupSecretWithHttpOperationResponse(vaultBaseUrl: string, secretName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-111">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-111">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: secretName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-112">O nome do segredo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-112">The name of the secret.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.BackupSecretResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.backupStorageAccount
  name: backupStorageAccount(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function backupStorageAccount(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-113">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-113">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-114">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-114">The name of the storage account.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.BackupStorageResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.backupStorageAccount_2
  name: backupStorageAccount(string, string, Object, ServiceCallback<BackupStorageResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function backupStorageAccount(vaultBaseUrl: string, storageAccountName: string, options: Object, callback: ServiceCallback<BackupStorageResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.BackupStorageResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.BackupStorageResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.backupStorageAccount_1
  name: backupStorageAccount(string, string, ServiceCallback<BackupStorageResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function backupStorageAccount(vaultBaseUrl: string, storageAccountName: string, callback: ServiceCallback<BackupStorageResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.BackupStorageResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.BackupStorageResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.backupStorageAccountWithHttpOperationResponse
  name: backupStorageAccountWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function backupStorageAccountWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-115">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-115">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-116">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-116">The name of the storage account.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.BackupStorageResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.createCertificate
  name: createCertificate(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createCertificate(vaultBaseUrl: string, certificateName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-117">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-117">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-118">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-118">The name of the certificate.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.CertificateOperation>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.createCertificate_2
  name: createCertificate(string, string, Object, ServiceCallback<CertificateOperation>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createCertificate(vaultBaseUrl: string, certificateName: string, options: Object, callback: ServiceCallback<CertificateOperation>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificateOperation>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificateOperation>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.createCertificate_1
  name: createCertificate(string, string, ServiceCallback<CertificateOperation>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createCertificate(vaultBaseUrl: string, certificateName: string, callback: ServiceCallback<CertificateOperation>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificateOperation>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificateOperation>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.createCertificateWithHttpOperationResponse
  name: createCertificateWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createCertificateWithHttpOperationResponse(vaultBaseUrl: string, certificateName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-119">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-119">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-120">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-120">The name of the certificate.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.CertificateOperation>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.createKey
  name: createKey(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createKey(vaultBaseUrl: string, keyName: string, kty: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-121">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-121">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-122">O nome para a nova chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-122">The name for the new key.</span></span> <span data-ttu-id="5fba0-123">O sistema irá gerar o nome da versão para a nova chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-123">The system will generate the version name for the new key.</span></span>
    - id: kty
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-124">O tipo de chave a ser criada.</span><span class="sxs-lookup"><span data-stu-id="5fba0-124">The type of key to create.</span></span> <span data-ttu-id="5fba0-125">Para obter valores válidos, consulte JsonWebKeyType.</span><span class="sxs-lookup"><span data-stu-id="5fba0-125">For valid values, see JsonWebKeyType.</span></span> <span data-ttu-id="5fba0-126">Os valores possíveis incluem: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'out'</span><span class="sxs-lookup"><span data-stu-id="5fba0-126">Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.KeyBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.createKey_2
  name: createKey(string, string, string, Object, ServiceCallback<KeyBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createKey(vaultBaseUrl: string, keyName: string, kty: string, options: Object, callback: ServiceCallback<KeyBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: kty
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.KeyBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.KeyBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.createKey_1
  name: createKey(string, string, string, ServiceCallback<KeyBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createKey(vaultBaseUrl: string, keyName: string, kty: string, callback: ServiceCallback<KeyBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: kty
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.KeyBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.KeyBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.createKeyWithHttpOperationResponse
  name: createKeyWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createKeyWithHttpOperationResponse(vaultBaseUrl: string, keyName: string, kty: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-127">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-127">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-128">O nome para a nova chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-128">The name for the new key.</span></span> <span data-ttu-id="5fba0-129">O sistema irá gerar o nome da versão para a nova chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-129">The system will generate the version name for the new key.</span></span>
    - id: kty
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-130">O tipo de chave a ser criada.</span><span class="sxs-lookup"><span data-stu-id="5fba0-130">The type of key to create.</span></span> <span data-ttu-id="5fba0-131">Para obter valores válidos, consulte JsonWebKeyType.</span><span class="sxs-lookup"><span data-stu-id="5fba0-131">For valid values, see JsonWebKeyType.</span></span> <span data-ttu-id="5fba0-132">Os valores possíveis incluem: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'out'</span><span class="sxs-lookup"><span data-stu-id="5fba0-132">Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.KeyBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.credentials
  name: credentials
  fullName: credentials
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'credentials: ServiceClientCredentials'
    return:
      type:
      - ServiceClientCredentials
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.decrypt
  name: decrypt(string, string, string, string, Buffer, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function decrypt(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-133">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-133">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-134">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-134">The name of the key.</span></span>
    - id: keyVersion
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-135">A versão da chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-135">The version of the key.</span></span>
    - id: algorithm
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-136">Identificador de algoritmo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-136">algorithm identifier.</span></span> <span data-ttu-id="5fba0-137">Os valores possíveis incluem: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'</span><span class="sxs-lookup"><span data-stu-id="5fba0-137">Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'</span></span>
    - id: value
      type:
      - Buffer
      description: "\n"
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.KeyOperationResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.decrypt_2
  name: decrypt(string, string, string, string, Buffer, Object, ServiceCallback<KeyOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function decrypt(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, options: Object, callback: ServiceCallback<KeyOperationResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: keyVersion
      type:
      - string
      description: ''
    - id: algorithm
      type:
      - string
      description: ''
    - id: value
      type:
      - Buffer
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.KeyOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.KeyOperationResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.decrypt_1
  name: decrypt(string, string, string, string, Buffer, ServiceCallback<KeyOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function decrypt(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, callback: ServiceCallback<KeyOperationResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: keyVersion
      type:
      - string
      description: ''
    - id: algorithm
      type:
      - string
      description: ''
    - id: value
      type:
      - Buffer
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.KeyOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.KeyOperationResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.decryptWithHttpOperationResponse
  name: decryptWithHttpOperationResponse(string, string, string, string, Buffer, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function decryptWithHttpOperationResponse(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-138">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-138">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-139">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-139">The name of the key.</span></span>
    - id: keyVersion
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-140">A versão da chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-140">The version of the key.</span></span>
    - id: algorithm
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-141">Identificador de algoritmo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-141">algorithm identifier.</span></span> <span data-ttu-id="5fba0-142">Os valores possíveis incluem: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'</span><span class="sxs-lookup"><span data-stu-id="5fba0-142">Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'</span></span>
    - id: value
      type:
      - Buffer
      description: "\n"
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.KeyOperationResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.deleteCertificate
  name: deleteCertificate(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteCertificate(vaultBaseUrl: string, certificateName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-143">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-143">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-144">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-144">The name of the certificate.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.DeletedCertificateBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.deleteCertificate_2
  name: deleteCertificate(string, string, Object, ServiceCallback<DeletedCertificateBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteCertificate(vaultBaseUrl: string, certificateName: string, options: Object, callback: ServiceCallback<DeletedCertificateBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedCertificateBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedCertificateBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.deleteCertificate_1
  name: deleteCertificate(string, string, ServiceCallback<DeletedCertificateBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteCertificate(vaultBaseUrl: string, certificateName: string, callback: ServiceCallback<DeletedCertificateBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedCertificateBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedCertificateBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.deleteCertificateContacts
  name: deleteCertificateContacts(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteCertificateContacts(vaultBaseUrl: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-145">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-145">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.Contacts>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.deleteCertificateContacts_2
  name: deleteCertificateContacts(string, Object, ServiceCallback<Contacts>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteCertificateContacts(vaultBaseUrl: string, options: Object, callback: ServiceCallback<Contacts>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.Contacts>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.Contacts>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.deleteCertificateContacts_1
  name: deleteCertificateContacts(string, ServiceCallback<Contacts>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteCertificateContacts(vaultBaseUrl: string, callback: ServiceCallback<Contacts>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.Contacts>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.Contacts>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.deleteCertificateContactsWithHttpOperationResponse
  name: deleteCertificateContactsWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteCertificateContactsWithHttpOperationResponse(vaultBaseUrl: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-146">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-146">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.Contacts>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.deleteCertificateIssuer
  name: deleteCertificateIssuer(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteCertificateIssuer(vaultBaseUrl: string, issuerName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-147">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-147">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: issuerName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-148">O nome do emissor.</span><span class="sxs-lookup"><span data-stu-id="5fba0-148">The name of the issuer.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.IssuerBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.deleteCertificateIssuer_2
  name: deleteCertificateIssuer(string, string, Object, ServiceCallback<IssuerBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteCertificateIssuer(vaultBaseUrl: string, issuerName: string, options: Object, callback: ServiceCallback<IssuerBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: issuerName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.IssuerBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.IssuerBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.deleteCertificateIssuer_1
  name: deleteCertificateIssuer(string, string, ServiceCallback<IssuerBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteCertificateIssuer(vaultBaseUrl: string, issuerName: string, callback: ServiceCallback<IssuerBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: issuerName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.IssuerBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.IssuerBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.deleteCertificateIssuerWithHttpOperationResponse
  name: deleteCertificateIssuerWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteCertificateIssuerWithHttpOperationResponse(vaultBaseUrl: string, issuerName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-149">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-149">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: issuerName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-150">O nome do emissor.</span><span class="sxs-lookup"><span data-stu-id="5fba0-150">The name of the issuer.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.IssuerBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.deleteCertificateOperation
  name: deleteCertificateOperation(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteCertificateOperation(vaultBaseUrl: string, certificateName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-151">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-151">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-152">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-152">The name of the certificate.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.CertificateOperation>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.deleteCertificateOperation_2
  name: deleteCertificateOperation(string, string, Object, ServiceCallback<CertificateOperation>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteCertificateOperation(vaultBaseUrl: string, certificateName: string, options: Object, callback: ServiceCallback<CertificateOperation>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificateOperation>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificateOperation>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.deleteCertificateOperation_1
  name: deleteCertificateOperation(string, string, ServiceCallback<CertificateOperation>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteCertificateOperation(vaultBaseUrl: string, certificateName: string, callback: ServiceCallback<CertificateOperation>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificateOperation>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificateOperation>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.deleteCertificateOperationWithHttpOperationResponse
  name: deleteCertificateOperationWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteCertificateOperationWithHttpOperationResponse(vaultBaseUrl: string, certificateName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-153">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-153">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-154">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-154">The name of the certificate.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.CertificateOperation>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.deleteCertificateWithHttpOperationResponse
  name: deleteCertificateWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteCertificateWithHttpOperationResponse(vaultBaseUrl: string, certificateName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-155">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-155">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-156">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-156">The name of the certificate.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.DeletedCertificateBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.deleteKey
  name: deleteKey(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteKey(vaultBaseUrl: string, keyName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-157">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-157">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-158">O nome da chave a excluir.</span><span class="sxs-lookup"><span data-stu-id="5fba0-158">The name of the key to delete.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.DeletedKeyBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.deleteKey_2
  name: deleteKey(string, string, Object, ServiceCallback<DeletedKeyBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteKey(vaultBaseUrl: string, keyName: string, options: Object, callback: ServiceCallback<DeletedKeyBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedKeyBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedKeyBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.deleteKey_1
  name: deleteKey(string, string, ServiceCallback<DeletedKeyBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteKey(vaultBaseUrl: string, keyName: string, callback: ServiceCallback<DeletedKeyBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedKeyBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedKeyBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.deleteKeyWithHttpOperationResponse
  name: deleteKeyWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteKeyWithHttpOperationResponse(vaultBaseUrl: string, keyName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-159">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-159">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-160">O nome da chave a excluir.</span><span class="sxs-lookup"><span data-stu-id="5fba0-160">The name of the key to delete.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.DeletedKeyBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.deleteSasDefinition
  name: deleteSasDefinition(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-161">Exclui uma definição de SAS de uma conta de armazenamento especificada.</span><span class="sxs-lookup"><span data-stu-id="5fba0-161">Deletes a SAS definition from a specified storage account.</span></span> <span data-ttu-id="5fba0-162">Esta operação requer a permissão de armazenamento/deletesas.</span><span class="sxs-lookup"><span data-stu-id="5fba0-162">This operation requires the storage/deletesas permission.</span></span>
  syntax:
    content: 'function deleteSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-163">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-163">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-164">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-164">The name of the storage account.</span></span>
    - id: sasDefinitionName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-165">O nome da definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="5fba0-165">The name of the SAS definition.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.DeletedSasDefinitionBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.deleteSasDefinition_2
  name: deleteSasDefinition(string, string, string, Object, ServiceCallback<DeletedSasDefinitionBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-166">Exclui uma definição de SAS de uma conta de armazenamento especificada.</span><span class="sxs-lookup"><span data-stu-id="5fba0-166">Deletes a SAS definition from a specified storage account.</span></span> <span data-ttu-id="5fba0-167">Esta operação requer a permissão de armazenamento/deletesas.</span><span class="sxs-lookup"><span data-stu-id="5fba0-167">This operation requires the storage/deletesas permission.</span></span>
  syntax:
    content: 'function deleteSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, options: Object, callback: ServiceCallback<DeletedSasDefinitionBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: sasDefinitionName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedSasDefinitionBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedSasDefinitionBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.deleteSasDefinition_1
  name: deleteSasDefinition(string, string, string, ServiceCallback<DeletedSasDefinitionBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-168">Exclui uma definição de SAS de uma conta de armazenamento especificada.</span><span class="sxs-lookup"><span data-stu-id="5fba0-168">Deletes a SAS definition from a specified storage account.</span></span> <span data-ttu-id="5fba0-169">Esta operação requer a permissão de armazenamento/deletesas.</span><span class="sxs-lookup"><span data-stu-id="5fba0-169">This operation requires the storage/deletesas permission.</span></span>
  syntax:
    content: 'function deleteSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, callback: ServiceCallback<DeletedSasDefinitionBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: sasDefinitionName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedSasDefinitionBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedSasDefinitionBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.deleteSasDefinitionWithHttpOperationResponse
  name: deleteSasDefinitionWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-170">Exclui uma definição de SAS de uma conta de armazenamento especificada.</span><span class="sxs-lookup"><span data-stu-id="5fba0-170">Deletes a SAS definition from a specified storage account.</span></span> <span data-ttu-id="5fba0-171">Esta operação requer a permissão de armazenamento/deletesas.</span><span class="sxs-lookup"><span data-stu-id="5fba0-171">This operation requires the storage/deletesas permission.</span></span>
  syntax:
    content: 'function deleteSasDefinitionWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-172">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-172">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-173">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-173">The name of the storage account.</span></span>
    - id: sasDefinitionName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-174">O nome da definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="5fba0-174">The name of the SAS definition.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.DeletedSasDefinitionBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.deleteSecret
  name: deleteSecret(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteSecret(vaultBaseUrl: string, secretName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-175">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-175">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: secretName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-176">O nome do segredo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-176">The name of the secret.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.DeletedSecretBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.deleteSecret_2
  name: deleteSecret(string, string, Object, ServiceCallback<DeletedSecretBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteSecret(vaultBaseUrl: string, secretName: string, options: Object, callback: ServiceCallback<DeletedSecretBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: secretName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedSecretBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedSecretBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.deleteSecret_1
  name: deleteSecret(string, string, ServiceCallback<DeletedSecretBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteSecret(vaultBaseUrl: string, secretName: string, callback: ServiceCallback<DeletedSecretBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: secretName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedSecretBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedSecretBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.deleteSecretWithHttpOperationResponse
  name: deleteSecretWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteSecretWithHttpOperationResponse(vaultBaseUrl: string, secretName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-177">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-177">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: secretName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-178">O nome do segredo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-178">The name of the secret.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.DeletedSecretBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.deleteStorageAccount
  name: deleteStorageAccount(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-179">Exclui uma conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-179">Deletes a storage account.</span></span> <span data-ttu-id="5fba0-180">Esta operação requer a permissão de armazenamento/exclusão.</span><span class="sxs-lookup"><span data-stu-id="5fba0-180">This operation requires the storage/delete permission.</span></span>
  syntax:
    content: 'function deleteStorageAccount(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-181">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-181">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-182">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-182">The name of the storage account.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.DeletedStorageBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.deleteStorageAccount_2
  name: deleteStorageAccount(string, string, Object, ServiceCallback<DeletedStorageBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-183">Exclui uma conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-183">Deletes a storage account.</span></span> <span data-ttu-id="5fba0-184">Esta operação requer a permissão de armazenamento/exclusão.</span><span class="sxs-lookup"><span data-stu-id="5fba0-184">This operation requires the storage/delete permission.</span></span>
  syntax:
    content: 'function deleteStorageAccount(vaultBaseUrl: string, storageAccountName: string, options: Object, callback: ServiceCallback<DeletedStorageBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedStorageBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedStorageBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.deleteStorageAccount_1
  name: deleteStorageAccount(string, string, ServiceCallback<DeletedStorageBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-185">Exclui uma conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-185">Deletes a storage account.</span></span> <span data-ttu-id="5fba0-186">Esta operação requer a permissão de armazenamento/exclusão.</span><span class="sxs-lookup"><span data-stu-id="5fba0-186">This operation requires the storage/delete permission.</span></span>
  syntax:
    content: 'function deleteStorageAccount(vaultBaseUrl: string, storageAccountName: string, callback: ServiceCallback<DeletedStorageBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedStorageBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedStorageBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.deleteStorageAccountWithHttpOperationResponse
  name: deleteStorageAccountWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-187">Exclui uma conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-187">Deletes a storage account.</span></span> <span data-ttu-id="5fba0-188">Esta operação requer a permissão de armazenamento/exclusão.</span><span class="sxs-lookup"><span data-stu-id="5fba0-188">This operation requires the storage/delete permission.</span></span>
  syntax:
    content: 'function deleteStorageAccountWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-189">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-189">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-190">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-190">The name of the storage account.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.DeletedStorageBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.encrypt
  name: encrypt(string, string, string, string, Buffer, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function encrypt(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-191">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-191">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-192">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-192">The name of the key.</span></span>
    - id: keyVersion
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-193">A versão da chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-193">The version of the key.</span></span>
    - id: algorithm
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-194">Identificador de algoritmo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-194">algorithm identifier.</span></span> <span data-ttu-id="5fba0-195">Os valores possíveis incluem: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'</span><span class="sxs-lookup"><span data-stu-id="5fba0-195">Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'</span></span>
    - id: value
      type:
      - Buffer
      description: "\n"
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.KeyOperationResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.encrypt_2
  name: encrypt(string, string, string, string, Buffer, Object, ServiceCallback<KeyOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function encrypt(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, options: Object, callback: ServiceCallback<KeyOperationResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: keyVersion
      type:
      - string
      description: ''
    - id: algorithm
      type:
      - string
      description: ''
    - id: value
      type:
      - Buffer
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.KeyOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.KeyOperationResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.encrypt_1
  name: encrypt(string, string, string, string, Buffer, ServiceCallback<KeyOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function encrypt(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, callback: ServiceCallback<KeyOperationResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: keyVersion
      type:
      - string
      description: ''
    - id: algorithm
      type:
      - string
      description: ''
    - id: value
      type:
      - Buffer
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.KeyOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.KeyOperationResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.encryptWithHttpOperationResponse
  name: encryptWithHttpOperationResponse(string, string, string, string, Buffer, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function encryptWithHttpOperationResponse(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-196">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-196">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-197">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-197">The name of the key.</span></span>
    - id: keyVersion
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-198">A versão da chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-198">The version of the key.</span></span>
    - id: algorithm
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-199">Identificador de algoritmo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-199">algorithm identifier.</span></span> <span data-ttu-id="5fba0-200">Os valores possíveis incluem: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'</span><span class="sxs-lookup"><span data-stu-id="5fba0-200">Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'</span></span>
    - id: value
      type:
      - Buffer
      description: "\n"
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.KeyOperationResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.generateClientRequestId
  name: generateClientRequestId
  fullName: generateClientRequestId
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'generateClientRequestId: boolean'
    return:
      type:
      - boolean
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificate
  name: getCertificate(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificate(vaultBaseUrl: string, certificateName: string, certificateVersion: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-201">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-201">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-202">O nome do certificado no cofre fornecido.</span><span class="sxs-lookup"><span data-stu-id="5fba0-202">The name of the certificate in the given vault.</span></span>
    - id: certificateVersion
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-203">A versão do certificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-203">The version of the certificate.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.CertificateBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificate_2
  name: getCertificate(string, string, string, Object, ServiceCallback<CertificateBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificate(vaultBaseUrl: string, certificateName: string, certificateVersion: string, options: Object, callback: ServiceCallback<CertificateBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateName
      type:
      - string
      description: ''
    - id: certificateVersion
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificateBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificateBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificate_1
  name: getCertificate(string, string, string, ServiceCallback<CertificateBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificate(vaultBaseUrl: string, certificateName: string, certificateVersion: string, callback: ServiceCallback<CertificateBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateName
      type:
      - string
      description: ''
    - id: certificateVersion
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificateBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificateBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificateContacts
  name: getCertificateContacts(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificateContacts(vaultBaseUrl: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-204">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-204">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.Contacts>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificateContacts_2
  name: getCertificateContacts(string, Object, ServiceCallback<Contacts>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificateContacts(vaultBaseUrl: string, options: Object, callback: ServiceCallback<Contacts>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.Contacts>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.Contacts>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificateContacts_1
  name: getCertificateContacts(string, ServiceCallback<Contacts>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificateContacts(vaultBaseUrl: string, callback: ServiceCallback<Contacts>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.Contacts>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.Contacts>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificateContactsWithHttpOperationResponse
  name: getCertificateContactsWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificateContactsWithHttpOperationResponse(vaultBaseUrl: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-205">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-205">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.Contacts>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificateIssuer
  name: getCertificateIssuer(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificateIssuer(vaultBaseUrl: string, issuerName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-206">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-206">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: issuerName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-207">O nome do emissor.</span><span class="sxs-lookup"><span data-stu-id="5fba0-207">The name of the issuer.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.IssuerBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificateIssuer_2
  name: getCertificateIssuer(string, string, Object, ServiceCallback<IssuerBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificateIssuer(vaultBaseUrl: string, issuerName: string, options: Object, callback: ServiceCallback<IssuerBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: issuerName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.IssuerBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.IssuerBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificateIssuer_1
  name: getCertificateIssuer(string, string, ServiceCallback<IssuerBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificateIssuer(vaultBaseUrl: string, issuerName: string, callback: ServiceCallback<IssuerBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: issuerName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.IssuerBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.IssuerBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificateIssuers
  name: getCertificateIssuers(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificateIssuers(vaultBaseUrl: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-208">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-208">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.CertificateIssuerListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificateIssuers_2
  name: getCertificateIssuers(string, Object, ServiceCallback<CertificateIssuerListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificateIssuers(vaultBaseUrl: string, options: Object, callback: ServiceCallback<CertificateIssuerListResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificateIssuerListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificateIssuerListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificateIssuers_1
  name: getCertificateIssuers(string, ServiceCallback<CertificateIssuerListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificateIssuers(vaultBaseUrl: string, callback: ServiceCallback<CertificateIssuerListResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificateIssuerListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificateIssuerListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificateIssuersNext
  name: getCertificateIssuersNext(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificateIssuersNext(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-209">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="5fba0-209">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.CertificateIssuerListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificateIssuersNext_2
  name: getCertificateIssuersNext(string, Object, ServiceCallback<CertificateIssuerListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificateIssuersNext(nextPageLink: string, options: Object, callback: ServiceCallback<CertificateIssuerListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificateIssuerListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificateIssuerListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificateIssuersNext_1
  name: getCertificateIssuersNext(string, ServiceCallback<CertificateIssuerListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificateIssuersNext(nextPageLink: string, callback: ServiceCallback<CertificateIssuerListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificateIssuerListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificateIssuerListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificateIssuersNextWithHttpOperationResponse
  name: getCertificateIssuersNextWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificateIssuersNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-210">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="5fba0-210">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.CertificateIssuerListResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificateIssuersWithHttpOperationResponse
  name: getCertificateIssuersWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificateIssuersWithHttpOperationResponse(vaultBaseUrl: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-211">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-211">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.CertificateIssuerListResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificateIssuerWithHttpOperationResponse
  name: getCertificateIssuerWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificateIssuerWithHttpOperationResponse(vaultBaseUrl: string, issuerName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-212">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-212">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: issuerName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-213">O nome do emissor.</span><span class="sxs-lookup"><span data-stu-id="5fba0-213">The name of the issuer.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.IssuerBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificateOperation
  name: getCertificateOperation(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificateOperation(vaultBaseUrl: string, certificateName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-214">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-214">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-215">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-215">The name of the certificate.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.CertificateOperation>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificateOperation_2
  name: getCertificateOperation(string, string, Object, ServiceCallback<CertificateOperation>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificateOperation(vaultBaseUrl: string, certificateName: string, options: Object, callback: ServiceCallback<CertificateOperation>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificateOperation>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificateOperation>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificateOperation_1
  name: getCertificateOperation(string, string, ServiceCallback<CertificateOperation>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificateOperation(vaultBaseUrl: string, certificateName: string, callback: ServiceCallback<CertificateOperation>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificateOperation>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificateOperation>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificateOperationWithHttpOperationResponse
  name: getCertificateOperationWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificateOperationWithHttpOperationResponse(vaultBaseUrl: string, certificateName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-216">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-216">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-217">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-217">The name of the certificate.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.CertificateOperation>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificatePolicy
  name: getCertificatePolicy(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificatePolicy(vaultBaseUrl: string, certificateName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-218">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-218">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-219">O nome do certificado em um determinado Cofre de chaves.</span><span class="sxs-lookup"><span data-stu-id="5fba0-219">The name of the certificate in a given key vault.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.CertificatePolicy>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificatePolicy_2
  name: getCertificatePolicy(string, string, Object, ServiceCallback<CertificatePolicy>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificatePolicy(vaultBaseUrl: string, certificateName: string, options: Object, callback: ServiceCallback<CertificatePolicy>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificatePolicy>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificatePolicy>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificatePolicy_1
  name: getCertificatePolicy(string, string, ServiceCallback<CertificatePolicy>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificatePolicy(vaultBaseUrl: string, certificateName: string, callback: ServiceCallback<CertificatePolicy>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificatePolicy>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificatePolicy>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificatePolicyWithHttpOperationResponse
  name: getCertificatePolicyWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificatePolicyWithHttpOperationResponse(vaultBaseUrl: string, certificateName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-220">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-220">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-221">O nome do certificado em um determinado Cofre de chaves.</span><span class="sxs-lookup"><span data-stu-id="5fba0-221">The name of the certificate in a given key vault.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.CertificatePolicy>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificates
  name: getCertificates(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificates(vaultBaseUrl: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-222">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-222">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.CertificateListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificates_2
  name: getCertificates(string, Object, ServiceCallback<CertificateListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificates(vaultBaseUrl: string, options: Object, callback: ServiceCallback<CertificateListResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificateListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificateListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificates_1
  name: getCertificates(string, ServiceCallback<CertificateListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificates(vaultBaseUrl: string, callback: ServiceCallback<CertificateListResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificateListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificateListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificatesNext
  name: getCertificatesNext(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificatesNext(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-223">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="5fba0-223">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.CertificateListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificatesNext_2
  name: getCertificatesNext(string, Object, ServiceCallback<CertificateListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificatesNext(nextPageLink: string, options: Object, callback: ServiceCallback<CertificateListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificateListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificateListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificatesNext_1
  name: getCertificatesNext(string, ServiceCallback<CertificateListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificatesNext(nextPageLink: string, callback: ServiceCallback<CertificateListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificateListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificateListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificatesNextWithHttpOperationResponse
  name: getCertificatesNextWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificatesNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-224">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="5fba0-224">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.CertificateListResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificatesWithHttpOperationResponse
  name: getCertificatesWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificatesWithHttpOperationResponse(vaultBaseUrl: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-225">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-225">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.CertificateListResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificateVersions
  name: getCertificateVersions(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificateVersions(vaultBaseUrl: string, certificateName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-226">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-226">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-227">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-227">The name of the certificate.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.CertificateListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificateVersions_2
  name: getCertificateVersions(string, string, Object, ServiceCallback<CertificateListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificateVersions(vaultBaseUrl: string, certificateName: string, options: Object, callback: ServiceCallback<CertificateListResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificateListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificateListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificateVersions_1
  name: getCertificateVersions(string, string, ServiceCallback<CertificateListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificateVersions(vaultBaseUrl: string, certificateName: string, callback: ServiceCallback<CertificateListResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificateListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificateListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificateVersionsNext
  name: getCertificateVersionsNext(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificateVersionsNext(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-228">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="5fba0-228">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.CertificateListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificateVersionsNext_2
  name: getCertificateVersionsNext(string, Object, ServiceCallback<CertificateListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificateVersionsNext(nextPageLink: string, options: Object, callback: ServiceCallback<CertificateListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificateListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificateListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificateVersionsNext_1
  name: getCertificateVersionsNext(string, ServiceCallback<CertificateListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificateVersionsNext(nextPageLink: string, callback: ServiceCallback<CertificateListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificateListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificateListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificateVersionsNextWithHttpOperationResponse
  name: getCertificateVersionsNextWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificateVersionsNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-229">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="5fba0-229">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.CertificateListResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificateVersionsWithHttpOperationResponse
  name: getCertificateVersionsWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificateVersionsWithHttpOperationResponse(vaultBaseUrl: string, certificateName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-230">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-230">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-231">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-231">The name of the certificate.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.CertificateListResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getCertificateWithHttpOperationResponse
  name: getCertificateWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getCertificateWithHttpOperationResponse(vaultBaseUrl: string, certificateName: string, certificateVersion: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-232">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-232">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-233">O nome do certificado no cofre fornecido.</span><span class="sxs-lookup"><span data-stu-id="5fba0-233">The name of the certificate in the given vault.</span></span>
    - id: certificateVersion
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-234">A versão do certificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-234">The version of the certificate.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.CertificateBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedCertificate
  name: getDeletedCertificate(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedCertificate(vaultBaseUrl: string, certificateName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-235">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-235">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-236">O nome do certificado</span><span class="sxs-lookup"><span data-stu-id="5fba0-236">The name of the certificate</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.DeletedCertificateBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedCertificate_2
  name: getDeletedCertificate(string, string, Object, ServiceCallback<DeletedCertificateBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedCertificate(vaultBaseUrl: string, certificateName: string, options: Object, callback: ServiceCallback<DeletedCertificateBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedCertificateBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedCertificateBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedCertificate_1
  name: getDeletedCertificate(string, string, ServiceCallback<DeletedCertificateBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedCertificate(vaultBaseUrl: string, certificateName: string, callback: ServiceCallback<DeletedCertificateBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedCertificateBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedCertificateBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedCertificates
  name: getDeletedCertificates(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedCertificates(vaultBaseUrl: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-237">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-237">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.DeletedCertificateListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedCertificates_2
  name: getDeletedCertificates(string, Object, ServiceCallback<DeletedCertificateListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedCertificates(vaultBaseUrl: string, options: Object, callback: ServiceCallback<DeletedCertificateListResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedCertificateListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedCertificateListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedCertificates_1
  name: getDeletedCertificates(string, ServiceCallback<DeletedCertificateListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedCertificates(vaultBaseUrl: string, callback: ServiceCallback<DeletedCertificateListResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedCertificateListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedCertificateListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedCertificatesNext
  name: getDeletedCertificatesNext(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedCertificatesNext(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-238">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="5fba0-238">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.DeletedCertificateListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedCertificatesNext_2
  name: getDeletedCertificatesNext(string, Object, ServiceCallback<DeletedCertificateListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedCertificatesNext(nextPageLink: string, options: Object, callback: ServiceCallback<DeletedCertificateListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedCertificateListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedCertificateListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedCertificatesNext_1
  name: getDeletedCertificatesNext(string, ServiceCallback<DeletedCertificateListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedCertificatesNext(nextPageLink: string, callback: ServiceCallback<DeletedCertificateListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedCertificateListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedCertificateListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedCertificatesNextWithHttpOperationResponse
  name: getDeletedCertificatesNextWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedCertificatesNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-239">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="5fba0-239">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.DeletedCertificateListResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedCertificatesWithHttpOperationResponse
  name: getDeletedCertificatesWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedCertificatesWithHttpOperationResponse(vaultBaseUrl: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-240">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-240">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.DeletedCertificateListResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedCertificateWithHttpOperationResponse
  name: getDeletedCertificateWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedCertificateWithHttpOperationResponse(vaultBaseUrl: string, certificateName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-241">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-241">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-242">O nome do certificado</span><span class="sxs-lookup"><span data-stu-id="5fba0-242">The name of the certificate</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.DeletedCertificateBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedKey
  name: getDeletedKey(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedKey(vaultBaseUrl: string, keyName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-243">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-243">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-244">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-244">The name of the key.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.DeletedKeyBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedKey_2
  name: getDeletedKey(string, string, Object, ServiceCallback<DeletedKeyBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedKey(vaultBaseUrl: string, keyName: string, options: Object, callback: ServiceCallback<DeletedKeyBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedKeyBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedKeyBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedKey_1
  name: getDeletedKey(string, string, ServiceCallback<DeletedKeyBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedKey(vaultBaseUrl: string, keyName: string, callback: ServiceCallback<DeletedKeyBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedKeyBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedKeyBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedKeys
  name: getDeletedKeys(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedKeys(vaultBaseUrl: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-245">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-245">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.DeletedKeyListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedKeys_2
  name: getDeletedKeys(string, Object, ServiceCallback<DeletedKeyListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedKeys(vaultBaseUrl: string, options: Object, callback: ServiceCallback<DeletedKeyListResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedKeyListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedKeyListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedKeys_1
  name: getDeletedKeys(string, ServiceCallback<DeletedKeyListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedKeys(vaultBaseUrl: string, callback: ServiceCallback<DeletedKeyListResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedKeyListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedKeyListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedKeysNext
  name: getDeletedKeysNext(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedKeysNext(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-246">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="5fba0-246">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.DeletedKeyListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedKeysNext_2
  name: getDeletedKeysNext(string, Object, ServiceCallback<DeletedKeyListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedKeysNext(nextPageLink: string, options: Object, callback: ServiceCallback<DeletedKeyListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedKeyListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedKeyListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedKeysNext_1
  name: getDeletedKeysNext(string, ServiceCallback<DeletedKeyListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedKeysNext(nextPageLink: string, callback: ServiceCallback<DeletedKeyListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedKeyListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedKeyListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedKeysNextWithHttpOperationResponse
  name: getDeletedKeysNextWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedKeysNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-247">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="5fba0-247">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.DeletedKeyListResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedKeysWithHttpOperationResponse
  name: getDeletedKeysWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedKeysWithHttpOperationResponse(vaultBaseUrl: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-248">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-248">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.DeletedKeyListResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedKeyWithHttpOperationResponse
  name: getDeletedKeyWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedKeyWithHttpOperationResponse(vaultBaseUrl: string, keyName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-249">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-249">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-250">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-250">The name of the key.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.DeletedKeyBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinition
  name: getDeletedSasDefinition(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-251">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-251">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-252">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-252">The name of the storage account.</span></span>
    - id: sasDefinitionName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-253">O nome da definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="5fba0-253">The name of the SAS definition.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.DeletedSasDefinitionBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinition_2
  name: getDeletedSasDefinition(string, string, string, Object, ServiceCallback<DeletedSasDefinitionBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, options: Object, callback: ServiceCallback<DeletedSasDefinitionBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: sasDefinitionName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedSasDefinitionBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedSasDefinitionBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinition_1
  name: getDeletedSasDefinition(string, string, string, ServiceCallback<DeletedSasDefinitionBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, callback: ServiceCallback<DeletedSasDefinitionBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: sasDefinitionName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedSasDefinitionBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedSasDefinitionBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinitions
  name: getDeletedSasDefinitions(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedSasDefinitions(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-254">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-254">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-255">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-255">The name of the storage account.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.DeletedSasDefinitionListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinitions_2
  name: getDeletedSasDefinitions(string, string, Object, ServiceCallback<DeletedSasDefinitionListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedSasDefinitions(vaultBaseUrl: string, storageAccountName: string, options: Object, callback: ServiceCallback<DeletedSasDefinitionListResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedSasDefinitionListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedSasDefinitionListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinitions_1
  name: getDeletedSasDefinitions(string, string, ServiceCallback<DeletedSasDefinitionListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedSasDefinitions(vaultBaseUrl: string, storageAccountName: string, callback: ServiceCallback<DeletedSasDefinitionListResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedSasDefinitionListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedSasDefinitionListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsNext
  name: getDeletedSasDefinitionsNext(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedSasDefinitionsNext(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-256">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="5fba0-256">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.DeletedSasDefinitionListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsNext_2
  name: getDeletedSasDefinitionsNext(string, Object, ServiceCallback<DeletedSasDefinitionListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedSasDefinitionsNext(nextPageLink: string, options: Object, callback: ServiceCallback<DeletedSasDefinitionListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedSasDefinitionListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedSasDefinitionListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsNext_1
  name: getDeletedSasDefinitionsNext(string, ServiceCallback<DeletedSasDefinitionListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedSasDefinitionsNext(nextPageLink: string, callback: ServiceCallback<DeletedSasDefinitionListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedSasDefinitionListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedSasDefinitionListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsNextWithHttpOperationResponse
  name: getDeletedSasDefinitionsNextWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedSasDefinitionsNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-257">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="5fba0-257">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.DeletedSasDefinitionListResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsWithHttpOperationResponse
  name: getDeletedSasDefinitionsWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedSasDefinitionsWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-258">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-258">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-259">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-259">The name of the storage account.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.DeletedSasDefinitionListResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinitionWithHttpOperationResponse
  name: getDeletedSasDefinitionWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedSasDefinitionWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-260">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-260">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-261">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-261">The name of the storage account.</span></span>
    - id: sasDefinitionName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-262">O nome da definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="5fba0-262">The name of the SAS definition.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.DeletedSasDefinitionBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedSecret
  name: getDeletedSecret(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedSecret(vaultBaseUrl: string, secretName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-263">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-263">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: secretName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-264">O nome do segredo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-264">The name of the secret.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.DeletedSecretBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedSecret_2
  name: getDeletedSecret(string, string, Object, ServiceCallback<DeletedSecretBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedSecret(vaultBaseUrl: string, secretName: string, options: Object, callback: ServiceCallback<DeletedSecretBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: secretName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedSecretBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedSecretBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedSecret_1
  name: getDeletedSecret(string, string, ServiceCallback<DeletedSecretBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedSecret(vaultBaseUrl: string, secretName: string, callback: ServiceCallback<DeletedSecretBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: secretName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedSecretBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedSecretBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedSecrets
  name: getDeletedSecrets(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedSecrets(vaultBaseUrl: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-265">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-265">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.DeletedSecretListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedSecrets_2
  name: getDeletedSecrets(string, Object, ServiceCallback<DeletedSecretListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedSecrets(vaultBaseUrl: string, options: Object, callback: ServiceCallback<DeletedSecretListResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedSecretListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedSecretListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedSecrets_1
  name: getDeletedSecrets(string, ServiceCallback<DeletedSecretListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedSecrets(vaultBaseUrl: string, callback: ServiceCallback<DeletedSecretListResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedSecretListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedSecretListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedSecretsNext
  name: getDeletedSecretsNext(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedSecretsNext(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-266">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="5fba0-266">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.DeletedSecretListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedSecretsNext_2
  name: getDeletedSecretsNext(string, Object, ServiceCallback<DeletedSecretListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedSecretsNext(nextPageLink: string, options: Object, callback: ServiceCallback<DeletedSecretListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedSecretListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedSecretListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedSecretsNext_1
  name: getDeletedSecretsNext(string, ServiceCallback<DeletedSecretListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedSecretsNext(nextPageLink: string, callback: ServiceCallback<DeletedSecretListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedSecretListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedSecretListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedSecretsNextWithHttpOperationResponse
  name: getDeletedSecretsNextWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedSecretsNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-267">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="5fba0-267">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.DeletedSecretListResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedSecretsWithHttpOperationResponse
  name: getDeletedSecretsWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedSecretsWithHttpOperationResponse(vaultBaseUrl: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-268">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-268">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.DeletedSecretListResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedSecretWithHttpOperationResponse
  name: getDeletedSecretWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedSecretWithHttpOperationResponse(vaultBaseUrl: string, secretName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-269">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-269">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: secretName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-270">O nome do segredo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-270">The name of the secret.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.DeletedSecretBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccount
  name: getDeletedStorageAccount(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedStorageAccount(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-271">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-271">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-272">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-272">The name of the storage account.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.DeletedStorageBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccount_2
  name: getDeletedStorageAccount(string, string, Object, ServiceCallback<DeletedStorageBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedStorageAccount(vaultBaseUrl: string, storageAccountName: string, options: Object, callback: ServiceCallback<DeletedStorageBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedStorageBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedStorageBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccount_1
  name: getDeletedStorageAccount(string, string, ServiceCallback<DeletedStorageBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedStorageAccount(vaultBaseUrl: string, storageAccountName: string, callback: ServiceCallback<DeletedStorageBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedStorageBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedStorageBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccounts
  name: getDeletedStorageAccounts(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedStorageAccounts(vaultBaseUrl: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-273">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-273">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.DeletedStorageListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccounts_2
  name: getDeletedStorageAccounts(string, Object, ServiceCallback<DeletedStorageListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedStorageAccounts(vaultBaseUrl: string, options: Object, callback: ServiceCallback<DeletedStorageListResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedStorageListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedStorageListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccounts_1
  name: getDeletedStorageAccounts(string, ServiceCallback<DeletedStorageListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedStorageAccounts(vaultBaseUrl: string, callback: ServiceCallback<DeletedStorageListResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedStorageListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedStorageListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccountsNext
  name: getDeletedStorageAccountsNext(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedStorageAccountsNext(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-274">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="5fba0-274">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.DeletedStorageListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccountsNext_2
  name: getDeletedStorageAccountsNext(string, Object, ServiceCallback<DeletedStorageListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedStorageAccountsNext(nextPageLink: string, options: Object, callback: ServiceCallback<DeletedStorageListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedStorageListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedStorageListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccountsNext_1
  name: getDeletedStorageAccountsNext(string, ServiceCallback<DeletedStorageListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedStorageAccountsNext(nextPageLink: string, callback: ServiceCallback<DeletedStorageListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.DeletedStorageListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.DeletedStorageListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccountsNextWithHttpOperationResponse
  name: getDeletedStorageAccountsNextWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedStorageAccountsNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-275">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="5fba0-275">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.DeletedStorageListResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccountsWithHttpOperationResponse
  name: getDeletedStorageAccountsWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedStorageAccountsWithHttpOperationResponse(vaultBaseUrl: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-276">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-276">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.DeletedStorageListResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccountWithHttpOperationResponse
  name: getDeletedStorageAccountWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDeletedStorageAccountWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-277">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-277">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-278">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-278">The name of the storage account.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.DeletedStorageBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getKey
  name: getKey(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getKey(vaultBaseUrl: string, keyName: string, keyVersion: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-279">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-279">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-280">O nome da chave a ser obtida.</span><span class="sxs-lookup"><span data-stu-id="5fba0-280">The name of the key to get.</span></span>
    - id: keyVersion
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-281">Adicionar o parâmetro version recupera uma versão específica de uma chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-281">Adding the version parameter retrieves a specific version of a key.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.KeyBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getKey_2
  name: getKey(string, string, string, Object, ServiceCallback<KeyBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getKey(vaultBaseUrl: string, keyName: string, keyVersion: string, options: Object, callback: ServiceCallback<KeyBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: keyVersion
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.KeyBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.KeyBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getKey_1
  name: getKey(string, string, string, ServiceCallback<KeyBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getKey(vaultBaseUrl: string, keyName: string, keyVersion: string, callback: ServiceCallback<KeyBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: keyVersion
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.KeyBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.KeyBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getKeys
  name: getKeys(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getKeys(vaultBaseUrl: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-282">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-282">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.KeyListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getKeys_2
  name: getKeys(string, Object, ServiceCallback<KeyListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getKeys(vaultBaseUrl: string, options: Object, callback: ServiceCallback<KeyListResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.KeyListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.KeyListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getKeys_1
  name: getKeys(string, ServiceCallback<KeyListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getKeys(vaultBaseUrl: string, callback: ServiceCallback<KeyListResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.KeyListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.KeyListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getKeysNext
  name: getKeysNext(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getKeysNext(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-283">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="5fba0-283">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.KeyListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getKeysNext_2
  name: getKeysNext(string, Object, ServiceCallback<KeyListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getKeysNext(nextPageLink: string, options: Object, callback: ServiceCallback<KeyListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.KeyListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.KeyListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getKeysNext_1
  name: getKeysNext(string, ServiceCallback<KeyListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getKeysNext(nextPageLink: string, callback: ServiceCallback<KeyListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.KeyListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.KeyListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getKeysNextWithHttpOperationResponse
  name: getKeysNextWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getKeysNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-284">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="5fba0-284">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.KeyListResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getKeysWithHttpOperationResponse
  name: getKeysWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getKeysWithHttpOperationResponse(vaultBaseUrl: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-285">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-285">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.KeyListResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getKeyVersions
  name: getKeyVersions(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getKeyVersions(vaultBaseUrl: string, keyName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-286">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-286">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-287">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-287">The name of the key.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.KeyListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getKeyVersions_2
  name: getKeyVersions(string, string, Object, ServiceCallback<KeyListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getKeyVersions(vaultBaseUrl: string, keyName: string, options: Object, callback: ServiceCallback<KeyListResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.KeyListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.KeyListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getKeyVersions_1
  name: getKeyVersions(string, string, ServiceCallback<KeyListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getKeyVersions(vaultBaseUrl: string, keyName: string, callback: ServiceCallback<KeyListResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.KeyListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.KeyListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getKeyVersionsNext
  name: getKeyVersionsNext(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getKeyVersionsNext(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-288">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="5fba0-288">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.KeyListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getKeyVersionsNext_2
  name: getKeyVersionsNext(string, Object, ServiceCallback<KeyListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getKeyVersionsNext(nextPageLink: string, options: Object, callback: ServiceCallback<KeyListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.KeyListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.KeyListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getKeyVersionsNext_1
  name: getKeyVersionsNext(string, ServiceCallback<KeyListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getKeyVersionsNext(nextPageLink: string, callback: ServiceCallback<KeyListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.KeyListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.KeyListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getKeyVersionsNextWithHttpOperationResponse
  name: getKeyVersionsNextWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getKeyVersionsNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-289">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="5fba0-289">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.KeyListResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getKeyVersionsWithHttpOperationResponse
  name: getKeyVersionsWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getKeyVersionsWithHttpOperationResponse(vaultBaseUrl: string, keyName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-290">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-290">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-291">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-291">The name of the key.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.KeyListResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getKeyWithHttpOperationResponse
  name: getKeyWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getKeyWithHttpOperationResponse(vaultBaseUrl: string, keyName: string, keyVersion: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-292">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-292">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-293">O nome da chave a ser obtida.</span><span class="sxs-lookup"><span data-stu-id="5fba0-293">The name of the key to get.</span></span>
    - id: keyVersion
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-294">Adicionar o parâmetro version recupera uma versão específica de uma chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-294">Adding the version parameter retrieves a specific version of a key.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.KeyBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getSasDefinition
  name: getSasDefinition(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="5fba0-295">Obtém informações sobre uma definição de SAS da conta de armazenamento especificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-295">Gets information about a SAS definition for the specified storage account.</span></span>

    <span data-ttu-id="5fba0-296">Esta operação requer a permissão de armazenamento/getsas.</span><span class="sxs-lookup"><span data-stu-id="5fba0-296">This operation requires the storage/getsas permission.</span></span>
  syntax:
    content: 'function getSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-297">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-297">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-298">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-298">The name of the storage account.</span></span>
    - id: sasDefinitionName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-299">O nome da definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="5fba0-299">The name of the SAS definition.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.SasDefinitionBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getSasDefinition_2
  name: getSasDefinition(string, string, string, Object, ServiceCallback<SasDefinitionBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="5fba0-300">Obtém informações sobre uma definição de SAS da conta de armazenamento especificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-300">Gets information about a SAS definition for the specified storage account.</span></span>

    <span data-ttu-id="5fba0-301">Esta operação requer a permissão de armazenamento/getsas.</span><span class="sxs-lookup"><span data-stu-id="5fba0-301">This operation requires the storage/getsas permission.</span></span>
  syntax:
    content: 'function getSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, options: Object, callback: ServiceCallback<SasDefinitionBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: sasDefinitionName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.SasDefinitionBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.SasDefinitionBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getSasDefinition_1
  name: getSasDefinition(string, string, string, ServiceCallback<SasDefinitionBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="5fba0-302">Obtém informações sobre uma definição de SAS da conta de armazenamento especificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-302">Gets information about a SAS definition for the specified storage account.</span></span>

    <span data-ttu-id="5fba0-303">Esta operação requer a permissão de armazenamento/getsas.</span><span class="sxs-lookup"><span data-stu-id="5fba0-303">This operation requires the storage/getsas permission.</span></span>
  syntax:
    content: 'function getSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, callback: ServiceCallback<SasDefinitionBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: sasDefinitionName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.SasDefinitionBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.SasDefinitionBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getSasDefinitions
  name: getSasDefinitions(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-304">Listar as definições de SAS de armazenamento para a conta de armazenamento específica.</span><span class="sxs-lookup"><span data-stu-id="5fba0-304">List storage SAS definitions for the given storage account.</span></span> <span data-ttu-id="5fba0-305">Esta operação requer a permissão de armazenamento/listsas.</span><span class="sxs-lookup"><span data-stu-id="5fba0-305">This operation requires the storage/listsas permission.</span></span>
  syntax:
    content: 'function getSasDefinitions(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-306">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-306">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-307">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-307">The name of the storage account.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.SasDefinitionListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getSasDefinitions_2
  name: getSasDefinitions(string, string, Object, ServiceCallback<SasDefinitionListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-308">Listar as definições de SAS de armazenamento para a conta de armazenamento específica.</span><span class="sxs-lookup"><span data-stu-id="5fba0-308">List storage SAS definitions for the given storage account.</span></span> <span data-ttu-id="5fba0-309">Esta operação requer a permissão de armazenamento/listsas.</span><span class="sxs-lookup"><span data-stu-id="5fba0-309">This operation requires the storage/listsas permission.</span></span>
  syntax:
    content: 'function getSasDefinitions(vaultBaseUrl: string, storageAccountName: string, options: Object, callback: ServiceCallback<SasDefinitionListResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.SasDefinitionListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.SasDefinitionListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getSasDefinitions_1
  name: getSasDefinitions(string, string, ServiceCallback<SasDefinitionListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-310">Listar as definições de SAS de armazenamento para a conta de armazenamento específica.</span><span class="sxs-lookup"><span data-stu-id="5fba0-310">List storage SAS definitions for the given storage account.</span></span> <span data-ttu-id="5fba0-311">Esta operação requer a permissão de armazenamento/listsas.</span><span class="sxs-lookup"><span data-stu-id="5fba0-311">This operation requires the storage/listsas permission.</span></span>
  syntax:
    content: 'function getSasDefinitions(vaultBaseUrl: string, storageAccountName: string, callback: ServiceCallback<SasDefinitionListResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.SasDefinitionListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.SasDefinitionListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getSasDefinitionsNext
  name: getSasDefinitionsNext(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-312">Listar as definições de SAS de armazenamento para a conta de armazenamento específica.</span><span class="sxs-lookup"><span data-stu-id="5fba0-312">List storage SAS definitions for the given storage account.</span></span> <span data-ttu-id="5fba0-313">Esta operação requer a permissão de armazenamento/listsas.</span><span class="sxs-lookup"><span data-stu-id="5fba0-313">This operation requires the storage/listsas permission.</span></span>
  syntax:
    content: 'function getSasDefinitionsNext(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-314">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="5fba0-314">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.SasDefinitionListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getSasDefinitionsNext_2
  name: getSasDefinitionsNext(string, Object, ServiceCallback<SasDefinitionListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-315">Listar as definições de SAS de armazenamento para a conta de armazenamento específica.</span><span class="sxs-lookup"><span data-stu-id="5fba0-315">List storage SAS definitions for the given storage account.</span></span> <span data-ttu-id="5fba0-316">Esta operação requer a permissão de armazenamento/listsas.</span><span class="sxs-lookup"><span data-stu-id="5fba0-316">This operation requires the storage/listsas permission.</span></span>
  syntax:
    content: 'function getSasDefinitionsNext(nextPageLink: string, options: Object, callback: ServiceCallback<SasDefinitionListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.SasDefinitionListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.SasDefinitionListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getSasDefinitionsNext_1
  name: getSasDefinitionsNext(string, ServiceCallback<SasDefinitionListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-317">Listar as definições de SAS de armazenamento para a conta de armazenamento específica.</span><span class="sxs-lookup"><span data-stu-id="5fba0-317">List storage SAS definitions for the given storage account.</span></span> <span data-ttu-id="5fba0-318">Esta operação requer a permissão de armazenamento/listsas.</span><span class="sxs-lookup"><span data-stu-id="5fba0-318">This operation requires the storage/listsas permission.</span></span>
  syntax:
    content: 'function getSasDefinitionsNext(nextPageLink: string, callback: ServiceCallback<SasDefinitionListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.SasDefinitionListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.SasDefinitionListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getSasDefinitionsNextWithHttpOperationResponse
  name: getSasDefinitionsNextWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-319">Listar as definições de SAS de armazenamento para a conta de armazenamento específica.</span><span class="sxs-lookup"><span data-stu-id="5fba0-319">List storage SAS definitions for the given storage account.</span></span> <span data-ttu-id="5fba0-320">Esta operação requer a permissão de armazenamento/listsas.</span><span class="sxs-lookup"><span data-stu-id="5fba0-320">This operation requires the storage/listsas permission.</span></span>
  syntax:
    content: 'function getSasDefinitionsNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-321">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="5fba0-321">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.SasDefinitionListResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getSasDefinitionsWithHttpOperationResponse
  name: getSasDefinitionsWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-322">Listar as definições de SAS de armazenamento para a conta de armazenamento específica.</span><span class="sxs-lookup"><span data-stu-id="5fba0-322">List storage SAS definitions for the given storage account.</span></span> <span data-ttu-id="5fba0-323">Esta operação requer a permissão de armazenamento/listsas.</span><span class="sxs-lookup"><span data-stu-id="5fba0-323">This operation requires the storage/listsas permission.</span></span>
  syntax:
    content: 'function getSasDefinitionsWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-324">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-324">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-325">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-325">The name of the storage account.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.SasDefinitionListResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getSasDefinitionWithHttpOperationResponse
  name: getSasDefinitionWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="5fba0-326">Obtém informações sobre uma definição de SAS da conta de armazenamento especificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-326">Gets information about a SAS definition for the specified storage account.</span></span>

    <span data-ttu-id="5fba0-327">Esta operação requer a permissão de armazenamento/getsas.</span><span class="sxs-lookup"><span data-stu-id="5fba0-327">This operation requires the storage/getsas permission.</span></span>
  syntax:
    content: 'function getSasDefinitionWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-328">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-328">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-329">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-329">The name of the storage account.</span></span>
    - id: sasDefinitionName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-330">O nome da definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="5fba0-330">The name of the SAS definition.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.SasDefinitionBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getSecret
  name: getSecret(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getSecret(vaultBaseUrl: string, secretName: string, secretVersion: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-331">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-331">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: secretName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-332">O nome do segredo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-332">The name of the secret.</span></span>
    - id: secretVersion
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-333">A versão do segredo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-333">The version of the secret.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.SecretBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getSecret_2
  name: getSecret(string, string, string, Object, ServiceCallback<SecretBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getSecret(vaultBaseUrl: string, secretName: string, secretVersion: string, options: Object, callback: ServiceCallback<SecretBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: secretName
      type:
      - string
      description: ''
    - id: secretVersion
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.SecretBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.SecretBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getSecret_1
  name: getSecret(string, string, string, ServiceCallback<SecretBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getSecret(vaultBaseUrl: string, secretName: string, secretVersion: string, callback: ServiceCallback<SecretBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: secretName
      type:
      - string
      description: ''
    - id: secretVersion
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.SecretBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.SecretBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getSecrets
  name: getSecrets(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getSecrets(vaultBaseUrl: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-334">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-334">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.SecretListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getSecrets_2
  name: getSecrets(string, Object, ServiceCallback<SecretListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getSecrets(vaultBaseUrl: string, options: Object, callback: ServiceCallback<SecretListResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.SecretListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.SecretListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getSecrets_1
  name: getSecrets(string, ServiceCallback<SecretListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getSecrets(vaultBaseUrl: string, callback: ServiceCallback<SecretListResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.SecretListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.SecretListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getSecretsNext
  name: getSecretsNext(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getSecretsNext(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-335">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="5fba0-335">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.SecretListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getSecretsNext_2
  name: getSecretsNext(string, Object, ServiceCallback<SecretListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getSecretsNext(nextPageLink: string, options: Object, callback: ServiceCallback<SecretListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.SecretListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.SecretListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getSecretsNext_1
  name: getSecretsNext(string, ServiceCallback<SecretListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getSecretsNext(nextPageLink: string, callback: ServiceCallback<SecretListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.SecretListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.SecretListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getSecretsNextWithHttpOperationResponse
  name: getSecretsNextWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getSecretsNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-336">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="5fba0-336">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.SecretListResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getSecretsWithHttpOperationResponse
  name: getSecretsWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getSecretsWithHttpOperationResponse(vaultBaseUrl: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-337">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-337">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.SecretListResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getSecretVersions
  name: getSecretVersions(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getSecretVersions(vaultBaseUrl: string, secretName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-338">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-338">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: secretName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-339">O nome do segredo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-339">The name of the secret.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.SecretListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getSecretVersions_2
  name: getSecretVersions(string, string, Object, ServiceCallback<SecretListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getSecretVersions(vaultBaseUrl: string, secretName: string, options: Object, callback: ServiceCallback<SecretListResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: secretName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.SecretListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.SecretListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getSecretVersions_1
  name: getSecretVersions(string, string, ServiceCallback<SecretListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getSecretVersions(vaultBaseUrl: string, secretName: string, callback: ServiceCallback<SecretListResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: secretName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.SecretListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.SecretListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getSecretVersionsNext
  name: getSecretVersionsNext(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getSecretVersionsNext(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-340">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="5fba0-340">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.SecretListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getSecretVersionsNext_2
  name: getSecretVersionsNext(string, Object, ServiceCallback<SecretListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getSecretVersionsNext(nextPageLink: string, options: Object, callback: ServiceCallback<SecretListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.SecretListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.SecretListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getSecretVersionsNext_1
  name: getSecretVersionsNext(string, ServiceCallback<SecretListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getSecretVersionsNext(nextPageLink: string, callback: ServiceCallback<SecretListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.SecretListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.SecretListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getSecretVersionsNextWithHttpOperationResponse
  name: getSecretVersionsNextWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getSecretVersionsNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-341">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="5fba0-341">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.SecretListResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getSecretVersionsWithHttpOperationResponse
  name: getSecretVersionsWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getSecretVersionsWithHttpOperationResponse(vaultBaseUrl: string, secretName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-342">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-342">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: secretName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-343">O nome do segredo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-343">The name of the secret.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.SecretListResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getSecretWithHttpOperationResponse
  name: getSecretWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getSecretWithHttpOperationResponse(vaultBaseUrl: string, secretName: string, secretVersion: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-344">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-344">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: secretName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-345">O nome do segredo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-345">The name of the secret.</span></span>
    - id: secretVersion
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-346">A versão do segredo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-346">The version of the secret.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.SecretBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getStorageAccount
  name: getStorageAccount(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-347">Obtém informações sobre uma conta de armazenamento especificada.</span><span class="sxs-lookup"><span data-stu-id="5fba0-347">Gets information about a specified storage account.</span></span> <span data-ttu-id="5fba0-348">Esta operação requer a permissão de armazenamento/get.</span><span class="sxs-lookup"><span data-stu-id="5fba0-348">This operation requires the storage/get permission.</span></span>
  syntax:
    content: 'function getStorageAccount(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-349">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-349">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-350">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-350">The name of the storage account.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.StorageBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getStorageAccount_2
  name: getStorageAccount(string, string, Object, ServiceCallback<StorageBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-351">Obtém informações sobre uma conta de armazenamento especificada.</span><span class="sxs-lookup"><span data-stu-id="5fba0-351">Gets information about a specified storage account.</span></span> <span data-ttu-id="5fba0-352">Esta operação requer a permissão de armazenamento/get.</span><span class="sxs-lookup"><span data-stu-id="5fba0-352">This operation requires the storage/get permission.</span></span>
  syntax:
    content: 'function getStorageAccount(vaultBaseUrl: string, storageAccountName: string, options: Object, callback: ServiceCallback<StorageBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.StorageBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.StorageBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getStorageAccount_1
  name: getStorageAccount(string, string, ServiceCallback<StorageBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-353">Obtém informações sobre uma conta de armazenamento especificada.</span><span class="sxs-lookup"><span data-stu-id="5fba0-353">Gets information about a specified storage account.</span></span> <span data-ttu-id="5fba0-354">Esta operação requer a permissão de armazenamento/get.</span><span class="sxs-lookup"><span data-stu-id="5fba0-354">This operation requires the storage/get permission.</span></span>
  syntax:
    content: 'function getStorageAccount(vaultBaseUrl: string, storageAccountName: string, callback: ServiceCallback<StorageBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.StorageBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.StorageBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getStorageAccounts
  name: getStorageAccounts(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-355">Listar contas de armazenamento gerenciadas pelo Cofre de chaves especificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-355">List storage accounts managed by the specified key vault.</span></span> <span data-ttu-id="5fba0-356">Esta operação requer a permissão de lista/armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-356">This operation requires the storage/list permission.</span></span>
  syntax:
    content: 'function getStorageAccounts(vaultBaseUrl: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-357">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-357">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.StorageListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getStorageAccounts_2
  name: getStorageAccounts(string, Object, ServiceCallback<StorageListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-358">Listar contas de armazenamento gerenciadas pelo Cofre de chaves especificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-358">List storage accounts managed by the specified key vault.</span></span> <span data-ttu-id="5fba0-359">Esta operação requer a permissão de lista/armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-359">This operation requires the storage/list permission.</span></span>
  syntax:
    content: 'function getStorageAccounts(vaultBaseUrl: string, options: Object, callback: ServiceCallback<StorageListResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.StorageListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.StorageListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getStorageAccounts_1
  name: getStorageAccounts(string, ServiceCallback<StorageListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-360">Listar contas de armazenamento gerenciadas pelo Cofre de chaves especificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-360">List storage accounts managed by the specified key vault.</span></span> <span data-ttu-id="5fba0-361">Esta operação requer a permissão de lista/armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-361">This operation requires the storage/list permission.</span></span>
  syntax:
    content: 'function getStorageAccounts(vaultBaseUrl: string, callback: ServiceCallback<StorageListResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.StorageListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.StorageListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getStorageAccountsNext
  name: getStorageAccountsNext(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-362">Listar contas de armazenamento gerenciadas pelo Cofre de chaves especificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-362">List storage accounts managed by the specified key vault.</span></span> <span data-ttu-id="5fba0-363">Esta operação requer a permissão de lista/armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-363">This operation requires the storage/list permission.</span></span>
  syntax:
    content: 'function getStorageAccountsNext(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-364">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="5fba0-364">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.StorageListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getStorageAccountsNext_2
  name: getStorageAccountsNext(string, Object, ServiceCallback<StorageListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-365">Listar contas de armazenamento gerenciadas pelo Cofre de chaves especificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-365">List storage accounts managed by the specified key vault.</span></span> <span data-ttu-id="5fba0-366">Esta operação requer a permissão de lista/armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-366">This operation requires the storage/list permission.</span></span>
  syntax:
    content: 'function getStorageAccountsNext(nextPageLink: string, options: Object, callback: ServiceCallback<StorageListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.StorageListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.StorageListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getStorageAccountsNext_1
  name: getStorageAccountsNext(string, ServiceCallback<StorageListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-367">Listar contas de armazenamento gerenciadas pelo Cofre de chaves especificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-367">List storage accounts managed by the specified key vault.</span></span> <span data-ttu-id="5fba0-368">Esta operação requer a permissão de lista/armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-368">This operation requires the storage/list permission.</span></span>
  syntax:
    content: 'function getStorageAccountsNext(nextPageLink: string, callback: ServiceCallback<StorageListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.StorageListResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.StorageListResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getStorageAccountsNextWithHttpOperationResponse
  name: getStorageAccountsNextWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-369">Listar contas de armazenamento gerenciadas pelo Cofre de chaves especificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-369">List storage accounts managed by the specified key vault.</span></span> <span data-ttu-id="5fba0-370">Esta operação requer a permissão de lista/armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-370">This operation requires the storage/list permission.</span></span>
  syntax:
    content: 'function getStorageAccountsNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-371">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="5fba0-371">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.StorageListResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getStorageAccountsWithHttpOperationResponse
  name: getStorageAccountsWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-372">Listar contas de armazenamento gerenciadas pelo Cofre de chaves especificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-372">List storage accounts managed by the specified key vault.</span></span> <span data-ttu-id="5fba0-373">Esta operação requer a permissão de lista/armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-373">This operation requires the storage/list permission.</span></span>
  syntax:
    content: 'function getStorageAccountsWithHttpOperationResponse(vaultBaseUrl: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-374">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-374">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.StorageListResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.getStorageAccountWithHttpOperationResponse
  name: getStorageAccountWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-375">Obtém informações sobre uma conta de armazenamento especificada.</span><span class="sxs-lookup"><span data-stu-id="5fba0-375">Gets information about a specified storage account.</span></span> <span data-ttu-id="5fba0-376">Esta operação requer a permissão de armazenamento/get.</span><span class="sxs-lookup"><span data-stu-id="5fba0-376">This operation requires the storage/get permission.</span></span>
  syntax:
    content: 'function getStorageAccountWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-377">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-377">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-378">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-378">The name of the storage account.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.StorageBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.importCertificate
  name: importCertificate(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function importCertificate(vaultBaseUrl: string, certificateName: string, base64EncodedCertificate: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-379">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-379">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-380">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-380">The name of the certificate.</span></span>
    - id: base64EncodedCertificate
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-381">Representação do objeto para Importar certificado codificado em Base64.</span><span class="sxs-lookup"><span data-stu-id="5fba0-381">Base64 encoded representation of the certificate object to import.</span></span> <span data-ttu-id="5fba0-382">Esse certificado deve conter a chave privada.</span><span class="sxs-lookup"><span data-stu-id="5fba0-382">This certificate needs to contain the private key.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.CertificateBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.importCertificate_2
  name: importCertificate(string, string, string, Object, ServiceCallback<CertificateBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function importCertificate(vaultBaseUrl: string, certificateName: string, base64EncodedCertificate: string, options: Object, callback: ServiceCallback<CertificateBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateName
      type:
      - string
      description: ''
    - id: base64EncodedCertificate
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificateBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificateBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.importCertificate_1
  name: importCertificate(string, string, string, ServiceCallback<CertificateBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function importCertificate(vaultBaseUrl: string, certificateName: string, base64EncodedCertificate: string, callback: ServiceCallback<CertificateBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateName
      type:
      - string
      description: ''
    - id: base64EncodedCertificate
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificateBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificateBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.importCertificateWithHttpOperationResponse
  name: importCertificateWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function importCertificateWithHttpOperationResponse(vaultBaseUrl: string, certificateName: string, base64EncodedCertificate: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-383">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-383">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-384">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-384">The name of the certificate.</span></span>
    - id: base64EncodedCertificate
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-385">Representação do objeto para Importar certificado codificado em Base64.</span><span class="sxs-lookup"><span data-stu-id="5fba0-385">Base64 encoded representation of the certificate object to import.</span></span> <span data-ttu-id="5fba0-386">Esse certificado deve conter a chave privada.</span><span class="sxs-lookup"><span data-stu-id="5fba0-386">This certificate needs to contain the private key.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.CertificateBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.importKey
  name: importKey(string, string, JsonWebKey, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function importKey(vaultBaseUrl: string, keyName: string, key: JsonWebKey, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-387">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-387">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-388">Nome para a chave importada.</span><span class="sxs-lookup"><span data-stu-id="5fba0-388">Name for the imported key.</span></span>
    - id: key
      type:
      - azure-keyvault.JsonWebKey
      description: >
        <span data-ttu-id="5fba0-389">A chave da web Json</span><span class="sxs-lookup"><span data-stu-id="5fba0-389">The Json web key</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.KeyBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.importKey_2
  name: importKey(string, string, JsonWebKey, Object, ServiceCallback<KeyBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function importKey(vaultBaseUrl: string, keyName: string, key: JsonWebKey, options: Object, callback: ServiceCallback<KeyBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: key
      type:
      - azure-keyvault.JsonWebKey
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.KeyBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.KeyBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.importKey_1
  name: importKey(string, string, JsonWebKey, ServiceCallback<KeyBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function importKey(vaultBaseUrl: string, keyName: string, key: JsonWebKey, callback: ServiceCallback<KeyBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: key
      type:
      - azure-keyvault.JsonWebKey
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.KeyBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.KeyBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.importKeyWithHttpOperationResponse
  name: importKeyWithHttpOperationResponse(string, string, JsonWebKey, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function importKeyWithHttpOperationResponse(vaultBaseUrl: string, keyName: string, key: JsonWebKey, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-390">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-390">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-391">Nome para a chave importada.</span><span class="sxs-lookup"><span data-stu-id="5fba0-391">Name for the imported key.</span></span>
    - id: key
      type:
      - azure-keyvault.JsonWebKey
      description: >
        <span data-ttu-id="5fba0-392">A chave da web Json</span><span class="sxs-lookup"><span data-stu-id="5fba0-392">The Json web key</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.KeyBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.constructor
  name: KeyVaultClient(ServiceClientCredentials, AzureServiceClientOptions)
  children: []
  type: constructor
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-393">Inicializa uma nova instância da classe KeyVaultClient.</span><span class="sxs-lookup"><span data-stu-id="5fba0-393">Initializes a new instance of the KeyVaultClient class.</span></span>
  syntax:
    content: 'new KeyVaultClient(credentials: ServiceClientCredentials, options?: AzureServiceClientOptions)'
    parameters:
    - id: credentials
      type:
      - ServiceClientCredentials
      description: >
        <span data-ttu-id="5fba0-394">Credenciais necessárias para o cliente se conectar ao Azure.</span><span class="sxs-lookup"><span data-stu-id="5fba0-394">Credentials needed for the client to connect to Azure.</span></span>
    - id: options
      type:
      - AzureServiceClientOptions
      description: ''
      optional: true
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.longRunningOperationRetryTimeout
  name: longRunningOperationRetryTimeout
  fullName: longRunningOperationRetryTimeout
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'longRunningOperationRetryTimeout: number'
    return:
      type:
      - number
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.mergeCertificate
  name: mergeCertificate(string, string, Buffer[], Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function mergeCertificate(vaultBaseUrl: string, certificateName: string, x509Certificates: Buffer[], options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-395">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-395">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-396">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-396">The name of the certificate.</span></span>
    - id: x509Certificates
      type:
      - Buffer[]
      description: >
        <span data-ttu-id="5fba0-397">O certificado ou a cadeia de certificados para mesclar.</span><span class="sxs-lookup"><span data-stu-id="5fba0-397">The certificate or the certificate chain to merge.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.CertificateBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.mergeCertificate_2
  name: mergeCertificate(string, string, Buffer[], Object, ServiceCallback<CertificateBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function mergeCertificate(vaultBaseUrl: string, certificateName: string, x509Certificates: Buffer[], options: Object, callback: ServiceCallback<CertificateBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateName
      type:
      - string
      description: ''
    - id: x509Certificates
      type:
      - Buffer[]
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificateBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificateBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.mergeCertificate_1
  name: mergeCertificate(string, string, Buffer[], ServiceCallback<CertificateBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function mergeCertificate(vaultBaseUrl: string, certificateName: string, x509Certificates: Buffer[], callback: ServiceCallback<CertificateBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateName
      type:
      - string
      description: ''
    - id: x509Certificates
      type:
      - Buffer[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificateBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificateBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.mergeCertificateWithHttpOperationResponse
  name: mergeCertificateWithHttpOperationResponse(string, string, Buffer[], Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function mergeCertificateWithHttpOperationResponse(vaultBaseUrl: string, certificateName: string, x509Certificates: Buffer[], options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-398">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-398">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-399">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-399">The name of the certificate.</span></span>
    - id: x509Certificates
      type:
      - Buffer[]
      description: >
        <span data-ttu-id="5fba0-400">O certificado ou a cadeia de certificados para mesclar.</span><span class="sxs-lookup"><span data-stu-id="5fba0-400">The certificate or the certificate chain to merge.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.CertificateBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.purgeDeletedCertificate
  name: purgeDeletedCertificate(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function purgeDeletedCertificate(vaultBaseUrl: string, certificateName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-401">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-401">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-402">O nome do certificado</span><span class="sxs-lookup"><span data-stu-id="5fba0-402">The name of the certificate</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.purgeDeletedCertificate_2
  name: purgeDeletedCertificate(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function purgeDeletedCertificate(vaultBaseUrl: string, certificateName: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.purgeDeletedCertificate_1
  name: purgeDeletedCertificate(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function purgeDeletedCertificate(vaultBaseUrl: string, certificateName: string, callback: ServiceCallback<void>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.purgeDeletedCertificateWithHttpOperationResponse
  name: purgeDeletedCertificateWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function purgeDeletedCertificateWithHttpOperationResponse(vaultBaseUrl: string, certificateName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-403">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-403">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-404">O nome do certificado</span><span class="sxs-lookup"><span data-stu-id="5fba0-404">The name of the certificate</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.purgeDeletedKey
  name: purgeDeletedKey(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function purgeDeletedKey(vaultBaseUrl: string, keyName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-405">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-405">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-406">O nome da chave</span><span class="sxs-lookup"><span data-stu-id="5fba0-406">The name of the key</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.purgeDeletedKey_2
  name: purgeDeletedKey(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function purgeDeletedKey(vaultBaseUrl: string, keyName: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.purgeDeletedKey_1
  name: purgeDeletedKey(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function purgeDeletedKey(vaultBaseUrl: string, keyName: string, callback: ServiceCallback<void>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.purgeDeletedKeyWithHttpOperationResponse
  name: purgeDeletedKeyWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function purgeDeletedKeyWithHttpOperationResponse(vaultBaseUrl: string, keyName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-407">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-407">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-408">O nome da chave</span><span class="sxs-lookup"><span data-stu-id="5fba0-408">The name of the key</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.purgeDeletedSecret
  name: purgeDeletedSecret(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function purgeDeletedSecret(vaultBaseUrl: string, secretName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-409">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-409">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: secretName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-410">O nome do segredo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-410">The name of the secret.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.purgeDeletedSecret_2
  name: purgeDeletedSecret(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function purgeDeletedSecret(vaultBaseUrl: string, secretName: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: secretName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.purgeDeletedSecret_1
  name: purgeDeletedSecret(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function purgeDeletedSecret(vaultBaseUrl: string, secretName: string, callback: ServiceCallback<void>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: secretName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.purgeDeletedSecretWithHttpOperationResponse
  name: purgeDeletedSecretWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function purgeDeletedSecretWithHttpOperationResponse(vaultBaseUrl: string, secretName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-411">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-411">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: secretName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-412">O nome do segredo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-412">The name of the secret.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.purgeDeletedStorageAccount
  name: purgeDeletedStorageAccount(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function purgeDeletedStorageAccount(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-413">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-413">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-414">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-414">The name of the storage account.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.purgeDeletedStorageAccount_2
  name: purgeDeletedStorageAccount(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function purgeDeletedStorageAccount(vaultBaseUrl: string, storageAccountName: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.purgeDeletedStorageAccount_1
  name: purgeDeletedStorageAccount(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function purgeDeletedStorageAccount(vaultBaseUrl: string, storageAccountName: string, callback: ServiceCallback<void>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.purgeDeletedStorageAccountWithHttpOperationResponse
  name: purgeDeletedStorageAccountWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function purgeDeletedStorageAccountWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-415">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-415">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-416">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-416">The name of the storage account.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.recoverDeletedCertificate
  name: recoverDeletedCertificate(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverDeletedCertificate(vaultBaseUrl: string, certificateName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-417">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-417">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-418">O nome do certificado excluído</span><span class="sxs-lookup"><span data-stu-id="5fba0-418">The name of the deleted certificate</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.CertificateBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.recoverDeletedCertificate_2
  name: recoverDeletedCertificate(string, string, Object, ServiceCallback<CertificateBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverDeletedCertificate(vaultBaseUrl: string, certificateName: string, options: Object, callback: ServiceCallback<CertificateBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificateBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificateBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.recoverDeletedCertificate_1
  name: recoverDeletedCertificate(string, string, ServiceCallback<CertificateBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverDeletedCertificate(vaultBaseUrl: string, certificateName: string, callback: ServiceCallback<CertificateBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificateBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificateBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.recoverDeletedCertificateWithHttpOperationResponse
  name: recoverDeletedCertificateWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverDeletedCertificateWithHttpOperationResponse(vaultBaseUrl: string, certificateName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-419">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-419">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-420">O nome do certificado excluído</span><span class="sxs-lookup"><span data-stu-id="5fba0-420">The name of the deleted certificate</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.CertificateBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.recoverDeletedKey
  name: recoverDeletedKey(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverDeletedKey(vaultBaseUrl: string, keyName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-421">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-421">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-422">O nome da chave excluída.</span><span class="sxs-lookup"><span data-stu-id="5fba0-422">The name of the deleted key.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.KeyBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.recoverDeletedKey_2
  name: recoverDeletedKey(string, string, Object, ServiceCallback<KeyBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverDeletedKey(vaultBaseUrl: string, keyName: string, options: Object, callback: ServiceCallback<KeyBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.KeyBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.KeyBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.recoverDeletedKey_1
  name: recoverDeletedKey(string, string, ServiceCallback<KeyBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverDeletedKey(vaultBaseUrl: string, keyName: string, callback: ServiceCallback<KeyBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.KeyBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.KeyBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.recoverDeletedKeyWithHttpOperationResponse
  name: recoverDeletedKeyWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverDeletedKeyWithHttpOperationResponse(vaultBaseUrl: string, keyName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-423">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-423">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-424">O nome da chave excluída.</span><span class="sxs-lookup"><span data-stu-id="5fba0-424">The name of the deleted key.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.KeyBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.recoverDeletedSasDefinition
  name: recoverDeletedSasDefinition(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverDeletedSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-425">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-425">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-426">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-426">The name of the storage account.</span></span>
    - id: sasDefinitionName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-427">O nome da definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="5fba0-427">The name of the SAS definition.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.SasDefinitionBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.recoverDeletedSasDefinition_2
  name: recoverDeletedSasDefinition(string, string, string, Object, ServiceCallback<SasDefinitionBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverDeletedSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, options: Object, callback: ServiceCallback<SasDefinitionBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: sasDefinitionName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.SasDefinitionBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.SasDefinitionBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.recoverDeletedSasDefinition_1
  name: recoverDeletedSasDefinition(string, string, string, ServiceCallback<SasDefinitionBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverDeletedSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, callback: ServiceCallback<SasDefinitionBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: sasDefinitionName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.SasDefinitionBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.SasDefinitionBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.recoverDeletedSasDefinitionWithHttpOperationResponse
  name: recoverDeletedSasDefinitionWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverDeletedSasDefinitionWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-428">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-428">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-429">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-429">The name of the storage account.</span></span>
    - id: sasDefinitionName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-430">O nome da definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="5fba0-430">The name of the SAS definition.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.SasDefinitionBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.recoverDeletedSecret
  name: recoverDeletedSecret(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverDeletedSecret(vaultBaseUrl: string, secretName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-431">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-431">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: secretName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-432">O nome do segredo excluído.</span><span class="sxs-lookup"><span data-stu-id="5fba0-432">The name of the deleted secret.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.SecretBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.recoverDeletedSecret_2
  name: recoverDeletedSecret(string, string, Object, ServiceCallback<SecretBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverDeletedSecret(vaultBaseUrl: string, secretName: string, options: Object, callback: ServiceCallback<SecretBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: secretName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.SecretBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.SecretBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.recoverDeletedSecret_1
  name: recoverDeletedSecret(string, string, ServiceCallback<SecretBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverDeletedSecret(vaultBaseUrl: string, secretName: string, callback: ServiceCallback<SecretBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: secretName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.SecretBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.SecretBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.recoverDeletedSecretWithHttpOperationResponse
  name: recoverDeletedSecretWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverDeletedSecretWithHttpOperationResponse(vaultBaseUrl: string, secretName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-433">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-433">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: secretName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-434">O nome do segredo excluído.</span><span class="sxs-lookup"><span data-stu-id="5fba0-434">The name of the deleted secret.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.SecretBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.recoverDeletedStorageAccount
  name: recoverDeletedStorageAccount(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverDeletedStorageAccount(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-435">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-435">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-436">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-436">The name of the storage account.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.StorageBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.recoverDeletedStorageAccount_2
  name: recoverDeletedStorageAccount(string, string, Object, ServiceCallback<StorageBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverDeletedStorageAccount(vaultBaseUrl: string, storageAccountName: string, options: Object, callback: ServiceCallback<StorageBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.StorageBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.StorageBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.recoverDeletedStorageAccount_1
  name: recoverDeletedStorageAccount(string, string, ServiceCallback<StorageBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverDeletedStorageAccount(vaultBaseUrl: string, storageAccountName: string, callback: ServiceCallback<StorageBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.StorageBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.StorageBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.recoverDeletedStorageAccountWithHttpOperationResponse
  name: recoverDeletedStorageAccountWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function recoverDeletedStorageAccountWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-437">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-437">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-438">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-438">The name of the storage account.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.StorageBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.regenerateStorageAccountKey
  name: regenerateStorageAccountKey(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-439">Regenera o valor de chave especificado para a conta de armazenamento específica.</span><span class="sxs-lookup"><span data-stu-id="5fba0-439">Regenerates the specified key value for the given storage account.</span></span> <span data-ttu-id="5fba0-440">Esta operação requer a permissão de armazenamento/regeneratekey.</span><span class="sxs-lookup"><span data-stu-id="5fba0-440">This operation requires the storage/regeneratekey permission.</span></span>
  syntax:
    content: 'function regenerateStorageAccountKey(vaultBaseUrl: string, storageAccountName: string, keyName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-441">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-441">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-442">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-442">The name of the storage account.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-443">O nome de chave de conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-443">The storage account key name.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.StorageBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.regenerateStorageAccountKey_2
  name: regenerateStorageAccountKey(string, string, string, Object, ServiceCallback<StorageBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-444">Regenera o valor de chave especificado para a conta de armazenamento específica.</span><span class="sxs-lookup"><span data-stu-id="5fba0-444">Regenerates the specified key value for the given storage account.</span></span> <span data-ttu-id="5fba0-445">Esta operação requer a permissão de armazenamento/regeneratekey.</span><span class="sxs-lookup"><span data-stu-id="5fba0-445">This operation requires the storage/regeneratekey permission.</span></span>
  syntax:
    content: 'function regenerateStorageAccountKey(vaultBaseUrl: string, storageAccountName: string, keyName: string, options: Object, callback: ServiceCallback<StorageBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.StorageBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.StorageBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.regenerateStorageAccountKey_1
  name: regenerateStorageAccountKey(string, string, string, ServiceCallback<StorageBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-446">Regenera o valor de chave especificado para a conta de armazenamento específica.</span><span class="sxs-lookup"><span data-stu-id="5fba0-446">Regenerates the specified key value for the given storage account.</span></span> <span data-ttu-id="5fba0-447">Esta operação requer a permissão de armazenamento/regeneratekey.</span><span class="sxs-lookup"><span data-stu-id="5fba0-447">This operation requires the storage/regeneratekey permission.</span></span>
  syntax:
    content: 'function regenerateStorageAccountKey(vaultBaseUrl: string, storageAccountName: string, keyName: string, callback: ServiceCallback<StorageBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.StorageBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.StorageBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.regenerateStorageAccountKeyWithHttpOperationResponse
  name: regenerateStorageAccountKeyWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-448">Regenera o valor de chave especificado para a conta de armazenamento específica.</span><span class="sxs-lookup"><span data-stu-id="5fba0-448">Regenerates the specified key value for the given storage account.</span></span> <span data-ttu-id="5fba0-449">Esta operação requer a permissão de armazenamento/regeneratekey.</span><span class="sxs-lookup"><span data-stu-id="5fba0-449">This operation requires the storage/regeneratekey permission.</span></span>
  syntax:
    content: 'function regenerateStorageAccountKeyWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, keyName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-450">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-450">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-451">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-451">The name of the storage account.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-452">O nome de chave de conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-452">The storage account key name.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.StorageBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.restoreCertificate
  name: restoreCertificate(string, Buffer, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function restoreCertificate(vaultBaseUrl: string, certificateBundleBackup: Buffer, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-453">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-453">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateBundleBackup
      type:
      - Buffer
      description: >
        <span data-ttu-id="5fba0-454">O blob de backup associado a um pacote de certificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-454">The backup blob associated with a certificate bundle.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.CertificateBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.restoreCertificate_2
  name: restoreCertificate(string, Buffer, Object, ServiceCallback<CertificateBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function restoreCertificate(vaultBaseUrl: string, certificateBundleBackup: Buffer, options: Object, callback: ServiceCallback<CertificateBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateBundleBackup
      type:
      - Buffer
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificateBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificateBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.restoreCertificate_1
  name: restoreCertificate(string, Buffer, ServiceCallback<CertificateBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function restoreCertificate(vaultBaseUrl: string, certificateBundleBackup: Buffer, callback: ServiceCallback<CertificateBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateBundleBackup
      type:
      - Buffer
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificateBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificateBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.restoreCertificateWithHttpOperationResponse
  name: restoreCertificateWithHttpOperationResponse(string, Buffer, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function restoreCertificateWithHttpOperationResponse(vaultBaseUrl: string, certificateBundleBackup: Buffer, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-455">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-455">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateBundleBackup
      type:
      - Buffer
      description: >
        <span data-ttu-id="5fba0-456">O blob de backup associado a um pacote de certificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-456">The backup blob associated with a certificate bundle.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.CertificateBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.restoreKey
  name: restoreKey(string, Buffer, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function restoreKey(vaultBaseUrl: string, keyBundleBackup: Buffer, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-457">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-457">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyBundleBackup
      type:
      - Buffer
      description: >
        <span data-ttu-id="5fba0-458">O blob de backup associado a um pacote de chaves.</span><span class="sxs-lookup"><span data-stu-id="5fba0-458">The backup blob associated with a key bundle.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.KeyBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.restoreKey_2
  name: restoreKey(string, Buffer, Object, ServiceCallback<KeyBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function restoreKey(vaultBaseUrl: string, keyBundleBackup: Buffer, options: Object, callback: ServiceCallback<KeyBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyBundleBackup
      type:
      - Buffer
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.KeyBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.KeyBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.restoreKey_1
  name: restoreKey(string, Buffer, ServiceCallback<KeyBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function restoreKey(vaultBaseUrl: string, keyBundleBackup: Buffer, callback: ServiceCallback<KeyBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyBundleBackup
      type:
      - Buffer
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.KeyBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.KeyBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.restoreKeyWithHttpOperationResponse
  name: restoreKeyWithHttpOperationResponse(string, Buffer, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function restoreKeyWithHttpOperationResponse(vaultBaseUrl: string, keyBundleBackup: Buffer, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-459">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-459">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyBundleBackup
      type:
      - Buffer
      description: >
        <span data-ttu-id="5fba0-460">O blob de backup associado a um pacote de chaves.</span><span class="sxs-lookup"><span data-stu-id="5fba0-460">The backup blob associated with a key bundle.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.KeyBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.restoreSecret
  name: restoreSecret(string, Buffer, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function restoreSecret(vaultBaseUrl: string, secretBundleBackup: Buffer, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-461">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-461">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: secretBundleBackup
      type:
      - Buffer
      description: >
        <span data-ttu-id="5fba0-462">O blob de backup associado a um pacote de segredo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-462">The backup blob associated with a secret bundle.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.SecretBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.restoreSecret_2
  name: restoreSecret(string, Buffer, Object, ServiceCallback<SecretBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function restoreSecret(vaultBaseUrl: string, secretBundleBackup: Buffer, options: Object, callback: ServiceCallback<SecretBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: secretBundleBackup
      type:
      - Buffer
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.SecretBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.SecretBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.restoreSecret_1
  name: restoreSecret(string, Buffer, ServiceCallback<SecretBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function restoreSecret(vaultBaseUrl: string, secretBundleBackup: Buffer, callback: ServiceCallback<SecretBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: secretBundleBackup
      type:
      - Buffer
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.SecretBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.SecretBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.restoreSecretWithHttpOperationResponse
  name: restoreSecretWithHttpOperationResponse(string, Buffer, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function restoreSecretWithHttpOperationResponse(vaultBaseUrl: string, secretBundleBackup: Buffer, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-463">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-463">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: secretBundleBackup
      type:
      - Buffer
      description: >
        <span data-ttu-id="5fba0-464">O blob de backup associado a um pacote de segredo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-464">The backup blob associated with a secret bundle.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.SecretBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.restoreStorageAccount
  name: restoreStorageAccount(string, Buffer, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function restoreStorageAccount(vaultBaseUrl: string, storageBundleBackup: Buffer, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-465">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-465">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageBundleBackup
      type:
      - Buffer
      description: >
        <span data-ttu-id="5fba0-466">O blob de backup associado a uma conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-466">The backup blob associated with a storage account.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.StorageBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.restoreStorageAccount_2
  name: restoreStorageAccount(string, Buffer, Object, ServiceCallback<StorageBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function restoreStorageAccount(vaultBaseUrl: string, storageBundleBackup: Buffer, options: Object, callback: ServiceCallback<StorageBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageBundleBackup
      type:
      - Buffer
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.StorageBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.StorageBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.restoreStorageAccount_1
  name: restoreStorageAccount(string, Buffer, ServiceCallback<StorageBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function restoreStorageAccount(vaultBaseUrl: string, storageBundleBackup: Buffer, callback: ServiceCallback<StorageBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageBundleBackup
      type:
      - Buffer
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.StorageBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.StorageBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.restoreStorageAccountWithHttpOperationResponse
  name: restoreStorageAccountWithHttpOperationResponse(string, Buffer, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function restoreStorageAccountWithHttpOperationResponse(vaultBaseUrl: string, storageBundleBackup: Buffer, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-467">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-467">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageBundleBackup
      type:
      - Buffer
      description: >
        <span data-ttu-id="5fba0-468">O blob de backup associado a uma conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-468">The backup blob associated with a storage account.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.StorageBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.setCertificateContacts
  name: setCertificateContacts(string, Contacts, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function setCertificateContacts(vaultBaseUrl: string, contacts: Contacts, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-469">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-469">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: contacts
      type:
      - azure-keyvault.Contacts
      description: >
        <span data-ttu-id="5fba0-470">Os contatos para o certificado de Cofre de chaves.</span><span class="sxs-lookup"><span data-stu-id="5fba0-470">The contacts for the key vault certificate.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.Contacts>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.setCertificateContacts_2
  name: setCertificateContacts(string, Contacts, Object, ServiceCallback<Contacts>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function setCertificateContacts(vaultBaseUrl: string, contacts: Contacts, options: Object, callback: ServiceCallback<Contacts>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: contacts
      type:
      - azure-keyvault.Contacts
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.Contacts>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.Contacts>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.setCertificateContacts_1
  name: setCertificateContacts(string, Contacts, ServiceCallback<Contacts>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function setCertificateContacts(vaultBaseUrl: string, contacts: Contacts, callback: ServiceCallback<Contacts>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: contacts
      type:
      - azure-keyvault.Contacts
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.Contacts>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.Contacts>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.setCertificateContactsWithHttpOperationResponse
  name: setCertificateContactsWithHttpOperationResponse(string, Contacts, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function setCertificateContactsWithHttpOperationResponse(vaultBaseUrl: string, contacts: Contacts, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-471">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-471">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: contacts
      type:
      - azure-keyvault.Contacts
      description: >
        <span data-ttu-id="5fba0-472">Os contatos para o certificado de Cofre de chaves.</span><span class="sxs-lookup"><span data-stu-id="5fba0-472">The contacts for the key vault certificate.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.Contacts>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.setCertificateIssuer
  name: setCertificateIssuer(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function setCertificateIssuer(vaultBaseUrl: string, issuerName: string, provider: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-473">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-473">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: issuerName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-474">O nome do emissor.</span><span class="sxs-lookup"><span data-stu-id="5fba0-474">The name of the issuer.</span></span>
    - id: provider
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-475">O provedor do emissor.</span><span class="sxs-lookup"><span data-stu-id="5fba0-475">The issuer provider.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.IssuerBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.setCertificateIssuer_2
  name: setCertificateIssuer(string, string, string, Object, ServiceCallback<IssuerBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function setCertificateIssuer(vaultBaseUrl: string, issuerName: string, provider: string, options: Object, callback: ServiceCallback<IssuerBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: issuerName
      type:
      - string
      description: ''
    - id: provider
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.IssuerBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.IssuerBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.setCertificateIssuer_1
  name: setCertificateIssuer(string, string, string, ServiceCallback<IssuerBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function setCertificateIssuer(vaultBaseUrl: string, issuerName: string, provider: string, callback: ServiceCallback<IssuerBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: issuerName
      type:
      - string
      description: ''
    - id: provider
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.IssuerBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.IssuerBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.setCertificateIssuerWithHttpOperationResponse
  name: setCertificateIssuerWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function setCertificateIssuerWithHttpOperationResponse(vaultBaseUrl: string, issuerName: string, provider: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-476">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-476">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: issuerName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-477">O nome do emissor.</span><span class="sxs-lookup"><span data-stu-id="5fba0-477">The name of the issuer.</span></span>
    - id: provider
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-478">O provedor do emissor.</span><span class="sxs-lookup"><span data-stu-id="5fba0-478">The issuer provider.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.IssuerBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.setSasDefinition
  name: setSasDefinition(string, string, string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="5fba0-479">Cria ou atualiza uma nova definição de SAS para a conta de armazenamento especificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-479">Creates or updates a new SAS definition for the specified storage account.</span></span>

    <span data-ttu-id="5fba0-480">Esta operação requer a permissão de armazenamento/setsas.</span><span class="sxs-lookup"><span data-stu-id="5fba0-480">This operation requires the storage/setsas permission.</span></span>
  syntax:
    content: 'function setSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, templateUri: string, sasType: string, validityPeriod: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-481">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-481">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-482">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-482">The name of the storage account.</span></span>
    - id: sasDefinitionName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-483">O nome da definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="5fba0-483">The name of the SAS definition.</span></span>
    - id: templateUri
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-484">O modelo de token de definição de SAS assinado com uma chave arbitrária.</span><span class="sxs-lookup"><span data-stu-id="5fba0-484">The SAS definition token template signed with an arbitrary key.</span></span>  <span data-ttu-id="5fba0-485">Os tokens criados de acordo com a definição de SAS terá as mesmas propriedades que o modelo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-485">Tokens created according to the SAS definition will have the same properties as the template.</span></span>
    - id: sasType
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-486">O tipo de token SAS criará a definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="5fba0-486">The type of SAS token the SAS definition will create.</span></span> <span data-ttu-id="5fba0-487">Os valores possíveis incluem: 'conta', 'service'</span><span class="sxs-lookup"><span data-stu-id="5fba0-487">Possible values include: 'account', 'service'</span></span>
    - id: validityPeriod
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-488">O período de validade de tokens SAS criadas de acordo com a definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="5fba0-488">The validity period of SAS tokens created according to the SAS definition.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.SasDefinitionBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.setSasDefinition_2
  name: setSasDefinition(string, string, string, string, string, string, Object, ServiceCallback<SasDefinitionBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="5fba0-489">Cria ou atualiza uma nova definição de SAS para a conta de armazenamento especificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-489">Creates or updates a new SAS definition for the specified storage account.</span></span>

    <span data-ttu-id="5fba0-490">Esta operação requer a permissão de armazenamento/setsas.</span><span class="sxs-lookup"><span data-stu-id="5fba0-490">This operation requires the storage/setsas permission.</span></span>
  syntax:
    content: 'function setSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, templateUri: string, sasType: string, validityPeriod: string, options: Object, callback: ServiceCallback<SasDefinitionBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: sasDefinitionName
      type:
      - string
      description: ''
    - id: templateUri
      type:
      - string
      description: ''
    - id: sasType
      type:
      - string
      description: ''
    - id: validityPeriod
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.SasDefinitionBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.SasDefinitionBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.setSasDefinition_1
  name: setSasDefinition(string, string, string, string, string, string, ServiceCallback<SasDefinitionBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="5fba0-491">Cria ou atualiza uma nova definição de SAS para a conta de armazenamento especificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-491">Creates or updates a new SAS definition for the specified storage account.</span></span>

    <span data-ttu-id="5fba0-492">Esta operação requer a permissão de armazenamento/setsas.</span><span class="sxs-lookup"><span data-stu-id="5fba0-492">This operation requires the storage/setsas permission.</span></span>
  syntax:
    content: 'function setSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, templateUri: string, sasType: string, validityPeriod: string, callback: ServiceCallback<SasDefinitionBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: sasDefinitionName
      type:
      - string
      description: ''
    - id: templateUri
      type:
      - string
      description: ''
    - id: sasType
      type:
      - string
      description: ''
    - id: validityPeriod
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.SasDefinitionBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.SasDefinitionBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.setSasDefinitionWithHttpOperationResponse
  name: setSasDefinitionWithHttpOperationResponse(string, string, string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="5fba0-493">Cria ou atualiza uma nova definição de SAS para a conta de armazenamento especificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-493">Creates or updates a new SAS definition for the specified storage account.</span></span>

    <span data-ttu-id="5fba0-494">Esta operação requer a permissão de armazenamento/setsas.</span><span class="sxs-lookup"><span data-stu-id="5fba0-494">This operation requires the storage/setsas permission.</span></span>
  syntax:
    content: 'function setSasDefinitionWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, templateUri: string, sasType: string, validityPeriod: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-495">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-495">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-496">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-496">The name of the storage account.</span></span>
    - id: sasDefinitionName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-497">O nome da definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="5fba0-497">The name of the SAS definition.</span></span>
    - id: templateUri
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-498">O modelo de token de definição de SAS assinado com uma chave arbitrária.</span><span class="sxs-lookup"><span data-stu-id="5fba0-498">The SAS definition token template signed with an arbitrary key.</span></span>  <span data-ttu-id="5fba0-499">Os tokens criados de acordo com a definição de SAS terá as mesmas propriedades que o modelo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-499">Tokens created according to the SAS definition will have the same properties as the template.</span></span>
    - id: sasType
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-500">O tipo de token SAS criará a definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="5fba0-500">The type of SAS token the SAS definition will create.</span></span> <span data-ttu-id="5fba0-501">Os valores possíveis incluem: 'conta', 'service'</span><span class="sxs-lookup"><span data-stu-id="5fba0-501">Possible values include: 'account', 'service'</span></span>
    - id: validityPeriod
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-502">O período de validade de tokens SAS criadas de acordo com a definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="5fba0-502">The validity period of SAS tokens created according to the SAS definition.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.SasDefinitionBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.setSecret
  name: setSecret(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function setSecret(vaultBaseUrl: string, secretName: string, value: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-503">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-503">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: secretName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-504">O nome do segredo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-504">The name of the secret.</span></span>
    - id: value
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-505">O valor do segredo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-505">The value of the secret.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.SecretBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.setSecret_2
  name: setSecret(string, string, string, Object, ServiceCallback<SecretBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function setSecret(vaultBaseUrl: string, secretName: string, value: string, options: Object, callback: ServiceCallback<SecretBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: secretName
      type:
      - string
      description: ''
    - id: value
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.SecretBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.SecretBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.setSecret_1
  name: setSecret(string, string, string, ServiceCallback<SecretBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function setSecret(vaultBaseUrl: string, secretName: string, value: string, callback: ServiceCallback<SecretBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: secretName
      type:
      - string
      description: ''
    - id: value
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.SecretBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.SecretBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.setSecretWithHttpOperationResponse
  name: setSecretWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function setSecretWithHttpOperationResponse(vaultBaseUrl: string, secretName: string, value: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-506">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-506">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: secretName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-507">O nome do segredo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-507">The name of the secret.</span></span>
    - id: value
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-508">O valor do segredo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-508">The value of the secret.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.SecretBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.setStorageAccount
  name: setStorageAccount(string, string, string, string, boolean, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-509">Cria ou atualiza uma nova conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-509">Creates or updates a new storage account.</span></span> <span data-ttu-id="5fba0-510">Esta operação requer a permissão de armazenamento/definir.</span><span class="sxs-lookup"><span data-stu-id="5fba0-510">This operation requires the storage/set permission.</span></span>
  syntax:
    content: 'function setStorageAccount(vaultBaseUrl: string, storageAccountName: string, resourceId: string, activeKeyName: string, autoRegenerateKey: boolean, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-511">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-511">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-512">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-512">The name of the storage account.</span></span>
    - id: resourceId
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-513">Id do recurso de conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-513">Storage account resource id.</span></span>
    - id: activeKeyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-514">Armazenamento ativo chave nome da conta atual.</span><span class="sxs-lookup"><span data-stu-id="5fba0-514">Current active storage account key name.</span></span>
    - id: autoRegenerateKey
      type:
      - boolean
      description: >
        <span data-ttu-id="5fba0-515">Se o Cofre de chaves deve gerenciar a conta de armazenamento para o usuário.</span><span class="sxs-lookup"><span data-stu-id="5fba0-515">whether keyvault should manage the storage account for the user.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.StorageBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.setStorageAccount_2
  name: setStorageAccount(string, string, string, string, boolean, Object, ServiceCallback<StorageBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-516">Cria ou atualiza uma nova conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-516">Creates or updates a new storage account.</span></span> <span data-ttu-id="5fba0-517">Esta operação requer a permissão de armazenamento/definir.</span><span class="sxs-lookup"><span data-stu-id="5fba0-517">This operation requires the storage/set permission.</span></span>
  syntax:
    content: 'function setStorageAccount(vaultBaseUrl: string, storageAccountName: string, resourceId: string, activeKeyName: string, autoRegenerateKey: boolean, options: Object, callback: ServiceCallback<StorageBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: resourceId
      type:
      - string
      description: ''
    - id: activeKeyName
      type:
      - string
      description: ''
    - id: autoRegenerateKey
      type:
      - boolean
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.StorageBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.StorageBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.setStorageAccount_1
  name: setStorageAccount(string, string, string, string, boolean, ServiceCallback<StorageBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-518">Cria ou atualiza uma nova conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-518">Creates or updates a new storage account.</span></span> <span data-ttu-id="5fba0-519">Esta operação requer a permissão de armazenamento/definir.</span><span class="sxs-lookup"><span data-stu-id="5fba0-519">This operation requires the storage/set permission.</span></span>
  syntax:
    content: 'function setStorageAccount(vaultBaseUrl: string, storageAccountName: string, resourceId: string, activeKeyName: string, autoRegenerateKey: boolean, callback: ServiceCallback<StorageBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: resourceId
      type:
      - string
      description: ''
    - id: activeKeyName
      type:
      - string
      description: ''
    - id: autoRegenerateKey
      type:
      - boolean
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.StorageBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.StorageBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.setStorageAccountWithHttpOperationResponse
  name: setStorageAccountWithHttpOperationResponse(string, string, string, string, boolean, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fba0-520">Cria ou atualiza uma nova conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-520">Creates or updates a new storage account.</span></span> <span data-ttu-id="5fba0-521">Esta operação requer a permissão de armazenamento/definir.</span><span class="sxs-lookup"><span data-stu-id="5fba0-521">This operation requires the storage/set permission.</span></span>
  syntax:
    content: 'function setStorageAccountWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, resourceId: string, activeKeyName: string, autoRegenerateKey: boolean, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-522">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-522">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-523">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-523">The name of the storage account.</span></span>
    - id: resourceId
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-524">Id do recurso de conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-524">Storage account resource id.</span></span>
    - id: activeKeyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-525">Armazenamento ativo chave nome da conta atual.</span><span class="sxs-lookup"><span data-stu-id="5fba0-525">Current active storage account key name.</span></span>
    - id: autoRegenerateKey
      type:
      - boolean
      description: >
        <span data-ttu-id="5fba0-526">Se o Cofre de chaves deve gerenciar a conta de armazenamento para o usuário.</span><span class="sxs-lookup"><span data-stu-id="5fba0-526">whether keyvault should manage the storage account for the user.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.StorageBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.sign
  name: sign(string, string, string, string, Buffer, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function sign(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-527">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-527">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-528">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-528">The name of the key.</span></span>
    - id: keyVersion
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-529">A versão da chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-529">The version of the key.</span></span>
    - id: algorithm
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-530">O identificador de algoritmo de verificação/assinatura.</span><span class="sxs-lookup"><span data-stu-id="5fba0-530">The signing/verification algorithm identifier.</span></span> <span data-ttu-id="5fba0-531">Para obter mais informações sobre os tipos possíveis de algoritmo, consulte JsonWebKeySignatureAlgorithm.</span><span class="sxs-lookup"><span data-stu-id="5fba0-531">For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm.</span></span> <span data-ttu-id="5fba0-532">Os valores possíveis incluem: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K'</span><span class="sxs-lookup"><span data-stu-id="5fba0-532">Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K'</span></span>
    - id: value
      type:
      - Buffer
      description: "\n"
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.KeyOperationResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.sign_2
  name: sign(string, string, string, string, Buffer, Object, ServiceCallback<KeyOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function sign(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, options: Object, callback: ServiceCallback<KeyOperationResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: keyVersion
      type:
      - string
      description: ''
    - id: algorithm
      type:
      - string
      description: ''
    - id: value
      type:
      - Buffer
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.KeyOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.KeyOperationResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.sign_1
  name: sign(string, string, string, string, Buffer, ServiceCallback<KeyOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function sign(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, callback: ServiceCallback<KeyOperationResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: keyVersion
      type:
      - string
      description: ''
    - id: algorithm
      type:
      - string
      description: ''
    - id: value
      type:
      - Buffer
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.KeyOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.KeyOperationResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.signWithHttpOperationResponse
  name: signWithHttpOperationResponse(string, string, string, string, Buffer, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function signWithHttpOperationResponse(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-533">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-533">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-534">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-534">The name of the key.</span></span>
    - id: keyVersion
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-535">A versão da chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-535">The version of the key.</span></span>
    - id: algorithm
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-536">O identificador de algoritmo de verificação/assinatura.</span><span class="sxs-lookup"><span data-stu-id="5fba0-536">The signing/verification algorithm identifier.</span></span> <span data-ttu-id="5fba0-537">Para obter mais informações sobre os tipos possíveis de algoritmo, consulte JsonWebKeySignatureAlgorithm.</span><span class="sxs-lookup"><span data-stu-id="5fba0-537">For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm.</span></span> <span data-ttu-id="5fba0-538">Os valores possíveis incluem: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K'</span><span class="sxs-lookup"><span data-stu-id="5fba0-538">Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K'</span></span>
    - id: value
      type:
      - Buffer
      description: "\n"
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.KeyOperationResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.unwrapKey
  name: unwrapKey(string, string, string, string, Buffer, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function unwrapKey(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-539">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-539">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-540">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-540">The name of the key.</span></span>
    - id: keyVersion
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-541">A versão da chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-541">The version of the key.</span></span>
    - id: algorithm
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-542">Identificador de algoritmo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-542">algorithm identifier.</span></span> <span data-ttu-id="5fba0-543">Os valores possíveis incluem: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'</span><span class="sxs-lookup"><span data-stu-id="5fba0-543">Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'</span></span>
    - id: value
      type:
      - Buffer
      description: "\n"
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.KeyOperationResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.unwrapKey_2
  name: unwrapKey(string, string, string, string, Buffer, Object, ServiceCallback<KeyOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function unwrapKey(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, options: Object, callback: ServiceCallback<KeyOperationResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: keyVersion
      type:
      - string
      description: ''
    - id: algorithm
      type:
      - string
      description: ''
    - id: value
      type:
      - Buffer
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.KeyOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.KeyOperationResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.unwrapKey_1
  name: unwrapKey(string, string, string, string, Buffer, ServiceCallback<KeyOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function unwrapKey(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, callback: ServiceCallback<KeyOperationResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: keyVersion
      type:
      - string
      description: ''
    - id: algorithm
      type:
      - string
      description: ''
    - id: value
      type:
      - Buffer
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.KeyOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.KeyOperationResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.unwrapKeyWithHttpOperationResponse
  name: unwrapKeyWithHttpOperationResponse(string, string, string, string, Buffer, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function unwrapKeyWithHttpOperationResponse(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-544">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-544">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-545">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-545">The name of the key.</span></span>
    - id: keyVersion
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-546">A versão da chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-546">The version of the key.</span></span>
    - id: algorithm
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-547">Identificador de algoritmo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-547">algorithm identifier.</span></span> <span data-ttu-id="5fba0-548">Os valores possíveis incluem: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'</span><span class="sxs-lookup"><span data-stu-id="5fba0-548">Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'</span></span>
    - id: value
      type:
      - Buffer
      description: "\n"
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.KeyOperationResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.updateCertificate
  name: updateCertificate(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateCertificate(vaultBaseUrl: string, certificateName: string, certificateVersion: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-549">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-549">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-550">O nome do certificado no cofre da chave determinado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-550">The name of the certificate in the given key vault.</span></span>
    - id: certificateVersion
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-551">A versão do certificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-551">The version of the certificate.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.CertificateBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.updateCertificate_2
  name: updateCertificate(string, string, string, Object, ServiceCallback<CertificateBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateCertificate(vaultBaseUrl: string, certificateName: string, certificateVersion: string, options: Object, callback: ServiceCallback<CertificateBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateName
      type:
      - string
      description: ''
    - id: certificateVersion
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificateBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificateBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.updateCertificate_1
  name: updateCertificate(string, string, string, ServiceCallback<CertificateBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateCertificate(vaultBaseUrl: string, certificateName: string, certificateVersion: string, callback: ServiceCallback<CertificateBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateName
      type:
      - string
      description: ''
    - id: certificateVersion
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificateBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificateBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.updateCertificateIssuer
  name: updateCertificateIssuer(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateCertificateIssuer(vaultBaseUrl: string, issuerName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-552">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-552">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: issuerName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-553">O nome do emissor.</span><span class="sxs-lookup"><span data-stu-id="5fba0-553">The name of the issuer.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.IssuerBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.updateCertificateIssuer_2
  name: updateCertificateIssuer(string, string, Object, ServiceCallback<IssuerBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateCertificateIssuer(vaultBaseUrl: string, issuerName: string, options: Object, callback: ServiceCallback<IssuerBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: issuerName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.IssuerBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.IssuerBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.updateCertificateIssuer_1
  name: updateCertificateIssuer(string, string, ServiceCallback<IssuerBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateCertificateIssuer(vaultBaseUrl: string, issuerName: string, callback: ServiceCallback<IssuerBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: issuerName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.IssuerBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.IssuerBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.updateCertificateIssuerWithHttpOperationResponse
  name: updateCertificateIssuerWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateCertificateIssuerWithHttpOperationResponse(vaultBaseUrl: string, issuerName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-554">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-554">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: issuerName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-555">O nome do emissor.</span><span class="sxs-lookup"><span data-stu-id="5fba0-555">The name of the issuer.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.IssuerBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.updateCertificateOperation
  name: updateCertificateOperation(string, string, boolean, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateCertificateOperation(vaultBaseUrl: string, certificateName: string, cancellationRequested: boolean, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-556">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-556">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-557">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-557">The name of the certificate.</span></span>
    - id: cancellationRequested
      type:
      - boolean
      description: >
        <span data-ttu-id="5fba0-558">Indica se o cancelamento foi solicitado a operação de certificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-558">Indicates if cancellation was requested on the certificate operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.CertificateOperation>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.updateCertificateOperation_2
  name: updateCertificateOperation(string, string, boolean, Object, ServiceCallback<CertificateOperation>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateCertificateOperation(vaultBaseUrl: string, certificateName: string, cancellationRequested: boolean, options: Object, callback: ServiceCallback<CertificateOperation>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateName
      type:
      - string
      description: ''
    - id: cancellationRequested
      type:
      - boolean
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificateOperation>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificateOperation>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.updateCertificateOperation_1
  name: updateCertificateOperation(string, string, boolean, ServiceCallback<CertificateOperation>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateCertificateOperation(vaultBaseUrl: string, certificateName: string, cancellationRequested: boolean, callback: ServiceCallback<CertificateOperation>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateName
      type:
      - string
      description: ''
    - id: cancellationRequested
      type:
      - boolean
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificateOperation>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificateOperation>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.updateCertificateOperationWithHttpOperationResponse
  name: updateCertificateOperationWithHttpOperationResponse(string, string, boolean, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateCertificateOperationWithHttpOperationResponse(vaultBaseUrl: string, certificateName: string, cancellationRequested: boolean, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-559">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-559">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-560">O nome do certificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-560">The name of the certificate.</span></span>
    - id: cancellationRequested
      type:
      - boolean
      description: >
        <span data-ttu-id="5fba0-561">Indica se o cancelamento foi solicitado a operação de certificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-561">Indicates if cancellation was requested on the certificate operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.CertificateOperation>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.updateCertificatePolicy
  name: updateCertificatePolicy(string, string, CertificatePolicy, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateCertificatePolicy(vaultBaseUrl: string, certificateName: string, certificatePolicy: CertificatePolicy, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-562">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-562">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-563">O nome do certificado no cofre fornecido.</span><span class="sxs-lookup"><span data-stu-id="5fba0-563">The name of the certificate in the given vault.</span></span>
    - id: certificatePolicy
      type:
      - azure-keyvault.CertificatePolicy
      description: >
        <span data-ttu-id="5fba0-564">A política para o certificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-564">The policy for the certificate.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.CertificatePolicy>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.updateCertificatePolicy_2
  name: updateCertificatePolicy(string, string, CertificatePolicy, Object, ServiceCallback<CertificatePolicy>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateCertificatePolicy(vaultBaseUrl: string, certificateName: string, certificatePolicy: CertificatePolicy, options: Object, callback: ServiceCallback<CertificatePolicy>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateName
      type:
      - string
      description: ''
    - id: certificatePolicy
      type:
      - azure-keyvault.CertificatePolicy
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificatePolicy>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificatePolicy>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.updateCertificatePolicy_1
  name: updateCertificatePolicy(string, string, CertificatePolicy, ServiceCallback<CertificatePolicy>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateCertificatePolicy(vaultBaseUrl: string, certificateName: string, certificatePolicy: CertificatePolicy, callback: ServiceCallback<CertificatePolicy>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: certificateName
      type:
      - string
      description: ''
    - id: certificatePolicy
      type:
      - azure-keyvault.CertificatePolicy
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.CertificatePolicy>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.CertificatePolicy>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.updateCertificatePolicyWithHttpOperationResponse
  name: updateCertificatePolicyWithHttpOperationResponse(string, string, CertificatePolicy, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateCertificatePolicyWithHttpOperationResponse(vaultBaseUrl: string, certificateName: string, certificatePolicy: CertificatePolicy, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-565">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-565">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-566">O nome do certificado no cofre fornecido.</span><span class="sxs-lookup"><span data-stu-id="5fba0-566">The name of the certificate in the given vault.</span></span>
    - id: certificatePolicy
      type:
      - azure-keyvault.CertificatePolicy
      description: >
        <span data-ttu-id="5fba0-567">A política para o certificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-567">The policy for the certificate.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.CertificatePolicy>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.updateCertificateWithHttpOperationResponse
  name: updateCertificateWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateCertificateWithHttpOperationResponse(vaultBaseUrl: string, certificateName: string, certificateVersion: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-568">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-568">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: certificateName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-569">O nome do certificado no cofre da chave determinado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-569">The name of the certificate in the given key vault.</span></span>
    - id: certificateVersion
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-570">A versão do certificado.</span><span class="sxs-lookup"><span data-stu-id="5fba0-570">The version of the certificate.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.CertificateBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.updateKey
  name: updateKey(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateKey(vaultBaseUrl: string, keyName: string, keyVersion: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-571">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-571">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-572">O nome da chave a ser atualizada.</span><span class="sxs-lookup"><span data-stu-id="5fba0-572">The name of key to update.</span></span>
    - id: keyVersion
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-573">A versão da chave para atualizar.</span><span class="sxs-lookup"><span data-stu-id="5fba0-573">The version of the key to update.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.KeyBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.updateKey_2
  name: updateKey(string, string, string, Object, ServiceCallback<KeyBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateKey(vaultBaseUrl: string, keyName: string, keyVersion: string, options: Object, callback: ServiceCallback<KeyBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: keyVersion
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.KeyBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.KeyBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.updateKey_1
  name: updateKey(string, string, string, ServiceCallback<KeyBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateKey(vaultBaseUrl: string, keyName: string, keyVersion: string, callback: ServiceCallback<KeyBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: keyVersion
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.KeyBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.KeyBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.updateKeyWithHttpOperationResponse
  name: updateKeyWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateKeyWithHttpOperationResponse(vaultBaseUrl: string, keyName: string, keyVersion: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-574">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-574">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-575">O nome da chave a ser atualizada.</span><span class="sxs-lookup"><span data-stu-id="5fba0-575">The name of key to update.</span></span>
    - id: keyVersion
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-576">A versão da chave para atualizar.</span><span class="sxs-lookup"><span data-stu-id="5fba0-576">The version of the key to update.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.KeyBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.updateSasDefinition
  name: updateSasDefinition(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="5fba0-577">Atualiza os atributos especificados associados a determinada definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="5fba0-577">Updates the specified attributes associated with the given SAS definition.</span></span>

    <span data-ttu-id="5fba0-578">Esta operação requer a permissão de armazenamento/setsas.</span><span class="sxs-lookup"><span data-stu-id="5fba0-578">This operation requires the storage/setsas permission.</span></span>
  syntax:
    content: 'function updateSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-579">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-579">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-580">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-580">The name of the storage account.</span></span>
    - id: sasDefinitionName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-581">O nome da definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="5fba0-581">The name of the SAS definition.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.SasDefinitionBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.updateSasDefinition_2
  name: updateSasDefinition(string, string, string, Object, ServiceCallback<SasDefinitionBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="5fba0-582">Atualiza os atributos especificados associados a determinada definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="5fba0-582">Updates the specified attributes associated with the given SAS definition.</span></span>

    <span data-ttu-id="5fba0-583">Esta operação requer a permissão de armazenamento/setsas.</span><span class="sxs-lookup"><span data-stu-id="5fba0-583">This operation requires the storage/setsas permission.</span></span>
  syntax:
    content: 'function updateSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, options: Object, callback: ServiceCallback<SasDefinitionBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: sasDefinitionName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.SasDefinitionBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.SasDefinitionBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.updateSasDefinition_1
  name: updateSasDefinition(string, string, string, ServiceCallback<SasDefinitionBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="5fba0-584">Atualiza os atributos especificados associados a determinada definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="5fba0-584">Updates the specified attributes associated with the given SAS definition.</span></span>

    <span data-ttu-id="5fba0-585">Esta operação requer a permissão de armazenamento/setsas.</span><span class="sxs-lookup"><span data-stu-id="5fba0-585">This operation requires the storage/setsas permission.</span></span>
  syntax:
    content: 'function updateSasDefinition(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, callback: ServiceCallback<SasDefinitionBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: sasDefinitionName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.SasDefinitionBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.SasDefinitionBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.updateSasDefinitionWithHttpOperationResponse
  name: updateSasDefinitionWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="5fba0-586">Atualiza os atributos especificados associados a determinada definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="5fba0-586">Updates the specified attributes associated with the given SAS definition.</span></span>

    <span data-ttu-id="5fba0-587">Esta operação requer a permissão de armazenamento/setsas.</span><span class="sxs-lookup"><span data-stu-id="5fba0-587">This operation requires the storage/setsas permission.</span></span>
  syntax:
    content: 'function updateSasDefinitionWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, sasDefinitionName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-588">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-588">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-589">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-589">The name of the storage account.</span></span>
    - id: sasDefinitionName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-590">O nome da definição de SAS.</span><span class="sxs-lookup"><span data-stu-id="5fba0-590">The name of the SAS definition.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.SasDefinitionBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.updateSecret
  name: updateSecret(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateSecret(vaultBaseUrl: string, secretName: string, secretVersion: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-591">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-591">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: secretName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-592">O nome do segredo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-592">The name of the secret.</span></span>
    - id: secretVersion
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-593">A versão do segredo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-593">The version of the secret.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.SecretBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.updateSecret_2
  name: updateSecret(string, string, string, Object, ServiceCallback<SecretBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateSecret(vaultBaseUrl: string, secretName: string, secretVersion: string, options: Object, callback: ServiceCallback<SecretBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: secretName
      type:
      - string
      description: ''
    - id: secretVersion
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.SecretBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.SecretBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.updateSecret_1
  name: updateSecret(string, string, string, ServiceCallback<SecretBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateSecret(vaultBaseUrl: string, secretName: string, secretVersion: string, callback: ServiceCallback<SecretBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: secretName
      type:
      - string
      description: ''
    - id: secretVersion
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.SecretBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.SecretBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.updateSecretWithHttpOperationResponse
  name: updateSecretWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateSecretWithHttpOperationResponse(vaultBaseUrl: string, secretName: string, secretVersion: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-594">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-594">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: secretName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-595">O nome do segredo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-595">The name of the secret.</span></span>
    - id: secretVersion
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-596">A versão do segredo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-596">The version of the secret.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.SecretBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.updateStorageAccount
  name: updateStorageAccount(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="5fba0-597">Atualiza os atributos especificados associados à conta de armazenamento específica.</span><span class="sxs-lookup"><span data-stu-id="5fba0-597">Updates the specified attributes associated with the given storage account.</span></span>

    <span data-ttu-id="5fba0-598">Esta operação requer a permissão de atualização/de conjunto de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-598">This operation requires the storage/set/update permission.</span></span>
  syntax:
    content: 'function updateStorageAccount(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-599">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-599">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-600">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-600">The name of the storage account.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.StorageBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.updateStorageAccount_2
  name: updateStorageAccount(string, string, Object, ServiceCallback<StorageBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="5fba0-601">Atualiza os atributos especificados associados à conta de armazenamento específica.</span><span class="sxs-lookup"><span data-stu-id="5fba0-601">Updates the specified attributes associated with the given storage account.</span></span>

    <span data-ttu-id="5fba0-602">Esta operação requer a permissão de atualização/de conjunto de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-602">This operation requires the storage/set/update permission.</span></span>
  syntax:
    content: 'function updateStorageAccount(vaultBaseUrl: string, storageAccountName: string, options: Object, callback: ServiceCallback<StorageBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.StorageBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.StorageBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.updateStorageAccount_1
  name: updateStorageAccount(string, string, ServiceCallback<StorageBundle>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="5fba0-603">Atualiza os atributos especificados associados à conta de armazenamento específica.</span><span class="sxs-lookup"><span data-stu-id="5fba0-603">Updates the specified attributes associated with the given storage account.</span></span>

    <span data-ttu-id="5fba0-604">Esta operação requer a permissão de atualização/de conjunto de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-604">This operation requires the storage/set/update permission.</span></span>
  syntax:
    content: 'function updateStorageAccount(vaultBaseUrl: string, storageAccountName: string, callback: ServiceCallback<StorageBundle>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: storageAccountName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.StorageBundle>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.StorageBundle>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.updateStorageAccountWithHttpOperationResponse
  name: updateStorageAccountWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="5fba0-605">Atualiza os atributos especificados associados à conta de armazenamento específica.</span><span class="sxs-lookup"><span data-stu-id="5fba0-605">Updates the specified attributes associated with the given storage account.</span></span>

    <span data-ttu-id="5fba0-606">Esta operação requer a permissão de atualização/de conjunto de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-606">This operation requires the storage/set/update permission.</span></span>
  syntax:
    content: 'function updateStorageAccountWithHttpOperationResponse(vaultBaseUrl: string, storageAccountName: string, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-607">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-607">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: storageAccountName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-608">O nome da conta de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="5fba0-608">The name of the storage account.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.StorageBundle>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.verify
  name: verify(string, string, string, string, Buffer, Buffer, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function verify(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, digest: Buffer, signature: Buffer, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-609">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-609">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-610">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-610">The name of the key.</span></span>
    - id: keyVersion
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-611">A versão da chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-611">The version of the key.</span></span>
    - id: algorithm
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-612">O algoritmo de verificação/assinatura.</span><span class="sxs-lookup"><span data-stu-id="5fba0-612">The signing/verification algorithm.</span></span> <span data-ttu-id="5fba0-613">Para obter mais informações sobre os tipos possíveis de algoritmo, consulte JsonWebKeySignatureAlgorithm.</span><span class="sxs-lookup"><span data-stu-id="5fba0-613">For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm.</span></span>

        <span data-ttu-id="5fba0-614">Os valores possíveis incluem: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K'</span><span class="sxs-lookup"><span data-stu-id="5fba0-614">Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K'</span></span>
    - id: digest
      type:
      - Buffer
      description: >
        <span data-ttu-id="5fba0-615">O resumo da mensagem usado para assinatura.</span><span class="sxs-lookup"><span data-stu-id="5fba0-615">The digest used for signing.</span></span>
    - id: signature
      type:
      - Buffer
      description: >
        <span data-ttu-id="5fba0-616">A assinatura a ser verificada.</span><span class="sxs-lookup"><span data-stu-id="5fba0-616">The signature to be verified.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.KeyVerifyResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.verify_2
  name: verify(string, string, string, string, Buffer, Buffer, Object, ServiceCallback<KeyVerifyResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function verify(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, digest: Buffer, signature: Buffer, options: Object, callback: ServiceCallback<KeyVerifyResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: keyVersion
      type:
      - string
      description: ''
    - id: algorithm
      type:
      - string
      description: ''
    - id: digest
      type:
      - Buffer
      description: ''
    - id: signature
      type:
      - Buffer
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.KeyVerifyResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.KeyVerifyResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.verify_1
  name: verify(string, string, string, string, Buffer, Buffer, ServiceCallback<KeyVerifyResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function verify(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, digest: Buffer, signature: Buffer, callback: ServiceCallback<KeyVerifyResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: keyVersion
      type:
      - string
      description: ''
    - id: algorithm
      type:
      - string
      description: ''
    - id: digest
      type:
      - Buffer
      description: ''
    - id: signature
      type:
      - Buffer
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.KeyVerifyResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.KeyVerifyResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.verifyWithHttpOperationResponse
  name: verifyWithHttpOperationResponse(string, string, string, string, Buffer, Buffer, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function verifyWithHttpOperationResponse(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, digest: Buffer, signature: Buffer, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-617">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-617">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-618">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-618">The name of the key.</span></span>
    - id: keyVersion
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-619">A versão da chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-619">The version of the key.</span></span>
    - id: algorithm
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-620">O algoritmo de verificação/assinatura.</span><span class="sxs-lookup"><span data-stu-id="5fba0-620">The signing/verification algorithm.</span></span> <span data-ttu-id="5fba0-621">Para obter mais informações sobre os tipos possíveis de algoritmo, consulte JsonWebKeySignatureAlgorithm.</span><span class="sxs-lookup"><span data-stu-id="5fba0-621">For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm.</span></span>

        <span data-ttu-id="5fba0-622">Os valores possíveis incluem: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K'</span><span class="sxs-lookup"><span data-stu-id="5fba0-622">Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K'</span></span>
    - id: digest
      type:
      - Buffer
      description: >
        <span data-ttu-id="5fba0-623">O resumo da mensagem usado para assinatura.</span><span class="sxs-lookup"><span data-stu-id="5fba0-623">The digest used for signing.</span></span>
    - id: signature
      type:
      - Buffer
      description: >
        <span data-ttu-id="5fba0-624">A assinatura a ser verificada.</span><span class="sxs-lookup"><span data-stu-id="5fba0-624">The signature to be verified.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.KeyVerifyResult>>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.wrapKey
  name: wrapKey(string, string, string, string, Buffer, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function wrapKey(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-625">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-625">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-626">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-626">The name of the key.</span></span>
    - id: keyVersion
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-627">A versão da chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-627">The version of the key.</span></span>
    - id: algorithm
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-628">Identificador de algoritmo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-628">algorithm identifier.</span></span> <span data-ttu-id="5fba0-629">Os valores possíveis incluem: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'</span><span class="sxs-lookup"><span data-stu-id="5fba0-629">Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'</span></span>
    - id: value
      type:
      - Buffer
      description: "\n"
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-keyvault.KeyOperationResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.wrapKey_2
  name: wrapKey(string, string, string, string, Buffer, Object, ServiceCallback<KeyOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function wrapKey(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, options: Object, callback: ServiceCallback<KeyOperationResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: keyVersion
      type:
      - string
      description: ''
    - id: algorithm
      type:
      - string
      description: ''
    - id: value
      type:
      - Buffer
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.KeyOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.KeyOperationResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.wrapKey_1
  name: wrapKey(string, string, string, string, Buffer, ServiceCallback<KeyOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function wrapKey(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, callback: ServiceCallback<KeyOperationResult>)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: keyVersion
      type:
      - string
      description: ''
    - id: algorithm
      type:
      - string
      description: ''
    - id: value
      type:
      - Buffer
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-keyvault.KeyOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-keyvault.KeyOperationResult>
  package: azure-keyvault
- uid: azure-keyvault.KeyVaultClient.wrapKeyWithHttpOperationResponse
  name: wrapKeyWithHttpOperationResponse(string, string, string, string, Buffer, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function wrapKeyWithHttpOperationResponse(vaultBaseUrl: string, keyName: string, keyVersion: string, algorithm: string, value: Buffer, options?: Object)'
    parameters:
    - id: vaultBaseUrl
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-630">Nome do cofre, por exemplo https://myvault.vault.azure.net.</span><span class="sxs-lookup"><span data-stu-id="5fba0-630">The vault name, for example https://myvault.vault.azure.net.</span></span>
    - id: keyName
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-631">O nome da chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-631">The name of the key.</span></span>
    - id: keyVersion
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-632">A versão da chave.</span><span class="sxs-lookup"><span data-stu-id="5fba0-632">The version of the key.</span></span>
    - id: algorithm
      type:
      - string
      description: >
        <span data-ttu-id="5fba0-633">Identificador de algoritmo.</span><span class="sxs-lookup"><span data-stu-id="5fba0-633">algorithm identifier.</span></span> <span data-ttu-id="5fba0-634">Os valores possíveis incluem: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'</span><span class="sxs-lookup"><span data-stu-id="5fba0-634">Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'</span></span>
    - id: value
      type:
      - Buffer
      description: "\n"
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-keyvault.KeyOperationResult>>
  package: azure-keyvault
references:
- uid: Promise<azure-keyvault.BackupCertificateResult>
  name: BackupCertificateResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: BackupCertificateResult
    fullName: BackupCertificateResult
    uid: azure-keyvault.BackupCertificateResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-keyvault.BackupCertificateResult>
  name: BackupCertificateResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: BackupCertificateResult
    fullName: BackupCertificateResult
    uid: azure-keyvault.BackupCertificateResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-keyvault.BackupCertificateResult>>
  name: BackupCertificateResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: BackupCertificateResult
    fullName: BackupCertificateResult
    uid: azure-keyvault.BackupCertificateResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-keyvault.BackupKeyResult>
  name: BackupKeyResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: BackupKeyResult
    fullName: BackupKeyResult
    uid: azure-keyvault.BackupKeyResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-keyvault.BackupKeyResult>
  name: BackupKeyResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: BackupKeyResult
    fullName: BackupKeyResult
    uid: azure-keyvault.BackupKeyResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-keyvault.BackupKeyResult>>
  name: BackupKeyResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: BackupKeyResult
    fullName: BackupKeyResult
    uid: azure-keyvault.BackupKeyResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-keyvault.BackupSecretResult>
  name: BackupSecretResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: BackupSecretResult
    fullName: BackupSecretResult
    uid: azure-keyvault.BackupSecretResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-keyvault.BackupSecretResult>
  name: BackupSecretResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: BackupSecretResult
    fullName: BackupSecretResult
    uid: azure-keyvault.BackupSecretResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-keyvault.BackupSecretResult>>
  name: BackupSecretResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: BackupSecretResult
    fullName: BackupSecretResult
    uid: azure-keyvault.BackupSecretResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-keyvault.BackupStorageResult>
  name: BackupStorageResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: BackupStorageResult
    fullName: BackupStorageResult
    uid: azure-keyvault.BackupStorageResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-keyvault.BackupStorageResult>
  name: BackupStorageResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: BackupStorageResult
    fullName: BackupStorageResult
    uid: azure-keyvault.BackupStorageResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-keyvault.BackupStorageResult>>
  name: BackupStorageResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: BackupStorageResult
    fullName: BackupStorageResult
    uid: azure-keyvault.BackupStorageResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-keyvault.CertificateOperation>
  name: CertificateOperation>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: CertificateOperation
    fullName: CertificateOperation
    uid: azure-keyvault.CertificateOperation
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-keyvault.CertificateOperation>
  name: CertificateOperation>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: CertificateOperation
    fullName: CertificateOperation
    uid: azure-keyvault.CertificateOperation
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-keyvault.CertificateOperation>>
  name: CertificateOperation>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: CertificateOperation
    fullName: CertificateOperation
    uid: azure-keyvault.CertificateOperation
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-keyvault.KeyBundle>
  name: KeyBundle>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: KeyBundle
    fullName: KeyBundle
    uid: azure-keyvault.KeyBundle
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-keyvault.KeyBundle>
  name: KeyBundle>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: KeyBundle
    fullName: KeyBundle
    uid: azure-keyvault.KeyBundle
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-keyvault.KeyBundle>>
  name: KeyBundle>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: KeyBundle
    fullName: KeyBundle
    uid: azure-keyvault.KeyBundle
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-keyvault.KeyOperationResult>
  name: KeyOperationResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: KeyOperationResult
    fullName: KeyOperationResult
    uid: azure-keyvault.KeyOperationResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-keyvault.KeyOperationResult>
  name: KeyOperationResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: KeyOperationResult
    fullName: KeyOperationResult
    uid: azure-keyvault.KeyOperationResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-keyvault.KeyOperationResult>>
  name: KeyOperationResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: KeyOperationResult
    fullName: KeyOperationResult
    uid: azure-keyvault.KeyOperationResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-keyvault.DeletedCertificateBundle>
  name: DeletedCertificateBundle>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DeletedCertificateBundle
    fullName: DeletedCertificateBundle
    uid: azure-keyvault.DeletedCertificateBundle
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-keyvault.DeletedCertificateBundle>
  name: DeletedCertificateBundle>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DeletedCertificateBundle
    fullName: DeletedCertificateBundle
    uid: azure-keyvault.DeletedCertificateBundle
  - name: '>'
    fullName: '>'
- uid: Promise<azure-keyvault.Contacts>
  name: Contacts>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Contacts
    fullName: Contacts
    uid: azure-keyvault.Contacts
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-keyvault.Contacts>
  name: Contacts>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Contacts
    fullName: Contacts
    uid: azure-keyvault.Contacts
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-keyvault.Contacts>>
  name: Contacts>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Contacts
    fullName: Contacts
    uid: azure-keyvault.Contacts
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-keyvault.IssuerBundle>
  name: IssuerBundle>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: IssuerBundle
    fullName: IssuerBundle
    uid: azure-keyvault.IssuerBundle
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-keyvault.IssuerBundle>
  name: IssuerBundle>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: IssuerBundle
    fullName: IssuerBundle
    uid: azure-keyvault.IssuerBundle
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-keyvault.IssuerBundle>>
  name: IssuerBundle>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: IssuerBundle
    fullName: IssuerBundle
    uid: azure-keyvault.IssuerBundle
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-keyvault.DeletedCertificateBundle>>
  name: DeletedCertificateBundle>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DeletedCertificateBundle
    fullName: DeletedCertificateBundle
    uid: azure-keyvault.DeletedCertificateBundle
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-keyvault.DeletedKeyBundle>
  name: DeletedKeyBundle>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DeletedKeyBundle
    fullName: DeletedKeyBundle
    uid: azure-keyvault.DeletedKeyBundle
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-keyvault.DeletedKeyBundle>
  name: DeletedKeyBundle>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DeletedKeyBundle
    fullName: DeletedKeyBundle
    uid: azure-keyvault.DeletedKeyBundle
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-keyvault.DeletedKeyBundle>>
  name: DeletedKeyBundle>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DeletedKeyBundle
    fullName: DeletedKeyBundle
    uid: azure-keyvault.DeletedKeyBundle
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-keyvault.DeletedSasDefinitionBundle>
  name: DeletedSasDefinitionBundle>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DeletedSasDefinitionBundle
    fullName: DeletedSasDefinitionBundle
    uid: azure-keyvault.DeletedSasDefinitionBundle
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-keyvault.DeletedSasDefinitionBundle>
  name: DeletedSasDefinitionBundle>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DeletedSasDefinitionBundle
    fullName: DeletedSasDefinitionBundle
    uid: azure-keyvault.DeletedSasDefinitionBundle
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-keyvault.DeletedSasDefinitionBundle>>
  name: DeletedSasDefinitionBundle>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DeletedSasDefinitionBundle
    fullName: DeletedSasDefinitionBundle
    uid: azure-keyvault.DeletedSasDefinitionBundle
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-keyvault.DeletedSecretBundle>
  name: DeletedSecretBundle>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DeletedSecretBundle
    fullName: DeletedSecretBundle
    uid: azure-keyvault.DeletedSecretBundle
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-keyvault.DeletedSecretBundle>
  name: DeletedSecretBundle>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DeletedSecretBundle
    fullName: DeletedSecretBundle
    uid: azure-keyvault.DeletedSecretBundle
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-keyvault.DeletedSecretBundle>>
  name: DeletedSecretBundle>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DeletedSecretBundle
    fullName: DeletedSecretBundle
    uid: azure-keyvault.DeletedSecretBundle
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-keyvault.DeletedStorageBundle>
  name: DeletedStorageBundle>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DeletedStorageBundle
    fullName: DeletedStorageBundle
    uid: azure-keyvault.DeletedStorageBundle
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-keyvault.DeletedStorageBundle>
  name: DeletedStorageBundle>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DeletedStorageBundle
    fullName: DeletedStorageBundle
    uid: azure-keyvault.DeletedStorageBundle
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-keyvault.DeletedStorageBundle>>
  name: DeletedStorageBundle>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DeletedStorageBundle
    fullName: DeletedStorageBundle
    uid: azure-keyvault.DeletedStorageBundle
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-keyvault.CertificateBundle>
  name: CertificateBundle>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: CertificateBundle
    fullName: CertificateBundle
    uid: azure-keyvault.CertificateBundle
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-keyvault.CertificateBundle>
  name: CertificateBundle>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: CertificateBundle
    fullName: CertificateBundle
    uid: azure-keyvault.CertificateBundle
  - name: '>'
    fullName: '>'
- uid: Promise<azure-keyvault.CertificateIssuerListResult>
  name: CertificateIssuerListResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: CertificateIssuerListResult
    fullName: CertificateIssuerListResult
    uid: azure-keyvault.CertificateIssuerListResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-keyvault.CertificateIssuerListResult>
  name: CertificateIssuerListResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: CertificateIssuerListResult
    fullName: CertificateIssuerListResult
    uid: azure-keyvault.CertificateIssuerListResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-keyvault.CertificateIssuerListResult>>
  name: CertificateIssuerListResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: CertificateIssuerListResult
    fullName: CertificateIssuerListResult
    uid: azure-keyvault.CertificateIssuerListResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-keyvault.CertificatePolicy>
  name: CertificatePolicy>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: CertificatePolicy
    fullName: CertificatePolicy
    uid: azure-keyvault.CertificatePolicy
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-keyvault.CertificatePolicy>
  name: CertificatePolicy>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: CertificatePolicy
    fullName: CertificatePolicy
    uid: azure-keyvault.CertificatePolicy
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-keyvault.CertificatePolicy>>
  name: CertificatePolicy>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: CertificatePolicy
    fullName: CertificatePolicy
    uid: azure-keyvault.CertificatePolicy
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-keyvault.CertificateListResult>
  name: CertificateListResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: CertificateListResult
    fullName: CertificateListResult
    uid: azure-keyvault.CertificateListResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-keyvault.CertificateListResult>
  name: CertificateListResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: CertificateListResult
    fullName: CertificateListResult
    uid: azure-keyvault.CertificateListResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-keyvault.CertificateListResult>>
  name: CertificateListResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: CertificateListResult
    fullName: CertificateListResult
    uid: azure-keyvault.CertificateListResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-keyvault.CertificateBundle>>
  name: CertificateBundle>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: CertificateBundle
    fullName: CertificateBundle
    uid: azure-keyvault.CertificateBundle
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-keyvault.DeletedCertificateListResult>
  name: DeletedCertificateListResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DeletedCertificateListResult
    fullName: DeletedCertificateListResult
    uid: azure-keyvault.DeletedCertificateListResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-keyvault.DeletedCertificateListResult>
  name: DeletedCertificateListResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DeletedCertificateListResult
    fullName: DeletedCertificateListResult
    uid: azure-keyvault.DeletedCertificateListResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-keyvault.DeletedCertificateListResult>>
  name: DeletedCertificateListResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DeletedCertificateListResult
    fullName: DeletedCertificateListResult
    uid: azure-keyvault.DeletedCertificateListResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-keyvault.DeletedKeyListResult>
  name: DeletedKeyListResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DeletedKeyListResult
    fullName: DeletedKeyListResult
    uid: azure-keyvault.DeletedKeyListResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-keyvault.DeletedKeyListResult>
  name: DeletedKeyListResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DeletedKeyListResult
    fullName: DeletedKeyListResult
    uid: azure-keyvault.DeletedKeyListResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-keyvault.DeletedKeyListResult>>
  name: DeletedKeyListResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DeletedKeyListResult
    fullName: DeletedKeyListResult
    uid: azure-keyvault.DeletedKeyListResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-keyvault.DeletedSasDefinitionListResult>
  name: DeletedSasDefinitionListResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DeletedSasDefinitionListResult
    fullName: DeletedSasDefinitionListResult
    uid: azure-keyvault.DeletedSasDefinitionListResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-keyvault.DeletedSasDefinitionListResult>
  name: DeletedSasDefinitionListResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DeletedSasDefinitionListResult
    fullName: DeletedSasDefinitionListResult
    uid: azure-keyvault.DeletedSasDefinitionListResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-keyvault.DeletedSasDefinitionListResult>>
  name: DeletedSasDefinitionListResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DeletedSasDefinitionListResult
    fullName: DeletedSasDefinitionListResult
    uid: azure-keyvault.DeletedSasDefinitionListResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-keyvault.DeletedSecretListResult>
  name: DeletedSecretListResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DeletedSecretListResult
    fullName: DeletedSecretListResult
    uid: azure-keyvault.DeletedSecretListResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-keyvault.DeletedSecretListResult>
  name: DeletedSecretListResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DeletedSecretListResult
    fullName: DeletedSecretListResult
    uid: azure-keyvault.DeletedSecretListResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-keyvault.DeletedSecretListResult>>
  name: DeletedSecretListResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DeletedSecretListResult
    fullName: DeletedSecretListResult
    uid: azure-keyvault.DeletedSecretListResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-keyvault.DeletedStorageListResult>
  name: DeletedStorageListResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DeletedStorageListResult
    fullName: DeletedStorageListResult
    uid: azure-keyvault.DeletedStorageListResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-keyvault.DeletedStorageListResult>
  name: DeletedStorageListResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DeletedStorageListResult
    fullName: DeletedStorageListResult
    uid: azure-keyvault.DeletedStorageListResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-keyvault.DeletedStorageListResult>>
  name: DeletedStorageListResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DeletedStorageListResult
    fullName: DeletedStorageListResult
    uid: azure-keyvault.DeletedStorageListResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-keyvault.KeyListResult>
  name: KeyListResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: KeyListResult
    fullName: KeyListResult
    uid: azure-keyvault.KeyListResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-keyvault.KeyListResult>
  name: KeyListResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: KeyListResult
    fullName: KeyListResult
    uid: azure-keyvault.KeyListResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-keyvault.KeyListResult>>
  name: KeyListResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: KeyListResult
    fullName: KeyListResult
    uid: azure-keyvault.KeyListResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-keyvault.SasDefinitionBundle>
  name: SasDefinitionBundle>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: SasDefinitionBundle
    fullName: SasDefinitionBundle
    uid: azure-keyvault.SasDefinitionBundle
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-keyvault.SasDefinitionBundle>
  name: SasDefinitionBundle>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: SasDefinitionBundle
    fullName: SasDefinitionBundle
    uid: azure-keyvault.SasDefinitionBundle
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-keyvault.SasDefinitionBundle>>
  name: SasDefinitionBundle>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: SasDefinitionBundle
    fullName: SasDefinitionBundle
    uid: azure-keyvault.SasDefinitionBundle
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-keyvault.SasDefinitionListResult>
  name: SasDefinitionListResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: SasDefinitionListResult
    fullName: SasDefinitionListResult
    uid: azure-keyvault.SasDefinitionListResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-keyvault.SasDefinitionListResult>
  name: SasDefinitionListResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: SasDefinitionListResult
    fullName: SasDefinitionListResult
    uid: azure-keyvault.SasDefinitionListResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-keyvault.SasDefinitionListResult>>
  name: SasDefinitionListResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: SasDefinitionListResult
    fullName: SasDefinitionListResult
    uid: azure-keyvault.SasDefinitionListResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-keyvault.SecretBundle>
  name: SecretBundle>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: SecretBundle
    fullName: SecretBundle
    uid: azure-keyvault.SecretBundle
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-keyvault.SecretBundle>
  name: SecretBundle>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: SecretBundle
    fullName: SecretBundle
    uid: azure-keyvault.SecretBundle
  - name: '>'
    fullName: '>'
- uid: Promise<azure-keyvault.SecretListResult>
  name: SecretListResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: SecretListResult
    fullName: SecretListResult
    uid: azure-keyvault.SecretListResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-keyvault.SecretListResult>
  name: SecretListResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: SecretListResult
    fullName: SecretListResult
    uid: azure-keyvault.SecretListResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-keyvault.SecretListResult>>
  name: SecretListResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: SecretListResult
    fullName: SecretListResult
    uid: azure-keyvault.SecretListResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-keyvault.SecretBundle>>
  name: SecretBundle>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: SecretBundle
    fullName: SecretBundle
    uid: azure-keyvault.SecretBundle
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-keyvault.StorageBundle>
  name: StorageBundle>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: StorageBundle
    fullName: StorageBundle
    uid: azure-keyvault.StorageBundle
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-keyvault.StorageBundle>
  name: StorageBundle>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: StorageBundle
    fullName: StorageBundle
    uid: azure-keyvault.StorageBundle
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-keyvault.StorageBundle>>
  name: StorageBundle>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: StorageBundle
    fullName: StorageBundle
    uid: azure-keyvault.StorageBundle
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-keyvault.StorageListResult>
  name: StorageListResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: StorageListResult
    fullName: StorageListResult
    uid: azure-keyvault.StorageListResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-keyvault.StorageListResult>
  name: StorageListResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: StorageListResult
    fullName: StorageListResult
    uid: azure-keyvault.StorageListResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-keyvault.StorageListResult>>
  name: StorageListResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: StorageListResult
    fullName: StorageListResult
    uid: azure-keyvault.StorageListResult
  - name: '>>'
    fullName: '>>'
- uid: azure-keyvault.JsonWebKey
  name: JsonWebKey
  spec.typeScript:
  - name: JsonWebKey
    fullName: JsonWebKey
    uid: azure-keyvault.JsonWebKey
- uid: azure-keyvault.Contacts
  name: Contacts
  spec.typeScript:
  - name: Contacts
    fullName: Contacts
    uid: azure-keyvault.Contacts
- uid: azure-keyvault.CertificatePolicy
  name: CertificatePolicy
  spec.typeScript:
  - name: CertificatePolicy
    fullName: CertificatePolicy
    uid: azure-keyvault.CertificatePolicy
- uid: Promise<azure-keyvault.KeyVerifyResult>
  name: KeyVerifyResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: KeyVerifyResult
    fullName: KeyVerifyResult
    uid: azure-keyvault.KeyVerifyResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-keyvault.KeyVerifyResult>
  name: KeyVerifyResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: KeyVerifyResult
    fullName: KeyVerifyResult
    uid: azure-keyvault.KeyVerifyResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-keyvault.KeyVerifyResult>>
  name: KeyVerifyResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: KeyVerifyResult
    fullName: KeyVerifyResult
    uid: azure-keyvault.KeyVerifyResult
  - name: '>>'
    fullName: '>>'
