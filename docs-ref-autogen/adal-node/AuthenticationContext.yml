### YamlMime:UniversalReference
ms.openlocfilehash: 718b5e201a01e0a07231aa2a48f11df17d286ec6
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52167841"
items:
- uid: adal-node.AuthenticationContext
  name: AuthenticationContext
  fullName: AuthenticationContext
  children:
  - adal-node.AuthenticationContext.acquireToken
  - adal-node.AuthenticationContext.acquireTokenWithAuthorizationCode
  - adal-node.AuthenticationContext.acquireTokenWithClientCertificate
  - adal-node.AuthenticationContext.acquireTokenWithClientCredentials
  - adal-node.AuthenticationContext.acquireTokenWithDeviceCode
  - adal-node.AuthenticationContext.acquireTokenWithRefreshToken
  - adal-node.AuthenticationContext.acquireTokenWithRefreshToken_1
  - adal-node.AuthenticationContext.acquireTokenWithUsernamePassword
  - adal-node.AuthenticationContext.acquireUserCode
  - adal-node.AuthenticationContext.constructor
  - adal-node.AuthenticationContext.authority
  - adal-node.AuthenticationContext.cache
  - adal-node.AuthenticationContext.cancelRequestToGetTokenWithDeviceCode
  - adal-node.AuthenticationContext.correlationId
  - adal-node.AuthenticationContext.options
  langs:
  - typeScript
  type: class
  summary: ''
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireToken
  name: acquireToken(string, string, string, AcquireTokenCallback)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém um token para um determinado recurso.
  syntax:
    content: 'function acquireToken(resource: string, userId: string, clientId: string, callback: AcquireTokenCallback)'
    parameters:
    - id: resource
      type:
      - string
      description: Um URI que identifica o recurso para o qual o token é válido.
    - id: userId
      type:
      - string
      description: O nome de usuário do usuário em nome para que este aplicativo está se autenticando.
    - id: clientId
      type:
      - string
      description: Id do cliente OAuth do aplicativo de chamada.
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: >
        A função de retorno de chamada.
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireTokenWithAuthorizationCode
  name: acquireTokenWithAuthorizationCode(string, string, string, string, string, AcquireTokenCallback)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém um token para um determinado recurso.
  syntax:
    content: 'function acquireTokenWithAuthorizationCode(authorizationCode: string, redirectUri: string, resource: string, clientId: string, clientSecret: string, callback: AcquireTokenCallback)'
    parameters:
    - id: authorizationCode
      type:
      - string
      description: Um código de autorização retornado de um cliente.
    - id: redirectUri
      type:
      - string
      description: O uri de redirecionamento que foi usado na chamada de autorização.
    - id: resource
      type:
      - string
      description: Um URI que identifica o recurso para o qual o token é válido.
    - id: clientId
      type:
      - string
      description: Id do cliente OAuth do aplicativo de chamada.
    - id: clientSecret
      type:
      - string
      description: O segredo do cliente OAuth do aplicativo de chamada.
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: >
        A função de retorno de chamada.
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireTokenWithClientCertificate
  name: acquireTokenWithClientCertificate(string, string, string, string, AcquireTokenCallback)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém um novo acesso token usando por meio de uma credencial de certificado.
  syntax:
    content: 'function acquireTokenWithClientCertificate(resource: string, clientId: string, certificate: string, thumbprint: string, callback: AcquireTokenCallback)'
    parameters:
    - id: resource
      type:
      - string
      description: Um URI que identifica o recurso para o qual o token é válido.
    - id: clientId
      type:
      - string
      description: Id do cliente OAuth do aplicativo de chamada.
    - id: certificate
      type:
      - string
      description: Uma chave privada do certificado codificado de PEM.
    - id: thumbprint
      type:
      - string
      description: Um hex codificado a impressão digital do certificado.
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: >
        A função de retorno de chamada.
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireTokenWithClientCredentials
  name: acquireTokenWithClientCredentials(string, string, string, AcquireTokenCallback)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém um token para um determinado recurso.
  syntax:
    content: 'function acquireTokenWithClientCredentials(resource: string, clientId: string, clientSecret: string, callback: AcquireTokenCallback)'
    parameters:
    - id: resource
      type:
      - string
      description: Um URI que identifica o recurso para o qual o token é válido.
    - id: clientId
      type:
      - string
      description: Id do cliente OAuth do aplicativo de chamada.
    - id: clientSecret
      type:
      - string
      description: O segredo do cliente OAuth do aplicativo de chamada.
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: >
        A função de retorno de chamada.
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireTokenWithDeviceCode
  name: acquireTokenWithDeviceCode(string, string, UserCodeInfo, AcquireTokenCallback)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém um novo acesso token usando por meio de um código de dispositivo.
  syntax:
    content: 'function acquireTokenWithDeviceCode(resource: string, clientId: string, userCodeInfo: UserCodeInfo, callback: AcquireTokenCallback)'
    parameters:
    - id: resource
      type:
      - string
      description: ''
    - id: clientId
      type:
      - string
      description: Id do cliente OAuth do aplicativo de chamada.
    - id: userCodeInfo
      type:
      - adal-node.UserCodeInfo
      description: Contém device_code, intervalo de repetição e expiração de tempo para a solicitação para obter o token.
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: >
        A função de retorno de chamada.
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireTokenWithRefreshToken
  name: acquireTokenWithRefreshToken(string, string, string, AcquireTokenCallback)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém um novo token de acesso por meio de um token de atualização emitido anteriormente.
  syntax:
    content: 'function acquireTokenWithRefreshToken(refreshToken: string, clientId: string, resource: string, callback: AcquireTokenCallback)'
    parameters:
    - id: refreshToken
      type:
      - string
      description: Um token de atualização em uma resposta de tokne de uma chamada anterior do acquireToken.
    - id: clientId
      type:
      - string
      description: Id do cliente OAuth do aplicativo de chamada.
    - id: resource
      type:
      - string
      description: O recurso do OAuth para o qual um token está sendo a solicitação.  Esse parâmetro é opcional e pode ser definido como null.
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: >
        A função de retorno de chamada.
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireTokenWithRefreshToken_1
  name: acquireTokenWithRefreshToken(string, string, string, string, AcquireTokenCallback)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém um novo token de acesso por meio de um token de atualização emitido anteriormente.
  syntax:
    content: 'function acquireTokenWithRefreshToken(refreshToken: string, clientId: string, clientSecret: string, resource: string, callback: AcquireTokenCallback)'
    parameters:
    - id: refreshToken
      type:
      - string
      description: ''
    - id: clientId
      type:
      - string
      description: ''
    - id: clientSecret
      type:
      - string
      description: ''
    - id: resource
      type:
      - string
      description: ''
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: ''
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireTokenWithUsernamePassword
  name: acquireTokenWithUsernamePassword(string, string, string, string, AcquireTokenCallback)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém um token para um determinado recurso.
  syntax:
    content: 'function acquireTokenWithUsernamePassword(resource: string, username: string, password: string, clientId: string, callback: AcquireTokenCallback)'
    parameters:
    - id: resource
      type:
      - string
      description: Um URI que identifica o recurso para o qual o token é válido.
    - id: username
      type:
      - string
      description: O nome de usuário do usuário em nome para que este aplicativo está se autenticando.
    - id: password
      type:
      - string
      description: A senha do usuário indicado no parâmetro de nome de usuário.
    - id: clientId
      type:
      - string
      description: Id do cliente OAuth do aplicativo de chamada.
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: >
        A função de retorno de chamada.
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireUserCode
  name: acquireUserCode(string, string, string, AcquireUserCodeCallback)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtém o userCodeInfo que contém user_code, device_code para autenticação de usuário no dispositivo.
  syntax:
    content: 'function acquireUserCode(resource: string, clientId: string, language: string, callback: AcquireUserCodeCallback)'
    parameters:
    - id: resource
      type:
      - string
      description: Um URI que identifica o recurso para o qual o device_code e user_code é válido para.
    - id: clientId
      type:
      - string
      description: Id do cliente OAuth do aplicativo de chamada.
    - id: language
      type:
      - string
      description: O código de idioma especificando como a mensagem deve ser localizada.
    - id: callback
      type:
      - adal-node.AcquireUserCodeCallback
      description: >
        A função de retorno de chamada.
  package: adal-node
- uid: adal-node.AuthenticationContext.constructor
  name: AuthenticationContext(string, undefined | false | true, TokenCache)
  children: []
  type: constructor
  langs:
  - typeScript
  summary: Cria um novo objeto de AuthenticationContext.  Por padrão, a autoridade será verificada em relação a uma lista de autoridades de conhecidos do Azure Active Directory.  Se a autoridade não é reconhecida como uma dessas autoridades bem conhecidas, em seguida, aquisição de token falhará.  Esse comportamento pode ser desativado por meio do parâmetro validateAuthority abaixo.
  syntax:
    content: 'new AuthenticationContext(authority: string, validateAuthority?: undefined | false | true, cache?: TokenCache)'
    parameters:
    - id: authority
      type:
      - string
      description: Uma URL que identifica uma autoridade de token.
    - id: validateAuthority
      type:
      - undefined | false | true
      description: ''
      optional: true
    - id: cache
      type:
      - adal-node.TokenCache
      description: ''
      optional: true
  package: adal-node
- uid: adal-node.AuthenticationContext.authority
  name: authority
  fullName: authority
  children: []
  langs:
  - typeScript
  type: property
  summary: autoridade de {string} uma URL que identifica uma autoridade de token.
  syntax:
    content: 'public authority: string'
    return:
      type:
      - string
  package: adal-node
- uid: adal-node.AuthenticationContext.cache
  name: cache
  fullName: cache
  children: []
  langs:
  - typeScript
  type: property
  summary: O cache de token usado por esta instância de AuthenticationContext de cache de {TokenCache}
  syntax:
    content: 'public cache: TokenCache'
    return:
      type:
      - adal-node.TokenCache
  package: adal-node
- uid: adal-node.AuthenticationContext.cancelRequestToGetTokenWithDeviceCode
  name: cancelRequestToGetTokenWithDeviceCode(UserCodeInfo, AcquireTokenCallback)
  children: []
  type: method
  langs:
  - typeScript
  summary: Cancela a solicitação de sondagem para obter um token com o código de dispositivo.
  syntax:
    content: 'function cancelRequestToGetTokenWithDeviceCode(userCodeInfo: UserCodeInfo, callback: AcquireTokenCallback)'
    parameters:
    - id: userCodeInfo
      type:
      - adal-node.UserCodeInfo
      description: Contém device_code, intervalo de repetição e expiração de tempo para a solicitação para obter o token.
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: >
        A função de retorno de chamada.
  package: adal-node
- uid: adal-node.AuthenticationContext.correlationId
  name: correlationId
  fullName: correlationId
  children: []
  langs:
  - typeScript
  type: property
  summary: '{string} correlationId a id de correlação que será usada para a próxima solicitação acquireToken.'
  syntax:
    content: 'public correlationId: string'
    return:
      type:
      - string
  package: adal-node
- uid: adal-node.AuthenticationContext.options
  name: options
  fullName: options
  children: []
  langs:
  - typeScript
  type: property
  summary: '{qualquer} opções de opções que são aplicadas a solicitações geradas por essa instância de AuthenticationContext.'
  syntax:
    content: 'public options: any'
    return:
      type:
      - any
  package: adal-node
references:
- uid: adal-node.TokenCache
  name: TokenCache
  spec.typeScript:
  - name: TokenCache
    fullName: TokenCache
    uid: adal-node.TokenCache
- uid: adal-node.AcquireTokenCallback
  name: AcquireTokenCallback
  spec.typeScript:
  - name: AcquireTokenCallback
    fullName: AcquireTokenCallback
    uid: adal-node.AcquireTokenCallback
- uid: adal-node.UserCodeInfo
  name: UserCodeInfo
  spec.typeScript:
  - name: UserCodeInfo
    fullName: UserCodeInfo
    uid: adal-node.UserCodeInfo
- uid: adal-node.AcquireUserCodeCallback
  name: AcquireUserCodeCallback
  spec.typeScript:
  - name: AcquireUserCodeCallback
    fullName: AcquireUserCodeCallback
    uid: adal-node.AcquireUserCodeCallback
