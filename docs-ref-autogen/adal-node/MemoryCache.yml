### YamlMime:UniversalReference
ms.openlocfilehash: 5970fbf41b85f441e3cf2934470ea54795aae476
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52052394"
items:
- uid: adal-node.MemoryCache
  name: MemoryCache
  fullName: MemoryCache
  children:
  - adal-node.MemoryCache.add
  - adal-node.MemoryCache.find
  - adal-node.MemoryCache.constructor
  - adal-node.MemoryCache.remove
  langs:
  - typeScript
  type: class
  summary: ''
  package: adal-node
- uid: adal-node.MemoryCache.add
  name: 'add(TokenResponse[], (err: Error, result: boolean) => void)'
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e87b1-101">Adiciona uma coleção de entradas no cache em uma única operação em lote.</span><span class="sxs-lookup"><span data-stu-id="e87b1-101">Adds a collection of entries to the cache in a single batch operation.</span></span>
  syntax:
    content: 'function add(entries: TokenResponse[], callback: (err: Error, result: boolean) => void)'
    parameters:
    - id: entries
      type:
      - adal-node.TokenResponse[]
      description: <span data-ttu-id="e87b1-102">Uma matriz de entradas a serem adicionadas ao cache.</span><span class="sxs-lookup"><span data-stu-id="e87b1-102">An array of entries to add to the cache.</span></span>
    - id: callback
      type:
      - '(err: Error, result: boolean) => void'
      description: >
        <span data-ttu-id="e87b1-103">Essa função é chamada quando a operação for concluída.</span><span class="sxs-lookup"><span data-stu-id="e87b1-103">This function is called when the operation is complete.</span></span>  <span data-ttu-id="e87b1-104">Qualquer erro é fornecido como o primeiro parâmetro.</span><span class="sxs-lookup"><span data-stu-id="e87b1-104">Any error is provided as the first parameter.</span></span>
  package: adal-node
- uid: adal-node.MemoryCache.find
  name: 'find(any, (err: Error, results: any[]) => void)'
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e87b1-105">Localiza todas as entradas no cache que correspondem a todos os valores passados.</span><span class="sxs-lookup"><span data-stu-id="e87b1-105">Finds all entries in the cache that match all of the passed in values.</span></span>
  syntax:
    content: 'function find(query: any, callback: (err: Error, results: any[]) => void)'
    parameters:
    - id: query
      type:
      - any
      description: <span data-ttu-id="e87b1-106">Esse objeto será comparado a cada entrada no cache.</span><span class="sxs-lookup"><span data-stu-id="e87b1-106">This object will be compared to each entry in the cache.</span></span>  <span data-ttu-id="e87b1-107">As entradas que correspondem a todos os valores nesse objeto serão retornadas.</span><span class="sxs-lookup"><span data-stu-id="e87b1-107">Any entries that match all of the values in this object will be returned.</span></span>  <span data-ttu-id="e87b1-108">Todos os valores no objeto passado devem corresponder exatamente valores em um objeto potencialmente retornado.</span><span class="sxs-lookup"><span data-stu-id="e87b1-108">All the values in the passed in object must match values in a potentialy returned object exactly.</span></span>  <span data-ttu-id="e87b1-109">O objeto retornado pode ter mais valores que passado no objeto de consulta.</span><span class="sxs-lookup"><span data-stu-id="e87b1-109">The returned object may have more values than the passed in query object.</span></span> <span data-ttu-id="e87b1-110">Dê uma olhada em http://underscorejs.org/#where para obter um exemplo sobre como fornecer a consulta.</span><span class="sxs-lookup"><span data-stu-id="e87b1-110">Please take a look at http://underscorejs.org/#where for an example on how to provide query.</span></span>
    - id: callback
      type:
      - '(err: Error, results: any[]) => void'
      description: "\n"
  package: adal-node
- uid: adal-node.MemoryCache.constructor
  name: MemoryCache()
  children: []
  type: constructor
  langs:
  - typeScript
  summary: ''
  syntax:
    content: new MemoryCache()
    parameters: []
  package: adal-node
- uid: adal-node.MemoryCache.remove
  name: 'remove(TokenResponse[], (err: Error, result: null) => void)'
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e87b1-111">Remove uma coleção de entradas do cache em uma única operação em lote.</span><span class="sxs-lookup"><span data-stu-id="e87b1-111">Removes a collection of entries from the cache in a single batch operation.</span></span>
  syntax:
    content: 'function remove(entires: TokenResponse[], callback: (err: Error, result: null) => void)'
    parameters:
    - id: entires
      type:
      - adal-node.TokenResponse[]
      description: ''
    - id: callback
      type:
      - '(err: Error, result: null) => void'
      description: >
        <span data-ttu-id="e87b1-112">Essa função é chamada quando a operação for concluída.</span><span class="sxs-lookup"><span data-stu-id="e87b1-112">This function is called when the operation is complete.</span></span>  <span data-ttu-id="e87b1-113">Qualquer erro é fornecido como o primeiro parâmetro.</span><span class="sxs-lookup"><span data-stu-id="e87b1-113">Any error is provided as the first parameter.</span></span>
  package: adal-node
references:
- uid: adal-node.TokenResponse[]
  name: TokenResponse[]
  spec.typeScript:
  - name: TokenResponse
    fullName: TokenResponse
    uid: adal-node.TokenResponse
  - name: '[]'
    fullName: '[]'
