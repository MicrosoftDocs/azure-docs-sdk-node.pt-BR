### YamlMime:UniversalReference
ms.openlocfilehash: ad00c5c583cd93ebd99ea7dd0bcccafb03707a5c
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 08/22/2018
ms.locfileid: "41684374"
items:
- uid: adal-node.TokenResponse
  name: TokenResponse
  fullName: TokenResponse
  children:
  - adal-node.TokenResponse.accessToken
  - adal-node.TokenResponse.createdOn
  - adal-node.TokenResponse.error
  - adal-node.TokenResponse.errorDescription
  - adal-node.TokenResponse.expiresIn
  - adal-node.TokenResponse.expiresOn
  - adal-node.TokenResponse.familyName
  - adal-node.TokenResponse.givenName
  - adal-node.TokenResponse.identityProvider
  - adal-node.TokenResponse.isUserIdDisplayable
  - adal-node.TokenResponse.oid
  - adal-node.TokenResponse.refreshToken
  - adal-node.TokenResponse.resource
  - adal-node.TokenResponse.tenantId
  - adal-node.TokenResponse.tokenType
  - adal-node.TokenResponse.userId
  langs:
  - typeScript
  type: interface
  summary: <span data-ttu-id="476e4-101">Contém tokens e os metadados após a conclusão bem-sucedida de uma chamada acquireToken.</span><span class="sxs-lookup"><span data-stu-id="476e4-101">Contains tokens and metadata upon successful completion of an acquireToken call.</span></span>
  package: adal-node
- uid: adal-node.TokenResponse.accessToken
  name: accessToken
  fullName: accessToken
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="476e4-102">{string} accessToken o token de acesso retornado.</span><span class="sxs-lookup"><span data-stu-id="476e4-102">{string} accessToken The returned access token.</span></span>
  syntax:
    content: 'accessToken: string'
    return:
      type:
      - string
  package: adal-node
- uid: adal-node.TokenResponse.createdOn
  name: createdOn
  fullName: createdOn
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="476e4-103">{Date} [createdOn] A data na qual o token de acesso foi criado.</span><span class="sxs-lookup"><span data-stu-id="476e4-103">{Date} [createdOn] The date on which the access token was created.</span></span>
  optional: true
  syntax:
    content: 'createdOn?: Date | string'
    return:
      type:
      - Date | string
  package: adal-node
- uid: adal-node.TokenResponse.error
  name: error
  fullName: error
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="476e4-104">{qualquer} [Erro] Fornece informações sobre o erro se houver.</span><span class="sxs-lookup"><span data-stu-id="476e4-104">{any} [error] Provides information about error if any.</span></span>
  optional: true
  syntax:
    content: 'error?: any'
    return:
      type:
      - any
  package: adal-node
- uid: adal-node.TokenResponse.errorDescription
  name: errorDescription
  fullName: errorDescription
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="476e4-105">{qualquer} [errorDescription] Breve descrição sobre o erro se houver.</span><span class="sxs-lookup"><span data-stu-id="476e4-105">{any} [errorDescription] Short description about error if any.</span></span>
  optional: true
  syntax:
    content: 'errorDescription?: any'
    return:
      type:
      - any
  package: adal-node
- uid: adal-node.TokenResponse.expiresIn
  name: expiresIn
  fullName: expiresIn
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="476e4-106">@property {int} expiresIn a quantidade de tempo, em segundos, para o qual o token é válido.</span><span class="sxs-lookup"><span data-stu-id="476e4-106">@property {int} expiresIn The amount of time, in seconds, for which the token is valid.</span></span>
  syntax:
    content: 'expiresIn: number'
    return:
      type:
      - number
  package: adal-node
- uid: adal-node.TokenResponse.expiresOn
  name: expiresOn
  fullName: expiresOn
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="476e4-107">@property {Data} expiresOn a data em que o token de acesso expira.</span><span class="sxs-lookup"><span data-stu-id="476e4-107">@property {Date} expiresOn The Date on which the access token expires.</span></span>
  syntax:
    content: 'expiresOn: Date | string'
    return:
      type:
      - Date | string
  package: adal-node
- uid: adal-node.TokenResponse.familyName
  name: familyName
  fullName: familyName
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="476e4-108">{string} [familyName] O nome de família da entidade de segurança representado pelo token de acesso.</span><span class="sxs-lookup"><span data-stu-id="476e4-108">{string} [familyName] The family name of the principal represented by the access token.</span></span>
  optional: true
  syntax:
    content: 'familyName?: string'
    return:
      type:
      - string
  package: adal-node
- uid: adal-node.TokenResponse.givenName
  name: givenName
  fullName: givenName
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="476e4-109">{string} [givenName] O nome fornecido da entidade de segurança representado pelo token de acesso.</span><span class="sxs-lookup"><span data-stu-id="476e4-109">{string} [givenName] The given name of the principal represented by the access token.</span></span>
  optional: true
  syntax:
    content: 'givenName?: string'
    return:
      type:
      - string
  package: adal-node
- uid: adal-node.TokenResponse.identityProvider
  name: identityProvider
  fullName: identityProvider
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="476e4-110">{string} [identityProvider] Identifica o provedor de identidade que emitiu o token de acesso.</span><span class="sxs-lookup"><span data-stu-id="476e4-110">{string} [identityProvider] Identifies the identity provider that issued the access token.</span></span>
  optional: true
  syntax:
    content: 'identityProvider?: string'
    return:
      type:
      - string
  package: adal-node
- uid: adal-node.TokenResponse.isUserIdDisplayable
  name: isUserIdDisplayable
  fullName: isUserIdDisplayable
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="476e4-111">{booliano}   [isUserIdDisplayable] Indica se a propriedade user_id será significativa se exibido para um usuário.</span><span class="sxs-lookup"><span data-stu-id="476e4-111">{boolean}   [isUserIdDisplayable] Indicates whether the user_id property will be meaningful if displayed to a user.</span></span>
  optional: true
  syntax:
    content: 'isUserIdDisplayable?: boolean'
    return:
      type:
      - boolean
  package: adal-node
- uid: adal-node.TokenResponse.oid
  name: oid
  fullName: oid
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="476e4-112">{string} [oid] A id de objeto do usuário no locatário</span><span class="sxs-lookup"><span data-stu-id="476e4-112">{string} [oid] The object id of the user in the tenant</span></span>
  optional: true
  syntax:
    content: 'oid?: string'
    return:
      type:
      - string
  package: adal-node
- uid: adal-node.TokenResponse.refreshToken
  name: refreshToken
  fullName: refreshToken
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="476e4-113">{string} [refreshToken] Um token de atualização.</span><span class="sxs-lookup"><span data-stu-id="476e4-113">{string} [refreshToken] A refresh token.</span></span>
  optional: true
  syntax:
    content: 'refreshToken?: string'
    return:
      type:
      - string
  package: adal-node
- uid: adal-node.TokenResponse.resource
  name: resource
  fullName: resource
  children: []
  langs:
  - typeScript
  type: property
  summary: "<span data-ttu-id=\"476e4-114\">o recurso de {string} o recurso para o qual o token foi solicitado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"476e4-114\">{string} resource The resource for which the token was requested for.</span></span> <span data-ttu-id=\"476e4-115\">Exemplo: 'https://management.core.windows.net/'.</span><span class=\"sxs-lookup\"><span data-stu-id=\"476e4-115\">Example: 'https://management.core.windows.net/'.</span></span>"
  syntax:
    content: 'resource: string'
    return:
      type:
      - string
  package: adal-node
- uid: adal-node.TokenResponse.tenantId
  name: tenantId
  fullName: tenantId
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="476e4-116">{string} [tenantId] O identificador do locatário sob a qual o token de acesso foi emitido.</span><span class="sxs-lookup"><span data-stu-id="476e4-116">{string} [tenantId] The identifier of the tenant under which the access token was issued.</span></span>
  optional: true
  syntax:
    content: 'tenantId?: string'
    return:
      type:
      - string
  package: adal-node
- uid: adal-node.TokenResponse.tokenType
  name: tokenType
  fullName: tokenType
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="476e4-117">{string} tokenType o tipo de token retornado.</span><span class="sxs-lookup"><span data-stu-id="476e4-117">{string} tokenType The type of token returned.</span></span> <span data-ttu-id="476e4-118">Exemplo 'Portador'.</span><span class="sxs-lookup"><span data-stu-id="476e4-118">Example 'Bearer'.</span></span>
  syntax:
    content: 'tokenType: string'
    return:
      type:
      - string
  package: adal-node
- uid: adal-node.TokenResponse.userId
  name: userId
  fullName: userId
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="476e4-119">{string} [userId] Uma id para o usuário.</span><span class="sxs-lookup"><span data-stu-id="476e4-119">{string} [userId] An id for the user.</span></span>  <span data-ttu-id="476e4-120">Pode ser um valor que pode ser exibido se is_user_id_displayable for true.</span><span class="sxs-lookup"><span data-stu-id="476e4-120">May be a displayable value if is_user_id_displayable is true.</span></span>
  optional: true
  syntax:
    content: 'userId?: string'
    return:
      type:
      - string
  package: adal-node
