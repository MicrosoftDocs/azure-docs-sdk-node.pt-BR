### YamlMime:UniversalReference
ms.openlocfilehash: 4cde1b335a77464fabbc18e725bb879fd916b927
ms.sourcegitcommit: f774f8ce6b26593f73a5893bfa47f9c510fc51a7
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 06/21/2018
ms.locfileid: "40047727"
items:
- uid: ms-rest.WebResource
  id: ms-rest.WebResource
  name: WebResource
  summary: >-
    Cria um novo objeto WebResource.


    Essa classe fornece uma abstração sobre uma chamada REST, sendo biblioteca / independente de implementação e encapsular as propriedades necessárias para iniciar uma solicitação.
  fullName: ms-rest.WebResource
  type: Class
  children:
  - ms-rest.WebResource.#ctor
  - ms-rest.WebResource#pipeInput
  - ms-rest.WebResource#validateRequestProperties
  - ms-rest.WebResource#prepare
  langs:
  - js
- id: ms-rest.WebResource.#ctor
  uid: ms-rest.WebResource.#ctor
  parent: ms-rest.WebResource
  name: WebResource()
  fullName: ms-rest.WebResource.WebResource()
  summary: ''
  type: Constructor
  syntax:
    content: new WebResource()
  langs:
  - js
- uid: ms-rest.WebResource#pipeInput
  id: ms-rest.WebResource#pipeInput
  parent: ms-rest.WebResource
  name: pipeInput(inputStream, outputStream)
  summary: Conecte o fluxo de entrada fornecido em um fluxo de saída de destino se o método WebResource requer um corpo de solicitação e um corpo já não está definido.
  fullName: ms-rest.WebResource.pipeInput(inputStream, outputStream)
  type: Function
  syntax:
    parameters:
    - id: inputStream
      type:
      - ms-rest.Stream
      description: o fluxo para o pipe de
    - id: outputStream
      type:
      - ms-rest.Stream
      description: o fluxo para redirecionar para o
    return:
      description: destStream
    content: function pipeInput(inputStream, outputStream)
  langs:
  - js
- uid: ms-rest.WebResource#validateRequestProperties
  id: ms-rest.WebResource#validateRequestProperties
  parent: ms-rest.WebResource
  name: validateRequestProperties()
  summary: Valida que as propriedades necessárias como cabeçalhos de método, url, ['Content-Type'], ['aceitar-idioma'] de cabeçalhos são definidas. Ele gerará um erro se uma das propriedades mencionadas acima não forem definida.
  fullName: ms-rest.WebResource.validateRequestProperties()
  type: Function
  syntax:
    content: function validateRequestProperties()
  langs:
  - js
- uid: ms-rest.WebResource#prepare
  id: ms-rest.WebResource#prepare
  parent: ms-rest.WebResource
  name: prepare(options)
  summary: Prepara a solicitação.
  fullName: ms-rest.WebResource.prepare(options)
  type: Function
  syntax:
    parameters:
    - id: options
      type:
      - object
      description: As opções de solicitação que devem ser fornecidas para enviar uma solicitação com êxito
    - id: options.method
      type:
      - string
      description: O método de solicitação HTTP. Valores válidos são 'GET', 'PUT', 'Principal', 'DELETE', 'OPTIONS', 'POST', 'Corrigir'.
    - id: options.url
      type:
      - string
      description: A solicitação de url. Ele pode ou não ter parâmetros de consulta nela. Forneça a url ou fornecer 'pathTemplate' no objeto de opções. As opções são mutuamente exclusivas.
      optional: true
    - id: options.queryParameters
      type:
      - object
      description: "Um dicionário de parâmetros de consulta a ser acrescentado à url, em que a chave é o 'consulta--nome do parâmetro' e 'value' é o 'consulta--valor do parâmetro'. O 'consulta--valor do parâmetro' pode ser do tipo 'string' ou ele pode ser do tipo 'object'. O formato de 'object' deve ser usado quando você quiser ignorar a codificação de url. Ao usar o formato de objeto, o objeto deve ter uma valor que fornece o 'consulta--valor do parâmetro' nomeado da propriedade.\nExemplo: \n   - consulta--valor do parâmetro no formato 'object': {'nome de parâmetro de consulta': {valor: 'consulta--valor do parâmetro', skipUrlEncoding: true}}\n   - consulta--valor do parâmetro no formato 'string': {'nome de parâmetro de consulta': 'valor de parâmetro de consulta'}.\nObservação: ' se options.url já tem alguns parâmetros de consulta e, em seguida, o valor fornecido no options.queryParameters será acrescentado à url."
      optional: true
    - id: options.pathTemplate
      type:
      - string
      description: >-
        O modelo de caminho da solicitação de url. Forneça a url ou fornecer 'pathTemplate' no objeto de opções. As opções são mutuamente exclusivas.

        Exemplo: ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}'
      optional: true
    - id: options.baseUrl
      type:
      - string
      description: "A url base da solicitação. Valor padrão é: 'https://management.azure.com'. Isso é aplicável somente com options.pathTemplate. Se você estiver fornecendo options.url é esperado que você forneça a url completa."
      optional: true
    - id: options.pathParameters
      type:
      - object
      description: "Um dicionário de parâmetros de caminho que precisam ser substituídos por valores reais no pathTemplate.\nAqui, a chave é o 'caminho--nome do parâmetro' e o valor é o 'caminho--valor do parâmetro'. O 'caminho--valor do parâmetro' pode ser do tipo 'string' ou ele pode ser do tipo 'object'.\nO formato de 'object' deve ser usado quando você quiser ignorar a codificação de url. Ao usar o formato de objeto, o objeto deve ter uma valor que fornece o 'caminho--valor do parâmetro' nomeado da propriedade.\nExemplo: \n   - caminho--valor do parâmetro no formato 'object': {'nome de parâmetro de caminho': {valor: 'caminho--valor do parâmetro', skipUrlEncoding: true}}\n   - caminho--valor do parâmetro no formato 'string': {'nome de parâmetro de caminho': 'valor de parâmetro path'}."
      optional: true
    - id: options.formData
      type:
      - object
      description: >-
        Um dicionário de pares chave-valor para o objeto de formData.

        Se o esperado 'Content-Type' para ser definido é ' application/x-www-form-urlencoded', em seguida, defina-a no options.headers objeto mais que o cabeçalho 'Content-Type' será definido como 'multipart/form-data'.
      optional: true
    - id: options.headers
      type:
      - object
      description: >-
        Um dicionário de cabeçalhos de solicitação que precisam ser aplicados à solicitação.

        Aqui, a chave é o 'header-name' e o valor é o '-valor do cabeçalho'. O valor do cabeçalho deve ser do tipo cadeia de caracteres.
         - ContentType deve ser fornecido com o nome da chave como 'Content-Type'. Valor padrão ' application/json; charset = utf-8'.
         - 'Transfer-Encoding' é definido como fragmentada por padrão se 'options.bodyIsStream' estiver definida como true.
         - 'Content-Type' está definido como 'application/octet-stream' por padrão se 'options.bodyIsStream' estiver definida como true.
         - 'aceitar-idioma' por padrão é definido como 'en-US'
         - 'x-ms-client-request-id' por padrão é definido para um novo Guid. Para não gerar um guid para a solicitação, definir options.disableClientRequestId como true
      optional: true
    - id: options.disableClientRequestId
      type:
      - boolean
      description: Quando definido como true, instrui o cliente não definir o cabeçalho 'x-ms-client-request-id' para um novo Guid().
      optional: true
    - id: options.body
      type:
      - object
      - string
      - boolean
      - array
      - number
      - ms-rest.null
      - undefined
      description: O corpo da solicitação. Ele pode ser de qualquer tipo. Esse método será o corpo da solicitação de stringify ().
      optional: true
    - id: options.serializationMapper
      type:
      - object
      description: Fornece informações sobre como serializar o corpo da solicitação.
      optional: true
    - id: options.deserializationMapper
      type:
      - object
      description: Fornece informações sobre como desserializar o corpo da resposta.
      optional: true
    - id: options.disableJsonStringifyOnBody
      type:
      - boolean
      description: 'Indica se esse método deve ser stringify (), o corpo da solicitação. Valor padrão: false.'
      optional: true
    - id: options.bodyIsStream
      type:
      - boolean
      description: Indica se o corpo da solicitação é um fluxo (útil para cenários de upload de arquivo).
      optional: true
    return:
      type:
      - object
      description: WebResource retorna o objeto de WebResource (solicitação de HTTP) preparado que precisa ser fornecido para o pipeline de solicitação.
    content: function prepare(options)
  langs:
  - js
