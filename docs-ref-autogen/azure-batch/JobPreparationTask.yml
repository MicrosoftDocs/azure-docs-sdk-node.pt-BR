### YamlMime:UniversalReference
ms.openlocfilehash: 3feb423c429ae16cad12fcaa2b6cc97c0ca2e24a
ms.sourcegitcommit: ce76ec3eda83746ef9a765165173b5c00b5b7df6
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 12/20/2018
ms.locfileid: "53660531"
items:
- uid: azure-batch.JobPreparationTask
  name: JobPreparationTask
  fullName: JobPreparationTask
  children:
  - azure-batch.JobPreparationTask.commandLine
  - azure-batch.JobPreparationTask.constraints
  - azure-batch.JobPreparationTask.containerSettings
  - azure-batch.JobPreparationTask.environmentSettings
  - azure-batch.JobPreparationTask.id
  - azure-batch.JobPreparationTask.rerunOnNodeRebootAfterSuccess
  - azure-batch.JobPreparationTask.resourceFiles
  - azure-batch.JobPreparationTask.userIdentity
  - azure-batch.JobPreparationTask.waitForSuccess
  langs:
  - typeScript
  type: interface
  summary: >-
    Você pode usar a preparação de trabalho para preparar um nó de computação para executar tarefas do trabalho.

    Atividades comumente realizadas na preparação de trabalho incluem: Baixando arquivos de recurso comuns usados por todas as tarefas no trabalho. A tarefa de preparação de trabalho pode baixar esses arquivos de recurso comuns para o local compartilhado no nó de computação. (AZ_BATCH_NODE_ROOT_DIR\shared), ou iniciar um serviço local no nó de computação para que todas as tarefas desse trabalho podem se comunicar com ele. Se a preparação de trabalho tarefa falhar (ou seja, exhausts sua repetição contagem antes de sair com código de saída 0), o lote não executará tarefas desse trabalho no nó de computação. O nó permanece não está qualificado para executar as tarefas desse trabalho até que a imagem for recriada. O nó permanece ativo e pode ser usado para outros trabalhos.

    A tarefa de preparação de trabalho pode executar várias vezes no mesmo nó de computação. Portanto, você deve escrever a tarefa de preparação de trabalho para lidar com a nova execução. Se o nó de computação é reinicializado, a tarefa de preparação de trabalho é executada novamente no nó antes de agendar qualquer outra tarefa do trabalho, se rerunOnNodeRebootAfterSuccess for verdadeira ou se a tarefa de preparação de trabalho não foi concluído anteriormente. Se o nó de computação é refeito, a tarefa de preparação de trabalho é executada novamente antes de agendar qualquer tarefa do trabalho. Em lotes repetirá as tarefas quando uma operação de recuperação é disparada em um nó de computação. Exemplos de operações de recuperação incluem (mas não estão limitados a) quando um nó de computação não íntegro é reinicializado ou um nó de computação desapareceu devido à falha do host. Repete devido à recuperação de operações são independentes e não são contadas em relação a maxTaskRetryCount.

    Mesmo se a maxTaskRetryCount é 0, uma repetição interna devido a uma operação de recuperação pode ocorrer.

    Por isso, todas as tarefas devem ser idempotentes. Isso significa que as tarefas precisam tolerar que está sendo interrompida e reiniciada sem causar nenhum dano ou dados duplicados. A melhor prática para tarefas de longa execução é usar alguma forma de ponto de verificação.
  package: azure-batch
- uid: azure-batch.JobPreparationTask.commandLine
  name: commandLine
  fullName: commandLine
  children: []
  langs:
  - typeScript
  type: property
  summary: A linha de comando não é executado em um shell e, portanto, não pode tirar proveito dos recursos do shell, como expansão de variáveis de ambiente. Se você quiser tirar proveito desses recursos, você deve invocar o shell de linha de comando, por exemplo, usando "cmd /c MyCommand" no Windows ou "/ bin/sh - c MyCommand" no Linux. Se a linha de comando se refere aos caminhos de arquivos, ele deve usar um caminho relativo (relativo ao diretório de trabalho de tarefa) ou usar a variável de ambiente fornecido em lotes (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
  syntax:
    content: 'commandLine: string'
    return:
      type:
      - string
  package: azure-batch
- uid: azure-batch.JobPreparationTask.constraints
  name: constraints
  fullName: constraints
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  optional: true
  syntax:
    content: 'constraints?: TaskConstraints'
    return:
      type:
      - azure-batch.TaskConstraints
  package: azure-batch
- uid: azure-batch.JobPreparationTask.containerSettings
  name: containerSettings
  fullName: containerSettings
  children: []
  langs:
  - typeScript
  type: property
  summary: Quando isso for especificado, todos os diretórios recursivamente abaixo de AZ_BATCH_NODE_ROOT_DIR (a raiz dos diretórios do lote do Azure no nó) são mapeadas para o contêiner, todas as variáveis de ambiente da tarefa são mapeadas para o contêiner e é a linha de comando da tarefa executado no contêiner.
  optional: true
  syntax:
    content: 'containerSettings?: TaskContainerSettings'
    return:
      type:
      - azure-batch.TaskContainerSettings
  package: azure-batch
- uid: azure-batch.JobPreparationTask.environmentSettings
  name: environmentSettings
  fullName: environmentSettings
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  optional: true
  syntax:
    content: 'environmentSettings?: EnvironmentSetting[]'
    return:
      type:
      - azure-batch.EnvironmentSetting[]
  package: azure-batch
- uid: azure-batch.JobPreparationTask.id
  name: id
  fullName: id
  children: []
  langs:
  - typeScript
  type: property
  summary: A ID pode conter qualquer combinação de caracteres alfanuméricos, incluindo hifens e sublinhados e não pode conter mais de 64 caracteres. Se você não especificar essa propriedade, o serviço de lote atribui um valor padrão de 'jobpreparation'. Nenhuma outra tarefa no trabalho pode ter a mesma ID que a tarefa de preparação de trabalho. Se você tentar enviar uma tarefa com a mesma id, o serviço de lote rejeita a solicitação com o código de erro TaskIdSameAsJobPreparationTask; Se você estiver chamando a API REST diretamente, o código de status HTTP é 409 (conflito).
  optional: true
  syntax:
    content: 'id?: string'
    return:
      type:
      - string
  package: azure-batch
- uid: azure-batch.JobPreparationTask.rerunOnNodeRebootAfterSuccess
  name: rerunOnNodeRebootAfterSuccess
  fullName: rerunOnNodeRebootAfterSuccess
  children: []
  langs:
  - typeScript
  type: property
  summary: A tarefa de preparação de trabalho sempre é executada novamente se recriar a imagem de um nó de computação, ou se a tarefa de preparação de trabalho não foi concluída (por exemplo, porque a reinicialização ocorreu enquanto a tarefa estava em execução). Portanto, você sempre deve escrever uma tarefa de preparação de trabalho para serem idempotentes e se comportem corretamente se executado várias vezes. O valor padrão é true.
  optional: true
  syntax:
    content: 'rerunOnNodeRebootAfterSuccess?: boolean'
    return:
      type:
      - boolean
  package: azure-batch
- uid: azure-batch.JobPreparationTask.resourceFiles
  name: resourceFiles
  fullName: resourceFiles
  children: []
  langs:
  - typeScript
  type: property
  summary: >-
    Os arquivos listados nesse elemento estão localizados no diretório de trabalho da tarefa.

    Há um tamanho máximo para a lista de arquivos de recurso.  Quando o tamanho máximo for excedido, a solicitação falhará e o código de erro da resposta será RequestEntityTooLarge. Se isso ocorrer, a coleção de ResourceFiles deve ser reduzida em tamanho. Isso pode ser obtido usando arquivos. zip, pacotes de aplicativos ou contêineres do Docker.
  optional: true
  syntax:
    content: 'resourceFiles?: ResourceFile[]'
    return:
      type:
      - azure-batch.ResourceFile[]
  package: azure-batch
- uid: azure-batch.JobPreparationTask.userIdentity
  name: userIdentity
  fullName: userIdentity
  children: []
  langs:
  - typeScript
  type: property
  summary: Se omitido, a tarefa é executada como um usuário não administrativo exclusivo para a tarefa em nós do Windows ou um usuário não administrativo exclusivo para o pool em nós do Linux.
  optional: true
  syntax:
    content: 'userIdentity?: UserIdentity'
    return:
      type:
      - azure-batch.UserIdentity
  package: azure-batch
- uid: azure-batch.JobPreparationTask.waitForSuccess
  name: waitForSuccess
  fullName: waitForSuccess
  children: []
  langs:
  - typeScript
  type: property
  summary: Se verdadeiro e a tarefa de preparação de trabalho falhar em um nó de computação, o serviço de lote repete a tarefa de preparação de trabalho até sua contagem máxima de novas tentativas (conforme especificado no elemento restrições). Se a tarefa ainda não foi concluída com êxito após todas as novas tentativas, em seguida, o serviço de lote não agende tarefas do trabalho para o nó de computação. O nó de computação permanece ativas e qualificadas para executar tarefas de outros trabalhos. Se for false, o serviço de lote não aguardará a conclusão da tarefa de preparação de trabalho. Nesse caso, outras tarefas do trabalho de iniciar a execução no nó de computação enquanto a tarefa de preparação de trabalho ainda está em execução; e mesmo se a tarefa de preparação de trabalho falha, novas tarefas continuará a ser agendada no nó. O valor padrão é true.
  optional: true
  syntax:
    content: 'waitForSuccess?: boolean'
    return:
      type:
      - boolean
  package: azure-batch
references:
- uid: azure-batch.TaskConstraints
  name: TaskConstraints
  spec.typeScript:
  - name: TaskConstraints
    fullName: TaskConstraints
    uid: azure-batch.TaskConstraints
- uid: azure-batch.TaskContainerSettings
  name: TaskContainerSettings
  spec.typeScript:
  - name: TaskContainerSettings
    fullName: TaskContainerSettings
    uid: azure-batch.TaskContainerSettings
- uid: azure-batch.EnvironmentSetting[]
  name: EnvironmentSetting[]
  spec.typeScript:
  - name: EnvironmentSetting
    fullName: EnvironmentSetting
    uid: azure-batch.EnvironmentSetting
  - name: '[]'
    fullName: '[]'
- uid: azure-batch.ResourceFile[]
  name: ResourceFile[]
  spec.typeScript:
  - name: ResourceFile
    fullName: ResourceFile
    uid: azure-batch.ResourceFile
  - name: '[]'
    fullName: '[]'
- uid: azure-batch.UserIdentity
  name: UserIdentity
  spec.typeScript:
  - name: UserIdentity
    fullName: UserIdentity
    uid: azure-batch.UserIdentity
