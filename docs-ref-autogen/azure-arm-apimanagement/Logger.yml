### YamlMime:UniversalReference
ms.openlocfilehash: 0b2d88dcc29182897547ab129e29bc544b004c09
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 08/13/2018
ms.locfileid: "40048009"
items:
- uid: azure-arm-apimanagement.Logger
  name: Logger
  fullName: Logger
  children:
  - azure-arm-apimanagement.Logger.createOrUpdate
  - azure-arm-apimanagement.Logger.createOrUpdate_1
  - azure-arm-apimanagement.Logger.createOrUpdate_2
  - azure-arm-apimanagement.Logger.createOrUpdateWithHttpOperationResponse
  - azure-arm-apimanagement.Logger.deleteMethod
  - azure-arm-apimanagement.Logger.deleteMethod_2
  - azure-arm-apimanagement.Logger.deleteMethod_1
  - azure-arm-apimanagement.Logger.deleteMethodWithHttpOperationResponse
  - azure-arm-apimanagement.Logger.get
  - azure-arm-apimanagement.Logger.get_2
  - azure-arm-apimanagement.Logger.get_1
  - azure-arm-apimanagement.Logger.getEntityTag
  - azure-arm-apimanagement.Logger.getEntityTag_1
  - azure-arm-apimanagement.Logger.getEntityTag_2
  - azure-arm-apimanagement.Logger.getEntityTagWithHttpOperationResponse
  - azure-arm-apimanagement.Logger.getWithHttpOperationResponse
  - azure-arm-apimanagement.Logger.listByService_1
  - azure-arm-apimanagement.Logger.listByService_2
  - azure-arm-apimanagement.Logger.listByService
  - azure-arm-apimanagement.Logger.listByServiceNext
  - azure-arm-apimanagement.Logger.listByServiceNext_1
  - azure-arm-apimanagement.Logger.listByServiceNext_2
  - azure-arm-apimanagement.Logger.listByServiceNextWithHttpOperationResponse
  - azure-arm-apimanagement.Logger.listByServiceWithHttpOperationResponse
  - azure-arm-apimanagement.Logger.update
  - azure-arm-apimanagement.Logger.update_1
  - azure-arm-apimanagement.Logger.update_2
  - azure-arm-apimanagement.Logger.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.createOrUpdate
  name: createOrUpdate
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a8a1d-101">Cria ou atualiza um agente de log.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-101">Creates or Updates a logger.</span></span>
  syntax:
    content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, loggerid: string, parameters: LoggerContract, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-102">O nome do grupo de recursos.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-102">The name of the resource group.</span></span>
    - id: serviceName
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-103">O nome do serviço Gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-103">The name of the API Management service.</span></span>
    - id: loggerid
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-104">Identificador do agente de log.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-104">Logger identifier.</span></span> <span data-ttu-id="a8a1d-105">Deve ser exclusivo na instância do serviço de gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-105">Must be unique in the API Management service instance.</span></span>
    - id: parameters
      type:
      - azure-arm-apimanagement.LoggerContract
      description: >
        <span data-ttu-id="a8a1d-106">Crie parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-106">Create parameters.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-apimanagement.LoggerContract>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.createOrUpdate_1
  name: createOrUpdate
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a8a1d-107">Cria ou atualiza um agente de log.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-107">Creates or Updates a logger.</span></span>
  syntax:
    content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, loggerid: string, parameters: LoggerContract, callback: ServiceCallback<LoggerContract>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: loggerid
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-apimanagement.LoggerContract
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.LoggerContract>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.LoggerContract>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.createOrUpdate_2
  name: createOrUpdate
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a8a1d-108">Cria ou atualiza um agente de log.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-108">Creates or Updates a logger.</span></span>
  syntax:
    content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, loggerid: string, parameters: LoggerContract, options: function, callback: ServiceCallback<LoggerContract>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: loggerid
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-apimanagement.LoggerContract
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.LoggerContract>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.LoggerContract>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.createOrUpdateWithHttpOperationResponse
  name: createOrUpdateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a8a1d-109">Cria ou atualiza um agente de log.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-109">Creates or Updates a logger.</span></span>
  syntax:
    content: 'function createOrUpdateWithHttpOperationResponse(resourceGroupName: string, serviceName: string, loggerid: string, parameters: LoggerContract, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-110">O nome do grupo de recursos.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-110">The name of the resource group.</span></span>
    - id: serviceName
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-111">O nome do serviço Gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-111">The name of the API Management service.</span></span>
    - id: loggerid
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-112">Identificador do agente de log.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-112">Logger identifier.</span></span> <span data-ttu-id="a8a1d-113">Deve ser exclusivo na instância do serviço de gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-113">Must be unique in the API Management service instance.</span></span>
    - id: parameters
      type:
      - azure-arm-apimanagement.LoggerContract
      description: >
        <span data-ttu-id="a8a1d-114">Crie parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-114">Create parameters.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-apimanagement.LoggerContract>>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.deleteMethod
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a8a1d-115">Exclui o agente de log especificado.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-115">Deletes the specified logger.</span></span>
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, serviceName: string, loggerid: string, ifMatch: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-116">O nome do grupo de recursos.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-116">The name of the resource group.</span></span>
    - id: serviceName
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-117">O nome do serviço Gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-117">The name of the API Management service.</span></span>
    - id: loggerid
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-118">Identificador do agente de log.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-118">Logger identifier.</span></span> <span data-ttu-id="a8a1d-119">Deve ser exclusivo na instância do serviço de gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-119">Must be unique in the API Management service instance.</span></span>
    - id: ifMatch
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-120">ETag da entidade.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-120">ETag of the Entity.</span></span> <span data-ttu-id="a8a1d-121">ETag deve coincidir com o estado atual da entidade da resposta de cabeçalho da solicitação GET ou deve ser \* para atualização incondicional.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-121">ETag should match the current entity state from the header response of the GET request or it should be \* for unconditional update.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.deleteMethod_2
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a8a1d-122">Exclui o agente de log especificado.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-122">Deletes the specified logger.</span></span>
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, serviceName: string, loggerid: string, ifMatch: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: loggerid
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.deleteMethod_1
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a8a1d-123">Exclui o agente de log especificado.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-123">Deletes the specified logger.</span></span>
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, serviceName: string, loggerid: string, ifMatch: string, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: loggerid
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a8a1d-124">Exclui o agente de log especificado.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-124">Deletes the specified logger.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(resourceGroupName: string, serviceName: string, loggerid: string, ifMatch: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-125">O nome do grupo de recursos.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-125">The name of the resource group.</span></span>
    - id: serviceName
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-126">O nome do serviço Gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-126">The name of the API Management service.</span></span>
    - id: loggerid
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-127">Identificador do agente de log.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-127">Logger identifier.</span></span> <span data-ttu-id="a8a1d-128">Deve ser exclusivo na instância do serviço de gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-128">Must be unique in the API Management service instance.</span></span>
    - id: ifMatch
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-129">ETag da entidade.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-129">ETag of the Entity.</span></span> <span data-ttu-id="a8a1d-130">ETag deve coincidir com o estado atual da entidade da resposta de cabeçalho da solicitação GET ou deve ser \* para atualização incondicional.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-130">ETag should match the current entity state from the header response of the GET request or it should be \* for unconditional update.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.get
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a8a1d-131">Obtém os detalhes do agente de log especificado por seu identificador.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-131">Gets the details of the logger specified by its identifier.</span></span>
  syntax:
    content: 'function get(resourceGroupName: string, serviceName: string, loggerid: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-132">O nome do grupo de recursos.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-132">The name of the resource group.</span></span>
    - id: serviceName
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-133">O nome do serviço Gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-133">The name of the API Management service.</span></span>
    - id: loggerid
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-134">Identificador do agente de log.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-134">Logger identifier.</span></span> <span data-ttu-id="a8a1d-135">Deve ser exclusivo na instância do serviço de gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-135">Must be unique in the API Management service instance.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-apimanagement.LoggerContract>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.get_2
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a8a1d-136">Obtém os detalhes do agente de log especificado por seu identificador.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-136">Gets the details of the logger specified by its identifier.</span></span>
  syntax:
    content: 'function get(resourceGroupName: string, serviceName: string, loggerid: string, options: function, callback: ServiceCallback<LoggerContract>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: loggerid
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.LoggerContract>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.LoggerContract>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.get_1
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a8a1d-137">Obtém os detalhes do agente de log especificado por seu identificador.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-137">Gets the details of the logger specified by its identifier.</span></span>
  syntax:
    content: 'function get(resourceGroupName: string, serviceName: string, loggerid: string, callback: ServiceCallback<LoggerContract>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: loggerid
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.LoggerContract>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.LoggerContract>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.getEntityTag
  name: getEntityTag
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a8a1d-138">Obtém a versão de estado (Etag) do agente de log especificado por seu identificador.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-138">Gets the entity state (Etag) version of the logger specified by its identifier.</span></span>
  syntax:
    content: 'function getEntityTag(resourceGroupName: string, serviceName: string, loggerid: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-139">O nome do grupo de recursos.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-139">The name of the resource group.</span></span>
    - id: serviceName
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-140">O nome do serviço Gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-140">The name of the API Management service.</span></span>
    - id: loggerid
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-141">Identificador do agente de log.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-141">Logger identifier.</span></span> <span data-ttu-id="a8a1d-142">Deve ser exclusivo na instância do serviço de gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-142">Must be unique in the API Management service instance.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.getEntityTag_1
  name: getEntityTag
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a8a1d-143">Obtém a versão de estado (Etag) do agente de log especificado por seu identificador.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-143">Gets the entity state (Etag) version of the logger specified by its identifier.</span></span>
  syntax:
    content: 'function getEntityTag(resourceGroupName: string, serviceName: string, loggerid: string, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: loggerid
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.getEntityTag_2
  name: getEntityTag
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a8a1d-144">Obtém a versão de estado (Etag) do agente de log especificado por seu identificador.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-144">Gets the entity state (Etag) version of the logger specified by its identifier.</span></span>
  syntax:
    content: 'function getEntityTag(resourceGroupName: string, serviceName: string, loggerid: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: loggerid
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.getEntityTagWithHttpOperationResponse
  name: getEntityTagWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a8a1d-145">Obtém a versão de estado (Etag) do agente de log especificado por seu identificador.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-145">Gets the entity state (Etag) version of the logger specified by its identifier.</span></span>
  syntax:
    content: 'function getEntityTagWithHttpOperationResponse(resourceGroupName: string, serviceName: string, loggerid: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-146">O nome do grupo de recursos.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-146">The name of the resource group.</span></span>
    - id: serviceName
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-147">O nome do serviço Gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-147">The name of the API Management service.</span></span>
    - id: loggerid
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-148">Identificador do agente de log.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-148">Logger identifier.</span></span> <span data-ttu-id="a8a1d-149">Deve ser exclusivo na instância do serviço de gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-149">Must be unique in the API Management service instance.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.getWithHttpOperationResponse
  name: getWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a8a1d-150">Obtém os detalhes do agente de log especificado por seu identificador.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-150">Gets the details of the logger specified by its identifier.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(resourceGroupName: string, serviceName: string, loggerid: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-151">O nome do grupo de recursos.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-151">The name of the resource group.</span></span>
    - id: serviceName
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-152">O nome do serviço Gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-152">The name of the API Management service.</span></span>
    - id: loggerid
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-153">Identificador do agente de log.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-153">Logger identifier.</span></span> <span data-ttu-id="a8a1d-154">Deve ser exclusivo na instância do serviço de gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-154">Must be unique in the API Management service instance.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-apimanagement.LoggerContract>>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.listByService_1
  name: listByService
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a8a1d-155">Lista uma coleção de agentes na instância do serviço especificado.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-155">Lists a collection of loggers in the specified service instance.</span></span>
  syntax:
    content: 'function listByService(resourceGroupName: string, serviceName: string, callback: ServiceCallback<LoggerCollection>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.LoggerCollection>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.LoggerCollection>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.listByService_2
  name: listByService
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a8a1d-156">Lista uma coleção de agentes na instância do serviço especificado.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-156">Lists a collection of loggers in the specified service instance.</span></span>
  syntax:
    content: 'function listByService(resourceGroupName: string, serviceName: string, options: function, callback: ServiceCallback<LoggerCollection>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.LoggerCollection>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.LoggerCollection>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.listByService
  name: listByService
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a8a1d-157">Lista uma coleção de agentes na instância do serviço especificado.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-157">Lists a collection of loggers in the specified service instance.</span></span>
  syntax:
    content: 'function listByService(resourceGroupName: string, serviceName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-158">O nome do grupo de recursos.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-158">The name of the resource group.</span></span>
    - id: serviceName
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-159">O nome do serviço Gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-159">The name of the API Management service.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-apimanagement.LoggerCollection>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.listByServiceNext
  name: listByServiceNext
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a8a1d-160">Lista uma coleção de agentes na instância do serviço especificado.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-160">Lists a collection of loggers in the specified service instance.</span></span>
  syntax:
    content: 'function listByServiceNext(nextPageLink: string, options?: function)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-161">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-161">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-apimanagement.LoggerCollection>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.listByServiceNext_1
  name: listByServiceNext
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a8a1d-162">Lista uma coleção de agentes na instância do serviço especificado.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-162">Lists a collection of loggers in the specified service instance.</span></span>
  syntax:
    content: 'function listByServiceNext(nextPageLink: string, callback: ServiceCallback<LoggerCollection>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.LoggerCollection>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.LoggerCollection>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.listByServiceNext_2
  name: listByServiceNext
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a8a1d-163">Lista uma coleção de agentes na instância do serviço especificado.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-163">Lists a collection of loggers in the specified service instance.</span></span>
  syntax:
    content: 'function listByServiceNext(nextPageLink: string, options: function, callback: ServiceCallback<LoggerCollection>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.LoggerCollection>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.LoggerCollection>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.listByServiceNextWithHttpOperationResponse
  name: listByServiceNextWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a8a1d-164">Lista uma coleção de agentes na instância do serviço especificado.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-164">Lists a collection of loggers in the specified service instance.</span></span>
  syntax:
    content: 'function listByServiceNextWithHttpOperationResponse(nextPageLink: string, options?: function)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-165">NextLink da chamada bem-sucedida anterior à operação de lista.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-165">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-apimanagement.LoggerCollection>>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.listByServiceWithHttpOperationResponse
  name: listByServiceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a8a1d-166">Lista uma coleção de agentes na instância do serviço especificado.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-166">Lists a collection of loggers in the specified service instance.</span></span>
  syntax:
    content: 'function listByServiceWithHttpOperationResponse(resourceGroupName: string, serviceName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-167">O nome do grupo de recursos.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-167">The name of the resource group.</span></span>
    - id: serviceName
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-168">O nome do serviço Gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-168">The name of the API Management service.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-apimanagement.LoggerCollection>>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.update
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a8a1d-169">Atualiza um agente existente.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-169">Updates an existing logger.</span></span>
  syntax:
    content: 'function update(resourceGroupName: string, serviceName: string, loggerid: string, parameters: LoggerUpdateContract, ifMatch: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-170">O nome do grupo de recursos.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-170">The name of the resource group.</span></span>
    - id: serviceName
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-171">O nome do serviço Gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-171">The name of the API Management service.</span></span>
    - id: loggerid
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-172">Identificador do agente de log.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-172">Logger identifier.</span></span> <span data-ttu-id="a8a1d-173">Deve ser exclusivo na instância do serviço de gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-173">Must be unique in the API Management service instance.</span></span>
    - id: parameters
      type:
      - azure-arm-apimanagement.LoggerUpdateContract
      description: >
        <span data-ttu-id="a8a1d-174">Atualize parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-174">Update parameters.</span></span>
    - id: ifMatch
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-175">ETag da entidade.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-175">ETag of the Entity.</span></span> <span data-ttu-id="a8a1d-176">ETag deve coincidir com o estado atual da entidade da resposta de cabeçalho da solicitação GET ou deve ser \* para atualização incondicional.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-176">ETag should match the current entity state from the header response of the GET request or it should be \* for unconditional update.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.update_1
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a8a1d-177">Atualiza um agente existente.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-177">Updates an existing logger.</span></span>
  syntax:
    content: 'function update(resourceGroupName: string, serviceName: string, loggerid: string, parameters: LoggerUpdateContract, ifMatch: string, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: loggerid
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-apimanagement.LoggerUpdateContract
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.update_2
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a8a1d-178">Atualiza um agente existente.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-178">Updates an existing logger.</span></span>
  syntax:
    content: 'function update(resourceGroupName: string, serviceName: string, loggerid: string, parameters: LoggerUpdateContract, ifMatch: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: loggerid
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-apimanagement.LoggerUpdateContract
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a8a1d-179">Atualiza um agente existente.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-179">Updates an existing logger.</span></span>
  syntax:
    content: 'function updateWithHttpOperationResponse(resourceGroupName: string, serviceName: string, loggerid: string, parameters: LoggerUpdateContract, ifMatch: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-180">O nome do grupo de recursos.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-180">The name of the resource group.</span></span>
    - id: serviceName
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-181">O nome do serviço Gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-181">The name of the API Management service.</span></span>
    - id: loggerid
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-182">Identificador do agente de log.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-182">Logger identifier.</span></span> <span data-ttu-id="a8a1d-183">Deve ser exclusivo na instância do serviço de gerenciamento de API.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-183">Must be unique in the API Management service instance.</span></span>
    - id: parameters
      type:
      - azure-arm-apimanagement.LoggerUpdateContract
      description: >
        <span data-ttu-id="a8a1d-184">Atualize parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-184">Update parameters.</span></span>
    - id: ifMatch
      type:
      - string
      description: >
        <span data-ttu-id="a8a1d-185">ETag da entidade.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-185">ETag of the Entity.</span></span> <span data-ttu-id="a8a1d-186">ETag deve coincidir com o estado atual da entidade da resposta de cabeçalho da solicitação GET ou deve ser \* para atualização incondicional.</span><span class="sxs-lookup"><span data-stu-id="a8a1d-186">ETag should match the current entity state from the header response of the GET request or it should be \* for unconditional update.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-apimanagement
references:
- uid: azure-arm-apimanagement.LoggerContract
  spec.typeScript:
  - name: LoggerContract
    fullName: LoggerContract
    uid: azure-arm-apimanagement.LoggerContract
- uid: Promise<azure-arm-apimanagement.LoggerContract>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: LoggerContract
    fullName: LoggerContract
    uid: azure-arm-apimanagement.LoggerContract
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-apimanagement.LoggerContract>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: LoggerContract
    fullName: LoggerContract
    uid: azure-arm-apimanagement.LoggerContract
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-apimanagement.LoggerContract>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: LoggerContract
    fullName: LoggerContract
    uid: azure-arm-apimanagement.LoggerContract
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-apimanagement.LoggerCollection>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: LoggerCollection
    fullName: LoggerCollection
    uid: azure-arm-apimanagement.LoggerCollection
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-apimanagement.LoggerCollection>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: LoggerCollection
    fullName: LoggerCollection
    uid: azure-arm-apimanagement.LoggerCollection
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-apimanagement.LoggerCollection>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: LoggerCollection
    fullName: LoggerCollection
    uid: azure-arm-apimanagement.LoggerCollection
  - name: '>>'
    fullName: '>>'
- uid: azure-arm-apimanagement.LoggerUpdateContract
  spec.typeScript:
  - name: LoggerUpdateContract
    fullName: LoggerUpdateContract
    uid: azure-arm-apimanagement.LoggerUpdateContract
