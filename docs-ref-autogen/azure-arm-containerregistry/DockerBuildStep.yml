### YamlMime:UniversalReference
items:
  - uid: azure-arm-containerregistry.DockerBuildStep
    name: DockerBuildStep
    fullName: DockerBuildStep
    children:
      - azure-arm-containerregistry.DockerBuildStep.argumentsProperty
      - azure-arm-containerregistry.DockerBuildStep.baseImageDependencies
      - azure-arm-containerregistry.DockerBuildStep.contextAccessToken
      - azure-arm-containerregistry.DockerBuildStep.contextPath
      - azure-arm-containerregistry.DockerBuildStep.dockerFilePath
      - azure-arm-containerregistry.DockerBuildStep.imageNames
      - azure-arm-containerregistry.DockerBuildStep.isPushEnabled
      - azure-arm-containerregistry.DockerBuildStep.noCache
      - azure-arm-containerregistry.DockerBuildStep.target
      - azure-arm-containerregistry.DockerBuildStep.type
    langs:
      - typeScript
    type: interface
    summary: A etapa de build do Docker.
    extends:
      name: azure-arm-containerregistry.TaskStepProperties
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.DockerBuildStep.argumentsProperty
    name: argumentsProperty
    fullName: argumentsProperty
    children: []
    langs:
      - typeScript
    type: property
    summary: A coleção de argumentos de substituição a serem usados ao executar essa etapa de compilação.
    optional: true
    syntax:
      content: 'argumentsProperty?: Argument[]'
      return:
        type:
          - 'azure-arm-containerregistry.Argument[]'
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.DockerBuildStep.baseImageDependencies
    name: baseImageDependencies
    fullName: baseImageDependencies
    children: []
    langs:
      - typeScript
    type: property
    summary: Lista de dependências de imagem base para uma etapa.
    optional: true
    syntax:
      content: 'baseImageDependencies?: BaseImageDependency[]'
      return:
        type:
          - 'azure-arm-containerregistry.BaseImageDependency[]'
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.DockerBuildStep.contextAccessToken
    name: contextAccessToken
    fullName: contextAccessToken
    children: []
    langs:
      - typeScript
    type: property
    summary: O token (git PAT ou token SAS do blob da conta de armazenamento) associado ao contexto de uma etapa.
    optional: true
    syntax:
      content: 'contextAccessToken?: string'
      return:
        type:
          - string
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.DockerBuildStep.contextPath
    name: contextPath
    fullName: contextPath
    children: []
    langs:
      - typeScript
    type: property
    summary: A URL (absoluto ou relativo) do contexto de origem para a etapa da tarefa.
    optional: true
    syntax:
      content: 'contextPath?: string'
      return:
        type:
          - string
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.DockerBuildStep.dockerFilePath
    name: dockerFilePath
    fullName: dockerFilePath
    children: []
    langs:
      - typeScript
    type: property
    summary: O caminho de arquivo do Docker relativa ao contexto de origem.
    syntax:
      content: 'dockerFilePath: string'
      return:
        type:
          - string
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.DockerBuildStep.imageNames
    name: imageNames
    fullName: imageNames
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Os nomes de imagem totalmente qualificado, incluindo o repositório e a marca.'
    optional: true
    syntax:
      content: 'imageNames?: string[]'
      return:
        type:
          - 'string[]'
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.DockerBuildStep.isPushEnabled
    name: isPushEnabled
    fullName: isPushEnabled
    children: []
    langs:
      - typeScript
    type: property
    summary: O valor dessa propriedade indica se a imagem criada deve ser enviada por push ao registro ou não.
    optional: true
    syntax:
      content: 'isPushEnabled?: boolean'
      return:
        type:
          - boolean
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.DockerBuildStep.noCache
    name: noCache
    fullName: noCache
    children: []
    langs:
      - typeScript
    type: property
    summary: O valor dessa propriedade indica se o cache de imagem está habilitado ou não.
    optional: true
    syntax:
      content: 'noCache?: boolean'
      return:
        type:
          - boolean
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.DockerBuildStep.target
    name: target
    fullName: target
    children: []
    langs:
      - typeScript
    type: property
    summary: O nome do destino de build do estágio para o build do docker.
    optional: true
    syntax:
      content: 'target?: string'
      return:
        type:
          - string
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.DockerBuildStep.type
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: Discriminador polimórfico
    syntax:
      content: 'type: string'
      return:
        type:
          - string
    package: azure-arm-containerregistry
references:
  - uid: azure-arm-containerregistry.TaskStepProperties
    name: TaskStepProperties
    spec.typeScript:
      - name: TaskStepProperties
        fullName: TaskStepProperties
        uid: azure-arm-containerregistry.TaskStepProperties
  - uid: 'azure-arm-containerregistry.Argument[]'
    name: 'Argument[]'
    spec.typeScript:
      - name: Argument
        fullName: Argument
        uid: azure-arm-containerregistry.Argument
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-arm-containerregistry.BaseImageDependency[]'
    name: 'BaseImageDependency[]'
    spec.typeScript:
      - name: BaseImageDependency
        fullName: BaseImageDependency
        uid: azure-arm-containerregistry.BaseImageDependency
      - name: '[]'
        fullName: '[]'