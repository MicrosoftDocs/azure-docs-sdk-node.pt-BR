### YamlMime:UniversalReference
ms.openlocfilehash: f7bb0a77329788feb31835819b61ccba9c59535e
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52026117"
items:
- uid: azure-cognitiveservices-computervision.ComputerVisionClient
  name: ComputerVisionClient
  fullName: ComputerVisionClient
  children:
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.constructor
  - azure-cognitiveservices-computervision.ComputerVisionClient.credentials
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImage
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.endpoint
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult
  - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResultWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.listModels
  - azure-cognitiveservices-computervision.ComputerVisionClient.listModels_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.listModels_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.listModelsWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImage
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageWithHttpOperationResponse
  langs:
  - typeScript
  type: class
  summary: ''
  extends:
    name: ServiceClient
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage
  name: analyzeImage(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Esta operação extrai um conjunto avançado de recursos visuais com base no conteúdo de imagem. Dois métodos de entrada têm suporte – (1) carregando uma imagem ou (2) especificando uma URL da imagem.  Dentro de sua solicitação, há um parâmetro opcional para permitir que você escolha quais recursos a serem retornados.  Por padrão, as categorias de imagem são retornadas na resposta.
  syntax:
    content: 'function analyzeImage(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        URL publicamente acessível de uma imagem
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_2
  name: analyzeImage(string, Object, ServiceCallback<ImageAnalysis>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Esta operação extrai um conjunto avançado de recursos visuais com base no conteúdo de imagem. Dois métodos de entrada têm suporte – (1) carregando uma imagem ou (2) especificando uma URL da imagem.  Dentro de sua solicitação, há um parâmetro opcional para permitir que você escolha quais recursos a serem retornados.  Por padrão, as categorias de imagem são retornadas na resposta.
  syntax:
    content: 'function analyzeImage(url: string, options: Object, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_1
  name: analyzeImage(string, ServiceCallback<ImageAnalysis>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Esta operação extrai um conjunto avançado de recursos visuais com base no conteúdo de imagem. Dois métodos de entrada têm suporte – (1) carregando uma imagem ou (2) especificando uma URL da imagem.  Dentro de sua solicitação, há um parâmetro opcional para permitir que você escolha quais recursos a serem retornados.  Por padrão, as categorias de imagem são retornadas na resposta.
  syntax:
    content: 'function analyzeImage(url: string, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain
  name: analyzeImageByDomain(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Esta operação reconhece o conteúdo dentro de uma imagem, aplicando um modelo de domínio específico.  A lista de modelos específicos de domínio que são compatíveis com a API de visão do computador pode ser recuperada usando a solicitação de obtenção de /models.  Atualmente, a API fornece apenas um único modelo de domínio específico: celebridades. Dois métodos de entrada têm suporte – (1) carregando uma imagem ou (2) especificando uma URL da imagem. Uma resposta bem-sucedida será retornada em JSON.

    Se a solicitação falhou, a resposta conterá um código de erro e uma mensagem para ajudar a entender o que deu errado.
  syntax:
    content: 'function analyzeImageByDomain(model: string, url: string, options?: Object)'
    parameters:
    - id: model
      type:
      - string
      description: >
        O conteúdo específico do domínio para reconhecer.
    - id: url
      type:
      - string
      description: >
        URL publicamente acessível de uma imagem
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_2
  name: analyzeImageByDomain(string, string, Object, ServiceCallback<DomainModelResults>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Esta operação reconhece o conteúdo dentro de uma imagem, aplicando um modelo de domínio específico.  A lista de modelos específicos de domínio que são compatíveis com a API de visão do computador pode ser recuperada usando a solicitação de obtenção de /models.  Atualmente, a API fornece apenas um único modelo de domínio específico: celebridades. Dois métodos de entrada têm suporte – (1) carregando uma imagem ou (2) especificando uma URL da imagem. Uma resposta bem-sucedida será retornada em JSON.

    Se a solicitação falhou, a resposta conterá um código de erro e uma mensagem para ajudar a entender o que deu errado.
  syntax:
    content: 'function analyzeImageByDomain(model: string, url: string, options: Object, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_1
  name: analyzeImageByDomain(string, string, ServiceCallback<DomainModelResults>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Esta operação reconhece o conteúdo dentro de uma imagem, aplicando um modelo de domínio específico.  A lista de modelos específicos de domínio que são compatíveis com a API de visão do computador pode ser recuperada usando a solicitação de obtenção de /models.  Atualmente, a API fornece apenas um único modelo de domínio específico: celebridades. Dois métodos de entrada têm suporte – (1) carregando uma imagem ou (2) especificando uma URL da imagem. Uma resposta bem-sucedida será retornada em JSON.

    Se a solicitação falhou, a resposta conterá um código de erro e uma mensagem para ajudar a entender o que deu errado.
  syntax:
    content: 'function analyzeImageByDomain(model: string, url: string, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream
  name: analyzeImageByDomainInStream(string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Esta operação reconhece o conteúdo dentro de uma imagem, aplicando um modelo de domínio específico.  A lista de modelos específicos de domínio que são compatíveis com a API de visão do computador pode ser recuperada usando a solicitação de obtenção de /models.  Atualmente, a API fornece apenas um único modelo de domínio específico: celebridades. Dois métodos de entrada têm suporte – (1) carregando uma imagem ou (2) especificando uma URL da imagem. Uma resposta bem-sucedida será retornada em JSON.

    Se a solicitação falhou, a resposta conterá um código de erro e uma mensagem para ajudar a entender o que deu errado.
  syntax:
    content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: model
      type:
      - string
      description: >
        O conteúdo específico do domínio para reconhecer.
    - id: image
      type:
      - stream.Readable
      description: >
        Um fluxo de imagem.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_2
  name: analyzeImageByDomainInStream(string, stream.Readable, Object, ServiceCallback<DomainModelResults>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Esta operação reconhece o conteúdo dentro de uma imagem, aplicando um modelo de domínio específico.  A lista de modelos específicos de domínio que são compatíveis com a API de visão do computador pode ser recuperada usando a solicitação de obtenção de /models.  Atualmente, a API fornece apenas um único modelo de domínio específico: celebridades. Dois métodos de entrada têm suporte – (1) carregando uma imagem ou (2) especificando uma URL da imagem. Uma resposta bem-sucedida será retornada em JSON.

    Se a solicitação falhou, a resposta conterá um código de erro e uma mensagem para ajudar a entender o que deu errado.
  syntax:
    content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, options: Object, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_1
  name: analyzeImageByDomainInStream(string, stream.Readable, ServiceCallback<DomainModelResults>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Esta operação reconhece o conteúdo dentro de uma imagem, aplicando um modelo de domínio específico.  A lista de modelos específicos de domínio que são compatíveis com a API de visão do computador pode ser recuperada usando a solicitação de obtenção de /models.  Atualmente, a API fornece apenas um único modelo de domínio específico: celebridades. Dois métodos de entrada têm suporte – (1) carregando uma imagem ou (2) especificando uma URL da imagem. Uma resposta bem-sucedida será retornada em JSON.

    Se a solicitação falhou, a resposta conterá um código de erro e uma mensagem para ajudar a entender o que deu errado.
  syntax:
    content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStreamWithHttpOperationResponse
  name: analyzeImageByDomainInStreamWithHttpOperationResponse(string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Esta operação reconhece o conteúdo dentro de uma imagem, aplicando um modelo de domínio específico.  A lista de modelos específicos de domínio que são compatíveis com a API de visão do computador pode ser recuperada usando a solicitação de obtenção de /models.  Atualmente, a API fornece apenas um único modelo de domínio específico: celebridades. Dois métodos de entrada têm suporte – (1) carregando uma imagem ou (2) especificando uma URL da imagem. Uma resposta bem-sucedida será retornada em JSON.

    Se a solicitação falhou, a resposta conterá um código de erro e uma mensagem para ajudar a entender o que deu errado.
  syntax:
    content: 'function analyzeImageByDomainInStreamWithHttpOperationResponse(model: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: model
      type:
      - string
      description: >
        O conteúdo específico do domínio para reconhecer.
    - id: image
      type:
      - stream.Readable
      description: >
        Um fluxo de imagem.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainWithHttpOperationResponse
  name: analyzeImageByDomainWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Esta operação reconhece o conteúdo dentro de uma imagem, aplicando um modelo de domínio específico.  A lista de modelos específicos de domínio que são compatíveis com a API de visão do computador pode ser recuperada usando a solicitação de obtenção de /models.  Atualmente, a API fornece apenas um único modelo de domínio específico: celebridades. Dois métodos de entrada têm suporte – (1) carregando uma imagem ou (2) especificando uma URL da imagem. Uma resposta bem-sucedida será retornada em JSON.

    Se a solicitação falhou, a resposta conterá um código de erro e uma mensagem para ajudar a entender o que deu errado.
  syntax:
    content: 'function analyzeImageByDomainWithHttpOperationResponse(model: string, url: string, options?: Object)'
    parameters:
    - id: model
      type:
      - string
      description: >
        O conteúdo específico do domínio para reconhecer.
    - id: url
      type:
      - string
      description: >
        URL publicamente acessível de uma imagem
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream
  name: analyzeImageInStream(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Esta operação extrai um conjunto avançado de recursos visuais com base no conteúdo de imagem.
  syntax:
    content: 'function analyzeImageInStream(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        Um fluxo de imagem.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_2
  name: analyzeImageInStream(stream.Readable, Object, ServiceCallback<ImageAnalysis>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Esta operação extrai um conjunto avançado de recursos visuais com base no conteúdo de imagem.
  syntax:
    content: 'function analyzeImageInStream(image: stream.Readable, options: Object, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_1
  name: analyzeImageInStream(stream.Readable, ServiceCallback<ImageAnalysis>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Esta operação extrai um conjunto avançado de recursos visuais com base no conteúdo de imagem.
  syntax:
    content: 'function analyzeImageInStream(image: stream.Readable, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStreamWithHttpOperationResponse
  name: analyzeImageInStreamWithHttpOperationResponse(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Esta operação extrai um conjunto avançado de recursos visuais com base no conteúdo de imagem.
  syntax:
    content: 'function analyzeImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        Um fluxo de imagem.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageWithHttpOperationResponse
  name: analyzeImageWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Esta operação extrai um conjunto avançado de recursos visuais com base no conteúdo de imagem. Dois métodos de entrada têm suporte – (1) carregando uma imagem ou (2) especificando uma URL da imagem.  Dentro de sua solicitação, há um parâmetro opcional para permitir que você escolha quais recursos a serem retornados.  Por padrão, as categorias de imagem são retornadas na resposta.
  syntax:
    content: 'function analyzeImageWithHttpOperationResponse(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        URL publicamente acessível de uma imagem
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.constructor
  name: ComputerVisionClient(ServiceClientCredentials, string, ServiceClientOptions)
  children: []
  type: constructor
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'new ComputerVisionClient(credentials: ServiceClientCredentials, endpoint: string, options?: ServiceClientOptions)'
    parameters:
    - id: credentials
      type:
      - ServiceClientCredentials
      description: >
        Credenciais de assinatura que identificam exclusivamente a assinatura de cliente.
    - id: endpoint
      type:
      - string
      description: >
        Pontos de extremidade com suporte dos serviços Cognitivos
    - id: options
      type:
      - ServiceClientOptions
      description: ''
      optional: true
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.credentials
  name: credentials
  fullName: credentials
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'credentials: ServiceClientCredentials'
    return:
      type:
      - ServiceClientCredentials
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImage
  name: describeImage(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Essa operação gera uma descrição de uma imagem em uma linguagem legível humana com frases completas.  A descrição é com base em uma coleção de marcas de conteúdo, que também são retornados pela operação. Mais de uma descrição pode ser gerada para cada imagem.  As descrições são ordenadas pela pontuação de confiança. Todas as descrições são em inglês. Dois métodos de entrada têm suporte – (1) carregando uma imagem ou (2) especificando uma URL da imagem. Uma resposta bem-sucedida será retornada em JSON.  Se a solicitação falhou, a resposta conterá um código de erro e uma mensagem para ajudar a entender o que deu errado.
  syntax:
    content: 'function describeImage(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        URL publicamente acessível de uma imagem
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_2
  name: describeImage(string, Object, ServiceCallback<ImageDescription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Essa operação gera uma descrição de uma imagem em uma linguagem legível humana com frases completas.  A descrição é com base em uma coleção de marcas de conteúdo, que também são retornados pela operação. Mais de uma descrição pode ser gerada para cada imagem.  As descrições são ordenadas pela pontuação de confiança. Todas as descrições são em inglês. Dois métodos de entrada têm suporte – (1) carregando uma imagem ou (2) especificando uma URL da imagem. Uma resposta bem-sucedida será retornada em JSON.  Se a solicitação falhou, a resposta conterá um código de erro e uma mensagem para ajudar a entender o que deu errado.
  syntax:
    content: 'function describeImage(url: string, options: Object, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_1
  name: describeImage(string, ServiceCallback<ImageDescription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Essa operação gera uma descrição de uma imagem em uma linguagem legível humana com frases completas.  A descrição é com base em uma coleção de marcas de conteúdo, que também são retornados pela operação. Mais de uma descrição pode ser gerada para cada imagem.  As descrições são ordenadas pela pontuação de confiança. Todas as descrições são em inglês. Dois métodos de entrada têm suporte – (1) carregando uma imagem ou (2) especificando uma URL da imagem. Uma resposta bem-sucedida será retornada em JSON.  Se a solicitação falhou, a resposta conterá um código de erro e uma mensagem para ajudar a entender o que deu errado.
  syntax:
    content: 'function describeImage(url: string, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream
  name: describeImageInStream(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Essa operação gera uma descrição de uma imagem em uma linguagem legível humana com frases completas.  A descrição é com base em uma coleção de marcas de conteúdo, que também são retornados pela operação. Mais de uma descrição pode ser gerada para cada imagem.  As descrições são ordenadas pela pontuação de confiança. Todas as descrições são em inglês. Dois métodos de entrada têm suporte – (1) carregando uma imagem ou (2) especificando uma URL da imagem. Uma resposta bem-sucedida será retornada em JSON.  Se a solicitação falhou, a resposta conterá um código de erro e uma mensagem para ajudar a entender o que deu errado.
  syntax:
    content: 'function describeImageInStream(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        Um fluxo de imagem.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_2
  name: describeImageInStream(stream.Readable, Object, ServiceCallback<ImageDescription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Essa operação gera uma descrição de uma imagem em uma linguagem legível humana com frases completas.  A descrição é com base em uma coleção de marcas de conteúdo, que também são retornados pela operação. Mais de uma descrição pode ser gerada para cada imagem.  As descrições são ordenadas pela pontuação de confiança. Todas as descrições são em inglês. Dois métodos de entrada têm suporte – (1) carregando uma imagem ou (2) especificando uma URL da imagem. Uma resposta bem-sucedida será retornada em JSON.  Se a solicitação falhou, a resposta conterá um código de erro e uma mensagem para ajudar a entender o que deu errado.
  syntax:
    content: 'function describeImageInStream(image: stream.Readable, options: Object, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_1
  name: describeImageInStream(stream.Readable, ServiceCallback<ImageDescription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Essa operação gera uma descrição de uma imagem em uma linguagem legível humana com frases completas.  A descrição é com base em uma coleção de marcas de conteúdo, que também são retornados pela operação. Mais de uma descrição pode ser gerada para cada imagem.  As descrições são ordenadas pela pontuação de confiança. Todas as descrições são em inglês. Dois métodos de entrada têm suporte – (1) carregando uma imagem ou (2) especificando uma URL da imagem. Uma resposta bem-sucedida será retornada em JSON.  Se a solicitação falhou, a resposta conterá um código de erro e uma mensagem para ajudar a entender o que deu errado.
  syntax:
    content: 'function describeImageInStream(image: stream.Readable, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStreamWithHttpOperationResponse
  name: describeImageInStreamWithHttpOperationResponse(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Essa operação gera uma descrição de uma imagem em uma linguagem legível humana com frases completas.  A descrição é com base em uma coleção de marcas de conteúdo, que também são retornados pela operação. Mais de uma descrição pode ser gerada para cada imagem.  As descrições são ordenadas pela pontuação de confiança. Todas as descrições são em inglês. Dois métodos de entrada têm suporte – (1) carregando uma imagem ou (2) especificando uma URL da imagem. Uma resposta bem-sucedida será retornada em JSON.  Se a solicitação falhou, a resposta conterá um código de erro e uma mensagem para ajudar a entender o que deu errado.
  syntax:
    content: 'function describeImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        Um fluxo de imagem.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageWithHttpOperationResponse
  name: describeImageWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Essa operação gera uma descrição de uma imagem em uma linguagem legível humana com frases completas.  A descrição é com base em uma coleção de marcas de conteúdo, que também são retornados pela operação. Mais de uma descrição pode ser gerada para cada imagem.  As descrições são ordenadas pela pontuação de confiança. Todas as descrições são em inglês. Dois métodos de entrada têm suporte – (1) carregando uma imagem ou (2) especificando uma URL da imagem. Uma resposta bem-sucedida será retornada em JSON.  Se a solicitação falhou, a resposta conterá um código de erro e uma mensagem para ajudar a entender o que deu errado.
  syntax:
    content: 'function describeImageWithHttpOperationResponse(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        URL publicamente acessível de uma imagem
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.endpoint
  name: endpoint
  fullName: endpoint
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'endpoint: string'
    return:
      type:
      - string
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail
  name: generateThumbnail(number, number, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Essa operação gera uma imagem em miniatura com a altura e largura especificadas pelo usuário. Por padrão, o serviço analisa a imagem, identifica a região de interesse (ROI) e gera as coordenadas de corte inteligentes com base no ROI.

    Corte inteligente ajuda quando você especificar uma taxa de proporção diferente da imagem de entrada. Uma resposta bem-sucedida contém o binário da imagem em miniatura. Se a solicitação falhou, a resposta contém um código de erro e uma mensagem para ajudar a determinar o que deu errado.
  syntax:
    content: 'function generateThumbnail(width: number, height: number, url: string, options?: Object)'
    parameters:
    - id: width
      type:
      - number
      description: >
        Largura da miniatura. Ele deve estar entre 1 e 1024.

        Mínimo recomendado de 50.
    - id: height
      type:
      - number
      description: >
        Altura da miniatura. Ele deve estar entre 1 e

        1024. Mínimo recomendado de 50.
    - id: url
      type:
      - string
      description: >
        URL publicamente acessível de uma imagem
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_2
  name: generateThumbnail(number, number, string, Object, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Essa operação gera uma imagem em miniatura com a altura e largura especificadas pelo usuário. Por padrão, o serviço analisa a imagem, identifica a região de interesse (ROI) e gera as coordenadas de corte inteligentes com base no ROI.

    Corte inteligente ajuda quando você especificar uma taxa de proporção diferente da imagem de entrada. Uma resposta bem-sucedida contém o binário da imagem em miniatura. Se a solicitação falhou, a resposta contém um código de erro e uma mensagem para ajudar a determinar o que deu errado.
  syntax:
    content: 'function generateThumbnail(width: number, height: number, url: string, options: Object, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_1
  name: generateThumbnail(number, number, string, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Essa operação gera uma imagem em miniatura com a altura e largura especificadas pelo usuário. Por padrão, o serviço analisa a imagem, identifica a região de interesse (ROI) e gera as coordenadas de corte inteligentes com base no ROI.

    Corte inteligente ajuda quando você especificar uma taxa de proporção diferente da imagem de entrada. Uma resposta bem-sucedida contém o binário da imagem em miniatura. Se a solicitação falhou, a resposta contém um código de erro e uma mensagem para ajudar a determinar o que deu errado.
  syntax:
    content: 'function generateThumbnail(width: number, height: number, url: string, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream
  name: generateThumbnailInStream(number, number, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Essa operação gera uma imagem em miniatura com a altura e largura especificadas pelo usuário. Por padrão, o serviço analisa a imagem, identifica a região de interesse (ROI) e gera as coordenadas de corte inteligentes com base no ROI.

    Corte inteligente ajuda quando você especificar uma taxa de proporção diferente da imagem de entrada. Uma resposta bem-sucedida contém o binário da imagem em miniatura. Se a solicitação falhou, a resposta contém um código de erro e uma mensagem para ajudar a determinar o que deu errado.
  syntax:
    content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, options?: Object)'
    parameters:
    - id: width
      type:
      - number
      description: >
        Largura da miniatura. Ele deve estar entre 1 e 1024.

        Mínimo recomendado de 50.
    - id: height
      type:
      - number
      description: >
        Altura da miniatura. Ele deve estar entre 1 e

        1024. Mínimo recomendado de 50.
    - id: image
      type:
      - stream.Readable
      description: >
        Um fluxo de imagem.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_2
  name: generateThumbnailInStream(number, number, stream.Readable, Object, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Essa operação gera uma imagem em miniatura com a altura e largura especificadas pelo usuário. Por padrão, o serviço analisa a imagem, identifica a região de interesse (ROI) e gera as coordenadas de corte inteligentes com base no ROI.

    Corte inteligente ajuda quando você especificar uma taxa de proporção diferente da imagem de entrada. Uma resposta bem-sucedida contém o binário da imagem em miniatura. Se a solicitação falhou, a resposta contém um código de erro e uma mensagem para ajudar a determinar o que deu errado.
  syntax:
    content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, options: Object, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_1
  name: generateThumbnailInStream(number, number, stream.Readable, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Essa operação gera uma imagem em miniatura com a altura e largura especificadas pelo usuário. Por padrão, o serviço analisa a imagem, identifica a região de interesse (ROI) e gera as coordenadas de corte inteligentes com base no ROI.

    Corte inteligente ajuda quando você especificar uma taxa de proporção diferente da imagem de entrada. Uma resposta bem-sucedida contém o binário da imagem em miniatura. Se a solicitação falhou, a resposta contém um código de erro e uma mensagem para ajudar a determinar o que deu errado.
  syntax:
    content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStreamWithHttpOperationResponse
  name: generateThumbnailInStreamWithHttpOperationResponse(number, number, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Essa operação gera uma imagem em miniatura com a altura e largura especificadas pelo usuário. Por padrão, o serviço analisa a imagem, identifica a região de interesse (ROI) e gera as coordenadas de corte inteligentes com base no ROI.

    Corte inteligente ajuda quando você especificar uma taxa de proporção diferente da imagem de entrada. Uma resposta bem-sucedida contém o binário da imagem em miniatura. Se a solicitação falhou, a resposta contém um código de erro e uma mensagem para ajudar a determinar o que deu errado.
  syntax:
    content: 'function generateThumbnailInStreamWithHttpOperationResponse(width: number, height: number, image: stream.Readable, options?: Object)'
    parameters:
    - id: width
      type:
      - number
      description: >
        Largura da miniatura. Ele deve estar entre 1 e 1024.

        Mínimo recomendado de 50.
    - id: height
      type:
      - number
      description: >
        Altura da miniatura. Ele deve estar entre 1 e

        1024. Mínimo recomendado de 50.
    - id: image
      type:
      - stream.Readable
      description: >
        Um fluxo de imagem.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailWithHttpOperationResponse
  name: generateThumbnailWithHttpOperationResponse(number, number, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Essa operação gera uma imagem em miniatura com a altura e largura especificadas pelo usuário. Por padrão, o serviço analisa a imagem, identifica a região de interesse (ROI) e gera as coordenadas de corte inteligentes com base no ROI.

    Corte inteligente ajuda quando você especificar uma taxa de proporção diferente da imagem de entrada. Uma resposta bem-sucedida contém o binário da imagem em miniatura. Se a solicitação falhou, a resposta contém um código de erro e uma mensagem para ajudar a determinar o que deu errado.
  syntax:
    content: 'function generateThumbnailWithHttpOperationResponse(width: number, height: number, url: string, options?: Object)'
    parameters:
    - id: width
      type:
      - number
      description: >
        Largura da miniatura. Ele deve estar entre 1 e 1024.

        Mínimo recomendado de 50.
    - id: height
      type:
      - number
      description: >
        Altura da miniatura. Ele deve estar entre 1 e

        1024. Mínimo recomendado de 50.
    - id: url
      type:
      - string
      description: >
        URL publicamente acessível de uma imagem
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult
  name: getTextOperationResult(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Essa interface é usada para obter o resultado da operação de texto. A URL para essa interface deve ser recuperada do campo 'Localização de operação' retornado de interface de reconhecer texto.
  syntax:
    content: 'function getTextOperationResult(operationId: string, options?: Object)'
    parameters:
    - id: operationId
      type:
      - string
      description: >
        ID da operação de texto retornada na resposta de 'Reconhecer texto'
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TextOperationResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_2
  name: getTextOperationResult(string, Object, ServiceCallback<TextOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Essa interface é usada para obter o resultado da operação de texto. A URL para essa interface deve ser recuperada do campo 'Localização de operação' retornado de interface de reconhecer texto.
  syntax:
    content: 'function getTextOperationResult(operationId: string, options: Object, callback: ServiceCallback<TextOperationResult>)'
    parameters:
    - id: operationId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TextOperationResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_1
  name: getTextOperationResult(string, ServiceCallback<TextOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Essa interface é usada para obter o resultado da operação de texto. A URL para essa interface deve ser recuperada do campo 'Localização de operação' retornado de interface de reconhecer texto.
  syntax:
    content: 'function getTextOperationResult(operationId: string, callback: ServiceCallback<TextOperationResult>)'
    parameters:
    - id: operationId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TextOperationResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResultWithHttpOperationResponse
  name: getTextOperationResultWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Essa interface é usada para obter o resultado da operação de texto. A URL para essa interface deve ser recuperada do campo 'Localização de operação' retornado de interface de reconhecer texto.
  syntax:
    content: 'function getTextOperationResultWithHttpOperationResponse(operationId: string, options?: Object)'
    parameters:
    - id: operationId
      type:
      - string
      description: >
        ID da operação de texto retornada na resposta de 'Reconhecer texto'
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TextOperationResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModels
  name: listModels(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Essa operação retorna a lista de modelos específicos de domínio que são compatíveis com a API de visão do computador.  Atualmente, a API só dá suporte a um modelo de domínio específico: um reconhecedor de celebridades. Uma resposta bem-sucedida será retornada em JSON.  Se a solicitação falhou, a resposta conterá um código de erro e uma mensagem para ajudar a entender o que deu errado.'
  syntax:
    content: 'function listModels(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ListModelsResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModels_2
  name: listModels(Object, ServiceCallback<ListModelsResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Essa operação retorna a lista de modelos específicos de domínio que são compatíveis com a API de visão do computador.  Atualmente, a API só dá suporte a um modelo de domínio específico: um reconhecedor de celebridades. Uma resposta bem-sucedida será retornada em JSON.  Se a solicitação falhou, a resposta conterá um código de erro e uma mensagem para ajudar a entender o que deu errado.'
  syntax:
    content: 'function listModels(options: Object, callback: ServiceCallback<ListModelsResult>)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ListModelsResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModels_1
  name: listModels(ServiceCallback<ListModelsResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Essa operação retorna a lista de modelos específicos de domínio que são compatíveis com a API de visão do computador.  Atualmente, a API só dá suporte a um modelo de domínio específico: um reconhecedor de celebridades. Uma resposta bem-sucedida será retornada em JSON.  Se a solicitação falhou, a resposta conterá um código de erro e uma mensagem para ajudar a entender o que deu errado.'
  syntax:
    content: 'function listModels(callback: ServiceCallback<ListModelsResult>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ListModelsResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModelsWithHttpOperationResponse
  name: listModelsWithHttpOperationResponse(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Essa operação retorna a lista de modelos específicos de domínio que são compatíveis com a API de visão do computador.  Atualmente, a API só dá suporte a um modelo de domínio específico: um reconhecedor de celebridades. Uma resposta bem-sucedida será retornada em JSON.  Se a solicitação falhou, a resposta conterá um código de erro e uma mensagem para ajudar a entender o que deu errado.'
  syntax:
    content: 'function listModelsWithHttpOperationResponse(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ListModelsResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText
  name: recognizePrintedText(boolean, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Reconhecimento óptico de caracteres (OCR) detecta texto impresso em uma imagem e extrai os caracteres reconhecidos para um fluxo de caracteres utilizável de máquina.

    Após o êxito, os resultados de OCR serão retornados. Em caso de falha, o código de erro juntamente com uma mensagem de erro será retornado. O código de erro pode ser um dos InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage ou InternalServerError.
  syntax:
    content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options?: Object)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        Detecte se a orientação do texto na imagem. Com detectOrientation = true o OCR serviço tenta detectar a orientação da imagem e corrigi-lo antes de continuar o processamento (por exemplo, se ele for de cabeça para baixo).
    - id: url
      type:
      - string
      description: >
        URL publicamente acessível de uma imagem
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_2
  name: recognizePrintedText(boolean, string, Object, ServiceCallback<OcrResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Reconhecimento óptico de caracteres (OCR) detecta texto impresso em uma imagem e extrai os caracteres reconhecidos para um fluxo de caracteres utilizável de máquina.

    Após o êxito, os resultados de OCR serão retornados. Em caso de falha, o código de erro juntamente com uma mensagem de erro será retornado. O código de erro pode ser um dos InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage ou InternalServerError.
  syntax:
    content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options: Object, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_1
  name: recognizePrintedText(boolean, string, ServiceCallback<OcrResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Reconhecimento óptico de caracteres (OCR) detecta texto impresso em uma imagem e extrai os caracteres reconhecidos para um fluxo de caracteres utilizável de máquina.

    Após o êxito, os resultados de OCR serão retornados. Em caso de falha, o código de erro juntamente com uma mensagem de erro será retornado. O código de erro pode ser um dos InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage ou InternalServerError.
  syntax:
    content: 'function recognizePrintedText(detectOrientation: boolean, url: string, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream
  name: recognizePrintedTextInStream(boolean, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Reconhecimento óptico de caracteres (OCR) detecta texto impresso em uma imagem e extrai os caracteres reconhecidos para um fluxo de caracteres utilizável de máquina.

    Após o êxito, os resultados de OCR serão retornados. Em caso de falha, o código de erro juntamente com uma mensagem de erro será retornado. O código de erro pode ser um dos InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage ou InternalServerError.
  syntax:
    content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, options?: Object)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        Detecte se a orientação do texto na imagem. Com detectOrientation = true o OCR serviço tenta detectar a orientação da imagem e corrigi-lo antes de continuar o processamento (por exemplo, se ele for de cabeça para baixo).
    - id: image
      type:
      - stream.Readable
      description: >
        Um fluxo de imagem.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_2
  name: recognizePrintedTextInStream(boolean, stream.Readable, Object, ServiceCallback<OcrResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Reconhecimento óptico de caracteres (OCR) detecta texto impresso em uma imagem e extrai os caracteres reconhecidos para um fluxo de caracteres utilizável de máquina.

    Após o êxito, os resultados de OCR serão retornados. Em caso de falha, o código de erro juntamente com uma mensagem de erro será retornado. O código de erro pode ser um dos InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage ou InternalServerError.
  syntax:
    content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, options: Object, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_1
  name: recognizePrintedTextInStream(boolean, stream.Readable, ServiceCallback<OcrResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Reconhecimento óptico de caracteres (OCR) detecta texto impresso em uma imagem e extrai os caracteres reconhecidos para um fluxo de caracteres utilizável de máquina.

    Após o êxito, os resultados de OCR serão retornados. Em caso de falha, o código de erro juntamente com uma mensagem de erro será retornado. O código de erro pode ser um dos InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage ou InternalServerError.
  syntax:
    content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStreamWithHttpOperationResponse
  name: recognizePrintedTextInStreamWithHttpOperationResponse(boolean, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Reconhecimento óptico de caracteres (OCR) detecta texto impresso em uma imagem e extrai os caracteres reconhecidos para um fluxo de caracteres utilizável de máquina.

    Após o êxito, os resultados de OCR serão retornados. Em caso de falha, o código de erro juntamente com uma mensagem de erro será retornado. O código de erro pode ser um dos InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage ou InternalServerError.
  syntax:
    content: 'function recognizePrintedTextInStreamWithHttpOperationResponse(detectOrientation: boolean, image: stream.Readable, options?: Object)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        Detecte se a orientação do texto na imagem. Com detectOrientation = true o OCR serviço tenta detectar a orientação da imagem e corrigi-lo antes de continuar o processamento (por exemplo, se ele for de cabeça para baixo).
    - id: image
      type:
      - stream.Readable
      description: >
        Um fluxo de imagem.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextWithHttpOperationResponse
  name: recognizePrintedTextWithHttpOperationResponse(boolean, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Reconhecimento óptico de caracteres (OCR) detecta texto impresso em uma imagem e extrai os caracteres reconhecidos para um fluxo de caracteres utilizável de máquina.

    Após o êxito, os resultados de OCR serão retornados. Em caso de falha, o código de erro juntamente com uma mensagem de erro será retornado. O código de erro pode ser um dos InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage ou InternalServerError.
  syntax:
    content: 'function recognizePrintedTextWithHttpOperationResponse(detectOrientation: boolean, url: string, options?: Object)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        Detecte se a orientação do texto na imagem. Com detectOrientation = true o OCR serviço tenta detectar a orientação da imagem e corrigi-lo antes de continuar o processamento (por exemplo, se ele for de cabeça para baixo).
    - id: url
      type:
      - string
      description: >
        URL publicamente acessível de uma imagem
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText
  name: recognizeText(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Reconhece a operação de texto. Quando você usa a interface de reconhecer texto, a resposta contém um campo chamado 'Localização de operação'. O campo 'Localização de operação' contém a URL que você deve usar para a operação obter resultado da operação texto reconhecer.
  syntax:
    content: 'function recognizeText(url: string, mode: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        URL publicamente acessível de uma imagem
    - id: mode
      type:
      - string
      description: >
        Tipo de texto para reconhecer. Os valores possíveis incluem: 'Manuscritos', 'impresso'
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_2
  name: recognizeText(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Reconhece a operação de texto. Quando você usa a interface de reconhecer texto, a resposta contém um campo chamado 'Localização de operação'. O campo 'Localização de operação' contém a URL que você deve usar para a operação obter resultado da operação texto reconhecer.
  syntax:
    content: 'function recognizeText(url: string, mode: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: mode
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_1
  name: recognizeText(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Reconhece a operação de texto. Quando você usa a interface de reconhecer texto, a resposta contém um campo chamado 'Localização de operação'. O campo 'Localização de operação' contém a URL que você deve usar para a operação obter resultado da operação texto reconhecer.
  syntax:
    content: 'function recognizeText(url: string, mode: string, callback: ServiceCallback<void>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: mode
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream
  name: recognizeTextInStream(stream.Readable, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Reconhece a operação de texto. Quando você usa a interface de reconhecer texto, a resposta contém um campo chamado 'Localização de operação'. O campo 'Localização de operação' contém a URL que você deve usar para a operação obter resultado da operação texto reconhecer.
  syntax:
    content: 'function recognizeTextInStream(image: stream.Readable, mode: string, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        Um fluxo de imagem.
    - id: mode
      type:
      - string
      description: >
        Tipo de texto para reconhecer. Os valores possíveis incluem: 'Manuscritos', 'impresso'
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_2
  name: recognizeTextInStream(stream.Readable, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Reconhece a operação de texto. Quando você usa a interface de reconhecer texto, a resposta contém um campo chamado 'Localização de operação'. O campo 'Localização de operação' contém a URL que você deve usar para a operação obter resultado da operação texto reconhecer.
  syntax:
    content: 'function recognizeTextInStream(image: stream.Readable, mode: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: mode
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_1
  name: recognizeTextInStream(stream.Readable, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Reconhece a operação de texto. Quando você usa a interface de reconhecer texto, a resposta contém um campo chamado 'Localização de operação'. O campo 'Localização de operação' contém a URL que você deve usar para a operação obter resultado da operação texto reconhecer.
  syntax:
    content: 'function recognizeTextInStream(image: stream.Readable, mode: string, callback: ServiceCallback<void>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: mode
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStreamWithHttpOperationResponse
  name: recognizeTextInStreamWithHttpOperationResponse(stream.Readable, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Reconhece a operação de texto. Quando você usa a interface de reconhecer texto, a resposta contém um campo chamado 'Localização de operação'. O campo 'Localização de operação' contém a URL que você deve usar para a operação obter resultado da operação texto reconhecer.
  syntax:
    content: 'function recognizeTextInStreamWithHttpOperationResponse(image: stream.Readable, mode: string, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        Um fluxo de imagem.
    - id: mode
      type:
      - string
      description: >
        Tipo de texto para reconhecer. Os valores possíveis incluem: 'Manuscritos', 'impresso'
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextWithHttpOperationResponse
  name: recognizeTextWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Reconhece a operação de texto. Quando você usa a interface de reconhecer texto, a resposta contém um campo chamado 'Localização de operação'. O campo 'Localização de operação' contém a URL que você deve usar para a operação obter resultado da operação texto reconhecer.
  syntax:
    content: 'function recognizeTextWithHttpOperationResponse(url: string, mode: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        URL publicamente acessível de uma imagem
    - id: mode
      type:
      - string
      description: >
        Tipo de texto para reconhecer. Os valores possíveis incluem: 'Manuscritos', 'impresso'
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImage
  name: tagImage(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Essa operação gera uma lista de palavras ou marcas, que são relevantes para o conteúdo da imagem fornecido. A API da pesquisa Visual computacional pode retornar marcas com base em objetos, vivendo seres, cenários ou ações encontradas nas imagens. Ao contrário de categorias, marcas não são organizadas de acordo com a um sistema de classificação hierárquica, mas correspondem ao conteúdo de imagem. As marcas podem conter dicas para evitar ambiguidade ou fornecer contexto, por exemplo o cello' tag' pode ser acompanhado pela dica 'instrumento musical'. Todas as marcas estão em inglês.
  syntax:
    content: 'function tagImage(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        URL publicamente acessível de uma imagem
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_2
  name: tagImage(string, Object, ServiceCallback<TagResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Essa operação gera uma lista de palavras ou marcas, que são relevantes para o conteúdo da imagem fornecido. A API da pesquisa Visual computacional pode retornar marcas com base em objetos, vivendo seres, cenários ou ações encontradas nas imagens. Ao contrário de categorias, marcas não são organizadas de acordo com a um sistema de classificação hierárquica, mas correspondem ao conteúdo de imagem. As marcas podem conter dicas para evitar ambiguidade ou fornecer contexto, por exemplo o cello' tag' pode ser acompanhado pela dica 'instrumento musical'. Todas as marcas estão em inglês.
  syntax:
    content: 'function tagImage(url: string, options: Object, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_1
  name: tagImage(string, ServiceCallback<TagResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Essa operação gera uma lista de palavras ou marcas, que são relevantes para o conteúdo da imagem fornecido. A API da pesquisa Visual computacional pode retornar marcas com base em objetos, vivendo seres, cenários ou ações encontradas nas imagens. Ao contrário de categorias, marcas não são organizadas de acordo com a um sistema de classificação hierárquica, mas correspondem ao conteúdo de imagem. As marcas podem conter dicas para evitar ambiguidade ou fornecer contexto, por exemplo o cello' tag' pode ser acompanhado pela dica 'instrumento musical'. Todas as marcas estão em inglês.
  syntax:
    content: 'function tagImage(url: string, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream
  name: tagImageInStream(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Essa operação gera uma lista de palavras ou marcas, que são relevantes para o conteúdo da imagem fornecido. A API da pesquisa Visual computacional pode retornar marcas com base em objetos, vivendo seres, cenários ou ações encontradas nas imagens. Ao contrário de categorias, marcas não são organizadas de acordo com a um sistema de classificação hierárquica, mas correspondem ao conteúdo de imagem. As marcas podem conter dicas para evitar ambiguidade ou fornecer contexto, por exemplo o cello' tag' pode ser acompanhado pela dica 'instrumento musical'. Todas as marcas estão em inglês.
  syntax:
    content: 'function tagImageInStream(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        Um fluxo de imagem.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_2
  name: tagImageInStream(stream.Readable, Object, ServiceCallback<TagResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Essa operação gera uma lista de palavras ou marcas, que são relevantes para o conteúdo da imagem fornecido. A API da pesquisa Visual computacional pode retornar marcas com base em objetos, vivendo seres, cenários ou ações encontradas nas imagens. Ao contrário de categorias, marcas não são organizadas de acordo com a um sistema de classificação hierárquica, mas correspondem ao conteúdo de imagem. As marcas podem conter dicas para evitar ambiguidade ou fornecer contexto, por exemplo o cello' tag' pode ser acompanhado pela dica 'instrumento musical'. Todas as marcas estão em inglês.
  syntax:
    content: 'function tagImageInStream(image: stream.Readable, options: Object, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_1
  name: tagImageInStream(stream.Readable, ServiceCallback<TagResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Essa operação gera uma lista de palavras ou marcas, que são relevantes para o conteúdo da imagem fornecido. A API da pesquisa Visual computacional pode retornar marcas com base em objetos, vivendo seres, cenários ou ações encontradas nas imagens. Ao contrário de categorias, marcas não são organizadas de acordo com a um sistema de classificação hierárquica, mas correspondem ao conteúdo de imagem. As marcas podem conter dicas para evitar ambiguidade ou fornecer contexto, por exemplo o cello' tag' pode ser acompanhado pela dica 'instrumento musical'. Todas as marcas estão em inglês.
  syntax:
    content: 'function tagImageInStream(image: stream.Readable, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStreamWithHttpOperationResponse
  name: tagImageInStreamWithHttpOperationResponse(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Essa operação gera uma lista de palavras ou marcas, que são relevantes para o conteúdo da imagem fornecido. A API da pesquisa Visual computacional pode retornar marcas com base em objetos, vivendo seres, cenários ou ações encontradas nas imagens. Ao contrário de categorias, marcas não são organizadas de acordo com a um sistema de classificação hierárquica, mas correspondem ao conteúdo de imagem. As marcas podem conter dicas para evitar ambiguidade ou fornecer contexto, por exemplo o cello' tag' pode ser acompanhado pela dica 'instrumento musical'. Todas as marcas estão em inglês.
  syntax:
    content: 'function tagImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        Um fluxo de imagem.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageWithHttpOperationResponse
  name: tagImageWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Essa operação gera uma lista de palavras ou marcas, que são relevantes para o conteúdo da imagem fornecido. A API da pesquisa Visual computacional pode retornar marcas com base em objetos, vivendo seres, cenários ou ações encontradas nas imagens. Ao contrário de categorias, marcas não são organizadas de acordo com a um sistema de classificação hierárquica, mas correspondem ao conteúdo de imagem. As marcas podem conter dicas para evitar ambiguidade ou fornecer contexto, por exemplo o cello' tag' pode ser acompanhado pela dica 'instrumento musical'. Todas as marcas estão em inglês.
  syntax:
    content: 'function tagImageWithHttpOperationResponse(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        URL publicamente acessível de uma imagem
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
  package: azure-cognitiveservices-computervision
references:
- uid: Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  name: ImageAnalysis>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ImageAnalysis
    fullName: ImageAnalysis
    uid: azure-cognitiveservices-computervision.ImageAnalysis
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
  name: ImageAnalysis>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ImageAnalysis
    fullName: ImageAnalysis
    uid: azure-cognitiveservices-computervision.ImageAnalysis
  - name: '>'
    fullName: '>'
- uid: Promise<azure-cognitiveservices-computervision.DomainModelResults>
  name: DomainModelResults>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DomainModelResults
    fullName: DomainModelResults
    uid: azure-cognitiveservices-computervision.DomainModelResults
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
  name: DomainModelResults>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DomainModelResults
    fullName: DomainModelResults
    uid: azure-cognitiveservices-computervision.DomainModelResults
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
  name: DomainModelResults>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DomainModelResults
    fullName: DomainModelResults
    uid: azure-cognitiveservices-computervision.DomainModelResults
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
  name: ImageAnalysis>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ImageAnalysis
    fullName: ImageAnalysis
    uid: azure-cognitiveservices-computervision.ImageAnalysis
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.ImageDescription>
  name: ImageDescription>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ImageDescription
    fullName: ImageDescription
    uid: azure-cognitiveservices-computervision.ImageDescription
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
  name: ImageDescription>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ImageDescription
    fullName: ImageDescription
    uid: azure-cognitiveservices-computervision.ImageDescription
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
  name: ImageDescription>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ImageDescription
    fullName: ImageDescription
    uid: azure-cognitiveservices-computervision.ImageDescription
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.TextOperationResult>
  name: TextOperationResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: TextOperationResult
    fullName: TextOperationResult
    uid: azure-cognitiveservices-computervision.TextOperationResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
  name: TextOperationResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: TextOperationResult
    fullName: TextOperationResult
    uid: azure-cognitiveservices-computervision.TextOperationResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TextOperationResult>>
  name: TextOperationResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: TextOperationResult
    fullName: TextOperationResult
    uid: azure-cognitiveservices-computervision.TextOperationResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.ListModelsResult>
  name: ListModelsResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ListModelsResult
    fullName: ListModelsResult
    uid: azure-cognitiveservices-computervision.ListModelsResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
  name: ListModelsResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ListModelsResult
    fullName: ListModelsResult
    uid: azure-cognitiveservices-computervision.ListModelsResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ListModelsResult>>
  name: ListModelsResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ListModelsResult
    fullName: ListModelsResult
    uid: azure-cognitiveservices-computervision.ListModelsResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.OcrResult>
  name: OcrResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: OcrResult
    fullName: OcrResult
    uid: azure-cognitiveservices-computervision.OcrResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
  name: OcrResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: OcrResult
    fullName: OcrResult
    uid: azure-cognitiveservices-computervision.OcrResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
  name: OcrResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: OcrResult
    fullName: OcrResult
    uid: azure-cognitiveservices-computervision.OcrResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.TagResult>
  name: TagResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: TagResult
    fullName: TagResult
    uid: azure-cognitiveservices-computervision.TagResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.TagResult>
  name: TagResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: TagResult
    fullName: TagResult
    uid: azure-cognitiveservices-computervision.TagResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
  name: TagResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: TagResult
    fullName: TagResult
    uid: azure-cognitiveservices-computervision.TagResult
  - name: '>>'
    fullName: '>>'
